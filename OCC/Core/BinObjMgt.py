# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

"""
BinObjMgt module, see official documentation at
https://www.opencascade.com/doc/occt-7.7.0/refman/html/package_binobjmgt.html
"""

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _BinObjMgt
else:
    import _BinObjMgt

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _BinObjMgt.delete_SwigPyIterator

    def value(self):
        return _BinObjMgt.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _BinObjMgt.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _BinObjMgt.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _BinObjMgt.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _BinObjMgt.SwigPyIterator_equal(self, x)

    def copy(self):
        return _BinObjMgt.SwigPyIterator_copy(self)

    def next(self):
        return _BinObjMgt.SwigPyIterator_next(self)

    def __next__(self):
        return _BinObjMgt.SwigPyIterator___next__(self)

    def previous(self):
        return _BinObjMgt.SwigPyIterator_previous(self)

    def advance(self, n):
        return _BinObjMgt.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _BinObjMgt.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _BinObjMgt.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _BinObjMgt.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _BinObjMgt.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _BinObjMgt.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _BinObjMgt.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _BinObjMgt:
_BinObjMgt.SwigPyIterator_swigregister(SwigPyIterator)

def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error, method_name, class_name):
    return _BinObjMgt.process_exception(error, method_name, class_name)

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.TDF
import OCC.Core.Storage

from enum import IntEnum
from OCC.Core.Exception import *



class BinObjMgt_Persistent(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _BinObjMgt.BinObjMgt_Persistent_swiginit(self, _BinObjMgt.new_BinObjMgt_Persistent(*args))

    def Destroy(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Frees the allocated memory; this object can be reused after call to init.

        """
        return _BinObjMgt.BinObjMgt_Persistent_Destroy(self, *args)

    def GetAsciiString(self, *args):
        r"""

        Parameters
        ----------
        theValue: str

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        No available documentation.

        """
        return _BinObjMgt.BinObjMgt_Persistent_GetAsciiString(self, *args)

    def GetBoolean(self, *args):
        r"""

        Parameters
        ----------

        Return
        -------
        theValue: bool

        Description
        -----------
        No available documentation.

        """
        return _BinObjMgt.BinObjMgt_Persistent_GetBoolean(self, *args)

    def GetByte(self, *args):
        r"""

        Parameters
        ----------
        theValue: Standard_Byte

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        No available documentation.

        """
        return _BinObjMgt.BinObjMgt_Persistent_GetByte(self, *args)

    def GetByteArray(self, *args):
        r"""

        Parameters
        ----------
        theArray: BinObjMgt_PByte
        theLength: int

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        Get c array of unsigned chars, thelength is the number of elements; thearray must point to a space enough to place thelength elements.

        """
        return _BinObjMgt.BinObjMgt_Persistent_GetByteArray(self, *args)

    def GetCharArray(self, *args):
        r"""

        Parameters
        ----------
        theArray: BinObjMgt_PChar
        theLength: int

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        Get c array of char, thelength is the number of elements; thearray must point to a space enough to place thelength elements.

        """
        return _BinObjMgt.BinObjMgt_Persistent_GetCharArray(self, *args)

    def GetCharacter(self, *args):
        r"""

        Parameters
        ----------
        theValue: Standard_Character

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        No available documentation.

        """
        return _BinObjMgt.BinObjMgt_Persistent_GetCharacter(self, *args)

    def GetExtCharArray(self, *args):
        r"""

        Parameters
        ----------
        theArray: BinObjMgt_PExtChar
        theLength: int

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        Get c array of extcharacter, thelength is the number of elements; thearray must point to a space enough to place thelength elements.

        """
        return _BinObjMgt.BinObjMgt_Persistent_GetExtCharArray(self, *args)

    def GetExtCharacter(self, *args):
        r"""

        Parameters
        ----------
        theValue: Standard_ExtCharacter

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        No available documentation.

        """
        return _BinObjMgt.BinObjMgt_Persistent_GetExtCharacter(self, *args)

    def GetExtendedString(self, *args):
        r"""

        Parameters
        ----------
        theValue: str

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        No available documentation.

        """
        return _BinObjMgt.BinObjMgt_Persistent_GetExtendedString(self, *args)

    def GetGUID(self, *args):
        r"""

        Parameters
        ----------
        theValue: Standard_GUID

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        No available documentation.

        """
        return _BinObjMgt.BinObjMgt_Persistent_GetGUID(self, *args)

    def GetIStream(self, *args):
        r"""
        Return
        -------
        Standard_IStream *

        Description
        -----------
        Gets the stream for and enables direct reading.

        """
        return _BinObjMgt.BinObjMgt_Persistent_GetIStream(self, *args)

    def GetIntArray(self, *args):
        r"""

        Parameters
        ----------
        theArray: BinObjMgt_PInteger
        theLength: int

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        Get c array of int, thelength is the number of elements; thearray must point to a space enough to place thelength elements.

        """
        return _BinObjMgt.BinObjMgt_Persistent_GetIntArray(self, *args)

    def GetInteger(self, *args):
        r"""

        Parameters
        ----------

        Return
        -------
        theValue: int

        Description
        -----------
        No available documentation.

        """
        return _BinObjMgt.BinObjMgt_Persistent_GetInteger(self, *args)

    def GetLabel(self, *args):
        r"""

        Parameters
        ----------
        theDS: TDF_Data
        theValue: TDF_Label

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        No available documentation.

        """
        return _BinObjMgt.BinObjMgt_Persistent_GetLabel(self, *args)

    def GetOStream(self, *args):
        r"""
        Return
        -------
        Standard_OStream *

        Description
        -----------
        Gets the stream for and enables direct writing.

        """
        return _BinObjMgt.BinObjMgt_Persistent_GetOStream(self, *args)

    def GetReal(self, *args):
        r"""

        Parameters
        ----------

        Return
        -------
        theValue: float

        Description
        -----------
        No available documentation.

        """
        return _BinObjMgt.BinObjMgt_Persistent_GetReal(self, *args)

    def GetRealArray(self, *args):
        r"""

        Parameters
        ----------
        theArray: BinObjMgt_PReal
        theLength: int

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        Get c array of double, thelength is the number of elements; thearray must point to a space enough to place thelength elements.

        """
        return _BinObjMgt.BinObjMgt_Persistent_GetRealArray(self, *args)

    def GetShortReal(self, *args):
        r"""

        Parameters
        ----------

        Return
        -------
        theValue: float

        Description
        -----------
        No available documentation.

        """
        return _BinObjMgt.BinObjMgt_Persistent_GetShortReal(self, *args)

    def GetShortRealArray(self, *args):
        r"""

        Parameters
        ----------
        theArray: BinObjMgt_PShortReal
        theLength: int

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        Get c array of float, thelength is the number of elements; thearray must point to a space enough to place thelength elements.

        """
        return _BinObjMgt.BinObjMgt_Persistent_GetShortRealArray(self, *args)

    def Id(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the id of the object.

        """
        return _BinObjMgt.BinObjMgt_Persistent_Id(self, *args)

    def Init(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Initializes me to reuse again.

        """
        return _BinObjMgt.BinObjMgt_Persistent_Init(self, *args)

    def IsDirect(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if after this record a direct writing to the stream is performed.

        """
        return _BinObjMgt.BinObjMgt_Persistent_IsDirect(self, *args)

    def IsError(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Indicates an error after get methods or setposition.

        """
        return _BinObjMgt.BinObjMgt_Persistent_IsError(self, *args)

    def IsOK(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Indicates a good state after get methods or setposition.

        """
        return _BinObjMgt.BinObjMgt_Persistent_IsOK(self, *args)

    def Length(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the length of data.

        """
        return _BinObjMgt.BinObjMgt_Persistent_Length(self, *args)

    def Position(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Tells the current position for get/put.

        """
        return _BinObjMgt.BinObjMgt_Persistent_Position(self, *args)

    def PutAsciiString(self, *args):
        r"""

        Parameters
        ----------
        theValue: str

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        Offset in output buffer is word-aligned.

        """
        return _BinObjMgt.BinObjMgt_Persistent_PutAsciiString(self, *args)

    def PutBoolean(self, *args):
        r"""

        Parameters
        ----------
        theValue: bool

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        No available documentation.

        """
        return _BinObjMgt.BinObjMgt_Persistent_PutBoolean(self, *args)

    def PutByte(self, *args):
        r"""

        Parameters
        ----------
        theValue: Standard_Byte

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        No available documentation.

        """
        return _BinObjMgt.BinObjMgt_Persistent_PutByte(self, *args)

    def PutByteArray(self, *args):
        r"""

        Parameters
        ----------
        theArray: BinObjMgt_PByte
        theLength: int

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        Put c array of unsigned chars, thelength is the number of elements.

        """
        return _BinObjMgt.BinObjMgt_Persistent_PutByteArray(self, *args)

    def PutCString(self, *args):
        r"""

        Parameters
        ----------
        theValue: str

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        Offset in output buffer is not aligned.

        """
        return _BinObjMgt.BinObjMgt_Persistent_PutCString(self, *args)

    def PutCharArray(self, *args):
        r"""

        Parameters
        ----------
        theArray: BinObjMgt_PChar
        theLength: int

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        Put c array of char, thelength is the number of elements.

        """
        return _BinObjMgt.BinObjMgt_Persistent_PutCharArray(self, *args)

    def PutCharacter(self, *args):
        r"""

        Parameters
        ----------
        theValue: Standard_Character

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        No available documentation.

        """
        return _BinObjMgt.BinObjMgt_Persistent_PutCharacter(self, *args)

    def PutExtCharArray(self, *args):
        r"""

        Parameters
        ----------
        theArray: BinObjMgt_PExtChar
        theLength: int

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        Put c array of extcharacter, thelength is the number of elements.

        """
        return _BinObjMgt.BinObjMgt_Persistent_PutExtCharArray(self, *args)

    def PutExtCharacter(self, *args):
        r"""

        Parameters
        ----------
        theValue: Standard_ExtCharacter

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        No available documentation.

        """
        return _BinObjMgt.BinObjMgt_Persistent_PutExtCharacter(self, *args)

    def PutExtendedString(self, *args):
        r"""

        Parameters
        ----------
        theValue: str

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        Offset in output buffer is word-aligned.

        """
        return _BinObjMgt.BinObjMgt_Persistent_PutExtendedString(self, *args)

    def PutGUID(self, *args):
        r"""

        Parameters
        ----------
        theValue: Standard_GUID

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        No available documentation.

        """
        return _BinObjMgt.BinObjMgt_Persistent_PutGUID(self, *args)

    def PutIntArray(self, *args):
        r"""

        Parameters
        ----------
        theArray: BinObjMgt_PInteger
        theLength: int

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        Put c array of int, thelength is the number of elements.

        """
        return _BinObjMgt.BinObjMgt_Persistent_PutIntArray(self, *args)

    def PutInteger(self, *args):
        r"""

        Parameters
        ----------
        theValue: int

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        No available documentation.

        """
        return _BinObjMgt.BinObjMgt_Persistent_PutInteger(self, *args)

    def PutLabel(self, *args):
        r"""

        Parameters
        ----------
        theValue: TDF_Label

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        No available documentation.

        """
        return _BinObjMgt.BinObjMgt_Persistent_PutLabel(self, *args)

    def PutReal(self, *args):
        r"""

        Parameters
        ----------
        theValue: float

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        No available documentation.

        """
        return _BinObjMgt.BinObjMgt_Persistent_PutReal(self, *args)

    def PutRealArray(self, *args):
        r"""

        Parameters
        ----------
        theArray: BinObjMgt_PReal
        theLength: int

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        Put c array of double, thelength is the number of elements.

        """
        return _BinObjMgt.BinObjMgt_Persistent_PutRealArray(self, *args)

    def PutShortReal(self, *args):
        r"""

        Parameters
        ----------
        theValue: float

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        No available documentation.

        """
        return _BinObjMgt.BinObjMgt_Persistent_PutShortReal(self, *args)

    def PutShortRealArray(self, *args):
        r"""

        Parameters
        ----------
        theArray: BinObjMgt_PShortReal
        theLength: int

        Return
        -------
        BinObjMgt_Persistent

        Description
        -----------
        Put c array of float, thelength is the number of elements.

        """
        return _BinObjMgt.BinObjMgt_Persistent_PutShortRealArray(self, *args)

    def ReadFromString(self, src):
        r"""ReadFromString(BinObjMgt_Persistent self, std::string src)"""
        return _BinObjMgt.BinObjMgt_Persistent_ReadFromString(self, src)

    def SetIStreamFromString(self, src):
        r"""SetIStreamFromString(BinObjMgt_Persistent self, std::string src)"""
        return _BinObjMgt.BinObjMgt_Persistent_SetIStreamFromString(self, src)

    def SetId(self, *args):
        r"""

        Parameters
        ----------
        theId: int

        Return
        -------
        None

        Description
        -----------
        Sets the id of the object.

        """
        return _BinObjMgt.BinObjMgt_Persistent_SetId(self, *args)

    def SetOStreamToString(self):
        r"""SetOStreamToString(BinObjMgt_Persistent self) -> std::string"""
        return _BinObjMgt.BinObjMgt_Persistent_SetOStreamToString(self)

    def SetPosition(self, *args):
        r"""

        Parameters
        ----------
        thePos: int

        Return
        -------
        bool

        Description
        -----------
        Sets the current position for get/put. resets an error state depending on the validity of thepos. returns the new state (value of isok()).

        """
        return _BinObjMgt.BinObjMgt_Persistent_SetPosition(self, *args)

    def SetTypeId(self, *args):
        r"""

        Parameters
        ----------
        theId: int

        Return
        -------
        None

        Description
        -----------
        Sets the id of the type of the object.

        """
        return _BinObjMgt.BinObjMgt_Persistent_SetTypeId(self, *args)

    def StreamStart(self, *args):
        r"""
        Return
        -------
        opencascade::handle<BinObjMgt_Position>

        Description
        -----------
        Returns the start position of the direct writing in the stream.

        """
        return _BinObjMgt.BinObjMgt_Persistent_StreamStart(self, *args)

    def Truncate(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Truncates the buffer by current position, i.e. updates mysize.

        """
        return _BinObjMgt.BinObjMgt_Persistent_Truncate(self, *args)

    def TypeId(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the id of the type of the object.

        """
        return _BinObjMgt.BinObjMgt_Persistent_TypeId(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _BinObjMgt.delete_BinObjMgt_Persistent

# Register BinObjMgt_Persistent in _BinObjMgt:
_BinObjMgt.BinObjMgt_Persistent_swigregister(BinObjMgt_Persistent)
class BinObjMgt_RRelocationTable(OCC.Core.TColStd.TColStd_DataMapOfIntegerTransient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def Clear(self, *args):
        r"""

        Parameters
        ----------
        doReleaseMemory: bool (optional, default to Standard_True)

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _BinObjMgt.BinObjMgt_RRelocationTable_Clear(self, *args)

    def GetHeaderData(self, *args):
        r"""
        Return
        -------
        opencascade::handle<Storage_HeaderData>

        Description
        -----------
        Returns a handle to the header data of the file that is begin read.

        """
        return _BinObjMgt.BinObjMgt_RRelocationTable_GetHeaderData(self, *args)

    def SetHeaderData(self, *args):
        r"""

        Parameters
        ----------
        theHeaderData: Storage_HeaderData

        Return
        -------
        None

        Description
        -----------
        Sets the storage header data. //! @param theheaderdata header data of the file that is begin read.

        """
        return _BinObjMgt.BinObjMgt_RRelocationTable_SetHeaderData(self, *args)

    __repr__ = _dumps_object


    def __init__(self):
        _BinObjMgt.BinObjMgt_RRelocationTable_swiginit(self, _BinObjMgt.new_BinObjMgt_RRelocationTable())
    __swig_destroy__ = _BinObjMgt.delete_BinObjMgt_RRelocationTable

# Register BinObjMgt_RRelocationTable in _BinObjMgt:
_BinObjMgt.BinObjMgt_RRelocationTable_swigregister(BinObjMgt_RRelocationTable)

@classnotwrapped
class BinObjMgt_Position:
	pass



BinObjMgt_SRelocationTable=OCC.Core.TColStd.TColStd_IndexedMapOfTransient


