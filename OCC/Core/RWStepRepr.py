# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
RWStepRepr module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_rwsteprepr.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_RWStepRepr')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_RWStepRepr')
    _RWStepRepr = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_RWStepRepr', [dirname(__file__)])
        except ImportError:
            import _RWStepRepr
            return _RWStepRepr
        try:
            _mod = imp.load_module('_RWStepRepr', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _RWStepRepr = swig_import_helper()
    del swig_import_helper
else:
    import _RWStepRepr
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

class SwigPyIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwigPyIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwigPyIterator, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _RWStepRepr.delete_SwigPyIterator
    __del__ = lambda self: None

    def value(self) -> "PyObject *":
        return _RWStepRepr.SwigPyIterator_value(self)

    def incr(self, n: 'size_t'=1) -> "swig::SwigPyIterator *":
        return _RWStepRepr.SwigPyIterator_incr(self, n)

    def decr(self, n: 'size_t'=1) -> "swig::SwigPyIterator *":
        return _RWStepRepr.SwigPyIterator_decr(self, n)

    def distance(self, x: 'SwigPyIterator') -> "ptrdiff_t":
        return _RWStepRepr.SwigPyIterator_distance(self, x)

    def equal(self, x: 'SwigPyIterator') -> "bool":
        return _RWStepRepr.SwigPyIterator_equal(self, x)

    def copy(self) -> "swig::SwigPyIterator *":
        return _RWStepRepr.SwigPyIterator_copy(self)

    def next(self) -> "PyObject *":
        return _RWStepRepr.SwigPyIterator_next(self)

    def __next__(self) -> "PyObject *":
        return _RWStepRepr.SwigPyIterator___next__(self)

    def previous(self) -> "PyObject *":
        return _RWStepRepr.SwigPyIterator_previous(self)

    def advance(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator *":
        return _RWStepRepr.SwigPyIterator_advance(self, n)

    def __eq__(self, x: 'SwigPyIterator') -> "bool":
        return _RWStepRepr.SwigPyIterator___eq__(self, x)

    def __ne__(self, x: 'SwigPyIterator') -> "bool":
        return _RWStepRepr.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator &":
        return _RWStepRepr.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator &":
        return _RWStepRepr.SwigPyIterator___isub__(self, n)

    def __add__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator *":
        return _RWStepRepr.SwigPyIterator___add__(self, n)

    def __sub__(self, *args) -> "ptrdiff_t":
        return _RWStepRepr.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self
SwigPyIterator_swigregister = _RWStepRepr.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _RWStepRepr.process_exception(error, method_name, class_name)
process_exception = _RWStepRepr.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.TCollection
import OCC.Core.Message
import OCC.Core.OSD
import OCC.Core.TColStd
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.Resource
import OCC.Core.StepRepr
import OCC.Core.StepBasic

from enum import IntEnum
from OCC.Core.Exception import *



class RWStepRepr_RWAllAroundShapeAspect(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWAllAroundShapeAspect, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWAllAroundShapeAspect, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWAllAroundShapeAspect(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads allaroundshapeaspect.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_AllAroundShapeAspect

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWAllAroundShapeAspect_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_AllAroundShapeAspect
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWAllAroundShapeAspect_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes allaroundshapeaspect.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_AllAroundShapeAspect

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWAllAroundShapeAspect_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWAllAroundShapeAspect
    __del__ = lambda self: None
RWStepRepr_RWAllAroundShapeAspect_swigregister = _RWStepRepr.RWStepRepr_RWAllAroundShapeAspect_swigregister
RWStepRepr_RWAllAroundShapeAspect_swigregister(RWStepRepr_RWAllAroundShapeAspect)

class RWStepRepr_RWApex(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWApex, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWApex, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWApex(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads apex.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_Apex

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWApex_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_Apex
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWApex_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes apex.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_Apex

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWApex_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWApex
    __del__ = lambda self: None
RWStepRepr_RWApex_swigregister = _RWStepRepr.RWStepRepr_RWApex_swigregister
RWStepRepr_RWApex_swigregister(RWStepRepr_RWApex)

class RWStepRepr_RWAssemblyComponentUsage(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWAssemblyComponentUsage, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWAssemblyComponentUsage, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWAssemblyComponentUsage(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads assemblycomponentusage.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_AssemblyComponentUsage

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWAssemblyComponentUsage_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_AssemblyComponentUsage
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWAssemblyComponentUsage_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes assemblycomponentusage.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_AssemblyComponentUsage

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWAssemblyComponentUsage_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWAssemblyComponentUsage
    __del__ = lambda self: None
RWStepRepr_RWAssemblyComponentUsage_swigregister = _RWStepRepr.RWStepRepr_RWAssemblyComponentUsage_swigregister
RWStepRepr_RWAssemblyComponentUsage_swigregister(RWStepRepr_RWAssemblyComponentUsage)

class RWStepRepr_RWAssemblyComponentUsageSubstitute(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWAssemblyComponentUsageSubstitute, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWAssemblyComponentUsageSubstitute, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWAssemblyComponentUsageSubstitute(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_AssemblyComponentUsageSubstitute

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWAssemblyComponentUsageSubstitute_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepRepr_AssemblyComponentUsageSubstitute
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWAssemblyComponentUsageSubstitute_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_AssemblyComponentUsageSubstitute

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWAssemblyComponentUsageSubstitute_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWAssemblyComponentUsageSubstitute
    __del__ = lambda self: None
RWStepRepr_RWAssemblyComponentUsageSubstitute_swigregister = _RWStepRepr.RWStepRepr_RWAssemblyComponentUsageSubstitute_swigregister
RWStepRepr_RWAssemblyComponentUsageSubstitute_swigregister(RWStepRepr_RWAssemblyComponentUsageSubstitute)

class RWStepRepr_RWBetweenShapeAspect(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWBetweenShapeAspect, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWBetweenShapeAspect, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWBetweenShapeAspect(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads betweenshapeaspect.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_BetweenShapeAspect

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWBetweenShapeAspect_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_BetweenShapeAspect
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWBetweenShapeAspect_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes betweenshapeaspect.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_BetweenShapeAspect

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWBetweenShapeAspect_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWBetweenShapeAspect
    __del__ = lambda self: None
RWStepRepr_RWBetweenShapeAspect_swigregister = _RWStepRepr.RWStepRepr_RWBetweenShapeAspect_swigregister
RWStepRepr_RWBetweenShapeAspect_swigregister(RWStepRepr_RWBetweenShapeAspect)

class RWStepRepr_RWCentreOfSymmetry(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWCentreOfSymmetry, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWCentreOfSymmetry, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWCentreOfSymmetry(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads centreofsymmetry.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_CentreOfSymmetry

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWCentreOfSymmetry_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_CentreOfSymmetry
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWCentreOfSymmetry_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes centreofsymmetry.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_CentreOfSymmetry

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWCentreOfSymmetry_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWCentreOfSymmetry
    __del__ = lambda self: None
RWStepRepr_RWCentreOfSymmetry_swigregister = _RWStepRepr.RWStepRepr_RWCentreOfSymmetry_swigregister
RWStepRepr_RWCentreOfSymmetry_swigregister(RWStepRepr_RWCentreOfSymmetry)

class RWStepRepr_RWCharacterizedRepresentation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWCharacterizedRepresentation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWCharacterizedRepresentation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWCharacterizedRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_CharacterizedRepresentation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWCharacterizedRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepRepr_CharacterizedRepresentation
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWCharacterizedRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_CharacterizedRepresentation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWCharacterizedRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWCharacterizedRepresentation
    __del__ = lambda self: None
RWStepRepr_RWCharacterizedRepresentation_swigregister = _RWStepRepr.RWStepRepr_RWCharacterizedRepresentation_swigregister
RWStepRepr_RWCharacterizedRepresentation_swigregister(RWStepRepr_RWCharacterizedRepresentation)

class RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp
    __del__ = lambda self: None
RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp_swigregister = _RWStepRepr.RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp_swigregister
RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp_swigregister(RWStepRepr_RWCompGroupShAspAndCompShAspAndDatumFeatAndShAsp)

class RWStepRepr_RWCompShAspAndDatumFeatAndShAsp(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWCompShAspAndDatumFeatAndShAsp, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWCompShAspAndDatumFeatAndShAsp, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWCompShAspAndDatumFeatAndShAsp(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_CompShAspAndDatumFeatAndShAsp

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWCompShAspAndDatumFeatAndShAsp_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepRepr_CompShAspAndDatumFeatAndShAsp
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWCompShAspAndDatumFeatAndShAsp_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_CompShAspAndDatumFeatAndShAsp

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWCompShAspAndDatumFeatAndShAsp_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWCompShAspAndDatumFeatAndShAsp
    __del__ = lambda self: None
RWStepRepr_RWCompShAspAndDatumFeatAndShAsp_swigregister = _RWStepRepr.RWStepRepr_RWCompShAspAndDatumFeatAndShAsp_swigregister
RWStepRepr_RWCompShAspAndDatumFeatAndShAsp_swigregister(RWStepRepr_RWCompShAspAndDatumFeatAndShAsp)

class RWStepRepr_RWCompositeGroupShapeAspect(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWCompositeGroupShapeAspect, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWCompositeGroupShapeAspect, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWCompositeGroupShapeAspect(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads compositegroupshapeaspect.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_CompositeGroupShapeAspect

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWCompositeGroupShapeAspect_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_CompositeGroupShapeAspect
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWCompositeGroupShapeAspect_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes compositegroupshapeaspect.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_CompositeGroupShapeAspect

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWCompositeGroupShapeAspect_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWCompositeGroupShapeAspect
    __del__ = lambda self: None
RWStepRepr_RWCompositeGroupShapeAspect_swigregister = _RWStepRepr.RWStepRepr_RWCompositeGroupShapeAspect_swigregister
RWStepRepr_RWCompositeGroupShapeAspect_swigregister(RWStepRepr_RWCompositeGroupShapeAspect)

class RWStepRepr_RWCompositeShapeAspect(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWCompositeShapeAspect, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWCompositeShapeAspect, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWCompositeShapeAspect(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads compositeshapeaspect.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_CompositeShapeAspect

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWCompositeShapeAspect_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_CompositeShapeAspect
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWCompositeShapeAspect_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes compositeshapeaspect.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_CompositeShapeAspect

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWCompositeShapeAspect_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWCompositeShapeAspect
    __del__ = lambda self: None
RWStepRepr_RWCompositeShapeAspect_swigregister = _RWStepRepr.RWStepRepr_RWCompositeShapeAspect_swigregister
RWStepRepr_RWCompositeShapeAspect_swigregister(RWStepRepr_RWCompositeShapeAspect)

class RWStepRepr_RWCompoundRepresentationItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWCompoundRepresentationItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWCompoundRepresentationItem, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWCompoundRepresentationItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_CompoundRepresentationItem

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWCompoundRepresentationItem_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_CompoundRepresentationItem
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWCompoundRepresentationItem_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_CompoundRepresentationItem

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWCompoundRepresentationItem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWCompoundRepresentationItem
    __del__ = lambda self: None
RWStepRepr_RWCompoundRepresentationItem_swigregister = _RWStepRepr.RWStepRepr_RWCompoundRepresentationItem_swigregister
RWStepRepr_RWCompoundRepresentationItem_swigregister(RWStepRepr_RWCompoundRepresentationItem)

class RWStepRepr_RWConfigurationDesign(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWConfigurationDesign, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWConfigurationDesign, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWConfigurationDesign(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads configurationdesign.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_ConfigurationDesign

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWConfigurationDesign_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_ConfigurationDesign
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWConfigurationDesign_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes configurationdesign.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_ConfigurationDesign

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWConfigurationDesign_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWConfigurationDesign
    __del__ = lambda self: None
RWStepRepr_RWConfigurationDesign_swigregister = _RWStepRepr.RWStepRepr_RWConfigurationDesign_swigregister
RWStepRepr_RWConfigurationDesign_swigregister(RWStepRepr_RWConfigurationDesign)

class RWStepRepr_RWConfigurationEffectivity(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWConfigurationEffectivity, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWConfigurationEffectivity, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWConfigurationEffectivity(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads configurationeffectivity.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_ConfigurationEffectivity

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWConfigurationEffectivity_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_ConfigurationEffectivity
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWConfigurationEffectivity_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes configurationeffectivity.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_ConfigurationEffectivity

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWConfigurationEffectivity_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWConfigurationEffectivity
    __del__ = lambda self: None
RWStepRepr_RWConfigurationEffectivity_swigregister = _RWStepRepr.RWStepRepr_RWConfigurationEffectivity_swigregister
RWStepRepr_RWConfigurationEffectivity_swigregister(RWStepRepr_RWConfigurationEffectivity)

class RWStepRepr_RWConfigurationItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWConfigurationItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWConfigurationItem, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWConfigurationItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads configurationitem.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_ConfigurationItem

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWConfigurationItem_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_ConfigurationItem
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWConfigurationItem_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes configurationitem.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_ConfigurationItem

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWConfigurationItem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWConfigurationItem
    __del__ = lambda self: None
RWStepRepr_RWConfigurationItem_swigregister = _RWStepRepr.RWStepRepr_RWConfigurationItem_swigregister
RWStepRepr_RWConfigurationItem_swigregister(RWStepRepr_RWConfigurationItem)

class RWStepRepr_RWConstructiveGeometryRepresentation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWConstructiveGeometryRepresentation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWConstructiveGeometryRepresentation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWConstructiveGeometryRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_ConstructiveGeometryRepresentation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepRepr_ConstructiveGeometryRepresentation
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_ConstructiveGeometryRepresentation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWConstructiveGeometryRepresentation
    __del__ = lambda self: None
RWStepRepr_RWConstructiveGeometryRepresentation_swigregister = _RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentation_swigregister
RWStepRepr_RWConstructiveGeometryRepresentation_swigregister(RWStepRepr_RWConstructiveGeometryRepresentation)

class RWStepRepr_RWConstructiveGeometryRepresentationRelationship(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWConstructiveGeometryRepresentationRelationship, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWConstructiveGeometryRepresentationRelationship, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWConstructiveGeometryRepresentationRelationship(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_ConstructiveGeometryRepresentationRelationship

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentationRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepRepr_ConstructiveGeometryRepresentationRelationship
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentationRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_ConstructiveGeometryRepresentationRelationship

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentationRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWConstructiveGeometryRepresentationRelationship
    __del__ = lambda self: None
RWStepRepr_RWConstructiveGeometryRepresentationRelationship_swigregister = _RWStepRepr.RWStepRepr_RWConstructiveGeometryRepresentationRelationship_swigregister
RWStepRepr_RWConstructiveGeometryRepresentationRelationship_swigregister(RWStepRepr_RWConstructiveGeometryRepresentationRelationship)

class RWStepRepr_RWContinuosShapeAspect(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWContinuosShapeAspect, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWContinuosShapeAspect, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWContinuosShapeAspect(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads continuosshapeaspect.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_ContinuosShapeAspect

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWContinuosShapeAspect_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_ContinuosShapeAspect
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWContinuosShapeAspect_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes continuosshapeaspect.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_ContinuosShapeAspect

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWContinuosShapeAspect_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWContinuosShapeAspect
    __del__ = lambda self: None
RWStepRepr_RWContinuosShapeAspect_swigregister = _RWStepRepr.RWStepRepr_RWContinuosShapeAspect_swigregister
RWStepRepr_RWContinuosShapeAspect_swigregister(RWStepRepr_RWContinuosShapeAspect)

class RWStepRepr_RWDataEnvironment(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWDataEnvironment, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWDataEnvironment, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWDataEnvironment(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads dataenvironment.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_DataEnvironment

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWDataEnvironment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_DataEnvironment
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWDataEnvironment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes dataenvironment.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_DataEnvironment

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWDataEnvironment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWDataEnvironment
    __del__ = lambda self: None
RWStepRepr_RWDataEnvironment_swigregister = _RWStepRepr.RWStepRepr_RWDataEnvironment_swigregister
RWStepRepr_RWDataEnvironment_swigregister(RWStepRepr_RWDataEnvironment)

class RWStepRepr_RWDefinitionalRepresentation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWDefinitionalRepresentation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWDefinitionalRepresentation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWDefinitionalRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_DefinitionalRepresentation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWDefinitionalRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepRepr_DefinitionalRepresentation
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWDefinitionalRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_DefinitionalRepresentation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWDefinitionalRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWDefinitionalRepresentation
    __del__ = lambda self: None
RWStepRepr_RWDefinitionalRepresentation_swigregister = _RWStepRepr.RWStepRepr_RWDefinitionalRepresentation_swigregister
RWStepRepr_RWDefinitionalRepresentation_swigregister(RWStepRepr_RWDefinitionalRepresentation)

class RWStepRepr_RWDerivedShapeAspect(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWDerivedShapeAspect, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWDerivedShapeAspect, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWDerivedShapeAspect(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads derivedshapeaspect.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_DerivedShapeAspect

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWDerivedShapeAspect_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_DerivedShapeAspect
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWDerivedShapeAspect_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes derivedshapeaspect.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_DerivedShapeAspect

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWDerivedShapeAspect_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWDerivedShapeAspect
    __del__ = lambda self: None
RWStepRepr_RWDerivedShapeAspect_swigregister = _RWStepRepr.RWStepRepr_RWDerivedShapeAspect_swigregister
RWStepRepr_RWDerivedShapeAspect_swigregister(RWStepRepr_RWDerivedShapeAspect)

class RWStepRepr_RWDescriptiveRepresentationItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWDescriptiveRepresentationItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWDescriptiveRepresentationItem, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWDescriptiveRepresentationItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_DescriptiveRepresentationItem

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWDescriptiveRepresentationItem_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_DescriptiveRepresentationItem

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWDescriptiveRepresentationItem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWDescriptiveRepresentationItem
    __del__ = lambda self: None
RWStepRepr_RWDescriptiveRepresentationItem_swigregister = _RWStepRepr.RWStepRepr_RWDescriptiveRepresentationItem_swigregister
RWStepRepr_RWDescriptiveRepresentationItem_swigregister(RWStepRepr_RWDescriptiveRepresentationItem)

class RWStepRepr_RWExtension(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWExtension, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWExtension, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWExtension(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads extension.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_Extension

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWExtension_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_Extension
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWExtension_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes extension.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_Extension

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWExtension_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWExtension
    __del__ = lambda self: None
RWStepRepr_RWExtension_swigregister = _RWStepRepr.RWStepRepr_RWExtension_swigregister
RWStepRepr_RWExtension_swigregister(RWStepRepr_RWExtension)

class RWStepRepr_RWFeatureForDatumTargetRelationship(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWFeatureForDatumTargetRelationship, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWFeatureForDatumTargetRelationship, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWFeatureForDatumTargetRelationship(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads shapeaspectrelationship.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_FeatureForDatumTargetRelationship

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWFeatureForDatumTargetRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_FeatureForDatumTargetRelationship
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWFeatureForDatumTargetRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes shapeaspectrelationship.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_FeatureForDatumTargetRelationship

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWFeatureForDatumTargetRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWFeatureForDatumTargetRelationship
    __del__ = lambda self: None
RWStepRepr_RWFeatureForDatumTargetRelationship_swigregister = _RWStepRepr.RWStepRepr_RWFeatureForDatumTargetRelationship_swigregister
RWStepRepr_RWFeatureForDatumTargetRelationship_swigregister(RWStepRepr_RWFeatureForDatumTargetRelationship)

class RWStepRepr_RWFunctionallyDefinedTransformation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWFunctionallyDefinedTransformation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWFunctionallyDefinedTransformation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWFunctionallyDefinedTransformation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_FunctionallyDefinedTransformation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWFunctionallyDefinedTransformation_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_FunctionallyDefinedTransformation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWFunctionallyDefinedTransformation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWFunctionallyDefinedTransformation
    __del__ = lambda self: None
RWStepRepr_RWFunctionallyDefinedTransformation_swigregister = _RWStepRepr.RWStepRepr_RWFunctionallyDefinedTransformation_swigregister
RWStepRepr_RWFunctionallyDefinedTransformation_swigregister(RWStepRepr_RWFunctionallyDefinedTransformation)

class RWStepRepr_RWGeometricAlignment(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWGeometricAlignment, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWGeometricAlignment, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWGeometricAlignment(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads geometricalignment.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_GeometricAlignment

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWGeometricAlignment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_GeometricAlignment
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWGeometricAlignment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes geometricalignment.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_GeometricAlignment

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWGeometricAlignment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWGeometricAlignment
    __del__ = lambda self: None
RWStepRepr_RWGeometricAlignment_swigregister = _RWStepRepr.RWStepRepr_RWGeometricAlignment_swigregister
RWStepRepr_RWGeometricAlignment_swigregister(RWStepRepr_RWGeometricAlignment)

class RWStepRepr_RWGlobalUncertaintyAssignedContext(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWGlobalUncertaintyAssignedContext, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWGlobalUncertaintyAssignedContext, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWGlobalUncertaintyAssignedContext(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_GlobalUncertaintyAssignedContext

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWGlobalUncertaintyAssignedContext_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepRepr_GlobalUncertaintyAssignedContext
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWGlobalUncertaintyAssignedContext_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_GlobalUncertaintyAssignedContext

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWGlobalUncertaintyAssignedContext_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWGlobalUncertaintyAssignedContext
    __del__ = lambda self: None
RWStepRepr_RWGlobalUncertaintyAssignedContext_swigregister = _RWStepRepr.RWStepRepr_RWGlobalUncertaintyAssignedContext_swigregister
RWStepRepr_RWGlobalUncertaintyAssignedContext_swigregister(RWStepRepr_RWGlobalUncertaintyAssignedContext)

class RWStepRepr_RWGlobalUnitAssignedContext(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWGlobalUnitAssignedContext, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWGlobalUnitAssignedContext, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWGlobalUnitAssignedContext(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_GlobalUnitAssignedContext

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWGlobalUnitAssignedContext_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepRepr_GlobalUnitAssignedContext
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWGlobalUnitAssignedContext_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_GlobalUnitAssignedContext

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWGlobalUnitAssignedContext_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWGlobalUnitAssignedContext
    __del__ = lambda self: None
RWStepRepr_RWGlobalUnitAssignedContext_swigregister = _RWStepRepr.RWStepRepr_RWGlobalUnitAssignedContext_swigregister
RWStepRepr_RWGlobalUnitAssignedContext_swigregister(RWStepRepr_RWGlobalUnitAssignedContext)

class RWStepRepr_RWIntegerRepresentationItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWIntegerRepresentationItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWIntegerRepresentationItem, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWIntegerRepresentationItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_IntegerRepresentationItem

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWIntegerRepresentationItem_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_IntegerRepresentationItem

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWIntegerRepresentationItem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWIntegerRepresentationItem
    __del__ = lambda self: None
RWStepRepr_RWIntegerRepresentationItem_swigregister = _RWStepRepr.RWStepRepr_RWIntegerRepresentationItem_swigregister
RWStepRepr_RWIntegerRepresentationItem_swigregister(RWStepRepr_RWIntegerRepresentationItem)

class RWStepRepr_RWItemDefinedTransformation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWItemDefinedTransformation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWItemDefinedTransformation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWItemDefinedTransformation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_ItemDefinedTransformation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWItemDefinedTransformation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepRepr_ItemDefinedTransformation
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWItemDefinedTransformation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_ItemDefinedTransformation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWItemDefinedTransformation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWItemDefinedTransformation
    __del__ = lambda self: None
RWStepRepr_RWItemDefinedTransformation_swigregister = _RWStepRepr.RWStepRepr_RWItemDefinedTransformation_swigregister
RWStepRepr_RWItemDefinedTransformation_swigregister(RWStepRepr_RWItemDefinedTransformation)

class RWStepRepr_RWMakeFromUsageOption(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWMakeFromUsageOption, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWMakeFromUsageOption, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWMakeFromUsageOption(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads makefromusageoption.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_MakeFromUsageOption

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWMakeFromUsageOption_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_MakeFromUsageOption
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWMakeFromUsageOption_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes makefromusageoption.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_MakeFromUsageOption

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWMakeFromUsageOption_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWMakeFromUsageOption
    __del__ = lambda self: None
RWStepRepr_RWMakeFromUsageOption_swigregister = _RWStepRepr.RWStepRepr_RWMakeFromUsageOption_swigregister
RWStepRepr_RWMakeFromUsageOption_swigregister(RWStepRepr_RWMakeFromUsageOption)

class RWStepRepr_RWMappedItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWMappedItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWMappedItem, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWMappedItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_MappedItem

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWMappedItem_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepRepr_MappedItem
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWMappedItem_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_MappedItem

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWMappedItem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWMappedItem
    __del__ = lambda self: None
RWStepRepr_RWMappedItem_swigregister = _RWStepRepr.RWStepRepr_RWMappedItem_swigregister
RWStepRepr_RWMappedItem_swigregister(RWStepRepr_RWMappedItem)

class RWStepRepr_RWMaterialDesignation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWMaterialDesignation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWMaterialDesignation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWMaterialDesignation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_MaterialDesignation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWMaterialDesignation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepRepr_MaterialDesignation
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWMaterialDesignation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_MaterialDesignation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWMaterialDesignation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWMaterialDesignation
    __del__ = lambda self: None
RWStepRepr_RWMaterialDesignation_swigregister = _RWStepRepr.RWStepRepr_RWMaterialDesignation_swigregister
RWStepRepr_RWMaterialDesignation_swigregister(RWStepRepr_RWMaterialDesignation)

class RWStepRepr_RWMaterialProperty(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWMaterialProperty, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWMaterialProperty, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWMaterialProperty(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads materialproperty.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_MaterialProperty

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWMaterialProperty_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_MaterialProperty
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWMaterialProperty_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes materialproperty.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_MaterialProperty

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWMaterialProperty_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWMaterialProperty
    __del__ = lambda self: None
RWStepRepr_RWMaterialProperty_swigregister = _RWStepRepr.RWStepRepr_RWMaterialProperty_swigregister
RWStepRepr_RWMaterialProperty_swigregister(RWStepRepr_RWMaterialProperty)

class RWStepRepr_RWMaterialPropertyRepresentation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWMaterialPropertyRepresentation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWMaterialPropertyRepresentation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWMaterialPropertyRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads materialpropertyrepresentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_MaterialPropertyRepresentation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWMaterialPropertyRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_MaterialPropertyRepresentation
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWMaterialPropertyRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes materialpropertyrepresentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_MaterialPropertyRepresentation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWMaterialPropertyRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWMaterialPropertyRepresentation
    __del__ = lambda self: None
RWStepRepr_RWMaterialPropertyRepresentation_swigregister = _RWStepRepr.RWStepRepr_RWMaterialPropertyRepresentation_swigregister
RWStepRepr_RWMaterialPropertyRepresentation_swigregister(RWStepRepr_RWMaterialPropertyRepresentation)

class RWStepRepr_RWMeasureRepresentationItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWMeasureRepresentationItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWMeasureRepresentationItem, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWMeasureRepresentationItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_MeasureRepresentationItem

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWMeasureRepresentationItem_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepRepr_MeasureRepresentationItem
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWMeasureRepresentationItem_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_MeasureRepresentationItem

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWMeasureRepresentationItem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWMeasureRepresentationItem
    __del__ = lambda self: None
RWStepRepr_RWMeasureRepresentationItem_swigregister = _RWStepRepr.RWStepRepr_RWMeasureRepresentationItem_swigregister
RWStepRepr_RWMeasureRepresentationItem_swigregister(RWStepRepr_RWMeasureRepresentationItem)

class RWStepRepr_RWParallelOffset(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWParallelOffset, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWParallelOffset, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWParallelOffset(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads paralleloffset.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_ParallelOffset

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWParallelOffset_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_ParallelOffset
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWParallelOffset_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes paralleloffset.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_ParallelOffset

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWParallelOffset_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWParallelOffset
    __del__ = lambda self: None
RWStepRepr_RWParallelOffset_swigregister = _RWStepRepr.RWStepRepr_RWParallelOffset_swigregister
RWStepRepr_RWParallelOffset_swigregister(RWStepRepr_RWParallelOffset)

class RWStepRepr_RWParametricRepresentationContext(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWParametricRepresentationContext, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWParametricRepresentationContext, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWParametricRepresentationContext(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_ParametricRepresentationContext

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWParametricRepresentationContext_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_ParametricRepresentationContext

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWParametricRepresentationContext_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWParametricRepresentationContext
    __del__ = lambda self: None
RWStepRepr_RWParametricRepresentationContext_swigregister = _RWStepRepr.RWStepRepr_RWParametricRepresentationContext_swigregister
RWStepRepr_RWParametricRepresentationContext_swigregister(RWStepRepr_RWParametricRepresentationContext)

class RWStepRepr_RWPerpendicularTo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWPerpendicularTo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWPerpendicularTo, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWPerpendicularTo(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads perpendicularto.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_PerpendicularTo

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWPerpendicularTo_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_PerpendicularTo
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWPerpendicularTo_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes perpendicularto.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_PerpendicularTo

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWPerpendicularTo_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWPerpendicularTo
    __del__ = lambda self: None
RWStepRepr_RWPerpendicularTo_swigregister = _RWStepRepr.RWStepRepr_RWPerpendicularTo_swigregister
RWStepRepr_RWPerpendicularTo_swigregister(RWStepRepr_RWPerpendicularTo)

class RWStepRepr_RWProductConcept(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWProductConcept, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWProductConcept, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWProductConcept(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads productconcept.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_ProductConcept

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWProductConcept_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_ProductConcept
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWProductConcept_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes productconcept.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_ProductConcept

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWProductConcept_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWProductConcept
    __del__ = lambda self: None
RWStepRepr_RWProductConcept_swigregister = _RWStepRepr.RWStepRepr_RWProductConcept_swigregister
RWStepRepr_RWProductConcept_swigregister(RWStepRepr_RWProductConcept)

class RWStepRepr_RWProductDefinitionShape(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWProductDefinitionShape, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWProductDefinitionShape, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWProductDefinitionShape(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads productdefinitionshape.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_ProductDefinitionShape

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWProductDefinitionShape_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_ProductDefinitionShape
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWProductDefinitionShape_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes productdefinitionshape.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_ProductDefinitionShape

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWProductDefinitionShape_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWProductDefinitionShape
    __del__ = lambda self: None
RWStepRepr_RWProductDefinitionShape_swigregister = _RWStepRepr.RWStepRepr_RWProductDefinitionShape_swigregister
RWStepRepr_RWProductDefinitionShape_swigregister(RWStepRepr_RWProductDefinitionShape)

class RWStepRepr_RWPropertyDefinition(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWPropertyDefinition, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWPropertyDefinition, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWPropertyDefinition(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads propertydefinition.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_PropertyDefinition

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWPropertyDefinition_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_PropertyDefinition
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWPropertyDefinition_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes propertydefinition.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_PropertyDefinition

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWPropertyDefinition_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWPropertyDefinition
    __del__ = lambda self: None
RWStepRepr_RWPropertyDefinition_swigregister = _RWStepRepr.RWStepRepr_RWPropertyDefinition_swigregister
RWStepRepr_RWPropertyDefinition_swigregister(RWStepRepr_RWPropertyDefinition)

class RWStepRepr_RWPropertyDefinitionRelationship(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWPropertyDefinitionRelationship, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWPropertyDefinitionRelationship, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWPropertyDefinitionRelationship(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads propertydefinitionrelationship.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_PropertyDefinitionRelationship

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWPropertyDefinitionRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_PropertyDefinitionRelationship
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWPropertyDefinitionRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes propertydefinitionrelationship.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_PropertyDefinitionRelationship

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWPropertyDefinitionRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWPropertyDefinitionRelationship
    __del__ = lambda self: None
RWStepRepr_RWPropertyDefinitionRelationship_swigregister = _RWStepRepr.RWStepRepr_RWPropertyDefinitionRelationship_swigregister
RWStepRepr_RWPropertyDefinitionRelationship_swigregister(RWStepRepr_RWPropertyDefinitionRelationship)

class RWStepRepr_RWPropertyDefinitionRepresentation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWPropertyDefinitionRepresentation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWPropertyDefinitionRepresentation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWPropertyDefinitionRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads propertydefinitionrepresentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_PropertyDefinitionRepresentation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWPropertyDefinitionRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_PropertyDefinitionRepresentation
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWPropertyDefinitionRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes propertydefinitionrepresentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_PropertyDefinitionRepresentation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWPropertyDefinitionRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWPropertyDefinitionRepresentation
    __del__ = lambda self: None
RWStepRepr_RWPropertyDefinitionRepresentation_swigregister = _RWStepRepr.RWStepRepr_RWPropertyDefinitionRepresentation_swigregister
RWStepRepr_RWPropertyDefinitionRepresentation_swigregister(RWStepRepr_RWPropertyDefinitionRepresentation)

class RWStepRepr_RWQuantifiedAssemblyComponentUsage(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWQuantifiedAssemblyComponentUsage, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWQuantifiedAssemblyComponentUsage, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWQuantifiedAssemblyComponentUsage(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads quantifiedassemblycomponentusage.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_QuantifiedAssemblyComponentUsage

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWQuantifiedAssemblyComponentUsage_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_QuantifiedAssemblyComponentUsage
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWQuantifiedAssemblyComponentUsage_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes quantifiedassemblycomponentusage.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_QuantifiedAssemblyComponentUsage

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWQuantifiedAssemblyComponentUsage_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWQuantifiedAssemblyComponentUsage
    __del__ = lambda self: None
RWStepRepr_RWQuantifiedAssemblyComponentUsage_swigregister = _RWStepRepr.RWStepRepr_RWQuantifiedAssemblyComponentUsage_swigregister
RWStepRepr_RWQuantifiedAssemblyComponentUsage_swigregister(RWStepRepr_RWQuantifiedAssemblyComponentUsage)

class RWStepRepr_RWReprItemAndLengthMeasureWithUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWReprItemAndLengthMeasureWithUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWReprItemAndLengthMeasureWithUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWReprItemAndLengthMeasureWithUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_ReprItemAndLengthMeasureWithUnit

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWReprItemAndLengthMeasureWithUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_ReprItemAndLengthMeasureWithUnit

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWReprItemAndLengthMeasureWithUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWReprItemAndLengthMeasureWithUnit
    __del__ = lambda self: None
RWStepRepr_RWReprItemAndLengthMeasureWithUnit_swigregister = _RWStepRepr.RWStepRepr_RWReprItemAndLengthMeasureWithUnit_swigregister
RWStepRepr_RWReprItemAndLengthMeasureWithUnit_swigregister(RWStepRepr_RWReprItemAndLengthMeasureWithUnit)

class RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI
    __del__ = lambda self: None
RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI_swigregister = _RWStepRepr.RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI_swigregister
RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI_swigregister(RWStepRepr_RWReprItemAndLengthMeasureWithUnitAndQRI)

class RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_ReprItemAndPlaneAngleMeasureWithUnit

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_ReprItemAndPlaneAngleMeasureWithUnit

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit
    __del__ = lambda self: None
RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit_swigregister = _RWStepRepr.RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit_swigregister
RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit_swigregister(RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnit)

class RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI
    __del__ = lambda self: None
RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI_swigregister = _RWStepRepr.RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI_swigregister
RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI_swigregister(RWStepRepr_RWReprItemAndPlaneAngleMeasureWithUnitAndQRI)

class RWStepRepr_RWRepresentation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWRepresentation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWRepresentation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_Representation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepRepr_Representation
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_Representation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWRepresentation
    __del__ = lambda self: None
RWStepRepr_RWRepresentation_swigregister = _RWStepRepr.RWStepRepr_RWRepresentation_swigregister
RWStepRepr_RWRepresentation_swigregister(RWStepRepr_RWRepresentation)

class RWStepRepr_RWRepresentationContext(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWRepresentationContext, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWRepresentationContext, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWRepresentationContext(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_RepresentationContext

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWRepresentationContext_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_RepresentationContext

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWRepresentationContext_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWRepresentationContext
    __del__ = lambda self: None
RWStepRepr_RWRepresentationContext_swigregister = _RWStepRepr.RWStepRepr_RWRepresentationContext_swigregister
RWStepRepr_RWRepresentationContext_swigregister(RWStepRepr_RWRepresentationContext)

class RWStepRepr_RWRepresentationItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWRepresentationItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWRepresentationItem, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWRepresentationItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_RepresentationItem

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWRepresentationItem_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_RepresentationItem

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWRepresentationItem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWRepresentationItem
    __del__ = lambda self: None
RWStepRepr_RWRepresentationItem_swigregister = _RWStepRepr.RWStepRepr_RWRepresentationItem_swigregister
RWStepRepr_RWRepresentationItem_swigregister(RWStepRepr_RWRepresentationItem)

class RWStepRepr_RWRepresentationMap(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWRepresentationMap, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWRepresentationMap, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWRepresentationMap(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_RepresentationMap

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWRepresentationMap_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepRepr_RepresentationMap
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWRepresentationMap_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_RepresentationMap

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWRepresentationMap_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWRepresentationMap
    __del__ = lambda self: None
RWStepRepr_RWRepresentationMap_swigregister = _RWStepRepr.RWStepRepr_RWRepresentationMap_swigregister
RWStepRepr_RWRepresentationMap_swigregister(RWStepRepr_RWRepresentationMap)

class RWStepRepr_RWRepresentationRelationship(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWRepresentationRelationship, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWRepresentationRelationship, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWRepresentationRelationship(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_RepresentationRelationship

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWRepresentationRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepRepr_RepresentationRelationship
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWRepresentationRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_RepresentationRelationship

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWRepresentationRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWRepresentationRelationship
    __del__ = lambda self: None
RWStepRepr_RWRepresentationRelationship_swigregister = _RWStepRepr.RWStepRepr_RWRepresentationRelationship_swigregister
RWStepRepr_RWRepresentationRelationship_swigregister(RWStepRepr_RWRepresentationRelationship)

class RWStepRepr_RWRepresentationRelationshipWithTransformation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWRepresentationRelationshipWithTransformation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWRepresentationRelationshipWithTransformation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWRepresentationRelationshipWithTransformation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_RepresentationRelationshipWithTransformation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWRepresentationRelationshipWithTransformation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepRepr_RepresentationRelationshipWithTransformation
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWRepresentationRelationshipWithTransformation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_RepresentationRelationshipWithTransformation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWRepresentationRelationshipWithTransformation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWRepresentationRelationshipWithTransformation
    __del__ = lambda self: None
RWStepRepr_RWRepresentationRelationshipWithTransformation_swigregister = _RWStepRepr.RWStepRepr_RWRepresentationRelationshipWithTransformation_swigregister
RWStepRepr_RWRepresentationRelationshipWithTransformation_swigregister(RWStepRepr_RWRepresentationRelationshipWithTransformation)

class RWStepRepr_RWShapeAspect(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWShapeAspect, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWShapeAspect, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWShapeAspect(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_ShapeAspect

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWShapeAspect_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepRepr_ShapeAspect
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWShapeAspect_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_ShapeAspect

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWShapeAspect_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWShapeAspect
    __del__ = lambda self: None
RWStepRepr_RWShapeAspect_swigregister = _RWStepRepr.RWStepRepr_RWShapeAspect_swigregister
RWStepRepr_RWShapeAspect_swigregister(RWStepRepr_RWShapeAspect)

class RWStepRepr_RWShapeAspectDerivingRelationship(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWShapeAspectDerivingRelationship, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWShapeAspectDerivingRelationship, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWShapeAspectDerivingRelationship(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads shapeaspectderivingrelationship.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_ShapeAspectDerivingRelationship

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWShapeAspectDerivingRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_ShapeAspectDerivingRelationship
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWShapeAspectDerivingRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes shapeaspectderivingrelationship.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_ShapeAspectDerivingRelationship

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWShapeAspectDerivingRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWShapeAspectDerivingRelationship
    __del__ = lambda self: None
RWStepRepr_RWShapeAspectDerivingRelationship_swigregister = _RWStepRepr.RWStepRepr_RWShapeAspectDerivingRelationship_swigregister
RWStepRepr_RWShapeAspectDerivingRelationship_swigregister(RWStepRepr_RWShapeAspectDerivingRelationship)

class RWStepRepr_RWShapeAspectRelationship(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWShapeAspectRelationship, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWShapeAspectRelationship, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWShapeAspectRelationship(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads shapeaspectrelationship.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_ShapeAspectRelationship

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWShapeAspectRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_ShapeAspectRelationship
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWShapeAspectRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes shapeaspectrelationship.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_ShapeAspectRelationship

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWShapeAspectRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWShapeAspectRelationship
    __del__ = lambda self: None
RWStepRepr_RWShapeAspectRelationship_swigregister = _RWStepRepr.RWStepRepr_RWShapeAspectRelationship_swigregister
RWStepRepr_RWShapeAspectRelationship_swigregister(RWStepRepr_RWShapeAspectRelationship)

class RWStepRepr_RWShapeAspectTransition(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWShapeAspectTransition, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWShapeAspectTransition, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWShapeAspectTransition(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads shapeaspecttransition.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_ShapeAspectTransition

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWShapeAspectTransition_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_ShapeAspectTransition
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWShapeAspectTransition_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes shapeaspecttransition.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_ShapeAspectTransition

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWShapeAspectTransition_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWShapeAspectTransition
    __del__ = lambda self: None
RWStepRepr_RWShapeAspectTransition_swigregister = _RWStepRepr.RWStepRepr_RWShapeAspectTransition_swigregister
RWStepRepr_RWShapeAspectTransition_swigregister(RWStepRepr_RWShapeAspectTransition)

class RWStepRepr_RWShapeRepresentationRelationshipWithTransformation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWShapeRepresentationRelationshipWithTransformation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWShapeRepresentationRelationshipWithTransformation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWShapeRepresentationRelationshipWithTransformation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_ShapeRepresentationRelationshipWithTransformation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWShapeRepresentationRelationshipWithTransformation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepRepr_ShapeRepresentationRelationshipWithTransformation
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWShapeRepresentationRelationshipWithTransformation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_ShapeRepresentationRelationshipWithTransformation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWShapeRepresentationRelationshipWithTransformation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWShapeRepresentationRelationshipWithTransformation
    __del__ = lambda self: None
RWStepRepr_RWShapeRepresentationRelationshipWithTransformation_swigregister = _RWStepRepr.RWStepRepr_RWShapeRepresentationRelationshipWithTransformation_swigregister
RWStepRepr_RWShapeRepresentationRelationshipWithTransformation_swigregister(RWStepRepr_RWShapeRepresentationRelationshipWithTransformation)

class RWStepRepr_RWSpecifiedHigherUsageOccurrence(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWSpecifiedHigherUsageOccurrence, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWSpecifiedHigherUsageOccurrence, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWSpecifiedHigherUsageOccurrence(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads specifiedhigherusageoccurrence.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_SpecifiedHigherUsageOccurrence

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWSpecifiedHigherUsageOccurrence_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_SpecifiedHigherUsageOccurrence
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWSpecifiedHigherUsageOccurrence_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes specifiedhigherusageoccurrence.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_SpecifiedHigherUsageOccurrence

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWSpecifiedHigherUsageOccurrence_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWSpecifiedHigherUsageOccurrence
    __del__ = lambda self: None
RWStepRepr_RWSpecifiedHigherUsageOccurrence_swigregister = _RWStepRepr.RWStepRepr_RWSpecifiedHigherUsageOccurrence_swigregister
RWStepRepr_RWSpecifiedHigherUsageOccurrence_swigregister(RWStepRepr_RWSpecifiedHigherUsageOccurrence)

class RWStepRepr_RWStructuralResponseProperty(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWStructuralResponseProperty, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWStructuralResponseProperty, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWStructuralResponseProperty(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads structuralresponseproperty.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_StructuralResponseProperty

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWStructuralResponseProperty_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_StructuralResponseProperty
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWStructuralResponseProperty_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes structuralresponseproperty.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_StructuralResponseProperty

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWStructuralResponseProperty_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWStructuralResponseProperty
    __del__ = lambda self: None
RWStepRepr_RWStructuralResponseProperty_swigregister = _RWStepRepr.RWStepRepr_RWStructuralResponseProperty_swigregister
RWStepRepr_RWStructuralResponseProperty_swigregister(RWStepRepr_RWStructuralResponseProperty)

class RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads structuralresponsepropertydefinitionrepresentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_StructuralResponsePropertyDefinitionRepresentation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_StructuralResponsePropertyDefinitionRepresentation
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes structuralresponsepropertydefinitionrepresentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_StructuralResponsePropertyDefinitionRepresentation

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation
    __del__ = lambda self: None
RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation_swigregister = _RWStepRepr.RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation_swigregister
RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation_swigregister(RWStepRepr_RWStructuralResponsePropertyDefinitionRepresentation)

class RWStepRepr_RWTangent(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWTangent, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWTangent, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWTangent(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads tangent.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_Tangent

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWTangent_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepRepr_Tangent
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWTangent_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes tangent.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_Tangent

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWTangent_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWTangent
    __del__ = lambda self: None
RWStepRepr_RWTangent_swigregister = _RWStepRepr.RWStepRepr_RWTangent_swigregister
RWStepRepr_RWTangent_swigregister(RWStepRepr_RWTangent)

class RWStepRepr_RWValueRepresentationItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepRepr_RWValueRepresentationItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepRepr_RWValueRepresentationItem, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepRepr.new_RWStepRepr_RWValueRepresentationItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepRepr_ValueRepresentationItem

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWValueRepresentationItem_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepRepr_ValueRepresentationItem

        Returns
        -------
        None

        """
        return _RWStepRepr.RWStepRepr_RWValueRepresentationItem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepRepr.delete_RWStepRepr_RWValueRepresentationItem
    __del__ = lambda self: None
RWStepRepr_RWValueRepresentationItem_swigregister = _RWStepRepr.RWStepRepr_RWValueRepresentationItem_swigregister
RWStepRepr_RWValueRepresentationItem_swigregister(RWStepRepr_RWValueRepresentationItem)



# This file is compatible with both classic and new-style classes.


