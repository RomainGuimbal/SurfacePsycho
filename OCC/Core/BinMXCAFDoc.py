# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
BinMXCAFDoc module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_binmxcafdoc.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_BinMXCAFDoc')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_BinMXCAFDoc')
    _BinMXCAFDoc = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_BinMXCAFDoc', [dirname(__file__)])
        except ImportError:
            import _BinMXCAFDoc
            return _BinMXCAFDoc
        try:
            _mod = imp.load_module('_BinMXCAFDoc', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _BinMXCAFDoc = swig_import_helper()
    del swig_import_helper
else:
    import _BinMXCAFDoc
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

class SwigPyIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwigPyIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwigPyIterator, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _BinMXCAFDoc.delete_SwigPyIterator
    __del__ = lambda self: None

    def value(self) -> "PyObject *":
        return _BinMXCAFDoc.SwigPyIterator_value(self)

    def incr(self, n: 'size_t'=1) -> "swig::SwigPyIterator *":
        return _BinMXCAFDoc.SwigPyIterator_incr(self, n)

    def decr(self, n: 'size_t'=1) -> "swig::SwigPyIterator *":
        return _BinMXCAFDoc.SwigPyIterator_decr(self, n)

    def distance(self, x: 'SwigPyIterator') -> "ptrdiff_t":
        return _BinMXCAFDoc.SwigPyIterator_distance(self, x)

    def equal(self, x: 'SwigPyIterator') -> "bool":
        return _BinMXCAFDoc.SwigPyIterator_equal(self, x)

    def copy(self) -> "swig::SwigPyIterator *":
        return _BinMXCAFDoc.SwigPyIterator_copy(self)

    def next(self) -> "PyObject *":
        return _BinMXCAFDoc.SwigPyIterator_next(self)

    def __next__(self) -> "PyObject *":
        return _BinMXCAFDoc.SwigPyIterator___next__(self)

    def previous(self) -> "PyObject *":
        return _BinMXCAFDoc.SwigPyIterator_previous(self)

    def advance(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator *":
        return _BinMXCAFDoc.SwigPyIterator_advance(self, n)

    def __eq__(self, x: 'SwigPyIterator') -> "bool":
        return _BinMXCAFDoc.SwigPyIterator___eq__(self, x)

    def __ne__(self, x: 'SwigPyIterator') -> "bool":
        return _BinMXCAFDoc.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator &":
        return _BinMXCAFDoc.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator &":
        return _BinMXCAFDoc.SwigPyIterator___isub__(self, n)

    def __add__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator *":
        return _BinMXCAFDoc.SwigPyIterator___add__(self, n)

    def __sub__(self, *args) -> "ptrdiff_t":
        return _BinMXCAFDoc.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self
SwigPyIterator_swigregister = _BinMXCAFDoc.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _BinMXCAFDoc.process_exception(error, method_name, class_name)
process_exception = _BinMXCAFDoc.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.BinMDF
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.Message
import OCC.Core.OSD
import OCC.Core.TDF
import OCC.Core.BinObjMgt
import OCC.Core.Storage
import OCC.Core.BinTools
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.Geom2d
import OCC.Core.GeomAbs
import OCC.Core.TColgp
import OCC.Core.Geom

from enum import IntEnum
from OCC.Core.Exception import *




def Handle_BinMXCAFDoc_AssemblyItemRefDriver_Create() -> "opencascade::handle< BinMXCAFDoc_AssemblyItemRefDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_AssemblyItemRefDriver_Create()
Handle_BinMXCAFDoc_AssemblyItemRefDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_AssemblyItemRefDriver_Create

def Handle_BinMXCAFDoc_AssemblyItemRefDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_AssemblyItemRefDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_AssemblyItemRefDriver_DownCast(t)
Handle_BinMXCAFDoc_AssemblyItemRefDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_AssemblyItemRefDriver_DownCast

def Handle_BinMXCAFDoc_AssemblyItemRefDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_AssemblyItemRefDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_AssemblyItemRefDriver_IsNull(t)
Handle_BinMXCAFDoc_AssemblyItemRefDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_AssemblyItemRefDriver_IsNull

def Handle_BinMXCAFDoc_CentroidDriver_Create() -> "opencascade::handle< BinMXCAFDoc_CentroidDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_CentroidDriver_Create()
Handle_BinMXCAFDoc_CentroidDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_CentroidDriver_Create

def Handle_BinMXCAFDoc_CentroidDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_CentroidDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_CentroidDriver_DownCast(t)
Handle_BinMXCAFDoc_CentroidDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_CentroidDriver_DownCast

def Handle_BinMXCAFDoc_CentroidDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_CentroidDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_CentroidDriver_IsNull(t)
Handle_BinMXCAFDoc_CentroidDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_CentroidDriver_IsNull

def Handle_BinMXCAFDoc_ColorDriver_Create() -> "opencascade::handle< BinMXCAFDoc_ColorDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_ColorDriver_Create()
Handle_BinMXCAFDoc_ColorDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_ColorDriver_Create

def Handle_BinMXCAFDoc_ColorDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_ColorDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_ColorDriver_DownCast(t)
Handle_BinMXCAFDoc_ColorDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_ColorDriver_DownCast

def Handle_BinMXCAFDoc_ColorDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_ColorDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_ColorDriver_IsNull(t)
Handle_BinMXCAFDoc_ColorDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_ColorDriver_IsNull

def Handle_BinMXCAFDoc_DatumDriver_Create() -> "opencascade::handle< BinMXCAFDoc_DatumDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_DatumDriver_Create()
Handle_BinMXCAFDoc_DatumDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_DatumDriver_Create

def Handle_BinMXCAFDoc_DatumDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_DatumDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_DatumDriver_DownCast(t)
Handle_BinMXCAFDoc_DatumDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_DatumDriver_DownCast

def Handle_BinMXCAFDoc_DatumDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_DatumDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_DatumDriver_IsNull(t)
Handle_BinMXCAFDoc_DatumDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_DatumDriver_IsNull

def Handle_BinMXCAFDoc_DimTolDriver_Create() -> "opencascade::handle< BinMXCAFDoc_DimTolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_DimTolDriver_Create()
Handle_BinMXCAFDoc_DimTolDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_DimTolDriver_Create

def Handle_BinMXCAFDoc_DimTolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_DimTolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_DimTolDriver_DownCast(t)
Handle_BinMXCAFDoc_DimTolDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_DimTolDriver_DownCast

def Handle_BinMXCAFDoc_DimTolDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_DimTolDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_DimTolDriver_IsNull(t)
Handle_BinMXCAFDoc_DimTolDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_DimTolDriver_IsNull

def Handle_BinMXCAFDoc_GraphNodeDriver_Create() -> "opencascade::handle< BinMXCAFDoc_GraphNodeDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_GraphNodeDriver_Create()
Handle_BinMXCAFDoc_GraphNodeDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_GraphNodeDriver_Create

def Handle_BinMXCAFDoc_GraphNodeDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_GraphNodeDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_GraphNodeDriver_DownCast(t)
Handle_BinMXCAFDoc_GraphNodeDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_GraphNodeDriver_DownCast

def Handle_BinMXCAFDoc_GraphNodeDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_GraphNodeDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_GraphNodeDriver_IsNull(t)
Handle_BinMXCAFDoc_GraphNodeDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_GraphNodeDriver_IsNull

def Handle_BinMXCAFDoc_LocationDriver_Create() -> "opencascade::handle< BinMXCAFDoc_LocationDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_LocationDriver_Create()
Handle_BinMXCAFDoc_LocationDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_LocationDriver_Create

def Handle_BinMXCAFDoc_LocationDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_LocationDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_LocationDriver_DownCast(t)
Handle_BinMXCAFDoc_LocationDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_LocationDriver_DownCast

def Handle_BinMXCAFDoc_LocationDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_LocationDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_LocationDriver_IsNull(t)
Handle_BinMXCAFDoc_LocationDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_LocationDriver_IsNull

def Handle_BinMXCAFDoc_MaterialDriver_Create() -> "opencascade::handle< BinMXCAFDoc_MaterialDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_MaterialDriver_Create()
Handle_BinMXCAFDoc_MaterialDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_MaterialDriver_Create

def Handle_BinMXCAFDoc_MaterialDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_MaterialDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_MaterialDriver_DownCast(t)
Handle_BinMXCAFDoc_MaterialDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_MaterialDriver_DownCast

def Handle_BinMXCAFDoc_MaterialDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_MaterialDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_MaterialDriver_IsNull(t)
Handle_BinMXCAFDoc_MaterialDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_MaterialDriver_IsNull

def Handle_BinMXCAFDoc_NoteDriver_Create() -> "opencascade::handle< BinMXCAFDoc_NoteDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteDriver_Create()
Handle_BinMXCAFDoc_NoteDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteDriver_Create

def Handle_BinMXCAFDoc_NoteDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_NoteDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteDriver_DownCast(t)
Handle_BinMXCAFDoc_NoteDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteDriver_DownCast

def Handle_BinMXCAFDoc_NoteDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_NoteDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteDriver_IsNull(t)
Handle_BinMXCAFDoc_NoteDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteDriver_IsNull

def Handle_BinMXCAFDoc_VisMaterialDriver_Create() -> "opencascade::handle< BinMXCAFDoc_VisMaterialDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_VisMaterialDriver_Create()
Handle_BinMXCAFDoc_VisMaterialDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_VisMaterialDriver_Create

def Handle_BinMXCAFDoc_VisMaterialDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_VisMaterialDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_VisMaterialDriver_DownCast(t)
Handle_BinMXCAFDoc_VisMaterialDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_VisMaterialDriver_DownCast

def Handle_BinMXCAFDoc_VisMaterialDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_VisMaterialDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_VisMaterialDriver_IsNull(t)
Handle_BinMXCAFDoc_VisMaterialDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_VisMaterialDriver_IsNull

def Handle_BinMXCAFDoc_VisMaterialToolDriver_Create() -> "opencascade::handle< BinMXCAFDoc_VisMaterialToolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_VisMaterialToolDriver_Create()
Handle_BinMXCAFDoc_VisMaterialToolDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_VisMaterialToolDriver_Create

def Handle_BinMXCAFDoc_VisMaterialToolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_VisMaterialToolDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_VisMaterialToolDriver_DownCast(t)
Handle_BinMXCAFDoc_VisMaterialToolDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_VisMaterialToolDriver_DownCast

def Handle_BinMXCAFDoc_VisMaterialToolDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_VisMaterialToolDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_VisMaterialToolDriver_IsNull(t)
Handle_BinMXCAFDoc_VisMaterialToolDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_VisMaterialToolDriver_IsNull

def Handle_BinMXCAFDoc_NoteBinDataDriver_Create() -> "opencascade::handle< BinMXCAFDoc_NoteBinDataDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteBinDataDriver_Create()
Handle_BinMXCAFDoc_NoteBinDataDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteBinDataDriver_Create

def Handle_BinMXCAFDoc_NoteBinDataDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_NoteBinDataDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteBinDataDriver_DownCast(t)
Handle_BinMXCAFDoc_NoteBinDataDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteBinDataDriver_DownCast

def Handle_BinMXCAFDoc_NoteBinDataDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_NoteBinDataDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteBinDataDriver_IsNull(t)
Handle_BinMXCAFDoc_NoteBinDataDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteBinDataDriver_IsNull

def Handle_BinMXCAFDoc_NoteCommentDriver_Create() -> "opencascade::handle< BinMXCAFDoc_NoteCommentDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteCommentDriver_Create()
Handle_BinMXCAFDoc_NoteCommentDriver_Create = _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteCommentDriver_Create

def Handle_BinMXCAFDoc_NoteCommentDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< BinMXCAFDoc_NoteCommentDriver >":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteCommentDriver_DownCast(t)
Handle_BinMXCAFDoc_NoteCommentDriver_DownCast = _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteCommentDriver_DownCast

def Handle_BinMXCAFDoc_NoteCommentDriver_IsNull(t: 'opencascade::handle< BinMXCAFDoc_NoteCommentDriver > const &') -> "bool":
    return _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteCommentDriver_IsNull(t)
Handle_BinMXCAFDoc_NoteCommentDriver_IsNull = _BinMXCAFDoc.Handle_BinMXCAFDoc_NoteCommentDriver_IsNull
class binmxcafdoc(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, binmxcafdoc, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, binmxcafdoc, name)
    __repr__ = _swig_repr

    def AddDrivers(*args) -> "void":
        """
        Adds the attribute drivers to <thedrivertable>.

        Parameters
        ----------
        theDriverTable: BinMDF_ADriverTable
        theMsgDrv: Message_Messenger

        Returns
        -------
        None

        """
        return _BinMXCAFDoc.binmxcafdoc_AddDrivers(*args)

    AddDrivers = staticmethod(AddDrivers)

    __repr__ = _dumps_object


    def __init__(self):
        this = _BinMXCAFDoc.new_binmxcafdoc()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _BinMXCAFDoc.delete_binmxcafdoc
    __del__ = lambda self: None
binmxcafdoc_swigregister = _BinMXCAFDoc.binmxcafdoc_swigregister
binmxcafdoc_swigregister(binmxcafdoc)

def binmxcafdoc_AddDrivers(*args) -> "void":
    """
    Adds the attribute drivers to <thedrivertable>.

    Parameters
    ----------
    theDriverTable: BinMDF_ADriverTable
    theMsgDrv: Message_Messenger

    Returns
    -------
    None

    """
    return _BinMXCAFDoc.binmxcafdoc_AddDrivers(*args)

class BinMXCAFDoc_AssemblyItemRefDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.BinMDF.BinMDF_ADriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, BinMXCAFDoc_AssemblyItemRefDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.BinMDF.BinMDF_ADriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, BinMXCAFDoc_AssemblyItemRefDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        theMsgDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _BinMXCAFDoc.new_BinMXCAFDoc_AssemblyItemRefDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        theSource: BinObjMgt_Persistent
        theTarget: TDF_Attribute
        theRelocTable: BinObjMgt_RRelocationTable

        Returns
        -------
        bool

        No available documentation.

        Parameters
        ----------
        theSource: TDF_Attribute
        theTarget: BinObjMgt_Persistent
        theRelocTable: BinObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _BinMXCAFDoc.BinMXCAFDoc_AssemblyItemRefDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_AssemblyItemRefDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_AssemblyItemRefDriver
    __del__ = lambda self: None
BinMXCAFDoc_AssemblyItemRefDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_AssemblyItemRefDriver_swigregister
BinMXCAFDoc_AssemblyItemRefDriver_swigregister(BinMXCAFDoc_AssemblyItemRefDriver)

class BinMXCAFDoc_CentroidDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.BinMDF.BinMDF_ADriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, BinMXCAFDoc_CentroidDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.BinMDF.BinMDF_ADriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, BinMXCAFDoc_CentroidDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        theMsgDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _BinMXCAFDoc.new_BinMXCAFDoc_CentroidDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        theSource: BinObjMgt_Persistent
        theTarget: TDF_Attribute
        theRelocTable: BinObjMgt_RRelocationTable

        Returns
        -------
        bool

        No available documentation.

        Parameters
        ----------
        theSource: TDF_Attribute
        theTarget: BinObjMgt_Persistent
        theRelocTable: BinObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _BinMXCAFDoc.BinMXCAFDoc_CentroidDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_CentroidDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_CentroidDriver
    __del__ = lambda self: None
BinMXCAFDoc_CentroidDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_CentroidDriver_swigregister
BinMXCAFDoc_CentroidDriver_swigregister(BinMXCAFDoc_CentroidDriver)

class BinMXCAFDoc_ColorDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.BinMDF.BinMDF_ADriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, BinMXCAFDoc_ColorDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.BinMDF.BinMDF_ADriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, BinMXCAFDoc_ColorDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        theMsgDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _BinMXCAFDoc.new_BinMXCAFDoc_ColorDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        theSource: BinObjMgt_Persistent
        theTarget: TDF_Attribute
        theRelocTable: BinObjMgt_RRelocationTable

        Returns
        -------
        bool

        No available documentation.

        Parameters
        ----------
        theSource: TDF_Attribute
        theTarget: BinObjMgt_Persistent
        theRelocTable: BinObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _BinMXCAFDoc.BinMXCAFDoc_ColorDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_ColorDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_ColorDriver
    __del__ = lambda self: None
BinMXCAFDoc_ColorDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_ColorDriver_swigregister
BinMXCAFDoc_ColorDriver_swigregister(BinMXCAFDoc_ColorDriver)

class BinMXCAFDoc_DatumDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.BinMDF.BinMDF_ADriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, BinMXCAFDoc_DatumDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.BinMDF.BinMDF_ADriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, BinMXCAFDoc_DatumDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        theMsgDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _BinMXCAFDoc.new_BinMXCAFDoc_DatumDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        theSource: BinObjMgt_Persistent
        theTarget: TDF_Attribute
        theRelocTable: BinObjMgt_RRelocationTable

        Returns
        -------
        bool

        No available documentation.

        Parameters
        ----------
        theSource: TDF_Attribute
        theTarget: BinObjMgt_Persistent
        theRelocTable: BinObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _BinMXCAFDoc.BinMXCAFDoc_DatumDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_DatumDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_DatumDriver
    __del__ = lambda self: None
BinMXCAFDoc_DatumDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_DatumDriver_swigregister
BinMXCAFDoc_DatumDriver_swigregister(BinMXCAFDoc_DatumDriver)

class BinMXCAFDoc_DimTolDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.BinMDF.BinMDF_ADriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, BinMXCAFDoc_DimTolDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.BinMDF.BinMDF_ADriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, BinMXCAFDoc_DimTolDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        theMsgDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _BinMXCAFDoc.new_BinMXCAFDoc_DimTolDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        theSource: BinObjMgt_Persistent
        theTarget: TDF_Attribute
        theRelocTable: BinObjMgt_RRelocationTable

        Returns
        -------
        bool

        No available documentation.

        Parameters
        ----------
        theSource: TDF_Attribute
        theTarget: BinObjMgt_Persistent
        theRelocTable: BinObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _BinMXCAFDoc.BinMXCAFDoc_DimTolDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_DimTolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_DimTolDriver
    __del__ = lambda self: None
BinMXCAFDoc_DimTolDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_DimTolDriver_swigregister
BinMXCAFDoc_DimTolDriver_swigregister(BinMXCAFDoc_DimTolDriver)

class BinMXCAFDoc_GraphNodeDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.BinMDF.BinMDF_ADriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, BinMXCAFDoc_GraphNodeDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.BinMDF.BinMDF_ADriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, BinMXCAFDoc_GraphNodeDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        theMsgDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _BinMXCAFDoc.new_BinMXCAFDoc_GraphNodeDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        theSource: BinObjMgt_Persistent
        theTarget: TDF_Attribute
        theRelocTable: BinObjMgt_RRelocationTable

        Returns
        -------
        bool

        No available documentation.

        Parameters
        ----------
        theSource: TDF_Attribute
        theTarget: BinObjMgt_Persistent
        theRelocTable: BinObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _BinMXCAFDoc.BinMXCAFDoc_GraphNodeDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_GraphNodeDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_GraphNodeDriver
    __del__ = lambda self: None
BinMXCAFDoc_GraphNodeDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_GraphNodeDriver_swigregister
BinMXCAFDoc_GraphNodeDriver_swigregister(BinMXCAFDoc_GraphNodeDriver)

class BinMXCAFDoc_LocationDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.BinMDF.BinMDF_ADriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, BinMXCAFDoc_LocationDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.BinMDF.BinMDF_ADriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, BinMXCAFDoc_LocationDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        theMsgDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _BinMXCAFDoc.new_BinMXCAFDoc_LocationDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        theSource: BinObjMgt_Persistent
        theTarget: TDF_Attribute
        theRelocTable: BinObjMgt_RRelocationTable

        Returns
        -------
        bool

        No available documentation.

        Parameters
        ----------
        theSource: TDF_Attribute
        theTarget: BinObjMgt_Persistent
        theRelocTable: BinObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _BinMXCAFDoc.BinMXCAFDoc_LocationDriver_Paste(self, *args)


    def SetSharedLocations(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        theLocations: BinTools_LocationSetPtr

        Returns
        -------
        None

        """
        return _BinMXCAFDoc.BinMXCAFDoc_LocationDriver_SetSharedLocations(self, *args)


    def Translate(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        theSource: BinObjMgt_Persistent
        theLoc: TopLoc_Location
        theMap: BinObjMgt_RRelocationTable

        Returns
        -------
        bool

        Translate transient location to storable.

        Parameters
        ----------
        theLoc: TopLoc_Location
        theTarget: BinObjMgt_Persistent
        theMap: BinObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _BinMXCAFDoc.BinMXCAFDoc_LocationDriver_Translate(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_LocationDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_LocationDriver
    __del__ = lambda self: None
BinMXCAFDoc_LocationDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_LocationDriver_swigregister
BinMXCAFDoc_LocationDriver_swigregister(BinMXCAFDoc_LocationDriver)

class BinMXCAFDoc_MaterialDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.BinMDF.BinMDF_ADriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, BinMXCAFDoc_MaterialDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.BinMDF.BinMDF_ADriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, BinMXCAFDoc_MaterialDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        theMsgDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _BinMXCAFDoc.new_BinMXCAFDoc_MaterialDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        theSource: BinObjMgt_Persistent
        theTarget: TDF_Attribute
        theRelocTable: BinObjMgt_RRelocationTable

        Returns
        -------
        bool

        No available documentation.

        Parameters
        ----------
        theSource: TDF_Attribute
        theTarget: BinObjMgt_Persistent
        theRelocTable: BinObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _BinMXCAFDoc.BinMXCAFDoc_MaterialDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_MaterialDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_MaterialDriver
    __del__ = lambda self: None
BinMXCAFDoc_MaterialDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_MaterialDriver_swigregister
BinMXCAFDoc_MaterialDriver_swigregister(BinMXCAFDoc_MaterialDriver)

class BinMXCAFDoc_NoteDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.BinMDF.BinMDF_ADriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, BinMXCAFDoc_NoteDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.BinMDF.BinMDF_ADriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, BinMXCAFDoc_NoteDriver, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        theSource: BinObjMgt_Persistent
        theTarget: TDF_Attribute
        theRelocTable: BinObjMgt_RRelocationTable

        Returns
        -------
        bool

        No available documentation.

        Parameters
        ----------
        theSource: TDF_Attribute
        theTarget: BinObjMgt_Persistent
        theRelocTable: BinObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _BinMXCAFDoc.BinMXCAFDoc_NoteDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_NoteDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_NoteDriver
    __del__ = lambda self: None
BinMXCAFDoc_NoteDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_NoteDriver_swigregister
BinMXCAFDoc_NoteDriver_swigregister(BinMXCAFDoc_NoteDriver)

class BinMXCAFDoc_VisMaterialDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.BinMDF.BinMDF_ADriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, BinMXCAFDoc_VisMaterialDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.BinMDF.BinMDF_ADriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, BinMXCAFDoc_VisMaterialDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Main constructor.

        Parameters
        ----------
        theMsgDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _BinMXCAFDoc.new_BinMXCAFDoc_VisMaterialDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        Paste attribute from persistence into document.

        Parameters
        ----------
        theSource: BinObjMgt_Persistent
        theTarget: TDF_Attribute
        theRelocTable: BinObjMgt_RRelocationTable

        Returns
        -------
        bool

        Paste attribute from document into persistence.

        Parameters
        ----------
        theSource: TDF_Attribute
        theTarget: BinObjMgt_Persistent
        theRelocTable: BinObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _BinMXCAFDoc.BinMXCAFDoc_VisMaterialDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_VisMaterialDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_VisMaterialDriver
    __del__ = lambda self: None
BinMXCAFDoc_VisMaterialDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_VisMaterialDriver_swigregister
BinMXCAFDoc_VisMaterialDriver_swigregister(BinMXCAFDoc_VisMaterialDriver)

class BinMXCAFDoc_VisMaterialToolDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.BinMDF.BinMDF_ADriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, BinMXCAFDoc_VisMaterialToolDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.BinMDF.BinMDF_ADriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, BinMXCAFDoc_VisMaterialToolDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Main constructor.

        Parameters
        ----------
        theMsgDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _BinMXCAFDoc.new_BinMXCAFDoc_VisMaterialToolDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        Paste attribute from persistence into document.

        Parameters
        ----------
        theSource: BinObjMgt_Persistent
        theTarget: TDF_Attribute
        theRelocTable: BinObjMgt_RRelocationTable

        Returns
        -------
        bool

        Paste attribute from document into persistence.

        Parameters
        ----------
        theSource: TDF_Attribute
        theTarget: BinObjMgt_Persistent
        theRelocTable: BinObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _BinMXCAFDoc.BinMXCAFDoc_VisMaterialToolDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_VisMaterialToolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_VisMaterialToolDriver
    __del__ = lambda self: None
BinMXCAFDoc_VisMaterialToolDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_VisMaterialToolDriver_swigregister
BinMXCAFDoc_VisMaterialToolDriver_swigregister(BinMXCAFDoc_VisMaterialToolDriver)

class BinMXCAFDoc_NoteBinDataDriver(BinMXCAFDoc_NoteDriver):
    __swig_setmethods__ = {}
    for _s in [BinMXCAFDoc_NoteDriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, BinMXCAFDoc_NoteBinDataDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [BinMXCAFDoc_NoteDriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, BinMXCAFDoc_NoteBinDataDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        theMsgDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _BinMXCAFDoc.new_BinMXCAFDoc_NoteBinDataDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        theSource: BinObjMgt_Persistent
        theTarget: TDF_Attribute
        theRelocTable: BinObjMgt_RRelocationTable

        Returns
        -------
        bool

        No available documentation.

        Parameters
        ----------
        theSource: TDF_Attribute
        theTarget: BinObjMgt_Persistent
        theRelocTable: BinObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _BinMXCAFDoc.BinMXCAFDoc_NoteBinDataDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_NoteBinDataDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_NoteBinDataDriver
    __del__ = lambda self: None
BinMXCAFDoc_NoteBinDataDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_NoteBinDataDriver_swigregister
BinMXCAFDoc_NoteBinDataDriver_swigregister(BinMXCAFDoc_NoteBinDataDriver)

class BinMXCAFDoc_NoteCommentDriver(BinMXCAFDoc_NoteDriver):
    __swig_setmethods__ = {}
    for _s in [BinMXCAFDoc_NoteDriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, BinMXCAFDoc_NoteCommentDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [BinMXCAFDoc_NoteDriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, BinMXCAFDoc_NoteCommentDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        theMsgDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _BinMXCAFDoc.new_BinMXCAFDoc_NoteCommentDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        theSource: BinObjMgt_Persistent
        theTarget: TDF_Attribute
        theRelocTable: BinObjMgt_RRelocationTable

        Returns
        -------
        bool

        No available documentation.

        Parameters
        ----------
        theSource: TDF_Attribute
        theTarget: BinObjMgt_Persistent
        theRelocTable: BinObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _BinMXCAFDoc.BinMXCAFDoc_NoteCommentDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_BinMXCAFDoc_NoteCommentDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMXCAFDoc.delete_BinMXCAFDoc_NoteCommentDriver
    __del__ = lambda self: None
BinMXCAFDoc_NoteCommentDriver_swigregister = _BinMXCAFDoc.BinMXCAFDoc_NoteCommentDriver_swigregister
BinMXCAFDoc_NoteCommentDriver_swigregister(BinMXCAFDoc_NoteCommentDriver)



# This file is compatible with both classic and new-style classes.


