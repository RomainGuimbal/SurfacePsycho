# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

"""
StepKinematics module, see official documentation at
https://www.opencascade.com/doc/occt-7.7.0/refman/html/package_stepkinematics.html
"""

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _StepKinematics
else:
    import _StepKinematics

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _StepKinematics.delete_SwigPyIterator

    def value(self):
        return _StepKinematics.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _StepKinematics.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _StepKinematics.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _StepKinematics.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _StepKinematics.SwigPyIterator_equal(self, x)

    def copy(self):
        return _StepKinematics.SwigPyIterator_copy(self)

    def next(self):
        return _StepKinematics.SwigPyIterator_next(self)

    def __next__(self):
        return _StepKinematics.SwigPyIterator___next__(self)

    def previous(self):
        return _StepKinematics.SwigPyIterator_previous(self)

    def advance(self, n):
        return _StepKinematics.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _StepKinematics.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _StepKinematics.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _StepKinematics.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _StepKinematics.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _StepKinematics.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _StepKinematics.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _StepKinematics:
_StepKinematics.SwigPyIterator_swigregister(SwigPyIterator)

def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error, method_name, class_name):
    return _StepKinematics.process_exception(error, method_name, class_name)

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.StepShape
import OCC.Core.StepGeom
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.TCollection
import OCC.Core.Message
import OCC.Core.OSD
import OCC.Core.TColStd
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.Resource
import OCC.Core.StepRepr
import OCC.Core.StepBasic

from enum import IntEnum
from OCC.Core.Exception import *

StepKinematics_adBidirectional = _StepKinematics.StepKinematics_adBidirectional
StepKinematics_adPositiveOnly = _StepKinematics.StepKinematics_adPositiveOnly
StepKinematics_adNegativeOnly = _StepKinematics.StepKinematics_adNegativeOnly
StepKinematics_adNotActuated = _StepKinematics.StepKinematics_adNotActuated


class StepKinematics_ActuatedDirection(IntEnum):
	StepKinematics_adBidirectional = 0
	StepKinematics_adPositiveOnly = 1
	StepKinematics_adNegativeOnly = 2
	StepKinematics_adNotActuated = 3
StepKinematics_adBidirectional = StepKinematics_ActuatedDirection.StepKinematics_adBidirectional
StepKinematics_adPositiveOnly = StepKinematics_ActuatedDirection.StepKinematics_adPositiveOnly
StepKinematics_adNegativeOnly = StepKinematics_ActuatedDirection.StepKinematics_adNegativeOnly
StepKinematics_adNotActuated = StepKinematics_ActuatedDirection.StepKinematics_adNotActuated


def Handle_StepKinematics_ContextDependentKinematicLinkRepresentation_Create():
    return _StepKinematics.Handle_StepKinematics_ContextDependentKinematicLinkRepresentation_Create()

def Handle_StepKinematics_ContextDependentKinematicLinkRepresentation_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_ContextDependentKinematicLinkRepresentation_DownCast(t)

def Handle_StepKinematics_ContextDependentKinematicLinkRepresentation_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_ContextDependentKinematicLinkRepresentation_IsNull(t)

def Handle_StepKinematics_KinematicJoint_Create():
    return _StepKinematics.Handle_StepKinematics_KinematicJoint_Create()

def Handle_StepKinematics_KinematicJoint_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_KinematicJoint_DownCast(t)

def Handle_StepKinematics_KinematicJoint_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_KinematicJoint_IsNull(t)

def Handle_StepKinematics_KinematicLink_Create():
    return _StepKinematics.Handle_StepKinematics_KinematicLink_Create()

def Handle_StepKinematics_KinematicLink_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_KinematicLink_DownCast(t)

def Handle_StepKinematics_KinematicLink_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_KinematicLink_IsNull(t)

def Handle_StepKinematics_KinematicLinkRepresentation_Create():
    return _StepKinematics.Handle_StepKinematics_KinematicLinkRepresentation_Create()

def Handle_StepKinematics_KinematicLinkRepresentation_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_KinematicLinkRepresentation_DownCast(t)

def Handle_StepKinematics_KinematicLinkRepresentation_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_KinematicLinkRepresentation_IsNull(t)

def Handle_StepKinematics_KinematicLinkRepresentationAssociation_Create():
    return _StepKinematics.Handle_StepKinematics_KinematicLinkRepresentationAssociation_Create()

def Handle_StepKinematics_KinematicLinkRepresentationAssociation_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_KinematicLinkRepresentationAssociation_DownCast(t)

def Handle_StepKinematics_KinematicLinkRepresentationAssociation_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_KinematicLinkRepresentationAssociation_IsNull(t)

def Handle_StepKinematics_KinematicPair_Create():
    return _StepKinematics.Handle_StepKinematics_KinematicPair_Create()

def Handle_StepKinematics_KinematicPair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_KinematicPair_DownCast(t)

def Handle_StepKinematics_KinematicPair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_KinematicPair_IsNull(t)

def Handle_StepKinematics_KinematicPropertyDefinitionRepresentation_Create():
    return _StepKinematics.Handle_StepKinematics_KinematicPropertyDefinitionRepresentation_Create()

def Handle_StepKinematics_KinematicPropertyDefinitionRepresentation_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_KinematicPropertyDefinitionRepresentation_DownCast(t)

def Handle_StepKinematics_KinematicPropertyDefinitionRepresentation_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_KinematicPropertyDefinitionRepresentation_IsNull(t)

def Handle_StepKinematics_KinematicTopologyDirectedStructure_Create():
    return _StepKinematics.Handle_StepKinematics_KinematicTopologyDirectedStructure_Create()

def Handle_StepKinematics_KinematicTopologyDirectedStructure_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_KinematicTopologyDirectedStructure_DownCast(t)

def Handle_StepKinematics_KinematicTopologyDirectedStructure_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_KinematicTopologyDirectedStructure_IsNull(t)

def Handle_StepKinematics_KinematicTopologyNetworkStructure_Create():
    return _StepKinematics.Handle_StepKinematics_KinematicTopologyNetworkStructure_Create()

def Handle_StepKinematics_KinematicTopologyNetworkStructure_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_KinematicTopologyNetworkStructure_DownCast(t)

def Handle_StepKinematics_KinematicTopologyNetworkStructure_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_KinematicTopologyNetworkStructure_IsNull(t)

def Handle_StepKinematics_KinematicTopologyStructure_Create():
    return _StepKinematics.Handle_StepKinematics_KinematicTopologyStructure_Create()

def Handle_StepKinematics_KinematicTopologyStructure_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_KinematicTopologyStructure_DownCast(t)

def Handle_StepKinematics_KinematicTopologyStructure_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_KinematicTopologyStructure_IsNull(t)

def Handle_StepKinematics_MechanismRepresentation_Create():
    return _StepKinematics.Handle_StepKinematics_MechanismRepresentation_Create()

def Handle_StepKinematics_MechanismRepresentation_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_MechanismRepresentation_DownCast(t)

def Handle_StepKinematics_MechanismRepresentation_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_MechanismRepresentation_IsNull(t)

def Handle_StepKinematics_MechanismStateRepresentation_Create():
    return _StepKinematics.Handle_StepKinematics_MechanismStateRepresentation_Create()

def Handle_StepKinematics_MechanismStateRepresentation_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_MechanismStateRepresentation_DownCast(t)

def Handle_StepKinematics_MechanismStateRepresentation_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_MechanismStateRepresentation_IsNull(t)

def Handle_StepKinematics_OrientedJoint_Create():
    return _StepKinematics.Handle_StepKinematics_OrientedJoint_Create()

def Handle_StepKinematics_OrientedJoint_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_OrientedJoint_DownCast(t)

def Handle_StepKinematics_OrientedJoint_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_OrientedJoint_IsNull(t)

def Handle_StepKinematics_PairRepresentationRelationship_Create():
    return _StepKinematics.Handle_StepKinematics_PairRepresentationRelationship_Create()

def Handle_StepKinematics_PairRepresentationRelationship_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_PairRepresentationRelationship_DownCast(t)

def Handle_StepKinematics_PairRepresentationRelationship_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_PairRepresentationRelationship_IsNull(t)

def Handle_StepKinematics_PairValue_Create():
    return _StepKinematics.Handle_StepKinematics_PairValue_Create()

def Handle_StepKinematics_PairValue_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_PairValue_DownCast(t)

def Handle_StepKinematics_PairValue_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_PairValue_IsNull(t)

def Handle_StepKinematics_ProductDefinitionKinematics_Create():
    return _StepKinematics.Handle_StepKinematics_ProductDefinitionKinematics_Create()

def Handle_StepKinematics_ProductDefinitionKinematics_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_ProductDefinitionKinematics_DownCast(t)

def Handle_StepKinematics_ProductDefinitionKinematics_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_ProductDefinitionKinematics_IsNull(t)

def Handle_StepKinematics_ProductDefinitionRelationshipKinematics_Create():
    return _StepKinematics.Handle_StepKinematics_ProductDefinitionRelationshipKinematics_Create()

def Handle_StepKinematics_ProductDefinitionRelationshipKinematics_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_ProductDefinitionRelationshipKinematics_DownCast(t)

def Handle_StepKinematics_ProductDefinitionRelationshipKinematics_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_ProductDefinitionRelationshipKinematics_IsNull(t)

def Handle_StepKinematics_RotationAboutDirection_Create():
    return _StepKinematics.Handle_StepKinematics_RotationAboutDirection_Create()

def Handle_StepKinematics_RotationAboutDirection_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_RotationAboutDirection_DownCast(t)

def Handle_StepKinematics_RotationAboutDirection_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_RotationAboutDirection_IsNull(t)

def Handle_StepKinematics_ActuatedKinPairAndOrderKinPair_Create():
    return _StepKinematics.Handle_StepKinematics_ActuatedKinPairAndOrderKinPair_Create()

def Handle_StepKinematics_ActuatedKinPairAndOrderKinPair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_ActuatedKinPairAndOrderKinPair_DownCast(t)

def Handle_StepKinematics_ActuatedKinPairAndOrderKinPair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_ActuatedKinPairAndOrderKinPair_IsNull(t)

def Handle_StepKinematics_ActuatedKinematicPair_Create():
    return _StepKinematics.Handle_StepKinematics_ActuatedKinematicPair_Create()

def Handle_StepKinematics_ActuatedKinematicPair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_ActuatedKinematicPair_DownCast(t)

def Handle_StepKinematics_ActuatedKinematicPair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_ActuatedKinematicPair_IsNull(t)

def Handle_StepKinematics_CylindricalPairValue_Create():
    return _StepKinematics.Handle_StepKinematics_CylindricalPairValue_Create()

def Handle_StepKinematics_CylindricalPairValue_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_CylindricalPairValue_DownCast(t)

def Handle_StepKinematics_CylindricalPairValue_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_CylindricalPairValue_IsNull(t)

def Handle_StepKinematics_GearPairValue_Create():
    return _StepKinematics.Handle_StepKinematics_GearPairValue_Create()

def Handle_StepKinematics_GearPairValue_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_GearPairValue_DownCast(t)

def Handle_StepKinematics_GearPairValue_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_GearPairValue_IsNull(t)

def Handle_StepKinematics_HighOrderKinematicPair_Create():
    return _StepKinematics.Handle_StepKinematics_HighOrderKinematicPair_Create()

def Handle_StepKinematics_HighOrderKinematicPair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_HighOrderKinematicPair_DownCast(t)

def Handle_StepKinematics_HighOrderKinematicPair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_HighOrderKinematicPair_IsNull(t)

def Handle_StepKinematics_KinematicPropertyMechanismRepresentation_Create():
    return _StepKinematics.Handle_StepKinematics_KinematicPropertyMechanismRepresentation_Create()

def Handle_StepKinematics_KinematicPropertyMechanismRepresentation_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_KinematicPropertyMechanismRepresentation_DownCast(t)

def Handle_StepKinematics_KinematicPropertyMechanismRepresentation_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_KinematicPropertyMechanismRepresentation_IsNull(t)

def Handle_StepKinematics_LinearFlexibleLinkRepresentation_Create():
    return _StepKinematics.Handle_StepKinematics_LinearFlexibleLinkRepresentation_Create()

def Handle_StepKinematics_LinearFlexibleLinkRepresentation_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_LinearFlexibleLinkRepresentation_DownCast(t)

def Handle_StepKinematics_LinearFlexibleLinkRepresentation_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_LinearFlexibleLinkRepresentation_IsNull(t)

def Handle_StepKinematics_LowOrderKinematicPair_Create():
    return _StepKinematics.Handle_StepKinematics_LowOrderKinematicPair_Create()

def Handle_StepKinematics_LowOrderKinematicPair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_LowOrderKinematicPair_DownCast(t)

def Handle_StepKinematics_LowOrderKinematicPair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_LowOrderKinematicPair_IsNull(t)

def Handle_StepKinematics_LowOrderKinematicPairValue_Create():
    return _StepKinematics.Handle_StepKinematics_LowOrderKinematicPairValue_Create()

def Handle_StepKinematics_LowOrderKinematicPairValue_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_LowOrderKinematicPairValue_DownCast(t)

def Handle_StepKinematics_LowOrderKinematicPairValue_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_LowOrderKinematicPairValue_IsNull(t)

def Handle_StepKinematics_LowOrderKinematicPairWithMotionCoupling_Create():
    return _StepKinematics.Handle_StepKinematics_LowOrderKinematicPairWithMotionCoupling_Create()

def Handle_StepKinematics_LowOrderKinematicPairWithMotionCoupling_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_LowOrderKinematicPairWithMotionCoupling_DownCast(t)

def Handle_StepKinematics_LowOrderKinematicPairWithMotionCoupling_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_LowOrderKinematicPairWithMotionCoupling_IsNull(t)

def Handle_StepKinematics_PlanarPairValue_Create():
    return _StepKinematics.Handle_StepKinematics_PlanarPairValue_Create()

def Handle_StepKinematics_PlanarPairValue_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_PlanarPairValue_DownCast(t)

def Handle_StepKinematics_PlanarPairValue_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_PlanarPairValue_IsNull(t)

def Handle_StepKinematics_PointOnPlanarCurvePairValue_Create():
    return _StepKinematics.Handle_StepKinematics_PointOnPlanarCurvePairValue_Create()

def Handle_StepKinematics_PointOnPlanarCurvePairValue_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_PointOnPlanarCurvePairValue_DownCast(t)

def Handle_StepKinematics_PointOnPlanarCurvePairValue_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_PointOnPlanarCurvePairValue_IsNull(t)

def Handle_StepKinematics_PointOnSurfacePairValue_Create():
    return _StepKinematics.Handle_StepKinematics_PointOnSurfacePairValue_Create()

def Handle_StepKinematics_PointOnSurfacePairValue_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_PointOnSurfacePairValue_DownCast(t)

def Handle_StepKinematics_PointOnSurfacePairValue_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_PointOnSurfacePairValue_IsNull(t)

def Handle_StepKinematics_PrismaticPairValue_Create():
    return _StepKinematics.Handle_StepKinematics_PrismaticPairValue_Create()

def Handle_StepKinematics_PrismaticPairValue_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_PrismaticPairValue_DownCast(t)

def Handle_StepKinematics_PrismaticPairValue_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_PrismaticPairValue_IsNull(t)

def Handle_StepKinematics_RackAndPinionPairValue_Create():
    return _StepKinematics.Handle_StepKinematics_RackAndPinionPairValue_Create()

def Handle_StepKinematics_RackAndPinionPairValue_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_RackAndPinionPairValue_DownCast(t)

def Handle_StepKinematics_RackAndPinionPairValue_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_RackAndPinionPairValue_IsNull(t)

def Handle_StepKinematics_RevolutePairValue_Create():
    return _StepKinematics.Handle_StepKinematics_RevolutePairValue_Create()

def Handle_StepKinematics_RevolutePairValue_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_RevolutePairValue_DownCast(t)

def Handle_StepKinematics_RevolutePairValue_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_RevolutePairValue_IsNull(t)

def Handle_StepKinematics_RigidLinkRepresentation_Create():
    return _StepKinematics.Handle_StepKinematics_RigidLinkRepresentation_Create()

def Handle_StepKinematics_RigidLinkRepresentation_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_RigidLinkRepresentation_DownCast(t)

def Handle_StepKinematics_RigidLinkRepresentation_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_RigidLinkRepresentation_IsNull(t)

def Handle_StepKinematics_RollingCurvePairValue_Create():
    return _StepKinematics.Handle_StepKinematics_RollingCurvePairValue_Create()

def Handle_StepKinematics_RollingCurvePairValue_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_RollingCurvePairValue_DownCast(t)

def Handle_StepKinematics_RollingCurvePairValue_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_RollingCurvePairValue_IsNull(t)

def Handle_StepKinematics_RollingSurfacePairValue_Create():
    return _StepKinematics.Handle_StepKinematics_RollingSurfacePairValue_Create()

def Handle_StepKinematics_RollingSurfacePairValue_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_RollingSurfacePairValue_DownCast(t)

def Handle_StepKinematics_RollingSurfacePairValue_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_RollingSurfacePairValue_IsNull(t)

def Handle_StepKinematics_ScrewPairValue_Create():
    return _StepKinematics.Handle_StepKinematics_ScrewPairValue_Create()

def Handle_StepKinematics_ScrewPairValue_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_ScrewPairValue_DownCast(t)

def Handle_StepKinematics_ScrewPairValue_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_ScrewPairValue_IsNull(t)

def Handle_StepKinematics_SlidingCurvePairValue_Create():
    return _StepKinematics.Handle_StepKinematics_SlidingCurvePairValue_Create()

def Handle_StepKinematics_SlidingCurvePairValue_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_SlidingCurvePairValue_DownCast(t)

def Handle_StepKinematics_SlidingCurvePairValue_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_SlidingCurvePairValue_IsNull(t)

def Handle_StepKinematics_SlidingSurfacePairValue_Create():
    return _StepKinematics.Handle_StepKinematics_SlidingSurfacePairValue_Create()

def Handle_StepKinematics_SlidingSurfacePairValue_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_SlidingSurfacePairValue_DownCast(t)

def Handle_StepKinematics_SlidingSurfacePairValue_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_SlidingSurfacePairValue_IsNull(t)

def Handle_StepKinematics_SphericalPairValue_Create():
    return _StepKinematics.Handle_StepKinematics_SphericalPairValue_Create()

def Handle_StepKinematics_SphericalPairValue_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_SphericalPairValue_DownCast(t)

def Handle_StepKinematics_SphericalPairValue_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_SphericalPairValue_IsNull(t)

def Handle_StepKinematics_UnconstrainedPairValue_Create():
    return _StepKinematics.Handle_StepKinematics_UnconstrainedPairValue_Create()

def Handle_StepKinematics_UnconstrainedPairValue_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_UnconstrainedPairValue_DownCast(t)

def Handle_StepKinematics_UnconstrainedPairValue_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_UnconstrainedPairValue_IsNull(t)

def Handle_StepKinematics_UniversalPairValue_Create():
    return _StepKinematics.Handle_StepKinematics_UniversalPairValue_Create()

def Handle_StepKinematics_UniversalPairValue_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_UniversalPairValue_DownCast(t)

def Handle_StepKinematics_UniversalPairValue_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_UniversalPairValue_IsNull(t)

def Handle_StepKinematics_CylindricalPair_Create():
    return _StepKinematics.Handle_StepKinematics_CylindricalPair_Create()

def Handle_StepKinematics_CylindricalPair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_CylindricalPair_DownCast(t)

def Handle_StepKinematics_CylindricalPair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_CylindricalPair_IsNull(t)

def Handle_StepKinematics_FullyConstrainedPair_Create():
    return _StepKinematics.Handle_StepKinematics_FullyConstrainedPair_Create()

def Handle_StepKinematics_FullyConstrainedPair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_FullyConstrainedPair_DownCast(t)

def Handle_StepKinematics_FullyConstrainedPair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_FullyConstrainedPair_IsNull(t)

def Handle_StepKinematics_GearPair_Create():
    return _StepKinematics.Handle_StepKinematics_GearPair_Create()

def Handle_StepKinematics_GearPair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_GearPair_DownCast(t)

def Handle_StepKinematics_GearPair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_GearPair_IsNull(t)

def Handle_StepKinematics_LinearFlexibleAndPinionPair_Create():
    return _StepKinematics.Handle_StepKinematics_LinearFlexibleAndPinionPair_Create()

def Handle_StepKinematics_LinearFlexibleAndPinionPair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_LinearFlexibleAndPinionPair_DownCast(t)

def Handle_StepKinematics_LinearFlexibleAndPinionPair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_LinearFlexibleAndPinionPair_IsNull(t)

def Handle_StepKinematics_LinearFlexibleAndPlanarCurvePair_Create():
    return _StepKinematics.Handle_StepKinematics_LinearFlexibleAndPlanarCurvePair_Create()

def Handle_StepKinematics_LinearFlexibleAndPlanarCurvePair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_LinearFlexibleAndPlanarCurvePair_DownCast(t)

def Handle_StepKinematics_LinearFlexibleAndPlanarCurvePair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_LinearFlexibleAndPlanarCurvePair_IsNull(t)

def Handle_StepKinematics_LowOrderKinematicPairWithRange_Create():
    return _StepKinematics.Handle_StepKinematics_LowOrderKinematicPairWithRange_Create()

def Handle_StepKinematics_LowOrderKinematicPairWithRange_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_LowOrderKinematicPairWithRange_DownCast(t)

def Handle_StepKinematics_LowOrderKinematicPairWithRange_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_LowOrderKinematicPairWithRange_IsNull(t)

def Handle_StepKinematics_PlanarCurvePair_Create():
    return _StepKinematics.Handle_StepKinematics_PlanarCurvePair_Create()

def Handle_StepKinematics_PlanarCurvePair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_PlanarCurvePair_DownCast(t)

def Handle_StepKinematics_PlanarCurvePair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_PlanarCurvePair_IsNull(t)

def Handle_StepKinematics_PlanarPair_Create():
    return _StepKinematics.Handle_StepKinematics_PlanarPair_Create()

def Handle_StepKinematics_PlanarPair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_PlanarPair_DownCast(t)

def Handle_StepKinematics_PlanarPair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_PlanarPair_IsNull(t)

def Handle_StepKinematics_PointOnPlanarCurvePair_Create():
    return _StepKinematics.Handle_StepKinematics_PointOnPlanarCurvePair_Create()

def Handle_StepKinematics_PointOnPlanarCurvePair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_PointOnPlanarCurvePair_DownCast(t)

def Handle_StepKinematics_PointOnPlanarCurvePair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_PointOnPlanarCurvePair_IsNull(t)

def Handle_StepKinematics_PointOnSurfacePair_Create():
    return _StepKinematics.Handle_StepKinematics_PointOnSurfacePair_Create()

def Handle_StepKinematics_PointOnSurfacePair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_PointOnSurfacePair_DownCast(t)

def Handle_StepKinematics_PointOnSurfacePair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_PointOnSurfacePair_IsNull(t)

def Handle_StepKinematics_PrismaticPair_Create():
    return _StepKinematics.Handle_StepKinematics_PrismaticPair_Create()

def Handle_StepKinematics_PrismaticPair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_PrismaticPair_DownCast(t)

def Handle_StepKinematics_PrismaticPair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_PrismaticPair_IsNull(t)

def Handle_StepKinematics_RackAndPinionPair_Create():
    return _StepKinematics.Handle_StepKinematics_RackAndPinionPair_Create()

def Handle_StepKinematics_RackAndPinionPair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_RackAndPinionPair_DownCast(t)

def Handle_StepKinematics_RackAndPinionPair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_RackAndPinionPair_IsNull(t)

def Handle_StepKinematics_RevolutePair_Create():
    return _StepKinematics.Handle_StepKinematics_RevolutePair_Create()

def Handle_StepKinematics_RevolutePair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_RevolutePair_DownCast(t)

def Handle_StepKinematics_RevolutePair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_RevolutePair_IsNull(t)

def Handle_StepKinematics_ScrewPair_Create():
    return _StepKinematics.Handle_StepKinematics_ScrewPair_Create()

def Handle_StepKinematics_ScrewPair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_ScrewPair_DownCast(t)

def Handle_StepKinematics_ScrewPair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_ScrewPair_IsNull(t)

def Handle_StepKinematics_SphericalPair_Create():
    return _StepKinematics.Handle_StepKinematics_SphericalPair_Create()

def Handle_StepKinematics_SphericalPair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_SphericalPair_DownCast(t)

def Handle_StepKinematics_SphericalPair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_SphericalPair_IsNull(t)

def Handle_StepKinematics_SphericalPairWithPin_Create():
    return _StepKinematics.Handle_StepKinematics_SphericalPairWithPin_Create()

def Handle_StepKinematics_SphericalPairWithPin_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_SphericalPairWithPin_DownCast(t)

def Handle_StepKinematics_SphericalPairWithPin_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_SphericalPairWithPin_IsNull(t)

def Handle_StepKinematics_SurfacePair_Create():
    return _StepKinematics.Handle_StepKinematics_SurfacePair_Create()

def Handle_StepKinematics_SurfacePair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_SurfacePair_DownCast(t)

def Handle_StepKinematics_SurfacePair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_SurfacePair_IsNull(t)

def Handle_StepKinematics_UnconstrainedPair_Create():
    return _StepKinematics.Handle_StepKinematics_UnconstrainedPair_Create()

def Handle_StepKinematics_UnconstrainedPair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_UnconstrainedPair_DownCast(t)

def Handle_StepKinematics_UnconstrainedPair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_UnconstrainedPair_IsNull(t)

def Handle_StepKinematics_UniversalPair_Create():
    return _StepKinematics.Handle_StepKinematics_UniversalPair_Create()

def Handle_StepKinematics_UniversalPair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_UniversalPair_DownCast(t)

def Handle_StepKinematics_UniversalPair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_UniversalPair_IsNull(t)

def Handle_StepKinematics_CylindricalPairWithRange_Create():
    return _StepKinematics.Handle_StepKinematics_CylindricalPairWithRange_Create()

def Handle_StepKinematics_CylindricalPairWithRange_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_CylindricalPairWithRange_DownCast(t)

def Handle_StepKinematics_CylindricalPairWithRange_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_CylindricalPairWithRange_IsNull(t)

def Handle_StepKinematics_GearPairWithRange_Create():
    return _StepKinematics.Handle_StepKinematics_GearPairWithRange_Create()

def Handle_StepKinematics_GearPairWithRange_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_GearPairWithRange_DownCast(t)

def Handle_StepKinematics_GearPairWithRange_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_GearPairWithRange_IsNull(t)

def Handle_StepKinematics_HomokineticPair_Create():
    return _StepKinematics.Handle_StepKinematics_HomokineticPair_Create()

def Handle_StepKinematics_HomokineticPair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_HomokineticPair_DownCast(t)

def Handle_StepKinematics_HomokineticPair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_HomokineticPair_IsNull(t)

def Handle_StepKinematics_PlanarCurvePairRange_Create():
    return _StepKinematics.Handle_StepKinematics_PlanarCurvePairRange_Create()

def Handle_StepKinematics_PlanarCurvePairRange_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_PlanarCurvePairRange_DownCast(t)

def Handle_StepKinematics_PlanarCurvePairRange_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_PlanarCurvePairRange_IsNull(t)

def Handle_StepKinematics_PlanarPairWithRange_Create():
    return _StepKinematics.Handle_StepKinematics_PlanarPairWithRange_Create()

def Handle_StepKinematics_PlanarPairWithRange_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_PlanarPairWithRange_DownCast(t)

def Handle_StepKinematics_PlanarPairWithRange_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_PlanarPairWithRange_IsNull(t)

def Handle_StepKinematics_PointOnPlanarCurvePairWithRange_Create():
    return _StepKinematics.Handle_StepKinematics_PointOnPlanarCurvePairWithRange_Create()

def Handle_StepKinematics_PointOnPlanarCurvePairWithRange_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_PointOnPlanarCurvePairWithRange_DownCast(t)

def Handle_StepKinematics_PointOnPlanarCurvePairWithRange_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_PointOnPlanarCurvePairWithRange_IsNull(t)

def Handle_StepKinematics_PointOnSurfacePairWithRange_Create():
    return _StepKinematics.Handle_StepKinematics_PointOnSurfacePairWithRange_Create()

def Handle_StepKinematics_PointOnSurfacePairWithRange_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_PointOnSurfacePairWithRange_DownCast(t)

def Handle_StepKinematics_PointOnSurfacePairWithRange_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_PointOnSurfacePairWithRange_IsNull(t)

def Handle_StepKinematics_PrismaticPairWithRange_Create():
    return _StepKinematics.Handle_StepKinematics_PrismaticPairWithRange_Create()

def Handle_StepKinematics_PrismaticPairWithRange_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_PrismaticPairWithRange_DownCast(t)

def Handle_StepKinematics_PrismaticPairWithRange_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_PrismaticPairWithRange_IsNull(t)

def Handle_StepKinematics_RackAndPinionPairWithRange_Create():
    return _StepKinematics.Handle_StepKinematics_RackAndPinionPairWithRange_Create()

def Handle_StepKinematics_RackAndPinionPairWithRange_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_RackAndPinionPairWithRange_DownCast(t)

def Handle_StepKinematics_RackAndPinionPairWithRange_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_RackAndPinionPairWithRange_IsNull(t)

def Handle_StepKinematics_RevolutePairWithRange_Create():
    return _StepKinematics.Handle_StepKinematics_RevolutePairWithRange_Create()

def Handle_StepKinematics_RevolutePairWithRange_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_RevolutePairWithRange_DownCast(t)

def Handle_StepKinematics_RevolutePairWithRange_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_RevolutePairWithRange_IsNull(t)

def Handle_StepKinematics_RollingCurvePair_Create():
    return _StepKinematics.Handle_StepKinematics_RollingCurvePair_Create()

def Handle_StepKinematics_RollingCurvePair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_RollingCurvePair_DownCast(t)

def Handle_StepKinematics_RollingCurvePair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_RollingCurvePair_IsNull(t)

def Handle_StepKinematics_RollingSurfacePair_Create():
    return _StepKinematics.Handle_StepKinematics_RollingSurfacePair_Create()

def Handle_StepKinematics_RollingSurfacePair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_RollingSurfacePair_DownCast(t)

def Handle_StepKinematics_RollingSurfacePair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_RollingSurfacePair_IsNull(t)

def Handle_StepKinematics_ScrewPairWithRange_Create():
    return _StepKinematics.Handle_StepKinematics_ScrewPairWithRange_Create()

def Handle_StepKinematics_ScrewPairWithRange_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_ScrewPairWithRange_DownCast(t)

def Handle_StepKinematics_ScrewPairWithRange_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_ScrewPairWithRange_IsNull(t)

def Handle_StepKinematics_SlidingCurvePair_Create():
    return _StepKinematics.Handle_StepKinematics_SlidingCurvePair_Create()

def Handle_StepKinematics_SlidingCurvePair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_SlidingCurvePair_DownCast(t)

def Handle_StepKinematics_SlidingCurvePair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_SlidingCurvePair_IsNull(t)

def Handle_StepKinematics_SlidingSurfacePair_Create():
    return _StepKinematics.Handle_StepKinematics_SlidingSurfacePair_Create()

def Handle_StepKinematics_SlidingSurfacePair_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_SlidingSurfacePair_DownCast(t)

def Handle_StepKinematics_SlidingSurfacePair_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_SlidingSurfacePair_IsNull(t)

def Handle_StepKinematics_SphericalPairWithPinAndRange_Create():
    return _StepKinematics.Handle_StepKinematics_SphericalPairWithPinAndRange_Create()

def Handle_StepKinematics_SphericalPairWithPinAndRange_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_SphericalPairWithPinAndRange_DownCast(t)

def Handle_StepKinematics_SphericalPairWithPinAndRange_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_SphericalPairWithPinAndRange_IsNull(t)

def Handle_StepKinematics_SphericalPairWithRange_Create():
    return _StepKinematics.Handle_StepKinematics_SphericalPairWithRange_Create()

def Handle_StepKinematics_SphericalPairWithRange_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_SphericalPairWithRange_DownCast(t)

def Handle_StepKinematics_SphericalPairWithRange_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_SphericalPairWithRange_IsNull(t)

def Handle_StepKinematics_SurfacePairWithRange_Create():
    return _StepKinematics.Handle_StepKinematics_SurfacePairWithRange_Create()

def Handle_StepKinematics_SurfacePairWithRange_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_SurfacePairWithRange_DownCast(t)

def Handle_StepKinematics_SurfacePairWithRange_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_SurfacePairWithRange_IsNull(t)

def Handle_StepKinematics_UniversalPairWithRange_Create():
    return _StepKinematics.Handle_StepKinematics_UniversalPairWithRange_Create()

def Handle_StepKinematics_UniversalPairWithRange_DownCast(t):
    return _StepKinematics.Handle_StepKinematics_UniversalPairWithRange_DownCast(t)

def Handle_StepKinematics_UniversalPairWithRange_IsNull(t):
    return _StepKinematics.Handle_StepKinematics_UniversalPairWithRange_IsNull(t)
class StepKinematics_ContextDependentKinematicLinkRepresentation(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_ContextDependentKinematicLinkRepresentation_swiginit(self, _StepKinematics.new_StepKinematics_ContextDependentKinematicLinkRepresentation(*args))

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationRelation: StepKinematics_KinematicLinkRepresentationAssociation
        theRepresentedProductRelation: StepKinematics_ProductDefinitionRelationshipKinematics

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_ContextDependentKinematicLinkRepresentation_Init(self, *args)

    def RepresentationRelation(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepKinematics_KinematicLinkRepresentationAssociation>

        Description
        -----------
        Returns field representationrelation.

        """
        return _StepKinematics.StepKinematics_ContextDependentKinematicLinkRepresentation_RepresentationRelation(self, *args)

    def RepresentedProductRelation(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepKinematics_ProductDefinitionRelationshipKinematics>

        Description
        -----------
        Returns field representedproductrelation.

        """
        return _StepKinematics.StepKinematics_ContextDependentKinematicLinkRepresentation_RepresentedProductRelation(self, *args)

    def SetRepresentationRelation(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationRelation: StepKinematics_KinematicLinkRepresentationAssociation

        Return
        -------
        None

        Description
        -----------
        Sets field representationrelation.

        """
        return _StepKinematics.StepKinematics_ContextDependentKinematicLinkRepresentation_SetRepresentationRelation(self, *args)

    def SetRepresentedProductRelation(self, *args):
        r"""

        Parameters
        ----------
        theRepresentedProductRelation: StepKinematics_ProductDefinitionRelationshipKinematics

        Return
        -------
        None

        Description
        -----------
        Sets field representedproductrelation.

        """
        return _StepKinematics.StepKinematics_ContextDependentKinematicLinkRepresentation_SetRepresentedProductRelation(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_ContextDependentKinematicLinkRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_ContextDependentKinematicLinkRepresentation

# Register StepKinematics_ContextDependentKinematicLinkRepresentation in _StepKinematics:
_StepKinematics.StepKinematics_ContextDependentKinematicLinkRepresentation_swigregister(StepKinematics_ContextDependentKinematicLinkRepresentation)
class StepKinematics_KinematicJoint(OCC.Core.StepShape.StepShape_Edge):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_KinematicJoint_swiginit(self, _StepKinematics.new_StepKinematics_KinematicJoint(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_KinematicJoint_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_KinematicJoint

# Register StepKinematics_KinematicJoint in _StepKinematics:
_StepKinematics.StepKinematics_KinematicJoint_swigregister(StepKinematics_KinematicJoint)
class StepKinematics_KinematicLink(OCC.Core.StepShape.StepShape_Vertex):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_KinematicLink_swiginit(self, _StepKinematics.new_StepKinematics_KinematicLink(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_KinematicLink_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_KinematicLink

# Register StepKinematics_KinematicLink in _StepKinematics:
_StepKinematics.StepKinematics_KinematicLink_swigregister(StepKinematics_KinematicLink)
class StepKinematics_KinematicLinkRepresentation(OCC.Core.StepRepr.StepRepr_Representation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_KinematicLinkRepresentation_swiginit(self, _StepKinematics.new_StepKinematics_KinematicLinkRepresentation(*args))

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentation_Name: TCollection_HAsciiString
        theRepresentation_Items: StepRepr_HArray1OfRepresentationItem
        theRepresentation_ContextOfItems: StepRepr_RepresentationContext
        theRepresentedLink: StepKinematics_KinematicLink

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_KinematicLinkRepresentation_Init(self, *args)

    def RepresentedLink(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepKinematics_KinematicLink>

        Description
        -----------
        Returns field representedlink.

        """
        return _StepKinematics.StepKinematics_KinematicLinkRepresentation_RepresentedLink(self, *args)

    def SetRepresentedLink(self, *args):
        r"""

        Parameters
        ----------
        theRepresentedLink: StepKinematics_KinematicLink

        Return
        -------
        None

        Description
        -----------
        Sets field representedlink.

        """
        return _StepKinematics.StepKinematics_KinematicLinkRepresentation_SetRepresentedLink(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_KinematicLinkRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_KinematicLinkRepresentation

# Register StepKinematics_KinematicLinkRepresentation in _StepKinematics:
_StepKinematics.StepKinematics_KinematicLinkRepresentation_swigregister(StepKinematics_KinematicLinkRepresentation)
class StepKinematics_KinematicLinkRepresentationAssociation(OCC.Core.StepRepr.StepRepr_RepresentationRelationship):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_KinematicLinkRepresentationAssociation_swiginit(self, _StepKinematics.new_StepKinematics_KinematicLinkRepresentationAssociation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_KinematicLinkRepresentationAssociation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_KinematicLinkRepresentationAssociation

# Register StepKinematics_KinematicLinkRepresentationAssociation in _StepKinematics:
_StepKinematics.StepKinematics_KinematicLinkRepresentationAssociation_swigregister(StepKinematics_KinematicLinkRepresentationAssociation)
class StepKinematics_KinematicPair(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_KinematicPair_swiginit(self, _StepKinematics.new_StepKinematics_KinematicPair(*args))

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theJoint: StepKinematics_KinematicJoint

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_KinematicPair_Init(self, *args)

    def ItemDefinedTransformation(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepRepr_ItemDefinedTransformation>

        Description
        -----------
        Returns data for supertype itemdefinedtransformation.

        """
        return _StepKinematics.StepKinematics_KinematicPair_ItemDefinedTransformation(self, *args)

    def Joint(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepKinematics_KinematicJoint>

        Description
        -----------
        Returns field joint.

        """
        return _StepKinematics.StepKinematics_KinematicPair_Joint(self, *args)

    def SetItemDefinedTransformation(self, *args):
        r"""

        Parameters
        ----------
        theItemDefinedTransformation: StepRepr_ItemDefinedTransformation

        Return
        -------
        None

        Description
        -----------
        Sets data for supertype itemdefinedtransformation.

        """
        return _StepKinematics.StepKinematics_KinematicPair_SetItemDefinedTransformation(self, *args)

    def SetJoint(self, *args):
        r"""

        Parameters
        ----------
        theJoint: StepKinematics_KinematicJoint

        Return
        -------
        None

        Description
        -----------
        Sets field joint.

        """
        return _StepKinematics.StepKinematics_KinematicPair_SetJoint(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_KinematicPair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_KinematicPair

# Register StepKinematics_KinematicPair in _StepKinematics:
_StepKinematics.StepKinematics_KinematicPair_swigregister(StepKinematics_KinematicPair)
class StepKinematics_KinematicPropertyDefinitionRepresentation(OCC.Core.StepRepr.StepRepr_PropertyDefinitionRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_KinematicPropertyDefinitionRepresentation_swiginit(self, _StepKinematics.new_StepKinematics_KinematicPropertyDefinitionRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_KinematicPropertyDefinitionRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_KinematicPropertyDefinitionRepresentation

# Register StepKinematics_KinematicPropertyDefinitionRepresentation in _StepKinematics:
_StepKinematics.StepKinematics_KinematicPropertyDefinitionRepresentation_swigregister(StepKinematics_KinematicPropertyDefinitionRepresentation)
class StepKinematics_KinematicTopologyDirectedStructure(OCC.Core.StepRepr.StepRepr_Representation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_KinematicTopologyDirectedStructure_swiginit(self, _StepKinematics.new_StepKinematics_KinematicTopologyDirectedStructure(*args))

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentation_Name: TCollection_HAsciiString
        theRepresentation_Items: StepRepr_HArray1OfRepresentationItem
        theRepresentation_ContextOfItems: StepRepr_RepresentationContext
        theParent: StepKinematics_KinematicTopologyStructure

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_KinematicTopologyDirectedStructure_Init(self, *args)

    def Parent(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepKinematics_KinematicTopologyStructure>

        Description
        -----------
        Returns field parent.

        """
        return _StepKinematics.StepKinematics_KinematicTopologyDirectedStructure_Parent(self, *args)

    def SetParent(self, *args):
        r"""

        Parameters
        ----------
        theParent: StepKinematics_KinematicTopologyStructure

        Return
        -------
        None

        Description
        -----------
        Sets field parent.

        """
        return _StepKinematics.StepKinematics_KinematicTopologyDirectedStructure_SetParent(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_KinematicTopologyDirectedStructure_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_KinematicTopologyDirectedStructure

# Register StepKinematics_KinematicTopologyDirectedStructure in _StepKinematics:
_StepKinematics.StepKinematics_KinematicTopologyDirectedStructure_swigregister(StepKinematics_KinematicTopologyDirectedStructure)
class StepKinematics_KinematicTopologyNetworkStructure(OCC.Core.StepRepr.StepRepr_Representation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_KinematicTopologyNetworkStructure_swiginit(self, _StepKinematics.new_StepKinematics_KinematicTopologyNetworkStructure(*args))

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentation_Name: TCollection_HAsciiString
        theRepresentation_Items: StepRepr_HArray1OfRepresentationItem
        theRepresentation_ContextOfItems: StepRepr_RepresentationContext
        theParent: StepKinematics_KinematicTopologyStructure

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_KinematicTopologyNetworkStructure_Init(self, *args)

    def Parent(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepKinematics_KinematicTopologyStructure>

        Description
        -----------
        Returns field parent.

        """
        return _StepKinematics.StepKinematics_KinematicTopologyNetworkStructure_Parent(self, *args)

    def SetParent(self, *args):
        r"""

        Parameters
        ----------
        theParent: StepKinematics_KinematicTopologyStructure

        Return
        -------
        None

        Description
        -----------
        Sets field parent.

        """
        return _StepKinematics.StepKinematics_KinematicTopologyNetworkStructure_SetParent(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_KinematicTopologyNetworkStructure_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_KinematicTopologyNetworkStructure

# Register StepKinematics_KinematicTopologyNetworkStructure in _StepKinematics:
_StepKinematics.StepKinematics_KinematicTopologyNetworkStructure_swigregister(StepKinematics_KinematicTopologyNetworkStructure)
class StepKinematics_KinematicTopologyRepresentationSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _StepKinematics.StepKinematics_KinematicTopologyRepresentationSelect_swiginit(self, _StepKinematics.new_StepKinematics_KinematicTopologyRepresentationSelect(*args))

    def KinematicTopologyDirectedStructure(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepKinematics_KinematicTopologyDirectedStructure>

        Description
        -----------
        Returns value as kinematictopologydirectedstructure (or null if another type).

        """
        return _StepKinematics.StepKinematics_KinematicTopologyRepresentationSelect_KinematicTopologyDirectedStructure(self, *args)

    def KinematicTopologyNetworkStructure(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepKinematics_KinematicTopologyNetworkStructure>

        Description
        -----------
        Returns value as kinematictopologynetworkstructure (or null if another type).

        """
        return _StepKinematics.StepKinematics_KinematicTopologyRepresentationSelect_KinematicTopologyNetworkStructure(self, *args)

    def KinematicTopologyStructure(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepKinematics_KinematicTopologyStructure>

        Description
        -----------
        Returns value as kinematictopologystructure (or null if another type).

        """
        return _StepKinematics.StepKinematics_KinematicTopologyRepresentationSelect_KinematicTopologyStructure(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_KinematicTopologyRepresentationSelect

# Register StepKinematics_KinematicTopologyRepresentationSelect in _StepKinematics:
_StepKinematics.StepKinematics_KinematicTopologyRepresentationSelect_swigregister(StepKinematics_KinematicTopologyRepresentationSelect)
class StepKinematics_KinematicTopologyStructure(OCC.Core.StepRepr.StepRepr_Representation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_KinematicTopologyStructure_swiginit(self, _StepKinematics.new_StepKinematics_KinematicTopologyStructure(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_KinematicTopologyStructure_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_KinematicTopologyStructure

# Register StepKinematics_KinematicTopologyStructure in _StepKinematics:
_StepKinematics.StepKinematics_KinematicTopologyStructure_swigregister(StepKinematics_KinematicTopologyStructure)
class StepKinematics_MechanismRepresentation(OCC.Core.StepRepr.StepRepr_Representation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_MechanismRepresentation_swiginit(self, _StepKinematics.new_StepKinematics_MechanismRepresentation(*args))

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentation_Name: TCollection_HAsciiString
        theRepresentation_Items: StepRepr_HArray1OfRepresentationItem
        theRepresentation_ContextOfItems: StepRepr_RepresentationContext
        theRepresentedTopology: StepKinematics_KinematicTopologyRepresentationSelect

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_MechanismRepresentation_Init(self, *args)

    def RepresentedTopology(self, *args):
        r"""
        Return
        -------
        StepKinematics_KinematicTopologyRepresentationSelect

        Description
        -----------
        Returns field representedtopology.

        """
        return _StepKinematics.StepKinematics_MechanismRepresentation_RepresentedTopology(self, *args)

    def SetRepresentedTopology(self, *args):
        r"""

        Parameters
        ----------
        theRepresentedTopology: StepKinematics_KinematicTopologyRepresentationSelect

        Return
        -------
        None

        Description
        -----------
        Sets field representedtopology.

        """
        return _StepKinematics.StepKinematics_MechanismRepresentation_SetRepresentedTopology(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_MechanismRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_MechanismRepresentation

# Register StepKinematics_MechanismRepresentation in _StepKinematics:
_StepKinematics.StepKinematics_MechanismRepresentation_swigregister(StepKinematics_MechanismRepresentation)
class StepKinematics_MechanismStateRepresentation(OCC.Core.StepRepr.StepRepr_Representation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Returns a mechanismstaterepresentation.

        """
        _StepKinematics.StepKinematics_MechanismStateRepresentation_swiginit(self, _StepKinematics.new_StepKinematics_MechanismStateRepresentation(*args))

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theName: TCollection_HAsciiString
        theItems: StepRepr_HArray1OfRepresentationItem
        theContextOfItems: StepRepr_RepresentationContext
        theMechanism: StepKinematics_MechanismRepresentation

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _StepKinematics.StepKinematics_MechanismStateRepresentation_Init(self, *args)

    def Mechanism(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepKinematics_MechanismRepresentation>

        Description
        -----------
        No available documentation.

        """
        return _StepKinematics.StepKinematics_MechanismStateRepresentation_Mechanism(self, *args)

    def SetMechanism(self, *args):
        r"""

        Parameters
        ----------
        theMechanism: StepKinematics_MechanismRepresentation

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _StepKinematics.StepKinematics_MechanismStateRepresentation_SetMechanism(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_MechanismStateRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_MechanismStateRepresentation

# Register StepKinematics_MechanismStateRepresentation in _StepKinematics:
_StepKinematics.StepKinematics_MechanismStateRepresentation_swigregister(StepKinematics_MechanismStateRepresentation)
class StepKinematics_OrientedJoint(OCC.Core.StepShape.StepShape_OrientedEdge):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_OrientedJoint_swiginit(self, _StepKinematics.new_StepKinematics_OrientedJoint(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_OrientedJoint_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_OrientedJoint

# Register StepKinematics_OrientedJoint in _StepKinematics:
_StepKinematics.StepKinematics_OrientedJoint_swigregister(StepKinematics_OrientedJoint)
class StepKinematics_PairRepresentationRelationship(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_PairRepresentationRelationship_swiginit(self, _StepKinematics.new_StepKinematics_PairRepresentationRelationship(*args))

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theRepresentationRelationship_Name: TCollection_HAsciiString
        hasRepresentationRelationship_Description: bool
        theRepresentationRelationship_Description: TCollection_HAsciiString
        theRepresentationRelationship_Rep1: StepRepr_RepresentationOrRepresentationReference
        theRepresentationRelationship_Rep2: StepRepr_RepresentationOrRepresentationReference
        theRepresentationRelationshipWithTransformation_TransformationOperator: StepRepr_Transformation

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_PairRepresentationRelationship_Init(self, *args)

    def RepresentationRelationshipWithTransformation(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepRepr_RepresentationRelationshipWithTransformation>

        Description
        -----------
        Returns data for supertype representationrelationshipwithtransformation.

        """
        return _StepKinematics.StepKinematics_PairRepresentationRelationship_RepresentationRelationshipWithTransformation(self, *args)

    def SetRepresentationRelationshipWithTransformation(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationRelationshipWithTransformation: StepRepr_RepresentationRelationshipWithTransformation

        Return
        -------
        None

        Description
        -----------
        Sets data for supertype representationrelationshipwithtransformation.

        """
        return _StepKinematics.StepKinematics_PairRepresentationRelationship_SetRepresentationRelationshipWithTransformation(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_PairRepresentationRelationship_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_PairRepresentationRelationship

# Register StepKinematics_PairRepresentationRelationship in _StepKinematics:
_StepKinematics.StepKinematics_PairRepresentationRelationship_swigregister(StepKinematics_PairRepresentationRelationship)
class StepKinematics_PairValue(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_PairValue_swiginit(self, _StepKinematics.new_StepKinematics_PairValue(*args))

    def AppliesToPair(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepKinematics_KinematicPair>

        Description
        -----------
        Returns field appliestopair.

        """
        return _StepKinematics.StepKinematics_PairValue_AppliesToPair(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theAppliesToPair: StepKinematics_KinematicPair

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_PairValue_Init(self, *args)

    def SetAppliesToPair(self, *args):
        r"""

        Parameters
        ----------
        theAppliesToPair: StepKinematics_KinematicPair

        Return
        -------
        None

        Description
        -----------
        Sets field appliestopair.

        """
        return _StepKinematics.StepKinematics_PairValue_SetAppliesToPair(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_PairValue_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_PairValue

# Register StepKinematics_PairValue in _StepKinematics:
_StepKinematics.StepKinematics_PairValue_swigregister(StepKinematics_PairValue)
class StepKinematics_ProductDefinitionKinematics(OCC.Core.StepRepr.StepRepr_PropertyDefinition):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_ProductDefinitionKinematics_swiginit(self, _StepKinematics.new_StepKinematics_ProductDefinitionKinematics(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_ProductDefinitionKinematics_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_ProductDefinitionKinematics

# Register StepKinematics_ProductDefinitionKinematics in _StepKinematics:
_StepKinematics.StepKinematics_ProductDefinitionKinematics_swigregister(StepKinematics_ProductDefinitionKinematics)
class StepKinematics_ProductDefinitionRelationshipKinematics(OCC.Core.StepRepr.StepRepr_PropertyDefinition):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_ProductDefinitionRelationshipKinematics_swiginit(self, _StepKinematics.new_StepKinematics_ProductDefinitionRelationshipKinematics(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_ProductDefinitionRelationshipKinematics_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_ProductDefinitionRelationshipKinematics

# Register StepKinematics_ProductDefinitionRelationshipKinematics in _StepKinematics:
_StepKinematics.StepKinematics_ProductDefinitionRelationshipKinematics_swigregister(StepKinematics_ProductDefinitionRelationshipKinematics)
class StepKinematics_RigidPlacement(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _StepKinematics.StepKinematics_RigidPlacement_swiginit(self, _StepKinematics.new_StepKinematics_RigidPlacement(*args))

    def Axis2Placement3d(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Axis2Placement3d>

        Description
        -----------
        Returns value as axis2placement3d (or null if another type).

        """
        return _StepKinematics.StepKinematics_RigidPlacement_Axis2Placement3d(self, *args)

    def SuParameters(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_SuParameters>

        Description
        -----------
        Returns value as suparameters (or null if another type).

        """
        return _StepKinematics.StepKinematics_RigidPlacement_SuParameters(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_RigidPlacement

# Register StepKinematics_RigidPlacement in _StepKinematics:
_StepKinematics.StepKinematics_RigidPlacement_swigregister(StepKinematics_RigidPlacement)
class StepKinematics_RotationAboutDirection(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_RotationAboutDirection_swiginit(self, _StepKinematics.new_StepKinematics_RotationAboutDirection(*args))

    def DirectionOfAxis(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Direction>

        Description
        -----------
        Returns field directionofaxis.

        """
        return _StepKinematics.StepKinematics_RotationAboutDirection_DirectionOfAxis(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theDirectionOfAxis: StepGeom_Direction
        theRotationAngle: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_RotationAboutDirection_Init(self, *args)

    def RotationAngle(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field rotationangle.

        """
        return _StepKinematics.StepKinematics_RotationAboutDirection_RotationAngle(self, *args)

    def SetDirectionOfAxis(self, *args):
        r"""

        Parameters
        ----------
        theDirectionOfAxis: StepGeom_Direction

        Return
        -------
        None

        Description
        -----------
        Sets field directionofaxis.

        """
        return _StepKinematics.StepKinematics_RotationAboutDirection_SetDirectionOfAxis(self, *args)

    def SetRotationAngle(self, *args):
        r"""

        Parameters
        ----------
        theRotationAngle: float

        Return
        -------
        None

        Description
        -----------
        Sets field rotationangle.

        """
        return _StepKinematics.StepKinematics_RotationAboutDirection_SetRotationAngle(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_RotationAboutDirection_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_RotationAboutDirection

# Register StepKinematics_RotationAboutDirection in _StepKinematics:
_StepKinematics.StepKinematics_RotationAboutDirection_swigregister(StepKinematics_RotationAboutDirection)
class StepKinematics_SpatialRotation(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _StepKinematics.StepKinematics_SpatialRotation_swiginit(self, _StepKinematics.new_StepKinematics_SpatialRotation(*args))

    def RotationAboutDirection(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepKinematics_RotationAboutDirection>

        Description
        -----------
        Returns value as rotationaboutdirection (or null if another type).

        """
        return _StepKinematics.StepKinematics_SpatialRotation_RotationAboutDirection(self, *args)

    def YprRotation(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TColStd_HArray1OfReal>

        Description
        -----------
        Returns value as yprrotation (or null if another type).

        """
        return _StepKinematics.StepKinematics_SpatialRotation_YprRotation(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_SpatialRotation

# Register StepKinematics_SpatialRotation in _StepKinematics:
_StepKinematics.StepKinematics_SpatialRotation_swigregister(StepKinematics_SpatialRotation)
class StepKinematics_SphericalPairSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _StepKinematics.StepKinematics_SphericalPairSelect_swiginit(self, _StepKinematics.new_StepKinematics_SphericalPairSelect(*args))

    def SphericalPair(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepKinematics_SphericalPair>

        Description
        -----------
        Returns value as sphericalpair (or null if another type).

        """
        return _StepKinematics.StepKinematics_SphericalPairSelect_SphericalPair(self, *args)

    def SphericalPairWithPin(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepKinematics_SphericalPairWithPin>

        Description
        -----------
        Returns value as sphericalpairwithpin (or null if another type).

        """
        return _StepKinematics.StepKinematics_SphericalPairSelect_SphericalPairWithPin(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_SphericalPairSelect

# Register StepKinematics_SphericalPairSelect in _StepKinematics:
_StepKinematics.StepKinematics_SphericalPairSelect_swigregister(StepKinematics_SphericalPairSelect)
class StepKinematics_ActuatedKinPairAndOrderKinPair(StepKinematics_KinematicPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_ActuatedKinPairAndOrderKinPair_swiginit(self, _StepKinematics.new_StepKinematics_ActuatedKinPairAndOrderKinPair(*args))

    def GetActuatedKinematicPair(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepKinematics_ActuatedKinematicPair>

        Description
        -----------
        No available documentation.

        """
        return _StepKinematics.StepKinematics_ActuatedKinPairAndOrderKinPair_GetActuatedKinematicPair(self, *args)

    def GetOrderKinematicPair(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepKinematics_KinematicPair>

        Description
        -----------
        No available documentation.

        """
        return _StepKinematics.StepKinematics_ActuatedKinPairAndOrderKinPair_GetOrderKinematicPair(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theJoint: StepKinematics_KinematicJoint
        theActuatedKinematicPair: StepKinematics_ActuatedKinematicPair
        theOrderKinematicPair: StepKinematics_KinematicPair

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _StepKinematics.StepKinematics_ActuatedKinPairAndOrderKinPair_Init(self, *args)

    def SetActuatedKinematicPair(self, *args):
        r"""

        Parameters
        ----------
        aKP: StepKinematics_ActuatedKinematicPair

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _StepKinematics.StepKinematics_ActuatedKinPairAndOrderKinPair_SetActuatedKinematicPair(self, *args)

    def SetOrderKinematicPair(self, *args):
        r"""

        Parameters
        ----------
        aKP: StepKinematics_KinematicPair

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _StepKinematics.StepKinematics_ActuatedKinPairAndOrderKinPair_SetOrderKinematicPair(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_ActuatedKinPairAndOrderKinPair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_ActuatedKinPairAndOrderKinPair

# Register StepKinematics_ActuatedKinPairAndOrderKinPair in _StepKinematics:
_StepKinematics.StepKinematics_ActuatedKinPairAndOrderKinPair_swigregister(StepKinematics_ActuatedKinPairAndOrderKinPair)
class StepKinematics_ActuatedKinematicPair(StepKinematics_KinematicPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_ActuatedKinematicPair_swiginit(self, _StepKinematics.new_StepKinematics_ActuatedKinematicPair(*args))

    def HasRX(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field rx is defined.

        """
        return _StepKinematics.StepKinematics_ActuatedKinematicPair_HasRX(self, *args)

    def HasRY(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field ry is defined.

        """
        return _StepKinematics.StepKinematics_ActuatedKinematicPair_HasRY(self, *args)

    def HasRZ(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field rz is defined.

        """
        return _StepKinematics.StepKinematics_ActuatedKinematicPair_HasRZ(self, *args)

    def HasTX(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field tx is defined.

        """
        return _StepKinematics.StepKinematics_ActuatedKinematicPair_HasTX(self, *args)

    def HasTY(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field ty is defined.

        """
        return _StepKinematics.StepKinematics_ActuatedKinematicPair_HasTY(self, *args)

    def HasTZ(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field tz is defined.

        """
        return _StepKinematics.StepKinematics_ActuatedKinematicPair_HasTZ(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        hasTX: bool
        theTX: StepKinematics_ActuatedDirection
        hasTY: bool
        theTY: StepKinematics_ActuatedDirection
        hasTZ: bool
        theTZ: StepKinematics_ActuatedDirection
        hasRX: bool
        theRX: StepKinematics_ActuatedDirection
        hasRY: bool
        theRY: StepKinematics_ActuatedDirection
        hasRZ: bool
        theRZ: StepKinematics_ActuatedDirection

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_ActuatedKinematicPair_Init(self, *args)

    def RX(self, *args):
        r"""
        Return
        -------
        StepKinematics_ActuatedDirection

        Description
        -----------
        Returns field rx.

        """
        return _StepKinematics.StepKinematics_ActuatedKinematicPair_RX(self, *args)

    def RY(self, *args):
        r"""
        Return
        -------
        StepKinematics_ActuatedDirection

        Description
        -----------
        Returns field ry.

        """
        return _StepKinematics.StepKinematics_ActuatedKinematicPair_RY(self, *args)

    def RZ(self, *args):
        r"""
        Return
        -------
        StepKinematics_ActuatedDirection

        Description
        -----------
        Returns field rz.

        """
        return _StepKinematics.StepKinematics_ActuatedKinematicPair_RZ(self, *args)

    def SetRX(self, *args):
        r"""

        Parameters
        ----------
        theRX: StepKinematics_ActuatedDirection

        Return
        -------
        None

        Description
        -----------
        Sets field rx.

        """
        return _StepKinematics.StepKinematics_ActuatedKinematicPair_SetRX(self, *args)

    def SetRY(self, *args):
        r"""

        Parameters
        ----------
        theRY: StepKinematics_ActuatedDirection

        Return
        -------
        None

        Description
        -----------
        Sets field ry.

        """
        return _StepKinematics.StepKinematics_ActuatedKinematicPair_SetRY(self, *args)

    def SetRZ(self, *args):
        r"""

        Parameters
        ----------
        theRZ: StepKinematics_ActuatedDirection

        Return
        -------
        None

        Description
        -----------
        Sets field rz.

        """
        return _StepKinematics.StepKinematics_ActuatedKinematicPair_SetRZ(self, *args)

    def SetTX(self, *args):
        r"""

        Parameters
        ----------
        theTX: StepKinematics_ActuatedDirection

        Return
        -------
        None

        Description
        -----------
        Sets field tx.

        """
        return _StepKinematics.StepKinematics_ActuatedKinematicPair_SetTX(self, *args)

    def SetTY(self, *args):
        r"""

        Parameters
        ----------
        theTY: StepKinematics_ActuatedDirection

        Return
        -------
        None

        Description
        -----------
        Sets field ty.

        """
        return _StepKinematics.StepKinematics_ActuatedKinematicPair_SetTY(self, *args)

    def SetTZ(self, *args):
        r"""

        Parameters
        ----------
        theTZ: StepKinematics_ActuatedDirection

        Return
        -------
        None

        Description
        -----------
        Sets field tz.

        """
        return _StepKinematics.StepKinematics_ActuatedKinematicPair_SetTZ(self, *args)

    def TX(self, *args):
        r"""
        Return
        -------
        StepKinematics_ActuatedDirection

        Description
        -----------
        Returns field tx.

        """
        return _StepKinematics.StepKinematics_ActuatedKinematicPair_TX(self, *args)

    def TY(self, *args):
        r"""
        Return
        -------
        StepKinematics_ActuatedDirection

        Description
        -----------
        Returns field ty.

        """
        return _StepKinematics.StepKinematics_ActuatedKinematicPair_TY(self, *args)

    def TZ(self, *args):
        r"""
        Return
        -------
        StepKinematics_ActuatedDirection

        Description
        -----------
        Returns field tz.

        """
        return _StepKinematics.StepKinematics_ActuatedKinematicPair_TZ(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_ActuatedKinematicPair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_ActuatedKinematicPair

# Register StepKinematics_ActuatedKinematicPair in _StepKinematics:
_StepKinematics.StepKinematics_ActuatedKinematicPair_swigregister(StepKinematics_ActuatedKinematicPair)
class StepKinematics_CylindricalPairValue(StepKinematics_PairValue):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_CylindricalPairValue_swiginit(self, _StepKinematics.new_StepKinematics_CylindricalPairValue(*args))

    def ActualRotation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field actualrotation.

        """
        return _StepKinematics.StepKinematics_CylindricalPairValue_ActualRotation(self, *args)

    def ActualTranslation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field actualtranslation.

        """
        return _StepKinematics.StepKinematics_CylindricalPairValue_ActualTranslation(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        thePairValue_AppliesToPair: StepKinematics_KinematicPair
        theActualTranslation: float
        theActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_CylindricalPairValue_Init(self, *args)

    def SetActualRotation(self, *args):
        r"""

        Parameters
        ----------
        theActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Sets field actualrotation.

        """
        return _StepKinematics.StepKinematics_CylindricalPairValue_SetActualRotation(self, *args)

    def SetActualTranslation(self, *args):
        r"""

        Parameters
        ----------
        theActualTranslation: float

        Return
        -------
        None

        Description
        -----------
        Sets field actualtranslation.

        """
        return _StepKinematics.StepKinematics_CylindricalPairValue_SetActualTranslation(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_CylindricalPairValue_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_CylindricalPairValue

# Register StepKinematics_CylindricalPairValue in _StepKinematics:
_StepKinematics.StepKinematics_CylindricalPairValue_swigregister(StepKinematics_CylindricalPairValue)
class StepKinematics_GearPairValue(StepKinematics_PairValue):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_GearPairValue_swiginit(self, _StepKinematics.new_StepKinematics_GearPairValue(*args))

    def ActualRotation1(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field actualrotation1.

        """
        return _StepKinematics.StepKinematics_GearPairValue_ActualRotation1(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        thePairValue_AppliesToPair: StepKinematics_KinematicPair
        theActualRotation1: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_GearPairValue_Init(self, *args)

    def SetActualRotation1(self, *args):
        r"""

        Parameters
        ----------
        theActualRotation1: float

        Return
        -------
        None

        Description
        -----------
        Sets field actualrotation1.

        """
        return _StepKinematics.StepKinematics_GearPairValue_SetActualRotation1(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_GearPairValue_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_GearPairValue

# Register StepKinematics_GearPairValue in _StepKinematics:
_StepKinematics.StepKinematics_GearPairValue_swigregister(StepKinematics_GearPairValue)
class StepKinematics_HighOrderKinematicPair(StepKinematics_KinematicPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_HighOrderKinematicPair_swiginit(self, _StepKinematics.new_StepKinematics_HighOrderKinematicPair(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_HighOrderKinematicPair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_HighOrderKinematicPair

# Register StepKinematics_HighOrderKinematicPair in _StepKinematics:
_StepKinematics.StepKinematics_HighOrderKinematicPair_swigregister(StepKinematics_HighOrderKinematicPair)
class StepKinematics_KinematicPropertyMechanismRepresentation(StepKinematics_KinematicPropertyDefinitionRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_KinematicPropertyMechanismRepresentation_swiginit(self, _StepKinematics.new_StepKinematics_KinematicPropertyMechanismRepresentation(*args))

    def Base(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepKinematics_KinematicLinkRepresentation>

        Description
        -----------
        Returns field base.

        """
        return _StepKinematics.StepKinematics_KinematicPropertyMechanismRepresentation_Base(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        thePropertyDefinitionRepresentation_Definition: StepRepr_RepresentedDefinition
        thePropertyDefinitionRepresentation_UsedRepresentation: StepRepr_Representation
        theBase: StepKinematics_KinematicLinkRepresentation

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_KinematicPropertyMechanismRepresentation_Init(self, *args)

    def SetBase(self, *args):
        r"""

        Parameters
        ----------
        theBase: StepKinematics_KinematicLinkRepresentation

        Return
        -------
        None

        Description
        -----------
        Sets field base.

        """
        return _StepKinematics.StepKinematics_KinematicPropertyMechanismRepresentation_SetBase(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_KinematicPropertyMechanismRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_KinematicPropertyMechanismRepresentation

# Register StepKinematics_KinematicPropertyMechanismRepresentation in _StepKinematics:
_StepKinematics.StepKinematics_KinematicPropertyMechanismRepresentation_swigregister(StepKinematics_KinematicPropertyMechanismRepresentation)
class StepKinematics_LinearFlexibleLinkRepresentation(StepKinematics_KinematicLinkRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_LinearFlexibleLinkRepresentation_swiginit(self, _StepKinematics.new_StepKinematics_LinearFlexibleLinkRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_LinearFlexibleLinkRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_LinearFlexibleLinkRepresentation

# Register StepKinematics_LinearFlexibleLinkRepresentation in _StepKinematics:
_StepKinematics.StepKinematics_LinearFlexibleLinkRepresentation_swigregister(StepKinematics_LinearFlexibleLinkRepresentation)
class StepKinematics_LowOrderKinematicPair(StepKinematics_KinematicPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_LowOrderKinematicPair_swiginit(self, _StepKinematics.new_StepKinematics_LowOrderKinematicPair(*args))

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        theTX: bool
        theTY: bool
        theTZ: bool
        theRX: bool
        theRY: bool
        theRZ: bool

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPair_Init(self, *args)

    def RX(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns field rx.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPair_RX(self, *args)

    def RY(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns field ry.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPair_RY(self, *args)

    def RZ(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns field rz.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPair_RZ(self, *args)

    def SetRX(self, *args):
        r"""

        Parameters
        ----------
        theRX: bool

        Return
        -------
        None

        Description
        -----------
        Sets field rx.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPair_SetRX(self, *args)

    def SetRY(self, *args):
        r"""

        Parameters
        ----------
        theRY: bool

        Return
        -------
        None

        Description
        -----------
        Sets field ry.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPair_SetRY(self, *args)

    def SetRZ(self, *args):
        r"""

        Parameters
        ----------
        theRZ: bool

        Return
        -------
        None

        Description
        -----------
        Sets field rz.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPair_SetRZ(self, *args)

    def SetTX(self, *args):
        r"""

        Parameters
        ----------
        theTX: bool

        Return
        -------
        None

        Description
        -----------
        Sets field tx.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPair_SetTX(self, *args)

    def SetTY(self, *args):
        r"""

        Parameters
        ----------
        theTY: bool

        Return
        -------
        None

        Description
        -----------
        Sets field ty.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPair_SetTY(self, *args)

    def SetTZ(self, *args):
        r"""

        Parameters
        ----------
        theTZ: bool

        Return
        -------
        None

        Description
        -----------
        Sets field tz.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPair_SetTZ(self, *args)

    def TX(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns field tx.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPair_TX(self, *args)

    def TY(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns field ty.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPair_TY(self, *args)

    def TZ(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns field tz.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPair_TZ(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_LowOrderKinematicPair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_LowOrderKinematicPair

# Register StepKinematics_LowOrderKinematicPair in _StepKinematics:
_StepKinematics.StepKinematics_LowOrderKinematicPair_swigregister(StepKinematics_LowOrderKinematicPair)
class StepKinematics_LowOrderKinematicPairValue(StepKinematics_PairValue):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_LowOrderKinematicPairValue_swiginit(self, _StepKinematics.new_StepKinematics_LowOrderKinematicPairValue(*args))

    def ActualRotationX(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field actualrotationx.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairValue_ActualRotationX(self, *args)

    def ActualRotationY(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field actualrotationy.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairValue_ActualRotationY(self, *args)

    def ActualRotationZ(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field actualrotationz.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairValue_ActualRotationZ(self, *args)

    def ActualTranslationX(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field actualtranslationx.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairValue_ActualTranslationX(self, *args)

    def ActualTranslationY(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field actualtranslationy.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairValue_ActualTranslationY(self, *args)

    def ActualTranslationZ(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field actualtranslationz.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairValue_ActualTranslationZ(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        thePairValue_AppliesToPair: StepKinematics_KinematicPair
        theActualTranslationX: float
        theActualTranslationY: float
        theActualTranslationZ: float
        theActualRotationX: float
        theActualRotationY: float
        theActualRotationZ: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairValue_Init(self, *args)

    def SetActualRotationX(self, *args):
        r"""

        Parameters
        ----------
        theActualRotationX: float

        Return
        -------
        None

        Description
        -----------
        Sets field actualrotationx.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairValue_SetActualRotationX(self, *args)

    def SetActualRotationY(self, *args):
        r"""

        Parameters
        ----------
        theActualRotationY: float

        Return
        -------
        None

        Description
        -----------
        Sets field actualrotationy.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairValue_SetActualRotationY(self, *args)

    def SetActualRotationZ(self, *args):
        r"""

        Parameters
        ----------
        theActualRotationZ: float

        Return
        -------
        None

        Description
        -----------
        Sets field actualrotationz.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairValue_SetActualRotationZ(self, *args)

    def SetActualTranslationX(self, *args):
        r"""

        Parameters
        ----------
        theActualTranslationX: float

        Return
        -------
        None

        Description
        -----------
        Sets field actualtranslationx.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairValue_SetActualTranslationX(self, *args)

    def SetActualTranslationY(self, *args):
        r"""

        Parameters
        ----------
        theActualTranslationY: float

        Return
        -------
        None

        Description
        -----------
        Sets field actualtranslationy.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairValue_SetActualTranslationY(self, *args)

    def SetActualTranslationZ(self, *args):
        r"""

        Parameters
        ----------
        theActualTranslationZ: float

        Return
        -------
        None

        Description
        -----------
        Sets field actualtranslationz.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairValue_SetActualTranslationZ(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_LowOrderKinematicPairValue_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_LowOrderKinematicPairValue

# Register StepKinematics_LowOrderKinematicPairValue in _StepKinematics:
_StepKinematics.StepKinematics_LowOrderKinematicPairValue_swigregister(StepKinematics_LowOrderKinematicPairValue)
class StepKinematics_LowOrderKinematicPairWithMotionCoupling(StepKinematics_KinematicPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_LowOrderKinematicPairWithMotionCoupling_swiginit(self, _StepKinematics.new_StepKinematics_LowOrderKinematicPairWithMotionCoupling(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_LowOrderKinematicPairWithMotionCoupling_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_LowOrderKinematicPairWithMotionCoupling

# Register StepKinematics_LowOrderKinematicPairWithMotionCoupling in _StepKinematics:
_StepKinematics.StepKinematics_LowOrderKinematicPairWithMotionCoupling_swigregister(StepKinematics_LowOrderKinematicPairWithMotionCoupling)
class StepKinematics_PlanarPairValue(StepKinematics_PairValue):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_PlanarPairValue_swiginit(self, _StepKinematics.new_StepKinematics_PlanarPairValue(*args))

    def ActualRotation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field actualrotation.

        """
        return _StepKinematics.StepKinematics_PlanarPairValue_ActualRotation(self, *args)

    def ActualTranslationX(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field actualtranslationx.

        """
        return _StepKinematics.StepKinematics_PlanarPairValue_ActualTranslationX(self, *args)

    def ActualTranslationY(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field actualtranslationy.

        """
        return _StepKinematics.StepKinematics_PlanarPairValue_ActualTranslationY(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        thePairValue_AppliesToPair: StepKinematics_KinematicPair
        theActualRotation: float
        theActualTranslationX: float
        theActualTranslationY: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_PlanarPairValue_Init(self, *args)

    def SetActualRotation(self, *args):
        r"""

        Parameters
        ----------
        theActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Sets field actualrotation.

        """
        return _StepKinematics.StepKinematics_PlanarPairValue_SetActualRotation(self, *args)

    def SetActualTranslationX(self, *args):
        r"""

        Parameters
        ----------
        theActualTranslationX: float

        Return
        -------
        None

        Description
        -----------
        Sets field actualtranslationx.

        """
        return _StepKinematics.StepKinematics_PlanarPairValue_SetActualTranslationX(self, *args)

    def SetActualTranslationY(self, *args):
        r"""

        Parameters
        ----------
        theActualTranslationY: float

        Return
        -------
        None

        Description
        -----------
        Sets field actualtranslationy.

        """
        return _StepKinematics.StepKinematics_PlanarPairValue_SetActualTranslationY(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_PlanarPairValue_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_PlanarPairValue

# Register StepKinematics_PlanarPairValue in _StepKinematics:
_StepKinematics.StepKinematics_PlanarPairValue_swigregister(StepKinematics_PlanarPairValue)
class StepKinematics_PointOnPlanarCurvePairValue(StepKinematics_PairValue):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_PointOnPlanarCurvePairValue_swiginit(self, _StepKinematics.new_StepKinematics_PointOnPlanarCurvePairValue(*args))

    def ActualPointOnCurve(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_PointOnCurve>

        Description
        -----------
        Returns field actualpointoncurve.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairValue_ActualPointOnCurve(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        thePairValue_AppliesToPair: StepKinematics_KinematicPair
        theActualPointOnCurve: StepGeom_PointOnCurve
        theInputOrientation: StepKinematics_SpatialRotation

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairValue_Init(self, *args)

    def InputOrientation(self, *args):
        r"""
        Return
        -------
        StepKinematics_SpatialRotation

        Description
        -----------
        Returns field inputorientation.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairValue_InputOrientation(self, *args)

    def SetActualPointOnCurve(self, *args):
        r"""

        Parameters
        ----------
        theActualPointOnCurve: StepGeom_PointOnCurve

        Return
        -------
        None

        Description
        -----------
        Sets field actualpointoncurve.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairValue_SetActualPointOnCurve(self, *args)

    def SetInputOrientation(self, *args):
        r"""

        Parameters
        ----------
        theInputOrientation: StepKinematics_SpatialRotation

        Return
        -------
        None

        Description
        -----------
        Sets field inputorientation.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairValue_SetInputOrientation(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_PointOnPlanarCurvePairValue_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_PointOnPlanarCurvePairValue

# Register StepKinematics_PointOnPlanarCurvePairValue in _StepKinematics:
_StepKinematics.StepKinematics_PointOnPlanarCurvePairValue_swigregister(StepKinematics_PointOnPlanarCurvePairValue)
class StepKinematics_PointOnSurfacePairValue(StepKinematics_PairValue):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_PointOnSurfacePairValue_swiginit(self, _StepKinematics.new_StepKinematics_PointOnSurfacePairValue(*args))

    def ActualPointOnSurface(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_PointOnSurface>

        Description
        -----------
        Returns field actualpointonsurface.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairValue_ActualPointOnSurface(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        thePairValue_AppliesToPair: StepKinematics_KinematicPair
        theActualPointOnSurface: StepGeom_PointOnSurface
        theInputOrientation: StepKinematics_SpatialRotation

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairValue_Init(self, *args)

    def InputOrientation(self, *args):
        r"""
        Return
        -------
        StepKinematics_SpatialRotation

        Description
        -----------
        Returns field inputorientation.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairValue_InputOrientation(self, *args)

    def SetActualPointOnSurface(self, *args):
        r"""

        Parameters
        ----------
        theActualPointOnSurface: StepGeom_PointOnSurface

        Return
        -------
        None

        Description
        -----------
        Sets field actualpointonsurface.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairValue_SetActualPointOnSurface(self, *args)

    def SetInputOrientation(self, *args):
        r"""

        Parameters
        ----------
        theInputOrientation: StepKinematics_SpatialRotation

        Return
        -------
        None

        Description
        -----------
        Sets field inputorientation.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairValue_SetInputOrientation(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_PointOnSurfacePairValue_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_PointOnSurfacePairValue

# Register StepKinematics_PointOnSurfacePairValue in _StepKinematics:
_StepKinematics.StepKinematics_PointOnSurfacePairValue_swigregister(StepKinematics_PointOnSurfacePairValue)
class StepKinematics_PrismaticPairValue(StepKinematics_PairValue):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_PrismaticPairValue_swiginit(self, _StepKinematics.new_StepKinematics_PrismaticPairValue(*args))

    def ActualTranslation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field actualtranslation.

        """
        return _StepKinematics.StepKinematics_PrismaticPairValue_ActualTranslation(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        thePairValue_AppliesToPair: StepKinematics_KinematicPair
        theActualTranslation: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_PrismaticPairValue_Init(self, *args)

    def SetActualTranslation(self, *args):
        r"""

        Parameters
        ----------
        theActualTranslation: float

        Return
        -------
        None

        Description
        -----------
        Sets field actualtranslation.

        """
        return _StepKinematics.StepKinematics_PrismaticPairValue_SetActualTranslation(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_PrismaticPairValue_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_PrismaticPairValue

# Register StepKinematics_PrismaticPairValue in _StepKinematics:
_StepKinematics.StepKinematics_PrismaticPairValue_swigregister(StepKinematics_PrismaticPairValue)
class StepKinematics_RackAndPinionPairValue(StepKinematics_PairValue):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_RackAndPinionPairValue_swiginit(self, _StepKinematics.new_StepKinematics_RackAndPinionPairValue(*args))

    def ActualDisplacement(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field actualdisplacement.

        """
        return _StepKinematics.StepKinematics_RackAndPinionPairValue_ActualDisplacement(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        thePairValue_AppliesToPair: StepKinematics_KinematicPair
        theActualDisplacement: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_RackAndPinionPairValue_Init(self, *args)

    def SetActualDisplacement(self, *args):
        r"""

        Parameters
        ----------
        theActualDisplacement: float

        Return
        -------
        None

        Description
        -----------
        Sets field actualdisplacement.

        """
        return _StepKinematics.StepKinematics_RackAndPinionPairValue_SetActualDisplacement(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_RackAndPinionPairValue_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_RackAndPinionPairValue

# Register StepKinematics_RackAndPinionPairValue in _StepKinematics:
_StepKinematics.StepKinematics_RackAndPinionPairValue_swigregister(StepKinematics_RackAndPinionPairValue)
class StepKinematics_RevolutePairValue(StepKinematics_PairValue):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_RevolutePairValue_swiginit(self, _StepKinematics.new_StepKinematics_RevolutePairValue(*args))

    def ActualRotation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field actualrotation.

        """
        return _StepKinematics.StepKinematics_RevolutePairValue_ActualRotation(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        thePairValue_AppliesToPair: StepKinematics_KinematicPair
        theActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_RevolutePairValue_Init(self, *args)

    def SetActualRotation(self, *args):
        r"""

        Parameters
        ----------
        theActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Sets field actualrotation.

        """
        return _StepKinematics.StepKinematics_RevolutePairValue_SetActualRotation(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_RevolutePairValue_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_RevolutePairValue

# Register StepKinematics_RevolutePairValue in _StepKinematics:
_StepKinematics.StepKinematics_RevolutePairValue_swigregister(StepKinematics_RevolutePairValue)
class StepKinematics_RigidLinkRepresentation(StepKinematics_KinematicLinkRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_RigidLinkRepresentation_swiginit(self, _StepKinematics.new_StepKinematics_RigidLinkRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_RigidLinkRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_RigidLinkRepresentation

# Register StepKinematics_RigidLinkRepresentation in _StepKinematics:
_StepKinematics.StepKinematics_RigidLinkRepresentation_swigregister(StepKinematics_RigidLinkRepresentation)
class StepKinematics_RollingCurvePairValue(StepKinematics_PairValue):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_RollingCurvePairValue_swiginit(self, _StepKinematics.new_StepKinematics_RollingCurvePairValue(*args))

    def ActualPointOnCurve1(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_PointOnCurve>

        Description
        -----------
        Returns field actualpointoncurve1.

        """
        return _StepKinematics.StepKinematics_RollingCurvePairValue_ActualPointOnCurve1(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        thePairValue_AppliesToPair: StepKinematics_KinematicPair
        theActualPointOnCurve1: StepGeom_PointOnCurve

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_RollingCurvePairValue_Init(self, *args)

    def SetActualPointOnCurve1(self, *args):
        r"""

        Parameters
        ----------
        theActualPointOnCurve1: StepGeom_PointOnCurve

        Return
        -------
        None

        Description
        -----------
        Sets field actualpointoncurve1.

        """
        return _StepKinematics.StepKinematics_RollingCurvePairValue_SetActualPointOnCurve1(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_RollingCurvePairValue_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_RollingCurvePairValue

# Register StepKinematics_RollingCurvePairValue in _StepKinematics:
_StepKinematics.StepKinematics_RollingCurvePairValue_swigregister(StepKinematics_RollingCurvePairValue)
class StepKinematics_RollingSurfacePairValue(StepKinematics_PairValue):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_RollingSurfacePairValue_swiginit(self, _StepKinematics.new_StepKinematics_RollingSurfacePairValue(*args))

    def ActualPointOnSurface(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_PointOnSurface>

        Description
        -----------
        Returns field actualpointonsurface.

        """
        return _StepKinematics.StepKinematics_RollingSurfacePairValue_ActualPointOnSurface(self, *args)

    def ActualRotation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field actualrotation.

        """
        return _StepKinematics.StepKinematics_RollingSurfacePairValue_ActualRotation(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        thePairValue_AppliesToPair: StepKinematics_KinematicPair
        theActualPointOnSurface: StepGeom_PointOnSurface
        theActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_RollingSurfacePairValue_Init(self, *args)

    def SetActualPointOnSurface(self, *args):
        r"""

        Parameters
        ----------
        theActualPointOnSurface: StepGeom_PointOnSurface

        Return
        -------
        None

        Description
        -----------
        Sets field actualpointonsurface.

        """
        return _StepKinematics.StepKinematics_RollingSurfacePairValue_SetActualPointOnSurface(self, *args)

    def SetActualRotation(self, *args):
        r"""

        Parameters
        ----------
        theActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Sets field actualrotation.

        """
        return _StepKinematics.StepKinematics_RollingSurfacePairValue_SetActualRotation(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_RollingSurfacePairValue_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_RollingSurfacePairValue

# Register StepKinematics_RollingSurfacePairValue in _StepKinematics:
_StepKinematics.StepKinematics_RollingSurfacePairValue_swigregister(StepKinematics_RollingSurfacePairValue)
class StepKinematics_ScrewPairValue(StepKinematics_PairValue):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_ScrewPairValue_swiginit(self, _StepKinematics.new_StepKinematics_ScrewPairValue(*args))

    def ActualRotation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field actualrotation.

        """
        return _StepKinematics.StepKinematics_ScrewPairValue_ActualRotation(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        thePairValue_AppliesToPair: StepKinematics_KinematicPair
        theActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_ScrewPairValue_Init(self, *args)

    def SetActualRotation(self, *args):
        r"""

        Parameters
        ----------
        theActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Sets field actualrotation.

        """
        return _StepKinematics.StepKinematics_ScrewPairValue_SetActualRotation(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_ScrewPairValue_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_ScrewPairValue

# Register StepKinematics_ScrewPairValue in _StepKinematics:
_StepKinematics.StepKinematics_ScrewPairValue_swigregister(StepKinematics_ScrewPairValue)
class StepKinematics_SlidingCurvePairValue(StepKinematics_PairValue):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_SlidingCurvePairValue_swiginit(self, _StepKinematics.new_StepKinematics_SlidingCurvePairValue(*args))

    def ActualPointOnCurve1(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_PointOnCurve>

        Description
        -----------
        Returns field actualpointoncurve1.

        """
        return _StepKinematics.StepKinematics_SlidingCurvePairValue_ActualPointOnCurve1(self, *args)

    def ActualPointOnCurve2(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_PointOnCurve>

        Description
        -----------
        Returns field actualpointoncurve2.

        """
        return _StepKinematics.StepKinematics_SlidingCurvePairValue_ActualPointOnCurve2(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        thePairValue_AppliesToPair: StepKinematics_KinematicPair
        theActualPointOnCurve1: StepGeom_PointOnCurve
        theActualPointOnCurve2: StepGeom_PointOnCurve

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_SlidingCurvePairValue_Init(self, *args)

    def SetActualPointOnCurve1(self, *args):
        r"""

        Parameters
        ----------
        theActualPointOnCurve1: StepGeom_PointOnCurve

        Return
        -------
        None

        Description
        -----------
        Sets field actualpointoncurve1.

        """
        return _StepKinematics.StepKinematics_SlidingCurvePairValue_SetActualPointOnCurve1(self, *args)

    def SetActualPointOnCurve2(self, *args):
        r"""

        Parameters
        ----------
        theActualPointOnCurve2: StepGeom_PointOnCurve

        Return
        -------
        None

        Description
        -----------
        Sets field actualpointoncurve2.

        """
        return _StepKinematics.StepKinematics_SlidingCurvePairValue_SetActualPointOnCurve2(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_SlidingCurvePairValue_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_SlidingCurvePairValue

# Register StepKinematics_SlidingCurvePairValue in _StepKinematics:
_StepKinematics.StepKinematics_SlidingCurvePairValue_swigregister(StepKinematics_SlidingCurvePairValue)
class StepKinematics_SlidingSurfacePairValue(StepKinematics_PairValue):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_SlidingSurfacePairValue_swiginit(self, _StepKinematics.new_StepKinematics_SlidingSurfacePairValue(*args))

    def ActualPointOnSurface1(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_PointOnSurface>

        Description
        -----------
        Returns field actualpointonsurface1.

        """
        return _StepKinematics.StepKinematics_SlidingSurfacePairValue_ActualPointOnSurface1(self, *args)

    def ActualPointOnSurface2(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_PointOnSurface>

        Description
        -----------
        Returns field actualpointonsurface2.

        """
        return _StepKinematics.StepKinematics_SlidingSurfacePairValue_ActualPointOnSurface2(self, *args)

    def ActualRotation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field actualrotation.

        """
        return _StepKinematics.StepKinematics_SlidingSurfacePairValue_ActualRotation(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        thePairValue_AppliesToPair: StepKinematics_KinematicPair
        theActualPointOnSurface1: StepGeom_PointOnSurface
        theActualPointOnSurface2: StepGeom_PointOnSurface
        theActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_SlidingSurfacePairValue_Init(self, *args)

    def SetActualPointOnSurface1(self, *args):
        r"""

        Parameters
        ----------
        theActualPointOnSurface1: StepGeom_PointOnSurface

        Return
        -------
        None

        Description
        -----------
        Sets field actualpointonsurface1.

        """
        return _StepKinematics.StepKinematics_SlidingSurfacePairValue_SetActualPointOnSurface1(self, *args)

    def SetActualPointOnSurface2(self, *args):
        r"""

        Parameters
        ----------
        theActualPointOnSurface2: StepGeom_PointOnSurface

        Return
        -------
        None

        Description
        -----------
        Sets field actualpointonsurface2.

        """
        return _StepKinematics.StepKinematics_SlidingSurfacePairValue_SetActualPointOnSurface2(self, *args)

    def SetActualRotation(self, *args):
        r"""

        Parameters
        ----------
        theActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Sets field actualrotation.

        """
        return _StepKinematics.StepKinematics_SlidingSurfacePairValue_SetActualRotation(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_SlidingSurfacePairValue_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_SlidingSurfacePairValue

# Register StepKinematics_SlidingSurfacePairValue in _StepKinematics:
_StepKinematics.StepKinematics_SlidingSurfacePairValue_swigregister(StepKinematics_SlidingSurfacePairValue)
class StepKinematics_SphericalPairValue(StepKinematics_PairValue):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_SphericalPairValue_swiginit(self, _StepKinematics.new_StepKinematics_SphericalPairValue(*args))

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        thePairValue_AppliesToPair: StepKinematics_KinematicPair
        theInputOrientation: StepKinematics_SpatialRotation

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_SphericalPairValue_Init(self, *args)

    def InputOrientation(self, *args):
        r"""
        Return
        -------
        StepKinematics_SpatialRotation

        Description
        -----------
        Returns field inputorientation.

        """
        return _StepKinematics.StepKinematics_SphericalPairValue_InputOrientation(self, *args)

    def SetInputOrientation(self, *args):
        r"""

        Parameters
        ----------
        theInputOrientation: StepKinematics_SpatialRotation

        Return
        -------
        None

        Description
        -----------
        Sets field inputorientation.

        """
        return _StepKinematics.StepKinematics_SphericalPairValue_SetInputOrientation(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_SphericalPairValue_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_SphericalPairValue

# Register StepKinematics_SphericalPairValue in _StepKinematics:
_StepKinematics.StepKinematics_SphericalPairValue_swigregister(StepKinematics_SphericalPairValue)
class StepKinematics_UnconstrainedPairValue(StepKinematics_PairValue):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_UnconstrainedPairValue_swiginit(self, _StepKinematics.new_StepKinematics_UnconstrainedPairValue(*args))

    def ActualPlacement(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Axis2Placement3d>

        Description
        -----------
        Returns field actualplacement.

        """
        return _StepKinematics.StepKinematics_UnconstrainedPairValue_ActualPlacement(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        thePairValue_AppliesToPair: StepKinematics_KinematicPair
        theActualPlacement: StepGeom_Axis2Placement3d

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_UnconstrainedPairValue_Init(self, *args)

    def SetActualPlacement(self, *args):
        r"""

        Parameters
        ----------
        theActualPlacement: StepGeom_Axis2Placement3d

        Return
        -------
        None

        Description
        -----------
        Sets field actualplacement.

        """
        return _StepKinematics.StepKinematics_UnconstrainedPairValue_SetActualPlacement(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_UnconstrainedPairValue_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_UnconstrainedPairValue

# Register StepKinematics_UnconstrainedPairValue in _StepKinematics:
_StepKinematics.StepKinematics_UnconstrainedPairValue_swigregister(StepKinematics_UnconstrainedPairValue)
class StepKinematics_UniversalPairValue(StepKinematics_PairValue):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_UniversalPairValue_swiginit(self, _StepKinematics.new_StepKinematics_UniversalPairValue(*args))

    def FirstRotationAngle(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field firstrotationangle.

        """
        return _StepKinematics.StepKinematics_UniversalPairValue_FirstRotationAngle(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        thePairValue_AppliesToPair: StepKinematics_KinematicPair
        theFirstRotationAngle: float
        theSecondRotationAngle: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_UniversalPairValue_Init(self, *args)

    def SecondRotationAngle(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field secondrotationangle.

        """
        return _StepKinematics.StepKinematics_UniversalPairValue_SecondRotationAngle(self, *args)

    def SetFirstRotationAngle(self, *args):
        r"""

        Parameters
        ----------
        theFirstRotationAngle: float

        Return
        -------
        None

        Description
        -----------
        Sets field firstrotationangle.

        """
        return _StepKinematics.StepKinematics_UniversalPairValue_SetFirstRotationAngle(self, *args)

    def SetSecondRotationAngle(self, *args):
        r"""

        Parameters
        ----------
        theSecondRotationAngle: float

        Return
        -------
        None

        Description
        -----------
        Sets field secondrotationangle.

        """
        return _StepKinematics.StepKinematics_UniversalPairValue_SetSecondRotationAngle(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_UniversalPairValue_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_UniversalPairValue

# Register StepKinematics_UniversalPairValue in _StepKinematics:
_StepKinematics.StepKinematics_UniversalPairValue_swigregister(StepKinematics_UniversalPairValue)
class StepKinematics_CylindricalPair(StepKinematics_LowOrderKinematicPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_CylindricalPair_swiginit(self, _StepKinematics.new_StepKinematics_CylindricalPair(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_CylindricalPair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_CylindricalPair

# Register StepKinematics_CylindricalPair in _StepKinematics:
_StepKinematics.StepKinematics_CylindricalPair_swigregister(StepKinematics_CylindricalPair)
class StepKinematics_FullyConstrainedPair(StepKinematics_LowOrderKinematicPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_FullyConstrainedPair_swiginit(self, _StepKinematics.new_StepKinematics_FullyConstrainedPair(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_FullyConstrainedPair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_FullyConstrainedPair

# Register StepKinematics_FullyConstrainedPair in _StepKinematics:
_StepKinematics.StepKinematics_FullyConstrainedPair_swigregister(StepKinematics_FullyConstrainedPair)
class StepKinematics_GearPair(StepKinematics_LowOrderKinematicPairWithMotionCoupling):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_GearPair_swiginit(self, _StepKinematics.new_StepKinematics_GearPair(*args))

    def Bevel(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field bevel.

        """
        return _StepKinematics.StepKinematics_GearPair_Bevel(self, *args)

    def GearRatio(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field gearratio.

        """
        return _StepKinematics.StepKinematics_GearPair_GearRatio(self, *args)

    def HelicalAngle(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field helicalangle.

        """
        return _StepKinematics.StepKinematics_GearPair_HelicalAngle(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        theRadiusFirstLink: float
        theRadiusSecondLink: float
        theBevel: float
        theHelicalAngle: float
        theGearRatio: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_GearPair_Init(self, *args)

    def RadiusFirstLink(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field radiusfirstlink.

        """
        return _StepKinematics.StepKinematics_GearPair_RadiusFirstLink(self, *args)

    def RadiusSecondLink(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field radiussecondlink.

        """
        return _StepKinematics.StepKinematics_GearPair_RadiusSecondLink(self, *args)

    def SetBevel(self, *args):
        r"""

        Parameters
        ----------
        theBevel: float

        Return
        -------
        None

        Description
        -----------
        Sets field bevel.

        """
        return _StepKinematics.StepKinematics_GearPair_SetBevel(self, *args)

    def SetGearRatio(self, *args):
        r"""

        Parameters
        ----------
        theGearRatio: float

        Return
        -------
        None

        Description
        -----------
        Sets field gearratio.

        """
        return _StepKinematics.StepKinematics_GearPair_SetGearRatio(self, *args)

    def SetHelicalAngle(self, *args):
        r"""

        Parameters
        ----------
        theHelicalAngle: float

        Return
        -------
        None

        Description
        -----------
        Sets field helicalangle.

        """
        return _StepKinematics.StepKinematics_GearPair_SetHelicalAngle(self, *args)

    def SetRadiusFirstLink(self, *args):
        r"""

        Parameters
        ----------
        theRadiusFirstLink: float

        Return
        -------
        None

        Description
        -----------
        Sets field radiusfirstlink.

        """
        return _StepKinematics.StepKinematics_GearPair_SetRadiusFirstLink(self, *args)

    def SetRadiusSecondLink(self, *args):
        r"""

        Parameters
        ----------
        theRadiusSecondLink: float

        Return
        -------
        None

        Description
        -----------
        Sets field radiussecondlink.

        """
        return _StepKinematics.StepKinematics_GearPair_SetRadiusSecondLink(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_GearPair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_GearPair

# Register StepKinematics_GearPair in _StepKinematics:
_StepKinematics.StepKinematics_GearPair_swigregister(StepKinematics_GearPair)
class StepKinematics_LinearFlexibleAndPinionPair(StepKinematics_LowOrderKinematicPairWithMotionCoupling):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_LinearFlexibleAndPinionPair_swiginit(self, _StepKinematics.new_StepKinematics_LinearFlexibleAndPinionPair(*args))

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        thePinionRadius: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_LinearFlexibleAndPinionPair_Init(self, *args)

    def PinionRadius(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field pinionradius.

        """
        return _StepKinematics.StepKinematics_LinearFlexibleAndPinionPair_PinionRadius(self, *args)

    def SetPinionRadius(self, *args):
        r"""

        Parameters
        ----------
        thePinionRadius: float

        Return
        -------
        None

        Description
        -----------
        Sets field pinionradius.

        """
        return _StepKinematics.StepKinematics_LinearFlexibleAndPinionPair_SetPinionRadius(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_LinearFlexibleAndPinionPair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_LinearFlexibleAndPinionPair

# Register StepKinematics_LinearFlexibleAndPinionPair in _StepKinematics:
_StepKinematics.StepKinematics_LinearFlexibleAndPinionPair_swigregister(StepKinematics_LinearFlexibleAndPinionPair)
class StepKinematics_LinearFlexibleAndPlanarCurvePair(StepKinematics_HighOrderKinematicPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_LinearFlexibleAndPlanarCurvePair_swiginit(self, _StepKinematics.new_StepKinematics_LinearFlexibleAndPlanarCurvePair(*args))

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        thePairCurve: StepGeom_Curve
        theOrientation: bool

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_LinearFlexibleAndPlanarCurvePair_Init(self, *args)

    def Orientation(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns field orientation.

        """
        return _StepKinematics.StepKinematics_LinearFlexibleAndPlanarCurvePair_Orientation(self, *args)

    def PairCurve(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Curve>

        Description
        -----------
        Returns field paircurve.

        """
        return _StepKinematics.StepKinematics_LinearFlexibleAndPlanarCurvePair_PairCurve(self, *args)

    def SetOrientation(self, *args):
        r"""

        Parameters
        ----------
        theOrientation: bool

        Return
        -------
        None

        Description
        -----------
        Sets field orientation.

        """
        return _StepKinematics.StepKinematics_LinearFlexibleAndPlanarCurvePair_SetOrientation(self, *args)

    def SetPairCurve(self, *args):
        r"""

        Parameters
        ----------
        thePairCurve: StepGeom_Curve

        Return
        -------
        None

        Description
        -----------
        Sets field paircurve.

        """
        return _StepKinematics.StepKinematics_LinearFlexibleAndPlanarCurvePair_SetPairCurve(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_LinearFlexibleAndPlanarCurvePair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_LinearFlexibleAndPlanarCurvePair

# Register StepKinematics_LinearFlexibleAndPlanarCurvePair in _StepKinematics:
_StepKinematics.StepKinematics_LinearFlexibleAndPlanarCurvePair_swigregister(StepKinematics_LinearFlexibleAndPlanarCurvePair)
class StepKinematics_LowOrderKinematicPairWithRange(StepKinematics_LowOrderKinematicPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_swiginit(self, _StepKinematics.new_StepKinematics_LowOrderKinematicPairWithRange(*args))

    def HasLowerLimitActualRotationX(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitactualrotationx is defined.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_HasLowerLimitActualRotationX(self, *args)

    def HasLowerLimitActualRotationY(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitactualrotationy is defined.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_HasLowerLimitActualRotationY(self, *args)

    def HasLowerLimitActualRotationZ(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitactualrotationz is defined.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_HasLowerLimitActualRotationZ(self, *args)

    def HasLowerLimitActualTranslationX(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitactualtranslationx is defined.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_HasLowerLimitActualTranslationX(self, *args)

    def HasLowerLimitActualTranslationY(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitactualtranslationy is defined.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_HasLowerLimitActualTranslationY(self, *args)

    def HasLowerLimitActualTranslationZ(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitactualtranslationz is defined.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_HasLowerLimitActualTranslationZ(self, *args)

    def HasUpperLimitActualRotationX(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitactualrotationx is defined.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_HasUpperLimitActualRotationX(self, *args)

    def HasUpperLimitActualRotationY(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitactualrotationy is defined.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_HasUpperLimitActualRotationY(self, *args)

    def HasUpperLimitActualRotationZ(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitactualrotationz is defined.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_HasUpperLimitActualRotationZ(self, *args)

    def HasUpperLimitActualTranslationX(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitactualtranslationx is defined.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_HasUpperLimitActualTranslationX(self, *args)

    def HasUpperLimitActualTranslationY(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitactualtranslationy is defined.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_HasUpperLimitActualTranslationY(self, *args)

    def HasUpperLimitActualTranslationZ(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitactualtranslationz is defined.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_HasUpperLimitActualTranslationZ(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        theLowOrderKinematicPair_TX: bool
        theLowOrderKinematicPair_TY: bool
        theLowOrderKinematicPair_TZ: bool
        theLowOrderKinematicPair_RX: bool
        theLowOrderKinematicPair_RY: bool
        theLowOrderKinematicPair_RZ: bool
        hasLowerLimitActualRotationX: bool
        theLowerLimitActualRotationX: float
        hasUpperLimitActualRotationX: bool
        theUpperLimitActualRotationX: float
        hasLowerLimitActualRotationY: bool
        theLowerLimitActualRotationY: float
        hasUpperLimitActualRotationY: bool
        theUpperLimitActualRotationY: float
        hasLowerLimitActualRotationZ: bool
        theLowerLimitActualRotationZ: float
        hasUpperLimitActualRotationZ: bool
        theUpperLimitActualRotationZ: float
        hasLowerLimitActualTranslationX: bool
        theLowerLimitActualTranslationX: float
        hasUpperLimitActualTranslationX: bool
        theUpperLimitActualTranslationX: float
        hasLowerLimitActualTranslationY: bool
        theLowerLimitActualTranslationY: float
        hasUpperLimitActualTranslationY: bool
        theUpperLimitActualTranslationY: float
        hasLowerLimitActualTranslationZ: bool
        theLowerLimitActualTranslationZ: float
        hasUpperLimitActualTranslationZ: bool
        theUpperLimitActualTranslationZ: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_Init(self, *args)

    def LowerLimitActualRotationX(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitactualrotationx.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_LowerLimitActualRotationX(self, *args)

    def LowerLimitActualRotationY(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitactualrotationy.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_LowerLimitActualRotationY(self, *args)

    def LowerLimitActualRotationZ(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitactualrotationz.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_LowerLimitActualRotationZ(self, *args)

    def LowerLimitActualTranslationX(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitactualtranslationx.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_LowerLimitActualTranslationX(self, *args)

    def LowerLimitActualTranslationY(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitactualtranslationy.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_LowerLimitActualTranslationY(self, *args)

    def LowerLimitActualTranslationZ(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitactualtranslationz.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_LowerLimitActualTranslationZ(self, *args)

    def SetLowerLimitActualRotationX(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitActualRotationX: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitactualrotationx.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_SetLowerLimitActualRotationX(self, *args)

    def SetLowerLimitActualRotationY(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitActualRotationY: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitactualrotationy.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_SetLowerLimitActualRotationY(self, *args)

    def SetLowerLimitActualRotationZ(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitActualRotationZ: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitactualrotationz.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_SetLowerLimitActualRotationZ(self, *args)

    def SetLowerLimitActualTranslationX(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitActualTranslationX: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitactualtranslationx.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_SetLowerLimitActualTranslationX(self, *args)

    def SetLowerLimitActualTranslationY(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitActualTranslationY: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitactualtranslationy.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_SetLowerLimitActualTranslationY(self, *args)

    def SetLowerLimitActualTranslationZ(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitActualTranslationZ: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitactualtranslationz.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_SetLowerLimitActualTranslationZ(self, *args)

    def SetUpperLimitActualRotationX(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitActualRotationX: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitactualrotationx.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_SetUpperLimitActualRotationX(self, *args)

    def SetUpperLimitActualRotationY(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitActualRotationY: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitactualrotationy.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_SetUpperLimitActualRotationY(self, *args)

    def SetUpperLimitActualRotationZ(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitActualRotationZ: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitactualrotationz.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_SetUpperLimitActualRotationZ(self, *args)

    def SetUpperLimitActualTranslationX(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitActualTranslationX: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitactualtranslationx.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_SetUpperLimitActualTranslationX(self, *args)

    def SetUpperLimitActualTranslationY(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitActualTranslationY: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitactualtranslationy.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_SetUpperLimitActualTranslationY(self, *args)

    def SetUpperLimitActualTranslationZ(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitActualTranslationZ: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitactualtranslationz.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_SetUpperLimitActualTranslationZ(self, *args)

    def UpperLimitActualRotationX(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitactualrotationx.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_UpperLimitActualRotationX(self, *args)

    def UpperLimitActualRotationY(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitactualrotationy.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_UpperLimitActualRotationY(self, *args)

    def UpperLimitActualRotationZ(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitactualrotationz.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_UpperLimitActualRotationZ(self, *args)

    def UpperLimitActualTranslationX(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitactualtranslationx.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_UpperLimitActualTranslationX(self, *args)

    def UpperLimitActualTranslationY(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitactualtranslationy.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_UpperLimitActualTranslationY(self, *args)

    def UpperLimitActualTranslationZ(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitactualtranslationz.

        """
        return _StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_UpperLimitActualTranslationZ(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_LowOrderKinematicPairWithRange_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_LowOrderKinematicPairWithRange

# Register StepKinematics_LowOrderKinematicPairWithRange in _StepKinematics:
_StepKinematics.StepKinematics_LowOrderKinematicPairWithRange_swigregister(StepKinematics_LowOrderKinematicPairWithRange)
class StepKinematics_PlanarCurvePair(StepKinematics_HighOrderKinematicPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_PlanarCurvePair_swiginit(self, _StepKinematics.new_StepKinematics_PlanarCurvePair(*args))

    def Curve1(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Curve>

        Description
        -----------
        Returns field curve1.

        """
        return _StepKinematics.StepKinematics_PlanarCurvePair_Curve1(self, *args)

    def Curve2(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Curve>

        Description
        -----------
        Returns field curve2.

        """
        return _StepKinematics.StepKinematics_PlanarCurvePair_Curve2(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        theCurve1: StepGeom_Curve
        theCurve2: StepGeom_Curve
        theOrientation: bool

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_PlanarCurvePair_Init(self, *args)

    def Orientation(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns field orientation.

        """
        return _StepKinematics.StepKinematics_PlanarCurvePair_Orientation(self, *args)

    def SetCurve1(self, *args):
        r"""

        Parameters
        ----------
        theCurve1: StepGeom_Curve

        Return
        -------
        None

        Description
        -----------
        Sets field curve1.

        """
        return _StepKinematics.StepKinematics_PlanarCurvePair_SetCurve1(self, *args)

    def SetCurve2(self, *args):
        r"""

        Parameters
        ----------
        theCurve2: StepGeom_Curve

        Return
        -------
        None

        Description
        -----------
        Sets field curve2.

        """
        return _StepKinematics.StepKinematics_PlanarCurvePair_SetCurve2(self, *args)

    def SetOrientation(self, *args):
        r"""

        Parameters
        ----------
        theOrientation: bool

        Return
        -------
        None

        Description
        -----------
        Sets field orientation.

        """
        return _StepKinematics.StepKinematics_PlanarCurvePair_SetOrientation(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_PlanarCurvePair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_PlanarCurvePair

# Register StepKinematics_PlanarCurvePair in _StepKinematics:
_StepKinematics.StepKinematics_PlanarCurvePair_swigregister(StepKinematics_PlanarCurvePair)
class StepKinematics_PlanarPair(StepKinematics_LowOrderKinematicPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_PlanarPair_swiginit(self, _StepKinematics.new_StepKinematics_PlanarPair(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_PlanarPair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_PlanarPair

# Register StepKinematics_PlanarPair in _StepKinematics:
_StepKinematics.StepKinematics_PlanarPair_swigregister(StepKinematics_PlanarPair)
class StepKinematics_PointOnPlanarCurvePair(StepKinematics_HighOrderKinematicPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_PointOnPlanarCurvePair_swiginit(self, _StepKinematics.new_StepKinematics_PointOnPlanarCurvePair(*args))

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        thePairCurve: StepGeom_Curve
        theOrientation: bool

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePair_Init(self, *args)

    def Orientation(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns field orientation.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePair_Orientation(self, *args)

    def PairCurve(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Curve>

        Description
        -----------
        Returns field paircurve.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePair_PairCurve(self, *args)

    def SetOrientation(self, *args):
        r"""

        Parameters
        ----------
        theOrientation: bool

        Return
        -------
        None

        Description
        -----------
        Sets field orientation.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePair_SetOrientation(self, *args)

    def SetPairCurve(self, *args):
        r"""

        Parameters
        ----------
        thePairCurve: StepGeom_Curve

        Return
        -------
        None

        Description
        -----------
        Sets field paircurve.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePair_SetPairCurve(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_PointOnPlanarCurvePair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_PointOnPlanarCurvePair

# Register StepKinematics_PointOnPlanarCurvePair in _StepKinematics:
_StepKinematics.StepKinematics_PointOnPlanarCurvePair_swigregister(StepKinematics_PointOnPlanarCurvePair)
class StepKinematics_PointOnSurfacePair(StepKinematics_HighOrderKinematicPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_PointOnSurfacePair_swiginit(self, _StepKinematics.new_StepKinematics_PointOnSurfacePair(*args))

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        thePairSurface: StepGeom_Surface

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePair_Init(self, *args)

    def PairSurface(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Surface>

        Description
        -----------
        Returns field pairsurface.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePair_PairSurface(self, *args)

    def SetPairSurface(self, *args):
        r"""

        Parameters
        ----------
        thePairSurface: StepGeom_Surface

        Return
        -------
        None

        Description
        -----------
        Sets field pairsurface.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePair_SetPairSurface(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_PointOnSurfacePair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_PointOnSurfacePair

# Register StepKinematics_PointOnSurfacePair in _StepKinematics:
_StepKinematics.StepKinematics_PointOnSurfacePair_swigregister(StepKinematics_PointOnSurfacePair)
class StepKinematics_PrismaticPair(StepKinematics_LowOrderKinematicPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_PrismaticPair_swiginit(self, _StepKinematics.new_StepKinematics_PrismaticPair(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_PrismaticPair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_PrismaticPair

# Register StepKinematics_PrismaticPair in _StepKinematics:
_StepKinematics.StepKinematics_PrismaticPair_swigregister(StepKinematics_PrismaticPair)
class StepKinematics_RackAndPinionPair(StepKinematics_LowOrderKinematicPairWithMotionCoupling):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_RackAndPinionPair_swiginit(self, _StepKinematics.new_StepKinematics_RackAndPinionPair(*args))

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        thePinionRadius: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_RackAndPinionPair_Init(self, *args)

    def PinionRadius(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field pinionradius.

        """
        return _StepKinematics.StepKinematics_RackAndPinionPair_PinionRadius(self, *args)

    def SetPinionRadius(self, *args):
        r"""

        Parameters
        ----------
        thePinionRadius: float

        Return
        -------
        None

        Description
        -----------
        Sets field pinionradius.

        """
        return _StepKinematics.StepKinematics_RackAndPinionPair_SetPinionRadius(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_RackAndPinionPair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_RackAndPinionPair

# Register StepKinematics_RackAndPinionPair in _StepKinematics:
_StepKinematics.StepKinematics_RackAndPinionPair_swigregister(StepKinematics_RackAndPinionPair)
class StepKinematics_RevolutePair(StepKinematics_LowOrderKinematicPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_RevolutePair_swiginit(self, _StepKinematics.new_StepKinematics_RevolutePair(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_RevolutePair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_RevolutePair

# Register StepKinematics_RevolutePair in _StepKinematics:
_StepKinematics.StepKinematics_RevolutePair_swigregister(StepKinematics_RevolutePair)
class StepKinematics_ScrewPair(StepKinematics_LowOrderKinematicPairWithMotionCoupling):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_ScrewPair_swiginit(self, _StepKinematics.new_StepKinematics_ScrewPair(*args))

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        thePitch: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_ScrewPair_Init(self, *args)

    def Pitch(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field pitch.

        """
        return _StepKinematics.StepKinematics_ScrewPair_Pitch(self, *args)

    def SetPitch(self, *args):
        r"""

        Parameters
        ----------
        thePitch: float

        Return
        -------
        None

        Description
        -----------
        Sets field pitch.

        """
        return _StepKinematics.StepKinematics_ScrewPair_SetPitch(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_ScrewPair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_ScrewPair

# Register StepKinematics_ScrewPair in _StepKinematics:
_StepKinematics.StepKinematics_ScrewPair_swigregister(StepKinematics_ScrewPair)
class StepKinematics_SphericalPair(StepKinematics_LowOrderKinematicPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_SphericalPair_swiginit(self, _StepKinematics.new_StepKinematics_SphericalPair(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_SphericalPair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_SphericalPair

# Register StepKinematics_SphericalPair in _StepKinematics:
_StepKinematics.StepKinematics_SphericalPair_swigregister(StepKinematics_SphericalPair)
class StepKinematics_SphericalPairWithPin(StepKinematics_LowOrderKinematicPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_SphericalPairWithPin_swiginit(self, _StepKinematics.new_StepKinematics_SphericalPairWithPin(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_SphericalPairWithPin_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_SphericalPairWithPin

# Register StepKinematics_SphericalPairWithPin in _StepKinematics:
_StepKinematics.StepKinematics_SphericalPairWithPin_swigregister(StepKinematics_SphericalPairWithPin)
class StepKinematics_SurfacePair(StepKinematics_HighOrderKinematicPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_SurfacePair_swiginit(self, _StepKinematics.new_StepKinematics_SurfacePair(*args))

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        theSurface1: StepGeom_Surface
        theSurface2: StepGeom_Surface
        theOrientation: bool

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_SurfacePair_Init(self, *args)

    def Orientation(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns field orientation.

        """
        return _StepKinematics.StepKinematics_SurfacePair_Orientation(self, *args)

    def SetOrientation(self, *args):
        r"""

        Parameters
        ----------
        theOrientation: bool

        Return
        -------
        None

        Description
        -----------
        Sets field orientation.

        """
        return _StepKinematics.StepKinematics_SurfacePair_SetOrientation(self, *args)

    def SetSurface1(self, *args):
        r"""

        Parameters
        ----------
        theSurface1: StepGeom_Surface

        Return
        -------
        None

        Description
        -----------
        Sets field surface1.

        """
        return _StepKinematics.StepKinematics_SurfacePair_SetSurface1(self, *args)

    def SetSurface2(self, *args):
        r"""

        Parameters
        ----------
        theSurface2: StepGeom_Surface

        Return
        -------
        None

        Description
        -----------
        Sets field surface2.

        """
        return _StepKinematics.StepKinematics_SurfacePair_SetSurface2(self, *args)

    def Surface1(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Surface>

        Description
        -----------
        Returns field surface1.

        """
        return _StepKinematics.StepKinematics_SurfacePair_Surface1(self, *args)

    def Surface2(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Surface>

        Description
        -----------
        Returns field surface2.

        """
        return _StepKinematics.StepKinematics_SurfacePair_Surface2(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_SurfacePair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_SurfacePair

# Register StepKinematics_SurfacePair in _StepKinematics:
_StepKinematics.StepKinematics_SurfacePair_swigregister(StepKinematics_SurfacePair)
class StepKinematics_UnconstrainedPair(StepKinematics_LowOrderKinematicPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_UnconstrainedPair_swiginit(self, _StepKinematics.new_StepKinematics_UnconstrainedPair(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_UnconstrainedPair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_UnconstrainedPair

# Register StepKinematics_UnconstrainedPair in _StepKinematics:
_StepKinematics.StepKinematics_UnconstrainedPair_swigregister(StepKinematics_UnconstrainedPair)
class StepKinematics_UniversalPair(StepKinematics_LowOrderKinematicPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_UniversalPair_swiginit(self, _StepKinematics.new_StepKinematics_UniversalPair(*args))

    def HasInputSkewAngle(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field inputskewangle is defined.

        """
        return _StepKinematics.StepKinematics_UniversalPair_HasInputSkewAngle(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        theLowOrderKinematicPair_TX: bool
        theLowOrderKinematicPair_TY: bool
        theLowOrderKinematicPair_TZ: bool
        theLowOrderKinematicPair_RX: bool
        theLowOrderKinematicPair_RY: bool
        theLowOrderKinematicPair_RZ: bool
        hasInputSkewAngle: bool
        theInputSkewAngle: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_UniversalPair_Init(self, *args)

    def InputSkewAngle(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field inputskewangle.

        """
        return _StepKinematics.StepKinematics_UniversalPair_InputSkewAngle(self, *args)

    def SetInputSkewAngle(self, *args):
        r"""

        Parameters
        ----------
        theInputSkewAngle: float

        Return
        -------
        None

        Description
        -----------
        Sets field inputskewangle.

        """
        return _StepKinematics.StepKinematics_UniversalPair_SetInputSkewAngle(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_UniversalPair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_UniversalPair

# Register StepKinematics_UniversalPair in _StepKinematics:
_StepKinematics.StepKinematics_UniversalPair_swigregister(StepKinematics_UniversalPair)
class StepKinematics_CylindricalPairWithRange(StepKinematics_CylindricalPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_CylindricalPairWithRange_swiginit(self, _StepKinematics.new_StepKinematics_CylindricalPairWithRange(*args))

    def HasLowerLimitActualRotation(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitactualrotation is defined.

        """
        return _StepKinematics.StepKinematics_CylindricalPairWithRange_HasLowerLimitActualRotation(self, *args)

    def HasLowerLimitActualTranslation(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitactualtranslation is defined.

        """
        return _StepKinematics.StepKinematics_CylindricalPairWithRange_HasLowerLimitActualTranslation(self, *args)

    def HasUpperLimitActualRotation(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitactualrotation is defined.

        """
        return _StepKinematics.StepKinematics_CylindricalPairWithRange_HasUpperLimitActualRotation(self, *args)

    def HasUpperLimitActualTranslation(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitactualtranslation is defined.

        """
        return _StepKinematics.StepKinematics_CylindricalPairWithRange_HasUpperLimitActualTranslation(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        theLowOrderKinematicPair_TX: bool
        theLowOrderKinematicPair_TY: bool
        theLowOrderKinematicPair_TZ: bool
        theLowOrderKinematicPair_RX: bool
        theLowOrderKinematicPair_RY: bool
        theLowOrderKinematicPair_RZ: bool
        hasLowerLimitActualTranslation: bool
        theLowerLimitActualTranslation: float
        hasUpperLimitActualTranslation: bool
        theUpperLimitActualTranslation: float
        hasLowerLimitActualRotation: bool
        theLowerLimitActualRotation: float
        hasUpperLimitActualRotation: bool
        theUpperLimitActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_CylindricalPairWithRange_Init(self, *args)

    def LowerLimitActualRotation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitactualrotation.

        """
        return _StepKinematics.StepKinematics_CylindricalPairWithRange_LowerLimitActualRotation(self, *args)

    def LowerLimitActualTranslation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitactualtranslation.

        """
        return _StepKinematics.StepKinematics_CylindricalPairWithRange_LowerLimitActualTranslation(self, *args)

    def SetLowerLimitActualRotation(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitactualrotation.

        """
        return _StepKinematics.StepKinematics_CylindricalPairWithRange_SetLowerLimitActualRotation(self, *args)

    def SetLowerLimitActualTranslation(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitActualTranslation: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitactualtranslation.

        """
        return _StepKinematics.StepKinematics_CylindricalPairWithRange_SetLowerLimitActualTranslation(self, *args)

    def SetUpperLimitActualRotation(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitactualrotation.

        """
        return _StepKinematics.StepKinematics_CylindricalPairWithRange_SetUpperLimitActualRotation(self, *args)

    def SetUpperLimitActualTranslation(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitActualTranslation: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitactualtranslation.

        """
        return _StepKinematics.StepKinematics_CylindricalPairWithRange_SetUpperLimitActualTranslation(self, *args)

    def UpperLimitActualRotation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitactualrotation.

        """
        return _StepKinematics.StepKinematics_CylindricalPairWithRange_UpperLimitActualRotation(self, *args)

    def UpperLimitActualTranslation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitactualtranslation.

        """
        return _StepKinematics.StepKinematics_CylindricalPairWithRange_UpperLimitActualTranslation(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_CylindricalPairWithRange_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_CylindricalPairWithRange

# Register StepKinematics_CylindricalPairWithRange in _StepKinematics:
_StepKinematics.StepKinematics_CylindricalPairWithRange_swigregister(StepKinematics_CylindricalPairWithRange)
class StepKinematics_GearPairWithRange(StepKinematics_GearPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_GearPairWithRange_swiginit(self, _StepKinematics.new_StepKinematics_GearPairWithRange(*args))

    def HasLowerLimitActualRotation1(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitactualrotation1 is defined.

        """
        return _StepKinematics.StepKinematics_GearPairWithRange_HasLowerLimitActualRotation1(self, *args)

    def HasUpperLimitActualRotation1(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitactualrotation1 is defined.

        """
        return _StepKinematics.StepKinematics_GearPairWithRange_HasUpperLimitActualRotation1(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        theGearPair_RadiusFirstLink: float
        theGearPair_RadiusSecondLink: float
        theGearPair_Bevel: float
        theGearPair_HelicalAngle: float
        theGearPair_GearRatio: float
        hasLowerLimitActualRotation1: bool
        theLowerLimitActualRotation1: float
        hasUpperLimitActualRotation1: bool
        theUpperLimitActualRotation1: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_GearPairWithRange_Init(self, *args)

    def LowerLimitActualRotation1(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitactualrotation1.

        """
        return _StepKinematics.StepKinematics_GearPairWithRange_LowerLimitActualRotation1(self, *args)

    def SetLowerLimitActualRotation1(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitActualRotation1: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitactualrotation1.

        """
        return _StepKinematics.StepKinematics_GearPairWithRange_SetLowerLimitActualRotation1(self, *args)

    def SetUpperLimitActualRotation1(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitActualRotation1: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitactualrotation1.

        """
        return _StepKinematics.StepKinematics_GearPairWithRange_SetUpperLimitActualRotation1(self, *args)

    def UpperLimitActualRotation1(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitactualrotation1.

        """
        return _StepKinematics.StepKinematics_GearPairWithRange_UpperLimitActualRotation1(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_GearPairWithRange_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_GearPairWithRange

# Register StepKinematics_GearPairWithRange in _StepKinematics:
_StepKinematics.StepKinematics_GearPairWithRange_swigregister(StepKinematics_GearPairWithRange)
class StepKinematics_HomokineticPair(StepKinematics_UniversalPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_HomokineticPair_swiginit(self, _StepKinematics.new_StepKinematics_HomokineticPair(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_HomokineticPair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_HomokineticPair

# Register StepKinematics_HomokineticPair in _StepKinematics:
_StepKinematics.StepKinematics_HomokineticPair_swigregister(StepKinematics_HomokineticPair)
class StepKinematics_PlanarCurvePairRange(StepKinematics_PlanarCurvePair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_PlanarCurvePairRange_swiginit(self, _StepKinematics.new_StepKinematics_PlanarCurvePairRange(*args))

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        thePlanarCurvePair_Curve1: StepGeom_Curve
        thePlanarCurvePair_Curve2: StepGeom_Curve
        thePlanarCurvePair_Orientation: bool
        theRangeOnCurve1: StepGeom_TrimmedCurve
        theRangeOnCurve2: StepGeom_TrimmedCurve

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_PlanarCurvePairRange_Init(self, *args)

    def RangeOnCurve1(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_TrimmedCurve>

        Description
        -----------
        Returns field rangeoncurve1.

        """
        return _StepKinematics.StepKinematics_PlanarCurvePairRange_RangeOnCurve1(self, *args)

    def RangeOnCurve2(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_TrimmedCurve>

        Description
        -----------
        Returns field rangeoncurve2.

        """
        return _StepKinematics.StepKinematics_PlanarCurvePairRange_RangeOnCurve2(self, *args)

    def SetRangeOnCurve1(self, *args):
        r"""

        Parameters
        ----------
        theRangeOnCurve1: StepGeom_TrimmedCurve

        Return
        -------
        None

        Description
        -----------
        Sets field rangeoncurve1.

        """
        return _StepKinematics.StepKinematics_PlanarCurvePairRange_SetRangeOnCurve1(self, *args)

    def SetRangeOnCurve2(self, *args):
        r"""

        Parameters
        ----------
        theRangeOnCurve2: StepGeom_TrimmedCurve

        Return
        -------
        None

        Description
        -----------
        Sets field rangeoncurve2.

        """
        return _StepKinematics.StepKinematics_PlanarCurvePairRange_SetRangeOnCurve2(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_PlanarCurvePairRange_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_PlanarCurvePairRange

# Register StepKinematics_PlanarCurvePairRange in _StepKinematics:
_StepKinematics.StepKinematics_PlanarCurvePairRange_swigregister(StepKinematics_PlanarCurvePairRange)
class StepKinematics_PlanarPairWithRange(StepKinematics_PlanarPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_PlanarPairWithRange_swiginit(self, _StepKinematics.new_StepKinematics_PlanarPairWithRange(*args))

    def HasLowerLimitActualRotation(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitactualrotation is defined.

        """
        return _StepKinematics.StepKinematics_PlanarPairWithRange_HasLowerLimitActualRotation(self, *args)

    def HasLowerLimitActualTranslationX(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitactualtranslationx is defined.

        """
        return _StepKinematics.StepKinematics_PlanarPairWithRange_HasLowerLimitActualTranslationX(self, *args)

    def HasLowerLimitActualTranslationY(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitactualtranslationy is defined.

        """
        return _StepKinematics.StepKinematics_PlanarPairWithRange_HasLowerLimitActualTranslationY(self, *args)

    def HasUpperLimitActualRotation(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitactualrotation is defined.

        """
        return _StepKinematics.StepKinematics_PlanarPairWithRange_HasUpperLimitActualRotation(self, *args)

    def HasUpperLimitActualTranslationX(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitactualtranslationx is defined.

        """
        return _StepKinematics.StepKinematics_PlanarPairWithRange_HasUpperLimitActualTranslationX(self, *args)

    def HasUpperLimitActualTranslationY(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitactualtranslationy is defined.

        """
        return _StepKinematics.StepKinematics_PlanarPairWithRange_HasUpperLimitActualTranslationY(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        theLowOrderKinematicPair_TX: bool
        theLowOrderKinematicPair_TY: bool
        theLowOrderKinematicPair_TZ: bool
        theLowOrderKinematicPair_RX: bool
        theLowOrderKinematicPair_RY: bool
        theLowOrderKinematicPair_RZ: bool
        hasLowerLimitActualRotation: bool
        theLowerLimitActualRotation: float
        hasUpperLimitActualRotation: bool
        theUpperLimitActualRotation: float
        hasLowerLimitActualTranslationX: bool
        theLowerLimitActualTranslationX: float
        hasUpperLimitActualTranslationX: bool
        theUpperLimitActualTranslationX: float
        hasLowerLimitActualTranslationY: bool
        theLowerLimitActualTranslationY: float
        hasUpperLimitActualTranslationY: bool
        theUpperLimitActualTranslationY: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_PlanarPairWithRange_Init(self, *args)

    def LowerLimitActualRotation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitactualrotation.

        """
        return _StepKinematics.StepKinematics_PlanarPairWithRange_LowerLimitActualRotation(self, *args)

    def LowerLimitActualTranslationX(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitactualtranslationx.

        """
        return _StepKinematics.StepKinematics_PlanarPairWithRange_LowerLimitActualTranslationX(self, *args)

    def LowerLimitActualTranslationY(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitactualtranslationy.

        """
        return _StepKinematics.StepKinematics_PlanarPairWithRange_LowerLimitActualTranslationY(self, *args)

    def SetLowerLimitActualRotation(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitactualrotation.

        """
        return _StepKinematics.StepKinematics_PlanarPairWithRange_SetLowerLimitActualRotation(self, *args)

    def SetLowerLimitActualTranslationX(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitActualTranslationX: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitactualtranslationx.

        """
        return _StepKinematics.StepKinematics_PlanarPairWithRange_SetLowerLimitActualTranslationX(self, *args)

    def SetLowerLimitActualTranslationY(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitActualTranslationY: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitactualtranslationy.

        """
        return _StepKinematics.StepKinematics_PlanarPairWithRange_SetLowerLimitActualTranslationY(self, *args)

    def SetUpperLimitActualRotation(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitactualrotation.

        """
        return _StepKinematics.StepKinematics_PlanarPairWithRange_SetUpperLimitActualRotation(self, *args)

    def SetUpperLimitActualTranslationX(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitActualTranslationX: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitactualtranslationx.

        """
        return _StepKinematics.StepKinematics_PlanarPairWithRange_SetUpperLimitActualTranslationX(self, *args)

    def SetUpperLimitActualTranslationY(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitActualTranslationY: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitactualtranslationy.

        """
        return _StepKinematics.StepKinematics_PlanarPairWithRange_SetUpperLimitActualTranslationY(self, *args)

    def UpperLimitActualRotation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitactualrotation.

        """
        return _StepKinematics.StepKinematics_PlanarPairWithRange_UpperLimitActualRotation(self, *args)

    def UpperLimitActualTranslationX(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitactualtranslationx.

        """
        return _StepKinematics.StepKinematics_PlanarPairWithRange_UpperLimitActualTranslationX(self, *args)

    def UpperLimitActualTranslationY(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitactualtranslationy.

        """
        return _StepKinematics.StepKinematics_PlanarPairWithRange_UpperLimitActualTranslationY(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_PlanarPairWithRange_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_PlanarPairWithRange

# Register StepKinematics_PlanarPairWithRange in _StepKinematics:
_StepKinematics.StepKinematics_PlanarPairWithRange_swigregister(StepKinematics_PlanarPairWithRange)
class StepKinematics_PointOnPlanarCurvePairWithRange(StepKinematics_PointOnPlanarCurvePair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_PointOnPlanarCurvePairWithRange_swiginit(self, _StepKinematics.new_StepKinematics_PointOnPlanarCurvePairWithRange(*args))

    def HasLowerLimitPitch(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitpitch is defined.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairWithRange_HasLowerLimitPitch(self, *args)

    def HasLowerLimitRoll(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitroll is defined.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairWithRange_HasLowerLimitRoll(self, *args)

    def HasLowerLimitYaw(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimityaw is defined.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairWithRange_HasLowerLimitYaw(self, *args)

    def HasUpperLimitPitch(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitpitch is defined.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairWithRange_HasUpperLimitPitch(self, *args)

    def HasUpperLimitRoll(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitroll is defined.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairWithRange_HasUpperLimitRoll(self, *args)

    def HasUpperLimitYaw(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimityaw is defined.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairWithRange_HasUpperLimitYaw(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        thePointOnPlanarCurvePair_PairCurve: StepGeom_Curve
        thePointOnPlanarCurvePair_Orientation: bool
        theRangeOnPairCurve: StepGeom_TrimmedCurve
        hasLowerLimitYaw: bool
        theLowerLimitYaw: float
        hasUpperLimitYaw: bool
        theUpperLimitYaw: float
        hasLowerLimitPitch: bool
        theLowerLimitPitch: float
        hasUpperLimitPitch: bool
        theUpperLimitPitch: float
        hasLowerLimitRoll: bool
        theLowerLimitRoll: float
        hasUpperLimitRoll: bool
        theUpperLimitRoll: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairWithRange_Init(self, *args)

    def LowerLimitPitch(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitpitch.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairWithRange_LowerLimitPitch(self, *args)

    def LowerLimitRoll(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitroll.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairWithRange_LowerLimitRoll(self, *args)

    def LowerLimitYaw(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimityaw.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairWithRange_LowerLimitYaw(self, *args)

    def RangeOnPairCurve(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_TrimmedCurve>

        Description
        -----------
        Returns field rangeonpaircurve.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairWithRange_RangeOnPairCurve(self, *args)

    def SetLowerLimitPitch(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitPitch: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitpitch.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairWithRange_SetLowerLimitPitch(self, *args)

    def SetLowerLimitRoll(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitRoll: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitroll.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairWithRange_SetLowerLimitRoll(self, *args)

    def SetLowerLimitYaw(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitYaw: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimityaw.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairWithRange_SetLowerLimitYaw(self, *args)

    def SetRangeOnPairCurve(self, *args):
        r"""

        Parameters
        ----------
        theRangeOnPairCurve: StepGeom_TrimmedCurve

        Return
        -------
        None

        Description
        -----------
        Sets field rangeonpaircurve.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairWithRange_SetRangeOnPairCurve(self, *args)

    def SetUpperLimitPitch(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitPitch: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitpitch.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairWithRange_SetUpperLimitPitch(self, *args)

    def SetUpperLimitRoll(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitRoll: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitroll.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairWithRange_SetUpperLimitRoll(self, *args)

    def SetUpperLimitYaw(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitYaw: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimityaw.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairWithRange_SetUpperLimitYaw(self, *args)

    def UpperLimitPitch(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitpitch.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairWithRange_UpperLimitPitch(self, *args)

    def UpperLimitRoll(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitroll.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairWithRange_UpperLimitRoll(self, *args)

    def UpperLimitYaw(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimityaw.

        """
        return _StepKinematics.StepKinematics_PointOnPlanarCurvePairWithRange_UpperLimitYaw(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_PointOnPlanarCurvePairWithRange_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_PointOnPlanarCurvePairWithRange

# Register StepKinematics_PointOnPlanarCurvePairWithRange in _StepKinematics:
_StepKinematics.StepKinematics_PointOnPlanarCurvePairWithRange_swigregister(StepKinematics_PointOnPlanarCurvePairWithRange)
class StepKinematics_PointOnSurfacePairWithRange(StepKinematics_PointOnSurfacePair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_PointOnSurfacePairWithRange_swiginit(self, _StepKinematics.new_StepKinematics_PointOnSurfacePairWithRange(*args))

    def HasLowerLimitPitch(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitpitch is defined.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairWithRange_HasLowerLimitPitch(self, *args)

    def HasLowerLimitRoll(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitroll is defined.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairWithRange_HasLowerLimitRoll(self, *args)

    def HasLowerLimitYaw(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimityaw is defined.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairWithRange_HasLowerLimitYaw(self, *args)

    def HasUpperLimitPitch(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitpitch is defined.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairWithRange_HasUpperLimitPitch(self, *args)

    def HasUpperLimitRoll(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitroll is defined.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairWithRange_HasUpperLimitRoll(self, *args)

    def HasUpperLimitYaw(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimityaw is defined.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairWithRange_HasUpperLimitYaw(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        thePointOnSurfacePair_PairSurface: StepGeom_Surface
        theRangeOnPairSurface: StepGeom_RectangularTrimmedSurface
        hasLowerLimitYaw: bool
        theLowerLimitYaw: float
        hasUpperLimitYaw: bool
        theUpperLimitYaw: float
        hasLowerLimitPitch: bool
        theLowerLimitPitch: float
        hasUpperLimitPitch: bool
        theUpperLimitPitch: float
        hasLowerLimitRoll: bool
        theLowerLimitRoll: float
        hasUpperLimitRoll: bool
        theUpperLimitRoll: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairWithRange_Init(self, *args)

    def LowerLimitPitch(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitpitch.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairWithRange_LowerLimitPitch(self, *args)

    def LowerLimitRoll(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitroll.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairWithRange_LowerLimitRoll(self, *args)

    def LowerLimitYaw(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimityaw.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairWithRange_LowerLimitYaw(self, *args)

    def RangeOnPairSurface(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_RectangularTrimmedSurface>

        Description
        -----------
        Returns field rangeonpairsurface.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairWithRange_RangeOnPairSurface(self, *args)

    def SetLowerLimitPitch(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitPitch: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitpitch.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairWithRange_SetLowerLimitPitch(self, *args)

    def SetLowerLimitRoll(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitRoll: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitroll.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairWithRange_SetLowerLimitRoll(self, *args)

    def SetLowerLimitYaw(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitYaw: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimityaw.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairWithRange_SetLowerLimitYaw(self, *args)

    def SetRangeOnPairSurface(self, *args):
        r"""

        Parameters
        ----------
        theRangeOnPairSurface: StepGeom_RectangularTrimmedSurface

        Return
        -------
        None

        Description
        -----------
        Sets field rangeonpairsurface.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairWithRange_SetRangeOnPairSurface(self, *args)

    def SetUpperLimitPitch(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitPitch: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitpitch.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairWithRange_SetUpperLimitPitch(self, *args)

    def SetUpperLimitRoll(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitRoll: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitroll.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairWithRange_SetUpperLimitRoll(self, *args)

    def SetUpperLimitYaw(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitYaw: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimityaw.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairWithRange_SetUpperLimitYaw(self, *args)

    def UpperLimitPitch(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitpitch.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairWithRange_UpperLimitPitch(self, *args)

    def UpperLimitRoll(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitroll.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairWithRange_UpperLimitRoll(self, *args)

    def UpperLimitYaw(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimityaw.

        """
        return _StepKinematics.StepKinematics_PointOnSurfacePairWithRange_UpperLimitYaw(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_PointOnSurfacePairWithRange_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_PointOnSurfacePairWithRange

# Register StepKinematics_PointOnSurfacePairWithRange in _StepKinematics:
_StepKinematics.StepKinematics_PointOnSurfacePairWithRange_swigregister(StepKinematics_PointOnSurfacePairWithRange)
class StepKinematics_PrismaticPairWithRange(StepKinematics_PrismaticPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_PrismaticPairWithRange_swiginit(self, _StepKinematics.new_StepKinematics_PrismaticPairWithRange(*args))

    def HasLowerLimitActualTranslation(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitactualtranslation is defined.

        """
        return _StepKinematics.StepKinematics_PrismaticPairWithRange_HasLowerLimitActualTranslation(self, *args)

    def HasUpperLimitActualTranslation(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitactualtranslation is defined.

        """
        return _StepKinematics.StepKinematics_PrismaticPairWithRange_HasUpperLimitActualTranslation(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        theLowOrderKinematicPair_TX: bool
        theLowOrderKinematicPair_TY: bool
        theLowOrderKinematicPair_TZ: bool
        theLowOrderKinematicPair_RX: bool
        theLowOrderKinematicPair_RY: bool
        theLowOrderKinematicPair_RZ: bool
        hasLowerLimitActualTranslation: bool
        theLowerLimitActualTranslation: float
        hasUpperLimitActualTranslation: bool
        theUpperLimitActualTranslation: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_PrismaticPairWithRange_Init(self, *args)

    def LowerLimitActualTranslation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitactualtranslation.

        """
        return _StepKinematics.StepKinematics_PrismaticPairWithRange_LowerLimitActualTranslation(self, *args)

    def SetLowerLimitActualTranslation(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitActualTranslation: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitactualtranslation.

        """
        return _StepKinematics.StepKinematics_PrismaticPairWithRange_SetLowerLimitActualTranslation(self, *args)

    def SetUpperLimitActualTranslation(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitActualTranslation: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitactualtranslation.

        """
        return _StepKinematics.StepKinematics_PrismaticPairWithRange_SetUpperLimitActualTranslation(self, *args)

    def UpperLimitActualTranslation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitactualtranslation.

        """
        return _StepKinematics.StepKinematics_PrismaticPairWithRange_UpperLimitActualTranslation(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_PrismaticPairWithRange_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_PrismaticPairWithRange

# Register StepKinematics_PrismaticPairWithRange in _StepKinematics:
_StepKinematics.StepKinematics_PrismaticPairWithRange_swigregister(StepKinematics_PrismaticPairWithRange)
class StepKinematics_RackAndPinionPairWithRange(StepKinematics_RackAndPinionPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_RackAndPinionPairWithRange_swiginit(self, _StepKinematics.new_StepKinematics_RackAndPinionPairWithRange(*args))

    def HasLowerLimitRackDisplacement(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitrackdisplacement is defined.

        """
        return _StepKinematics.StepKinematics_RackAndPinionPairWithRange_HasLowerLimitRackDisplacement(self, *args)

    def HasUpperLimitRackDisplacement(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitrackdisplacement is defined.

        """
        return _StepKinematics.StepKinematics_RackAndPinionPairWithRange_HasUpperLimitRackDisplacement(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        theRackAndPinionPair_PinionRadius: float
        hasLowerLimitRackDisplacement: bool
        theLowerLimitRackDisplacement: float
        hasUpperLimitRackDisplacement: bool
        theUpperLimitRackDisplacement: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_RackAndPinionPairWithRange_Init(self, *args)

    def LowerLimitRackDisplacement(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitrackdisplacement.

        """
        return _StepKinematics.StepKinematics_RackAndPinionPairWithRange_LowerLimitRackDisplacement(self, *args)

    def SetLowerLimitRackDisplacement(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitRackDisplacement: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitrackdisplacement.

        """
        return _StepKinematics.StepKinematics_RackAndPinionPairWithRange_SetLowerLimitRackDisplacement(self, *args)

    def SetUpperLimitRackDisplacement(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitRackDisplacement: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitrackdisplacement.

        """
        return _StepKinematics.StepKinematics_RackAndPinionPairWithRange_SetUpperLimitRackDisplacement(self, *args)

    def UpperLimitRackDisplacement(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitrackdisplacement.

        """
        return _StepKinematics.StepKinematics_RackAndPinionPairWithRange_UpperLimitRackDisplacement(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_RackAndPinionPairWithRange_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_RackAndPinionPairWithRange

# Register StepKinematics_RackAndPinionPairWithRange in _StepKinematics:
_StepKinematics.StepKinematics_RackAndPinionPairWithRange_swigregister(StepKinematics_RackAndPinionPairWithRange)
class StepKinematics_RevolutePairWithRange(StepKinematics_RevolutePair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_RevolutePairWithRange_swiginit(self, _StepKinematics.new_StepKinematics_RevolutePairWithRange(*args))

    def HasLowerLimitActualRotation(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitactualrotation is defined.

        """
        return _StepKinematics.StepKinematics_RevolutePairWithRange_HasLowerLimitActualRotation(self, *args)

    def HasUpperLimitActualRotation(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitactualrotation is defined.

        """
        return _StepKinematics.StepKinematics_RevolutePairWithRange_HasUpperLimitActualRotation(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        theLowOrderKinematicPair_TX: bool
        theLowOrderKinematicPair_TY: bool
        theLowOrderKinematicPair_TZ: bool
        theLowOrderKinematicPair_RX: bool
        theLowOrderKinematicPair_RY: bool
        theLowOrderKinematicPair_RZ: bool
        hasLowerLimitActualRotation: bool
        theLowerLimitActualRotation: float
        hasUpperLimitActualRotation: bool
        theUpperLimitActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_RevolutePairWithRange_Init(self, *args)

    def LowerLimitActualRotation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitactualrotation.

        """
        return _StepKinematics.StepKinematics_RevolutePairWithRange_LowerLimitActualRotation(self, *args)

    def SetLowerLimitActualRotation(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitactualrotation.

        """
        return _StepKinematics.StepKinematics_RevolutePairWithRange_SetLowerLimitActualRotation(self, *args)

    def SetUpperLimitActualRotation(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitactualrotation.

        """
        return _StepKinematics.StepKinematics_RevolutePairWithRange_SetUpperLimitActualRotation(self, *args)

    def UpperLimitActualRotation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitactualrotation.

        """
        return _StepKinematics.StepKinematics_RevolutePairWithRange_UpperLimitActualRotation(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_RevolutePairWithRange_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_RevolutePairWithRange

# Register StepKinematics_RevolutePairWithRange in _StepKinematics:
_StepKinematics.StepKinematics_RevolutePairWithRange_swigregister(StepKinematics_RevolutePairWithRange)
class StepKinematics_RollingCurvePair(StepKinematics_PlanarCurvePair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_RollingCurvePair_swiginit(self, _StepKinematics.new_StepKinematics_RollingCurvePair(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_RollingCurvePair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_RollingCurvePair

# Register StepKinematics_RollingCurvePair in _StepKinematics:
_StepKinematics.StepKinematics_RollingCurvePair_swigregister(StepKinematics_RollingCurvePair)
class StepKinematics_RollingSurfacePair(StepKinematics_SurfacePair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_RollingSurfacePair_swiginit(self, _StepKinematics.new_StepKinematics_RollingSurfacePair(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_RollingSurfacePair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_RollingSurfacePair

# Register StepKinematics_RollingSurfacePair in _StepKinematics:
_StepKinematics.StepKinematics_RollingSurfacePair_swigregister(StepKinematics_RollingSurfacePair)
class StepKinematics_ScrewPairWithRange(StepKinematics_ScrewPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_ScrewPairWithRange_swiginit(self, _StepKinematics.new_StepKinematics_ScrewPairWithRange(*args))

    def HasLowerLimitActualRotation(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitactualrotation is defined.

        """
        return _StepKinematics.StepKinematics_ScrewPairWithRange_HasLowerLimitActualRotation(self, *args)

    def HasUpperLimitActualRotation(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitactualrotation is defined.

        """
        return _StepKinematics.StepKinematics_ScrewPairWithRange_HasUpperLimitActualRotation(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        theScrewPair_Pitch: float
        hasLowerLimitActualRotation: bool
        theLowerLimitActualRotation: float
        hasUpperLimitActualRotation: bool
        theUpperLimitActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_ScrewPairWithRange_Init(self, *args)

    def LowerLimitActualRotation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitactualrotation.

        """
        return _StepKinematics.StepKinematics_ScrewPairWithRange_LowerLimitActualRotation(self, *args)

    def SetLowerLimitActualRotation(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitactualrotation.

        """
        return _StepKinematics.StepKinematics_ScrewPairWithRange_SetLowerLimitActualRotation(self, *args)

    def SetUpperLimitActualRotation(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitactualrotation.

        """
        return _StepKinematics.StepKinematics_ScrewPairWithRange_SetUpperLimitActualRotation(self, *args)

    def UpperLimitActualRotation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitactualrotation.

        """
        return _StepKinematics.StepKinematics_ScrewPairWithRange_UpperLimitActualRotation(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_ScrewPairWithRange_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_ScrewPairWithRange

# Register StepKinematics_ScrewPairWithRange in _StepKinematics:
_StepKinematics.StepKinematics_ScrewPairWithRange_swigregister(StepKinematics_ScrewPairWithRange)
class StepKinematics_SlidingCurvePair(StepKinematics_PlanarCurvePair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_SlidingCurvePair_swiginit(self, _StepKinematics.new_StepKinematics_SlidingCurvePair(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_SlidingCurvePair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_SlidingCurvePair

# Register StepKinematics_SlidingCurvePair in _StepKinematics:
_StepKinematics.StepKinematics_SlidingCurvePair_swigregister(StepKinematics_SlidingCurvePair)
class StepKinematics_SlidingSurfacePair(StepKinematics_SurfacePair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_SlidingSurfacePair_swiginit(self, _StepKinematics.new_StepKinematics_SlidingSurfacePair(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_SlidingSurfacePair_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_SlidingSurfacePair

# Register StepKinematics_SlidingSurfacePair in _StepKinematics:
_StepKinematics.StepKinematics_SlidingSurfacePair_swigregister(StepKinematics_SlidingSurfacePair)
class StepKinematics_SphericalPairWithPinAndRange(StepKinematics_SphericalPairWithPin):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_SphericalPairWithPinAndRange_swiginit(self, _StepKinematics.new_StepKinematics_SphericalPairWithPinAndRange(*args))

    def HasLowerLimitRoll(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitroll is defined.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithPinAndRange_HasLowerLimitRoll(self, *args)

    def HasLowerLimitYaw(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimityaw is defined.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithPinAndRange_HasLowerLimitYaw(self, *args)

    def HasUpperLimitRoll(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitroll is defined.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithPinAndRange_HasUpperLimitRoll(self, *args)

    def HasUpperLimitYaw(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimityaw is defined.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithPinAndRange_HasUpperLimitYaw(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        theLowOrderKinematicPair_TX: bool
        theLowOrderKinematicPair_TY: bool
        theLowOrderKinematicPair_TZ: bool
        theLowOrderKinematicPair_RX: bool
        theLowOrderKinematicPair_RY: bool
        theLowOrderKinematicPair_RZ: bool
        hasLowerLimitYaw: bool
        theLowerLimitYaw: float
        hasUpperLimitYaw: bool
        theUpperLimitYaw: float
        hasLowerLimitRoll: bool
        theLowerLimitRoll: float
        hasUpperLimitRoll: bool
        theUpperLimitRoll: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_SphericalPairWithPinAndRange_Init(self, *args)

    def LowerLimitRoll(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitroll.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithPinAndRange_LowerLimitRoll(self, *args)

    def LowerLimitYaw(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimityaw.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithPinAndRange_LowerLimitYaw(self, *args)

    def SetLowerLimitRoll(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitRoll: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitroll.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithPinAndRange_SetLowerLimitRoll(self, *args)

    def SetLowerLimitYaw(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitYaw: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimityaw.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithPinAndRange_SetLowerLimitYaw(self, *args)

    def SetUpperLimitRoll(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitRoll: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitroll.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithPinAndRange_SetUpperLimitRoll(self, *args)

    def SetUpperLimitYaw(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitYaw: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimityaw.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithPinAndRange_SetUpperLimitYaw(self, *args)

    def UpperLimitRoll(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitroll.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithPinAndRange_UpperLimitRoll(self, *args)

    def UpperLimitYaw(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimityaw.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithPinAndRange_UpperLimitYaw(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_SphericalPairWithPinAndRange_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_SphericalPairWithPinAndRange

# Register StepKinematics_SphericalPairWithPinAndRange in _StepKinematics:
_StepKinematics.StepKinematics_SphericalPairWithPinAndRange_swigregister(StepKinematics_SphericalPairWithPinAndRange)
class StepKinematics_SphericalPairWithRange(StepKinematics_SphericalPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_SphericalPairWithRange_swiginit(self, _StepKinematics.new_StepKinematics_SphericalPairWithRange(*args))

    def HasLowerLimitPitch(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitpitch is defined.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithRange_HasLowerLimitPitch(self, *args)

    def HasLowerLimitRoll(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitroll is defined.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithRange_HasLowerLimitRoll(self, *args)

    def HasLowerLimitYaw(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimityaw is defined.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithRange_HasLowerLimitYaw(self, *args)

    def HasUpperLimitPitch(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitpitch is defined.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithRange_HasUpperLimitPitch(self, *args)

    def HasUpperLimitRoll(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitroll is defined.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithRange_HasUpperLimitRoll(self, *args)

    def HasUpperLimitYaw(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimityaw is defined.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithRange_HasUpperLimitYaw(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        theLowOrderKinematicPair_TX: bool
        theLowOrderKinematicPair_TY: bool
        theLowOrderKinematicPair_TZ: bool
        theLowOrderKinematicPair_RX: bool
        theLowOrderKinematicPair_RY: bool
        theLowOrderKinematicPair_RZ: bool
        hasLowerLimitYaw: bool
        theLowerLimitYaw: float
        hasUpperLimitYaw: bool
        theUpperLimitYaw: float
        hasLowerLimitPitch: bool
        theLowerLimitPitch: float
        hasUpperLimitPitch: bool
        theUpperLimitPitch: float
        hasLowerLimitRoll: bool
        theLowerLimitRoll: float
        hasUpperLimitRoll: bool
        theUpperLimitRoll: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_SphericalPairWithRange_Init(self, *args)

    def LowerLimitPitch(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitpitch.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithRange_LowerLimitPitch(self, *args)

    def LowerLimitRoll(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitroll.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithRange_LowerLimitRoll(self, *args)

    def LowerLimitYaw(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimityaw.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithRange_LowerLimitYaw(self, *args)

    def SetLowerLimitPitch(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitPitch: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitpitch.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithRange_SetLowerLimitPitch(self, *args)

    def SetLowerLimitRoll(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitRoll: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitroll.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithRange_SetLowerLimitRoll(self, *args)

    def SetLowerLimitYaw(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitYaw: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimityaw.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithRange_SetLowerLimitYaw(self, *args)

    def SetUpperLimitPitch(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitPitch: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitpitch.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithRange_SetUpperLimitPitch(self, *args)

    def SetUpperLimitRoll(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitRoll: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitroll.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithRange_SetUpperLimitRoll(self, *args)

    def SetUpperLimitYaw(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitYaw: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimityaw.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithRange_SetUpperLimitYaw(self, *args)

    def UpperLimitPitch(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitpitch.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithRange_UpperLimitPitch(self, *args)

    def UpperLimitRoll(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitroll.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithRange_UpperLimitRoll(self, *args)

    def UpperLimitYaw(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimityaw.

        """
        return _StepKinematics.StepKinematics_SphericalPairWithRange_UpperLimitYaw(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_SphericalPairWithRange_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_SphericalPairWithRange

# Register StepKinematics_SphericalPairWithRange in _StepKinematics:
_StepKinematics.StepKinematics_SphericalPairWithRange_swigregister(StepKinematics_SphericalPairWithRange)
class StepKinematics_SurfacePairWithRange(StepKinematics_SurfacePair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_SurfacePairWithRange_swiginit(self, _StepKinematics.new_StepKinematics_SurfacePairWithRange(*args))

    def HasLowerLimitActualRotation(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitactualrotation is defined.

        """
        return _StepKinematics.StepKinematics_SurfacePairWithRange_HasLowerLimitActualRotation(self, *args)

    def HasUpperLimitActualRotation(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitactualrotation is defined.

        """
        return _StepKinematics.StepKinematics_SurfacePairWithRange_HasUpperLimitActualRotation(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        theSurfacePair_Surface1: StepGeom_Surface
        theSurfacePair_Surface2: StepGeom_Surface
        theSurfacePair_Orientation: bool
        theRangeOnSurface1: StepGeom_RectangularTrimmedSurface
        theRangeOnSurface2: StepGeom_RectangularTrimmedSurface
        hasLowerLimitActualRotation: bool
        theLowerLimitActualRotation: float
        hasUpperLimitActualRotation: bool
        theUpperLimitActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_SurfacePairWithRange_Init(self, *args)

    def LowerLimitActualRotation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitactualrotation.

        """
        return _StepKinematics.StepKinematics_SurfacePairWithRange_LowerLimitActualRotation(self, *args)

    def RangeOnSurface1(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_RectangularTrimmedSurface>

        Description
        -----------
        Returns field rangeonsurface1.

        """
        return _StepKinematics.StepKinematics_SurfacePairWithRange_RangeOnSurface1(self, *args)

    def RangeOnSurface2(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_RectangularTrimmedSurface>

        Description
        -----------
        Returns field rangeonsurface2.

        """
        return _StepKinematics.StepKinematics_SurfacePairWithRange_RangeOnSurface2(self, *args)

    def SetLowerLimitActualRotation(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitactualrotation.

        """
        return _StepKinematics.StepKinematics_SurfacePairWithRange_SetLowerLimitActualRotation(self, *args)

    def SetRangeOnSurface1(self, *args):
        r"""

        Parameters
        ----------
        theRangeOnSurface1: StepGeom_RectangularTrimmedSurface

        Return
        -------
        None

        Description
        -----------
        Sets field rangeonsurface1.

        """
        return _StepKinematics.StepKinematics_SurfacePairWithRange_SetRangeOnSurface1(self, *args)

    def SetRangeOnSurface2(self, *args):
        r"""

        Parameters
        ----------
        theRangeOnSurface2: StepGeom_RectangularTrimmedSurface

        Return
        -------
        None

        Description
        -----------
        Sets field rangeonsurface2.

        """
        return _StepKinematics.StepKinematics_SurfacePairWithRange_SetRangeOnSurface2(self, *args)

    def SetUpperLimitActualRotation(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitActualRotation: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitactualrotation.

        """
        return _StepKinematics.StepKinematics_SurfacePairWithRange_SetUpperLimitActualRotation(self, *args)

    def UpperLimitActualRotation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitactualrotation.

        """
        return _StepKinematics.StepKinematics_SurfacePairWithRange_UpperLimitActualRotation(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_SurfacePairWithRange_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_SurfacePairWithRange

# Register StepKinematics_SurfacePairWithRange in _StepKinematics:
_StepKinematics.StepKinematics_SurfacePairWithRange_swigregister(StepKinematics_SurfacePairWithRange)
class StepKinematics_UniversalPairWithRange(StepKinematics_UniversalPair):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default constructor.

        """
        _StepKinematics.StepKinematics_UniversalPairWithRange_swiginit(self, _StepKinematics.new_StepKinematics_UniversalPairWithRange(*args))

    def HasLowerLimitFirstRotation(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitfirstrotation is defined.

        """
        return _StepKinematics.StepKinematics_UniversalPairWithRange_HasLowerLimitFirstRotation(self, *args)

    def HasLowerLimitSecondRotation(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field lowerlimitsecondrotation is defined.

        """
        return _StepKinematics.StepKinematics_UniversalPairWithRange_HasLowerLimitSecondRotation(self, *args)

    def HasUpperLimitFirstRotation(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitfirstrotation is defined.

        """
        return _StepKinematics.StepKinematics_UniversalPairWithRange_HasUpperLimitFirstRotation(self, *args)

    def HasUpperLimitSecondRotation(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if optional field upperlimitsecondrotation is defined.

        """
        return _StepKinematics.StepKinematics_UniversalPairWithRange_HasUpperLimitSecondRotation(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theRepresentationItem_Name: TCollection_HAsciiString
        theItemDefinedTransformation_Name: TCollection_HAsciiString
        hasItemDefinedTransformation_Description: bool
        theItemDefinedTransformation_Description: TCollection_HAsciiString
        theItemDefinedTransformation_TransformItem1: StepRepr_RepresentationItem
        theItemDefinedTransformation_TransformItem2: StepRepr_RepresentationItem
        theKinematicPair_Joint: StepKinematics_KinematicJoint
        theLowOrderKinematicPair_TX: bool
        theLowOrderKinematicPair_TY: bool
        theLowOrderKinematicPair_TZ: bool
        theLowOrderKinematicPair_RX: bool
        theLowOrderKinematicPair_RY: bool
        theLowOrderKinematicPair_RZ: bool
        hasUniversalPair_InputSkewAngle: bool
        theUniversalPair_InputSkewAngle: float
        hasLowerLimitFirstRotation: bool
        theLowerLimitFirstRotation: float
        hasUpperLimitFirstRotation: bool
        theUpperLimitFirstRotation: float
        hasLowerLimitSecondRotation: bool
        theLowerLimitSecondRotation: float
        hasUpperLimitSecondRotation: bool
        theUpperLimitSecondRotation: float

        Return
        -------
        None

        Description
        -----------
        Initialize all fields (own and inherited).

        """
        return _StepKinematics.StepKinematics_UniversalPairWithRange_Init(self, *args)

    def LowerLimitFirstRotation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitfirstrotation.

        """
        return _StepKinematics.StepKinematics_UniversalPairWithRange_LowerLimitFirstRotation(self, *args)

    def LowerLimitSecondRotation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field lowerlimitsecondrotation.

        """
        return _StepKinematics.StepKinematics_UniversalPairWithRange_LowerLimitSecondRotation(self, *args)

    def SetLowerLimitFirstRotation(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitFirstRotation: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitfirstrotation.

        """
        return _StepKinematics.StepKinematics_UniversalPairWithRange_SetLowerLimitFirstRotation(self, *args)

    def SetLowerLimitSecondRotation(self, *args):
        r"""

        Parameters
        ----------
        theLowerLimitSecondRotation: float

        Return
        -------
        None

        Description
        -----------
        Sets field lowerlimitsecondrotation.

        """
        return _StepKinematics.StepKinematics_UniversalPairWithRange_SetLowerLimitSecondRotation(self, *args)

    def SetUpperLimitFirstRotation(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitFirstRotation: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitfirstrotation.

        """
        return _StepKinematics.StepKinematics_UniversalPairWithRange_SetUpperLimitFirstRotation(self, *args)

    def SetUpperLimitSecondRotation(self, *args):
        r"""

        Parameters
        ----------
        theUpperLimitSecondRotation: float

        Return
        -------
        None

        Description
        -----------
        Sets field upperlimitsecondrotation.

        """
        return _StepKinematics.StepKinematics_UniversalPairWithRange_SetUpperLimitSecondRotation(self, *args)

    def UpperLimitFirstRotation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitfirstrotation.

        """
        return _StepKinematics.StepKinematics_UniversalPairWithRange_UpperLimitFirstRotation(self, *args)

    def UpperLimitSecondRotation(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns field upperlimitsecondrotation.

        """
        return _StepKinematics.StepKinematics_UniversalPairWithRange_UpperLimitSecondRotation(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_StepKinematics_UniversalPairWithRange_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepKinematics.delete_StepKinematics_UniversalPairWithRange

# Register StepKinematics_UniversalPairWithRange in _StepKinematics:
_StepKinematics.StepKinematics_UniversalPairWithRange_swigregister(StepKinematics_UniversalPairWithRange)



