# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

"""
ChFiDS module, see official documentation at
https://www.opencascade.com/doc/occt-7.7.0/refman/html/package_chfids.html
"""

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _ChFiDS
else:
    import _ChFiDS

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _ChFiDS.delete_SwigPyIterator

    def value(self):
        return _ChFiDS.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _ChFiDS.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _ChFiDS.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _ChFiDS.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _ChFiDS.SwigPyIterator_equal(self, x)

    def copy(self):
        return _ChFiDS.SwigPyIterator_copy(self)

    def next(self):
        return _ChFiDS.SwigPyIterator_next(self)

    def __next__(self):
        return _ChFiDS.SwigPyIterator___next__(self)

    def previous(self):
        return _ChFiDS.SwigPyIterator_previous(self)

    def advance(self, n):
        return _ChFiDS.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _ChFiDS.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _ChFiDS.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _ChFiDS.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _ChFiDS.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _ChFiDS.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _ChFiDS.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _ChFiDS:
_ChFiDS.SwigPyIterator_swigregister(SwigPyIterator)

def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error, method_name, class_name):
    return _ChFiDS.process_exception(error, method_name, class_name)

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.gp
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.TopoDS
import OCC.Core.Message
import OCC.Core.OSD
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.Adaptor3d
import OCC.Core.Geom
import OCC.Core.GeomAbs
import OCC.Core.TColgp
import OCC.Core.Adaptor2d
import OCC.Core.Geom2d
import OCC.Core.math
import OCC.Core.TopTools
import OCC.Core.BRepAdaptor
import OCC.Core.GeomAdaptor
import OCC.Core.Geom2dAdaptor
import OCC.Core.Law

from enum import IntEnum
from OCC.Core.Exception import *

ChFiDS_Sym = _ChFiDS.ChFiDS_Sym
ChFiDS_TwoDist = _ChFiDS.ChFiDS_TwoDist
ChFiDS_DistAngle = _ChFiDS.ChFiDS_DistAngle
ChFiDS_ClassicChamfer = _ChFiDS.ChFiDS_ClassicChamfer
ChFiDS_ConstThroatChamfer = _ChFiDS.ChFiDS_ConstThroatChamfer
ChFiDS_ConstThroatWithPenetrationChamfer = _ChFiDS.ChFiDS_ConstThroatWithPenetrationChamfer
ChFiDS_Ok = _ChFiDS.ChFiDS_Ok
ChFiDS_Error = _ChFiDS.ChFiDS_Error
ChFiDS_WalkingFailure = _ChFiDS.ChFiDS_WalkingFailure
ChFiDS_StartsolFailure = _ChFiDS.ChFiDS_StartsolFailure
ChFiDS_TwistedSurface = _ChFiDS.ChFiDS_TwistedSurface
ChFiDS_OnSame = _ChFiDS.ChFiDS_OnSame
ChFiDS_OnDiff = _ChFiDS.ChFiDS_OnDiff
ChFiDS_AllSame = _ChFiDS.ChFiDS_AllSame
ChFiDS_BreakPoint = _ChFiDS.ChFiDS_BreakPoint
ChFiDS_FreeBoundary = _ChFiDS.ChFiDS_FreeBoundary
ChFiDS_Closed = _ChFiDS.ChFiDS_Closed
ChFiDS_Tangent = _ChFiDS.ChFiDS_Tangent
ChFiDS_Concave = _ChFiDS.ChFiDS_Concave
ChFiDS_Convex = _ChFiDS.ChFiDS_Convex
ChFiDS_Tangential = _ChFiDS.ChFiDS_Tangential
ChFiDS_FreeBound = _ChFiDS.ChFiDS_FreeBound
ChFiDS_Other = _ChFiDS.ChFiDS_Other
ChFiDS_Mixed = _ChFiDS.ChFiDS_Mixed


class ChFiDS_ChamfMethod(IntEnum):
	ChFiDS_Sym = 0
	ChFiDS_TwoDist = 1
	ChFiDS_DistAngle = 2
ChFiDS_Sym = ChFiDS_ChamfMethod.ChFiDS_Sym
ChFiDS_TwoDist = ChFiDS_ChamfMethod.ChFiDS_TwoDist
ChFiDS_DistAngle = ChFiDS_ChamfMethod.ChFiDS_DistAngle

class ChFiDS_ChamfMode(IntEnum):
	ChFiDS_ClassicChamfer = 0
	ChFiDS_ConstThroatChamfer = 1
	ChFiDS_ConstThroatWithPenetrationChamfer = 2
ChFiDS_ClassicChamfer = ChFiDS_ChamfMode.ChFiDS_ClassicChamfer
ChFiDS_ConstThroatChamfer = ChFiDS_ChamfMode.ChFiDS_ConstThroatChamfer
ChFiDS_ConstThroatWithPenetrationChamfer = ChFiDS_ChamfMode.ChFiDS_ConstThroatWithPenetrationChamfer

class ChFiDS_ErrorStatus(IntEnum):
	ChFiDS_Ok = 0
	ChFiDS_Error = 1
	ChFiDS_WalkingFailure = 2
	ChFiDS_StartsolFailure = 3
	ChFiDS_TwistedSurface = 4
ChFiDS_Ok = ChFiDS_ErrorStatus.ChFiDS_Ok
ChFiDS_Error = ChFiDS_ErrorStatus.ChFiDS_Error
ChFiDS_WalkingFailure = ChFiDS_ErrorStatus.ChFiDS_WalkingFailure
ChFiDS_StartsolFailure = ChFiDS_ErrorStatus.ChFiDS_StartsolFailure
ChFiDS_TwistedSurface = ChFiDS_ErrorStatus.ChFiDS_TwistedSurface

class ChFiDS_State(IntEnum):
	ChFiDS_OnSame = 0
	ChFiDS_OnDiff = 1
	ChFiDS_AllSame = 2
	ChFiDS_BreakPoint = 3
	ChFiDS_FreeBoundary = 4
	ChFiDS_Closed = 5
	ChFiDS_Tangent = 6
ChFiDS_OnSame = ChFiDS_State.ChFiDS_OnSame
ChFiDS_OnDiff = ChFiDS_State.ChFiDS_OnDiff
ChFiDS_AllSame = ChFiDS_State.ChFiDS_AllSame
ChFiDS_BreakPoint = ChFiDS_State.ChFiDS_BreakPoint
ChFiDS_FreeBoundary = ChFiDS_State.ChFiDS_FreeBoundary
ChFiDS_Closed = ChFiDS_State.ChFiDS_Closed
ChFiDS_Tangent = ChFiDS_State.ChFiDS_Tangent

class ChFiDS_TypeOfConcavity(IntEnum):
	ChFiDS_Concave = 0
	ChFiDS_Convex = 1
	ChFiDS_Tangential = 2
	ChFiDS_FreeBound = 3
	ChFiDS_Other = 4
	ChFiDS_Mixed = 5
ChFiDS_Concave = ChFiDS_TypeOfConcavity.ChFiDS_Concave
ChFiDS_Convex = ChFiDS_TypeOfConcavity.ChFiDS_Convex
ChFiDS_Tangential = ChFiDS_TypeOfConcavity.ChFiDS_Tangential
ChFiDS_FreeBound = ChFiDS_TypeOfConcavity.ChFiDS_FreeBound
ChFiDS_Other = ChFiDS_TypeOfConcavity.ChFiDS_Other
ChFiDS_Mixed = ChFiDS_TypeOfConcavity.ChFiDS_Mixed


def Handle_ChFiDS_ElSpine_Create():
    return _ChFiDS.Handle_ChFiDS_ElSpine_Create()

def Handle_ChFiDS_ElSpine_DownCast(t):
    return _ChFiDS.Handle_ChFiDS_ElSpine_DownCast(t)

def Handle_ChFiDS_ElSpine_IsNull(t):
    return _ChFiDS.Handle_ChFiDS_ElSpine_IsNull(t)

def Handle_ChFiDS_Spine_Create():
    return _ChFiDS.Handle_ChFiDS_Spine_Create()

def Handle_ChFiDS_Spine_DownCast(t):
    return _ChFiDS.Handle_ChFiDS_Spine_DownCast(t)

def Handle_ChFiDS_Spine_IsNull(t):
    return _ChFiDS.Handle_ChFiDS_Spine_IsNull(t)

def Handle_ChFiDS_Stripe_Create():
    return _ChFiDS.Handle_ChFiDS_Stripe_Create()

def Handle_ChFiDS_Stripe_DownCast(t):
    return _ChFiDS.Handle_ChFiDS_Stripe_DownCast(t)

def Handle_ChFiDS_Stripe_IsNull(t):
    return _ChFiDS.Handle_ChFiDS_Stripe_IsNull(t)

def Handle_ChFiDS_SurfData_Create():
    return _ChFiDS.Handle_ChFiDS_SurfData_Create()

def Handle_ChFiDS_SurfData_DownCast(t):
    return _ChFiDS.Handle_ChFiDS_SurfData_DownCast(t)

def Handle_ChFiDS_SurfData_IsNull(t):
    return _ChFiDS.Handle_ChFiDS_SurfData_IsNull(t)

def Handle_ChFiDS_ChamfSpine_Create():
    return _ChFiDS.Handle_ChFiDS_ChamfSpine_Create()

def Handle_ChFiDS_ChamfSpine_DownCast(t):
    return _ChFiDS.Handle_ChFiDS_ChamfSpine_DownCast(t)

def Handle_ChFiDS_ChamfSpine_IsNull(t):
    return _ChFiDS.Handle_ChFiDS_ChamfSpine_IsNull(t)

def Handle_ChFiDS_FilSpine_Create():
    return _ChFiDS.Handle_ChFiDS_FilSpine_Create()

def Handle_ChFiDS_FilSpine_DownCast(t):
    return _ChFiDS.Handle_ChFiDS_FilSpine_DownCast(t)

def Handle_ChFiDS_FilSpine_IsNull(t):
    return _ChFiDS.Handle_ChFiDS_FilSpine_IsNull(t)

def Handle_ChFiDS_SecHArray1_Create():
    return _ChFiDS.Handle_ChFiDS_SecHArray1_Create()

def Handle_ChFiDS_SecHArray1_DownCast(t):
    return _ChFiDS.Handle_ChFiDS_SecHArray1_DownCast(t)

def Handle_ChFiDS_SecHArray1_IsNull(t):
    return _ChFiDS.Handle_ChFiDS_SecHArray1_IsNull(t)

def Handle_ChFiDS_HData_Create():
    return _ChFiDS.Handle_ChFiDS_HData_Create()

def Handle_ChFiDS_HData_DownCast(t):
    return _ChFiDS.Handle_ChFiDS_HData_DownCast(t)

def Handle_ChFiDS_HData_IsNull(t):
    return _ChFiDS.Handle_ChFiDS_HData_IsNull(t)
class ChFiDS_IndexedDataMapOfVertexListOfStripe(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_begin(self)

    def end(self):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_end(self)

    def cbegin(self):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_cbegin(self)

    def cend(self):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_cend(self)

    def __init__(self, *args):
        _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_swiginit(self, _ChFiDS.new_ChFiDS_IndexedDataMapOfVertexListOfStripe(*args))

    def Exchange(self, theOther):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_Exchange(self, theOther)

    def Assign(self, theOther):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_Assign(self, theOther)

    def Set(self, theOther):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_Set(self, theOther)

    def ReSize(self, N):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_ReSize(self, N)

    def Add(self, theKey1, theItem):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_Add(self, theKey1, theItem)

    def Contains(self, theKey1):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_Contains(self, theKey1)

    def Substitute(self, theIndex, theKey1, theItem):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_Substitute(self, theIndex, theKey1, theItem)

    def Swap(self, theIndex1, theIndex2):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_Swap(self, theIndex1, theIndex2)

    def RemoveLast(self):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_RemoveLast(self)

    def RemoveFromIndex(self, theIndex):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_RemoveFromIndex(self, theIndex)

    def RemoveKey(self, theKey1):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_RemoveKey(self, theKey1)

    def FindKey(self, theIndex):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_FindKey(self, theIndex)

    def FindFromIndex(self, theIndex):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_FindFromIndex(self, theIndex)

    def ChangeFromIndex(self, theIndex):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_ChangeFromIndex(self, theIndex)

    def __call__(self, *args):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe___call__(self, *args)

    def FindIndex(self, theKey1):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_FindIndex(self, theKey1)

    def ChangeFromKey(self, theKey1):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_ChangeFromKey(self, theKey1)

    def Seek(self, theKey1):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_Seek(self, theKey1)

    def ChangeSeek(self, theKey1):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_ChangeSeek(self, theKey1)

    def FindFromKey(self, *args):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_FindFromKey(self, *args)

    def Clear(self, *args):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_Clear(self, *args)
    __swig_destroy__ = _ChFiDS.delete_ChFiDS_IndexedDataMapOfVertexListOfStripe

    def Size(self):
        return _ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_Size(self)

# Register ChFiDS_IndexedDataMapOfVertexListOfStripe in _ChFiDS:
_ChFiDS.ChFiDS_IndexedDataMapOfVertexListOfStripe_swigregister(ChFiDS_IndexedDataMapOfVertexListOfStripe)
class ChFiDS_ListIteratorOfListOfHElSpine(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _ChFiDS.ChFiDS_ListIteratorOfListOfHElSpine_swiginit(self, _ChFiDS.new_ChFiDS_ListIteratorOfListOfHElSpine(*args))

    def More(self):
        return _ChFiDS.ChFiDS_ListIteratorOfListOfHElSpine_More(self)

    def Next(self):
        return _ChFiDS.ChFiDS_ListIteratorOfListOfHElSpine_Next(self)

    def Value(self):
        return _ChFiDS.ChFiDS_ListIteratorOfListOfHElSpine_Value(self)

    def ChangeValue(self):
        return _ChFiDS.ChFiDS_ListIteratorOfListOfHElSpine_ChangeValue(self)
    __swig_destroy__ = _ChFiDS.delete_ChFiDS_ListIteratorOfListOfHElSpine

# Register ChFiDS_ListIteratorOfListOfHElSpine in _ChFiDS:
_ChFiDS.ChFiDS_ListIteratorOfListOfHElSpine_swigregister(ChFiDS_ListIteratorOfListOfHElSpine)
class ChFiDS_ListIteratorOfListOfStripe(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _ChFiDS.ChFiDS_ListIteratorOfListOfStripe_swiginit(self, _ChFiDS.new_ChFiDS_ListIteratorOfListOfStripe(*args))

    def More(self):
        return _ChFiDS.ChFiDS_ListIteratorOfListOfStripe_More(self)

    def Next(self):
        return _ChFiDS.ChFiDS_ListIteratorOfListOfStripe_Next(self)

    def Value(self):
        return _ChFiDS.ChFiDS_ListIteratorOfListOfStripe_Value(self)

    def ChangeValue(self):
        return _ChFiDS.ChFiDS_ListIteratorOfListOfStripe_ChangeValue(self)
    __swig_destroy__ = _ChFiDS.delete_ChFiDS_ListIteratorOfListOfStripe

# Register ChFiDS_ListIteratorOfListOfStripe in _ChFiDS:
_ChFiDS.ChFiDS_ListIteratorOfListOfStripe_swigregister(ChFiDS_ListIteratorOfListOfStripe)
class ChFiDS_ListIteratorOfRegularities(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _ChFiDS.ChFiDS_ListIteratorOfRegularities_swiginit(self, _ChFiDS.new_ChFiDS_ListIteratorOfRegularities(*args))

    def More(self):
        return _ChFiDS.ChFiDS_ListIteratorOfRegularities_More(self)

    def Next(self):
        return _ChFiDS.ChFiDS_ListIteratorOfRegularities_Next(self)

    def Value(self):
        return _ChFiDS.ChFiDS_ListIteratorOfRegularities_Value(self)

    def ChangeValue(self):
        return _ChFiDS.ChFiDS_ListIteratorOfRegularities_ChangeValue(self)
    __swig_destroy__ = _ChFiDS.delete_ChFiDS_ListIteratorOfRegularities

# Register ChFiDS_ListIteratorOfRegularities in _ChFiDS:
_ChFiDS.ChFiDS_ListIteratorOfRegularities_swigregister(ChFiDS_ListIteratorOfRegularities)
class ChFiDS_ListOfHElSpine(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _ChFiDS.ChFiDS_ListOfHElSpine_begin(self)

    def end(self):
        return _ChFiDS.ChFiDS_ListOfHElSpine_end(self)

    def cbegin(self):
        return _ChFiDS.ChFiDS_ListOfHElSpine_cbegin(self)

    def cend(self):
        return _ChFiDS.ChFiDS_ListOfHElSpine_cend(self)

    def __init__(self, *args):
        _ChFiDS.ChFiDS_ListOfHElSpine_swiginit(self, _ChFiDS.new_ChFiDS_ListOfHElSpine(*args))

    def Size(self):
        return _ChFiDS.ChFiDS_ListOfHElSpine_Size(self)

    def Assign(self, theOther):
        return _ChFiDS.ChFiDS_ListOfHElSpine_Assign(self, theOther)

    def Set(self, theOther):
        return _ChFiDS.ChFiDS_ListOfHElSpine_Set(self, theOther)

    def Clear(self, theAllocator=0):
        return _ChFiDS.ChFiDS_ListOfHElSpine_Clear(self, theAllocator)

    def First(self):
        return _ChFiDS.ChFiDS_ListOfHElSpine_First(self)

    def Last(self):
        return _ChFiDS.ChFiDS_ListOfHElSpine_Last(self)

    def Append(self, *args):
        return _ChFiDS.ChFiDS_ListOfHElSpine_Append(self, *args)

    def Prepend(self, *args):
        return _ChFiDS.ChFiDS_ListOfHElSpine_Prepend(self, *args)

    def RemoveFirst(self):
        return _ChFiDS.ChFiDS_ListOfHElSpine_RemoveFirst(self)

    def Remove(self, theIter):
        return _ChFiDS.ChFiDS_ListOfHElSpine_Remove(self, theIter)

    def InsertBefore(self, *args):
        return _ChFiDS.ChFiDS_ListOfHElSpine_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        return _ChFiDS.ChFiDS_ListOfHElSpine_InsertAfter(self, *args)

    def Reverse(self):
        return _ChFiDS.ChFiDS_ListOfHElSpine_Reverse(self)
    __swig_destroy__ = _ChFiDS.delete_ChFiDS_ListOfHElSpine

    def __len__(self):
        return self.Size()


# Register ChFiDS_ListOfHElSpine in _ChFiDS:
_ChFiDS.ChFiDS_ListOfHElSpine_swigregister(ChFiDS_ListOfHElSpine)
class ChFiDS_ListOfStripe(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _ChFiDS.ChFiDS_ListOfStripe_begin(self)

    def end(self):
        return _ChFiDS.ChFiDS_ListOfStripe_end(self)

    def cbegin(self):
        return _ChFiDS.ChFiDS_ListOfStripe_cbegin(self)

    def cend(self):
        return _ChFiDS.ChFiDS_ListOfStripe_cend(self)

    def __init__(self, *args):
        _ChFiDS.ChFiDS_ListOfStripe_swiginit(self, _ChFiDS.new_ChFiDS_ListOfStripe(*args))

    def Size(self):
        return _ChFiDS.ChFiDS_ListOfStripe_Size(self)

    def Assign(self, theOther):
        return _ChFiDS.ChFiDS_ListOfStripe_Assign(self, theOther)

    def Set(self, theOther):
        return _ChFiDS.ChFiDS_ListOfStripe_Set(self, theOther)

    def Clear(self, theAllocator=0):
        return _ChFiDS.ChFiDS_ListOfStripe_Clear(self, theAllocator)

    def First(self):
        return _ChFiDS.ChFiDS_ListOfStripe_First(self)

    def Last(self):
        return _ChFiDS.ChFiDS_ListOfStripe_Last(self)

    def Append(self, *args):
        return _ChFiDS.ChFiDS_ListOfStripe_Append(self, *args)

    def Prepend(self, *args):
        return _ChFiDS.ChFiDS_ListOfStripe_Prepend(self, *args)

    def RemoveFirst(self):
        return _ChFiDS.ChFiDS_ListOfStripe_RemoveFirst(self)

    def Remove(self, theIter):
        return _ChFiDS.ChFiDS_ListOfStripe_Remove(self, theIter)

    def InsertBefore(self, *args):
        return _ChFiDS.ChFiDS_ListOfStripe_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        return _ChFiDS.ChFiDS_ListOfStripe_InsertAfter(self, *args)

    def Reverse(self):
        return _ChFiDS.ChFiDS_ListOfStripe_Reverse(self)
    __swig_destroy__ = _ChFiDS.delete_ChFiDS_ListOfStripe

    def __len__(self):
        return self.Size()


# Register ChFiDS_ListOfStripe in _ChFiDS:
_ChFiDS.ChFiDS_ListOfStripe_swigregister(ChFiDS_ListOfStripe)
class ChFiDS_Regularities(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _ChFiDS.ChFiDS_Regularities_begin(self)

    def end(self):
        return _ChFiDS.ChFiDS_Regularities_end(self)

    def cbegin(self):
        return _ChFiDS.ChFiDS_Regularities_cbegin(self)

    def cend(self):
        return _ChFiDS.ChFiDS_Regularities_cend(self)

    def __init__(self, *args):
        _ChFiDS.ChFiDS_Regularities_swiginit(self, _ChFiDS.new_ChFiDS_Regularities(*args))

    def Size(self):
        return _ChFiDS.ChFiDS_Regularities_Size(self)

    def Assign(self, theOther):
        return _ChFiDS.ChFiDS_Regularities_Assign(self, theOther)

    def Set(self, theOther):
        return _ChFiDS.ChFiDS_Regularities_Set(self, theOther)

    def Clear(self, theAllocator=0):
        return _ChFiDS.ChFiDS_Regularities_Clear(self, theAllocator)

    def First(self):
        return _ChFiDS.ChFiDS_Regularities_First(self)

    def Last(self):
        return _ChFiDS.ChFiDS_Regularities_Last(self)

    def Append(self, *args):
        return _ChFiDS.ChFiDS_Regularities_Append(self, *args)

    def Prepend(self, *args):
        return _ChFiDS.ChFiDS_Regularities_Prepend(self, *args)

    def RemoveFirst(self):
        return _ChFiDS.ChFiDS_Regularities_RemoveFirst(self)

    def Remove(self, theIter):
        return _ChFiDS.ChFiDS_Regularities_Remove(self, theIter)

    def InsertBefore(self, *args):
        return _ChFiDS.ChFiDS_Regularities_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        return _ChFiDS.ChFiDS_Regularities_InsertAfter(self, *args)

    def Reverse(self):
        return _ChFiDS.ChFiDS_Regularities_Reverse(self)
    __swig_destroy__ = _ChFiDS.delete_ChFiDS_Regularities

    def __len__(self):
        return self.Size()


# Register ChFiDS_Regularities in _ChFiDS:
_ChFiDS.ChFiDS_Regularities_swigregister(ChFiDS_Regularities)
class ChFiDS_SecArray1(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _ChFiDS.ChFiDS_SecArray1_begin(self)

    def end(self):
        return _ChFiDS.ChFiDS_SecArray1_end(self)

    def cbegin(self):
        return _ChFiDS.ChFiDS_SecArray1_cbegin(self)

    def cend(self):
        return _ChFiDS.ChFiDS_SecArray1_cend(self)

    def __init__(self, *args):
        _ChFiDS.ChFiDS_SecArray1_swiginit(self, _ChFiDS.new_ChFiDS_SecArray1(*args))

    def Init(self, theValue):
        return _ChFiDS.ChFiDS_SecArray1_Init(self, theValue)

    def Size(self):
        return _ChFiDS.ChFiDS_SecArray1_Size(self)

    def Length(self):
        return _ChFiDS.ChFiDS_SecArray1_Length(self)

    def IsEmpty(self):
        return _ChFiDS.ChFiDS_SecArray1_IsEmpty(self)

    def Lower(self):
        return _ChFiDS.ChFiDS_SecArray1_Lower(self)

    def Upper(self):
        return _ChFiDS.ChFiDS_SecArray1_Upper(self)

    def IsDeletable(self):
        return _ChFiDS.ChFiDS_SecArray1_IsDeletable(self)

    def IsAllocated(self):
        return _ChFiDS.ChFiDS_SecArray1_IsAllocated(self)

    def Assign(self, theOther):
        return _ChFiDS.ChFiDS_SecArray1_Assign(self, theOther)

    def Move(self, theOther):
        return _ChFiDS.ChFiDS_SecArray1_Move(self, theOther)

    def Set(self, *args):
        return _ChFiDS.ChFiDS_SecArray1_Set(self, *args)

    def First(self):
        return _ChFiDS.ChFiDS_SecArray1_First(self)

    def ChangeFirst(self):
        return _ChFiDS.ChFiDS_SecArray1_ChangeFirst(self)

    def Last(self):
        return _ChFiDS.ChFiDS_SecArray1_Last(self)

    def ChangeLast(self):
        return _ChFiDS.ChFiDS_SecArray1_ChangeLast(self)

    def Value(self, theIndex):
        return _ChFiDS.ChFiDS_SecArray1_Value(self, theIndex)

    def ChangeValue(self, theIndex):
        return _ChFiDS.ChFiDS_SecArray1_ChangeValue(self, theIndex)

    def __call__(self, *args):
        return _ChFiDS.ChFiDS_SecArray1___call__(self, *args)

    def SetValue(self, theIndex, theItem):
        return _ChFiDS.ChFiDS_SecArray1_SetValue(self, theIndex, theItem)

    def Resize(self, theLower, theUpper, theToCopyData):
        return _ChFiDS.ChFiDS_SecArray1_Resize(self, theLower, theUpper, theToCopyData)
    __swig_destroy__ = _ChFiDS.delete_ChFiDS_SecArray1

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register ChFiDS_SecArray1 in _ChFiDS:
_ChFiDS.ChFiDS_SecArray1_swigregister(ChFiDS_SecArray1)
class ChFiDS_SequenceOfSpine(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _ChFiDS.ChFiDS_SequenceOfSpine_begin(self)

    def end(self):
        return _ChFiDS.ChFiDS_SequenceOfSpine_end(self)

    def cbegin(self):
        return _ChFiDS.ChFiDS_SequenceOfSpine_cbegin(self)

    def cend(self):
        return _ChFiDS.ChFiDS_SequenceOfSpine_cend(self)

    def __init__(self, *args):
        _ChFiDS.ChFiDS_SequenceOfSpine_swiginit(self, _ChFiDS.new_ChFiDS_SequenceOfSpine(*args))

    def Size(self):
        return _ChFiDS.ChFiDS_SequenceOfSpine_Size(self)

    def Length(self):
        return _ChFiDS.ChFiDS_SequenceOfSpine_Length(self)

    def Lower(self):
        return _ChFiDS.ChFiDS_SequenceOfSpine_Lower(self)

    def Upper(self):
        return _ChFiDS.ChFiDS_SequenceOfSpine_Upper(self)

    def IsEmpty(self):
        return _ChFiDS.ChFiDS_SequenceOfSpine_IsEmpty(self)

    def Reverse(self):
        return _ChFiDS.ChFiDS_SequenceOfSpine_Reverse(self)

    def Exchange(self, I, J):
        return _ChFiDS.ChFiDS_SequenceOfSpine_Exchange(self, I, J)

    @staticmethod
    def delNode(theNode, theAl):
        return _ChFiDS.ChFiDS_SequenceOfSpine_delNode(theNode, theAl)

    def Clear(self, theAllocator=0):
        return _ChFiDS.ChFiDS_SequenceOfSpine_Clear(self, theAllocator)

    def Assign(self, theOther):
        return _ChFiDS.ChFiDS_SequenceOfSpine_Assign(self, theOther)

    def Set(self, theOther):
        return _ChFiDS.ChFiDS_SequenceOfSpine_Set(self, theOther)

    def Remove(self, *args):
        return _ChFiDS.ChFiDS_SequenceOfSpine_Remove(self, *args)

    def Append(self, *args):
        return _ChFiDS.ChFiDS_SequenceOfSpine_Append(self, *args)

    def Prepend(self, *args):
        return _ChFiDS.ChFiDS_SequenceOfSpine_Prepend(self, *args)

    def InsertBefore(self, *args):
        return _ChFiDS.ChFiDS_SequenceOfSpine_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        return _ChFiDS.ChFiDS_SequenceOfSpine_InsertAfter(self, *args)

    def Split(self, theIndex, theSeq):
        return _ChFiDS.ChFiDS_SequenceOfSpine_Split(self, theIndex, theSeq)

    def First(self):
        return _ChFiDS.ChFiDS_SequenceOfSpine_First(self)

    def ChangeFirst(self):
        return _ChFiDS.ChFiDS_SequenceOfSpine_ChangeFirst(self)

    def Last(self):
        return _ChFiDS.ChFiDS_SequenceOfSpine_Last(self)

    def ChangeLast(self):
        return _ChFiDS.ChFiDS_SequenceOfSpine_ChangeLast(self)

    def Value(self, theIndex):
        return _ChFiDS.ChFiDS_SequenceOfSpine_Value(self, theIndex)

    def ChangeValue(self, theIndex):
        return _ChFiDS.ChFiDS_SequenceOfSpine_ChangeValue(self, theIndex)

    def __call__(self, *args):
        return _ChFiDS.ChFiDS_SequenceOfSpine___call__(self, *args)

    def SetValue(self, theIndex, theItem):
        return _ChFiDS.ChFiDS_SequenceOfSpine_SetValue(self, theIndex, theItem)
    __swig_destroy__ = _ChFiDS.delete_ChFiDS_SequenceOfSpine

    def __len__(self):
        return self.Size()


# Register ChFiDS_SequenceOfSpine in _ChFiDS:
_ChFiDS.ChFiDS_SequenceOfSpine_swigregister(ChFiDS_SequenceOfSpine)
class ChFiDS_SequenceOfSurfData(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_begin(self)

    def end(self):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_end(self)

    def cbegin(self):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_cbegin(self)

    def cend(self):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_cend(self)

    def __init__(self, *args):
        _ChFiDS.ChFiDS_SequenceOfSurfData_swiginit(self, _ChFiDS.new_ChFiDS_SequenceOfSurfData(*args))

    def Size(self):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_Size(self)

    def Length(self):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_Length(self)

    def Lower(self):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_Lower(self)

    def Upper(self):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_Upper(self)

    def IsEmpty(self):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_IsEmpty(self)

    def Reverse(self):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_Reverse(self)

    def Exchange(self, I, J):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_Exchange(self, I, J)

    @staticmethod
    def delNode(theNode, theAl):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_delNode(theNode, theAl)

    def Clear(self, theAllocator=0):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_Clear(self, theAllocator)

    def Assign(self, theOther):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_Assign(self, theOther)

    def Set(self, theOther):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_Set(self, theOther)

    def Remove(self, *args):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_Remove(self, *args)

    def Append(self, *args):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_Append(self, *args)

    def Prepend(self, *args):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_Prepend(self, *args)

    def InsertBefore(self, *args):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_InsertAfter(self, *args)

    def Split(self, theIndex, theSeq):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_Split(self, theIndex, theSeq)

    def First(self):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_First(self)

    def ChangeFirst(self):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_ChangeFirst(self)

    def Last(self):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_Last(self)

    def ChangeLast(self):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_ChangeLast(self)

    def Value(self, theIndex):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_Value(self, theIndex)

    def ChangeValue(self, theIndex):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_ChangeValue(self, theIndex)

    def __call__(self, *args):
        return _ChFiDS.ChFiDS_SequenceOfSurfData___call__(self, *args)

    def SetValue(self, theIndex, theItem):
        return _ChFiDS.ChFiDS_SequenceOfSurfData_SetValue(self, theIndex, theItem)
    __swig_destroy__ = _ChFiDS.delete_ChFiDS_SequenceOfSurfData

    def __len__(self):
        return self.Size()


# Register ChFiDS_SequenceOfSurfData in _ChFiDS:
_ChFiDS.ChFiDS_SequenceOfSurfData_swigregister(ChFiDS_SequenceOfSurfData)
class ChFiDS_StripeArray1(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _ChFiDS.ChFiDS_StripeArray1_begin(self)

    def end(self):
        return _ChFiDS.ChFiDS_StripeArray1_end(self)

    def cbegin(self):
        return _ChFiDS.ChFiDS_StripeArray1_cbegin(self)

    def cend(self):
        return _ChFiDS.ChFiDS_StripeArray1_cend(self)

    def __init__(self, *args):
        _ChFiDS.ChFiDS_StripeArray1_swiginit(self, _ChFiDS.new_ChFiDS_StripeArray1(*args))

    def Init(self, theValue):
        return _ChFiDS.ChFiDS_StripeArray1_Init(self, theValue)

    def Size(self):
        return _ChFiDS.ChFiDS_StripeArray1_Size(self)

    def Length(self):
        return _ChFiDS.ChFiDS_StripeArray1_Length(self)

    def IsEmpty(self):
        return _ChFiDS.ChFiDS_StripeArray1_IsEmpty(self)

    def Lower(self):
        return _ChFiDS.ChFiDS_StripeArray1_Lower(self)

    def Upper(self):
        return _ChFiDS.ChFiDS_StripeArray1_Upper(self)

    def IsDeletable(self):
        return _ChFiDS.ChFiDS_StripeArray1_IsDeletable(self)

    def IsAllocated(self):
        return _ChFiDS.ChFiDS_StripeArray1_IsAllocated(self)

    def Assign(self, theOther):
        return _ChFiDS.ChFiDS_StripeArray1_Assign(self, theOther)

    def Move(self, theOther):
        return _ChFiDS.ChFiDS_StripeArray1_Move(self, theOther)

    def Set(self, *args):
        return _ChFiDS.ChFiDS_StripeArray1_Set(self, *args)

    def First(self):
        return _ChFiDS.ChFiDS_StripeArray1_First(self)

    def ChangeFirst(self):
        return _ChFiDS.ChFiDS_StripeArray1_ChangeFirst(self)

    def Last(self):
        return _ChFiDS.ChFiDS_StripeArray1_Last(self)

    def ChangeLast(self):
        return _ChFiDS.ChFiDS_StripeArray1_ChangeLast(self)

    def Value(self, theIndex):
        return _ChFiDS.ChFiDS_StripeArray1_Value(self, theIndex)

    def ChangeValue(self, theIndex):
        return _ChFiDS.ChFiDS_StripeArray1_ChangeValue(self, theIndex)

    def __call__(self, *args):
        return _ChFiDS.ChFiDS_StripeArray1___call__(self, *args)

    def SetValue(self, theIndex, theItem):
        return _ChFiDS.ChFiDS_StripeArray1_SetValue(self, theIndex, theItem)

    def Resize(self, theLower, theUpper, theToCopyData):
        return _ChFiDS.ChFiDS_StripeArray1_Resize(self, theLower, theUpper, theToCopyData)
    __swig_destroy__ = _ChFiDS.delete_ChFiDS_StripeArray1

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register ChFiDS_StripeArray1 in _ChFiDS:
_ChFiDS.ChFiDS_StripeArray1_swigregister(ChFiDS_StripeArray1)
class ChFiDS_CircSection(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _ChFiDS.ChFiDS_CircSection_swiginit(self, _ChFiDS.new_ChFiDS_CircSection(*args))

    def Get(self, *args):
        r"""

        Parameters
        ----------
        C: gp_Circ

        Return
        -------
        F: float
        L: float

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        C: gp_Lin

        Return
        -------
        F: float
        L: float

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_CircSection_Get(self, *args)

    def Set(self, *args):
        r"""

        Parameters
        ----------
        C: gp_Circ
        F: float
        L: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        C: gp_Lin
        F: float
        L: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_CircSection_Set(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _ChFiDS.delete_ChFiDS_CircSection

# Register ChFiDS_CircSection in _ChFiDS:
_ChFiDS.ChFiDS_CircSection_swigregister(ChFiDS_CircSection)
class ChFiDS_CommonPoint(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _ChFiDS.ChFiDS_CommonPoint_swiginit(self, _ChFiDS.new_ChFiDS_CommonPoint(*args))

    def Arc(self, *args):
        r"""
        Return
        -------
        TopoDS_Edge

        Description
        -----------
        Returns the arc of restriction containing the vertex.

        """
        return _ChFiDS.ChFiDS_CommonPoint_Arc(self, *args)

    def HasVector(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if the output vector is stored.

        """
        return _ChFiDS.ChFiDS_CommonPoint_HasVector(self, *args)

    def IsOnArc(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if the point is a on an edge of the initial restriction facet of the surface.

        """
        return _ChFiDS.ChFiDS_CommonPoint_IsOnArc(self, *args)

    def IsVertex(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if the point is a vertex on the initial restriction facet of the surface.

        """
        return _ChFiDS.ChFiDS_CommonPoint_IsVertex(self, *args)

    def Parameter(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns the parameter on the spine.

        """
        return _ChFiDS.ChFiDS_CommonPoint_Parameter(self, *args)

    def ParameterOnArc(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns the parameter of the point on the arc returned by the method arc().

        """
        return _ChFiDS.ChFiDS_CommonPoint_ParameterOnArc(self, *args)

    def Point(self, *args):
        r"""
        Return
        -------
        gp_Pnt

        Description
        -----------
        Returns the 3d point.

        """
        return _ChFiDS.ChFiDS_CommonPoint_Point(self, *args)

    def Reset(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Default value for all fields.

        """
        return _ChFiDS.ChFiDS_CommonPoint_Reset(self, *args)

    def SetArc(self, *args):
        r"""

        Parameters
        ----------
        Tol: float
        A: TopoDS_Edge
        Param: float
        TArc: TopAbs_Orientation

        Return
        -------
        None

        Description
        -----------
        Sets the values of a point which is on the arc a, at parameter param.

        """
        return _ChFiDS.ChFiDS_CommonPoint_SetArc(self, *args)

    def SetParameter(self, *args):
        r"""

        Parameters
        ----------
        Param: float

        Return
        -------
        None

        Description
        -----------
        Sets the value of the parameter on the spine.

        """
        return _ChFiDS.ChFiDS_CommonPoint_SetParameter(self, *args)

    def SetPoint(self, *args):
        r"""

        Parameters
        ----------
        thePoint: gp_Pnt

        Return
        -------
        None

        Description
        -----------
        Set the 3d point for a commonpoint that is not a vertex or on an arc.

        """
        return _ChFiDS.ChFiDS_CommonPoint_SetPoint(self, *args)

    def SetTolerance(self, *args):
        r"""

        Parameters
        ----------
        Tol: float

        Return
        -------
        None

        Description
        -----------
        This method set the fuzziness on the point.

        """
        return _ChFiDS.ChFiDS_CommonPoint_SetTolerance(self, *args)

    def SetVector(self, *args):
        r"""

        Parameters
        ----------
        theVector: gp_Vec

        Return
        -------
        None

        Description
        -----------
        Set the output 3d vector.

        """
        return _ChFiDS.ChFiDS_CommonPoint_SetVector(self, *args)

    def SetVertex(self, *args):
        r"""

        Parameters
        ----------
        theVertex: TopoDS_Vertex

        Return
        -------
        None

        Description
        -----------
        Sets the values of a point which is a vertex on the initial facet of restriction of one of the surface.

        """
        return _ChFiDS.ChFiDS_CommonPoint_SetVertex(self, *args)

    def Tolerance(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        This method returns the fuzziness on the point.

        """
        return _ChFiDS.ChFiDS_CommonPoint_Tolerance(self, *args)

    def TransitionOnArc(self, *args):
        r"""
        Return
        -------
        TopAbs_Orientation

        Description
        -----------
        Returns the transition of the point on the arc returned by arc().

        """
        return _ChFiDS.ChFiDS_CommonPoint_TransitionOnArc(self, *args)

    def Vector(self, *args):
        r"""
        Return
        -------
        gp_Vec

        Description
        -----------
        Returns the output 3d vector.

        """
        return _ChFiDS.ChFiDS_CommonPoint_Vector(self, *args)

    def Vertex(self, *args):
        r"""
        Return
        -------
        TopoDS_Vertex

        Description
        -----------
        Returns the information about the point when it is on the domain of the first patch, i-e when the function isvertex returns true. otherwise, an exception is raised.

        """
        return _ChFiDS.ChFiDS_CommonPoint_Vertex(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _ChFiDS.delete_ChFiDS_CommonPoint

# Register ChFiDS_CommonPoint in _ChFiDS:
_ChFiDS.ChFiDS_CommonPoint_swigregister(ChFiDS_CommonPoint)
class ChFiDS_ElSpine(OCC.Core.Adaptor3d.Adaptor3d_Curve):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _ChFiDS.ChFiDS_ElSpine_swiginit(self, _ChFiDS.new_ChFiDS_ElSpine(*args))

    def AddVertexWithTangent(self, *args):
        r"""

        Parameters
        ----------
        anAx1: gp_Ax1

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ElSpine_AddVertexWithTangent(self, *args)

    def ChangeNext(self, *args):
        r"""
        Return
        -------
        opencascade::handle<ChFiDS_SurfData>

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ElSpine_ChangeNext(self, *args)

    def ChangePrevious(self, *args):
        r"""
        Return
        -------
        opencascade::handle<ChFiDS_SurfData>

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ElSpine_ChangePrevious(self, *args)

    def FirstParameter(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        P: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ElSpine_FirstParameter(self, *args)

    def FirstPointAndTgt(self, *args):
        r"""

        Parameters
        ----------
        P: gp_Pnt
        T: gp_Vec

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ElSpine_FirstPointAndTgt(self, *args)

    def GetSavedFirstParameter(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ElSpine_GetSavedFirstParameter(self, *args)

    def GetSavedLastParameter(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ElSpine_GetSavedLastParameter(self, *args)

    def LastParameter(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        P: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ElSpine_LastParameter(self, *args)

    def LastPointAndTgt(self, *args):
        r"""

        Parameters
        ----------
        P: gp_Pnt
        T: gp_Vec

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ElSpine_LastPointAndTgt(self, *args)

    def NbVertices(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ElSpine_NbVertices(self, *args)

    def Next(self, *args):
        r"""
        Return
        -------
        opencascade::handle<ChFiDS_SurfData>

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ElSpine_Next(self, *args)

    def Previous(self, *args):
        r"""
        Return
        -------
        opencascade::handle<ChFiDS_SurfData>

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ElSpine_Previous(self, *args)

    def SaveFirstParameter(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ElSpine_SaveFirstParameter(self, *args)

    def SaveLastParameter(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ElSpine_SaveLastParameter(self, *args)

    def SetCurve(self, *args):
        r"""

        Parameters
        ----------
        C: Geom_Curve

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ElSpine_SetCurve(self, *args)

    def SetFirstPointAndTgt(self, *args):
        r"""

        Parameters
        ----------
        P: gp_Pnt
        T: gp_Vec

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ElSpine_SetFirstPointAndTgt(self, *args)

    def SetLastPointAndTgt(self, *args):
        r"""

        Parameters
        ----------
        P: gp_Pnt
        T: gp_Vec

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ElSpine_SetLastPointAndTgt(self, *args)

    def SetOrigin(self, *args):
        r"""

        Parameters
        ----------
        O: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ElSpine_SetOrigin(self, *args)

    def SetPeriodic(self, *args):
        r"""

        Parameters
        ----------
        I: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ElSpine_SetPeriodic(self, *args)

    def VertexWithTangent(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        gp_Ax1

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ElSpine_VertexWithTangent(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_ChFiDS_ElSpine_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _ChFiDS.delete_ChFiDS_ElSpine

# Register ChFiDS_ElSpine in _ChFiDS:
_ChFiDS.ChFiDS_ElSpine_swigregister(ChFiDS_ElSpine)
class ChFiDS_FaceInterference(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _ChFiDS.ChFiDS_FaceInterference_swiginit(self, _ChFiDS.new_ChFiDS_FaceInterference(*args))

    def ChangePCurveOnFace(self, *args):
        r"""
        Return
        -------
        opencascade::handle<Geom2d_Curve>

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_FaceInterference_ChangePCurveOnFace(self, *args)

    def ChangePCurveOnSurf(self, *args):
        r"""
        Return
        -------
        opencascade::handle<Geom2d_Curve>

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_FaceInterference_ChangePCurveOnSurf(self, *args)

    def FirstParameter(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_FaceInterference_FirstParameter(self, *args)

    def LastParameter(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_FaceInterference_LastParameter(self, *args)

    def LineIndex(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_FaceInterference_LineIndex(self, *args)

    def PCurveOnFace(self, *args):
        r"""
        Return
        -------
        opencascade::handle<Geom2d_Curve>

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_FaceInterference_PCurveOnFace(self, *args)

    def PCurveOnSurf(self, *args):
        r"""
        Return
        -------
        opencascade::handle<Geom2d_Curve>

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_FaceInterference_PCurveOnSurf(self, *args)

    def Parameter(self, *args):
        r"""

        Parameters
        ----------
        IsFirst: bool

        Return
        -------
        float

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_FaceInterference_Parameter(self, *args)

    def SetFirstParameter(self, *args):
        r"""

        Parameters
        ----------
        U1: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_FaceInterference_SetFirstParameter(self, *args)

    def SetInterference(self, *args):
        r"""

        Parameters
        ----------
        LineIndex: int
        Trans: TopAbs_Orientation
        PCurv1: Geom2d_Curve
        PCurv2: Geom2d_Curve

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_FaceInterference_SetInterference(self, *args)

    def SetLastParameter(self, *args):
        r"""

        Parameters
        ----------
        U1: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_FaceInterference_SetLastParameter(self, *args)

    def SetLineIndex(self, *args):
        r"""

        Parameters
        ----------
        I: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_FaceInterference_SetLineIndex(self, *args)

    def SetParameter(self, *args):
        r"""

        Parameters
        ----------
        U1: float
        IsFirst: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_FaceInterference_SetParameter(self, *args)

    def SetTransition(self, *args):
        r"""

        Parameters
        ----------
        Trans: TopAbs_Orientation

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_FaceInterference_SetTransition(self, *args)

    def Transition(self, *args):
        r"""
        Return
        -------
        TopAbs_Orientation

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_FaceInterference_Transition(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _ChFiDS.delete_ChFiDS_FaceInterference

# Register ChFiDS_FaceInterference in _ChFiDS:
_ChFiDS.ChFiDS_FaceInterference_swigregister(ChFiDS_FaceInterference)
class ChFiDS_Map(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Create an empty map.

        """
        _ChFiDS.ChFiDS_Map_swiginit(self, _ChFiDS.new_ChFiDS_Map(*args))

    def Contains(self, *args):
        r"""

        Parameters
        ----------
        S: TopoDS_Shape

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Map_Contains(self, *args)

    def Fill(self, *args):
        r"""

        Parameters
        ----------
        S: TopoDS_Shape
        T1: TopAbs_ShapeEnum
        T2: TopAbs_ShapeEnum

        Return
        -------
        None

        Description
        -----------
        Fills the map with the subshapes of type t1 as keys and the list of ancestors of type t2 as items.

        """
        return _ChFiDS.ChFiDS_Map_Fill(self, *args)

    def FindFromIndex(self, *args):
        r"""

        Parameters
        ----------
        I: int

        Return
        -------
        TopTools_ListOfShape

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Map_FindFromIndex(self, *args)

    def FindFromKey(self, *args):
        r"""

        Parameters
        ----------
        S: TopoDS_Shape

        Return
        -------
        TopTools_ListOfShape

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Map_FindFromKey(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _ChFiDS.delete_ChFiDS_Map

# Register ChFiDS_Map in _ChFiDS:
_ChFiDS.ChFiDS_Map_swigregister(ChFiDS_Map)
class ChFiDS_Regul(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _ChFiDS.ChFiDS_Regul_swiginit(self, _ChFiDS.new_ChFiDS_Regul(*args))

    def Curve(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Regul_Curve(self, *args)

    def IsSurface1(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Regul_IsSurface1(self, *args)

    def IsSurface2(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Regul_IsSurface2(self, *args)

    def S1(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Regul_S1(self, *args)

    def S2(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Regul_S2(self, *args)

    def SetCurve(self, *args):
        r"""

        Parameters
        ----------
        IC: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Regul_SetCurve(self, *args)

    def SetS1(self, *args):
        r"""

        Parameters
        ----------
        IS1: int
        IsFace: bool (optional, default to Standard_True)

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Regul_SetS1(self, *args)

    def SetS2(self, *args):
        r"""

        Parameters
        ----------
        IS2: int
        IsFace: bool (optional, default to Standard_True)

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Regul_SetS2(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _ChFiDS.delete_ChFiDS_Regul

# Register ChFiDS_Regul in _ChFiDS:
_ChFiDS.ChFiDS_Regul_swigregister(ChFiDS_Regul)
class ChFiDS_Spine(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Tol: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _ChFiDS.ChFiDS_Spine_swiginit(self, _ChFiDS.new_ChFiDS_Spine(*args))

    def Absc(self, *args):
        r"""

        Parameters
        ----------
        U: float

        Return
        -------
        float

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        U: float
        I: int

        Return
        -------
        float

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        V: TopoDS_Vertex

        Return
        -------
        float

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_Absc(self, *args)

    def AppendElSpine(self, *args):
        r"""

        Parameters
        ----------
        Els: ChFiDS_ElSpine

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_AppendElSpine(self, *args)

    def AppendOffsetElSpine(self, *args):
        r"""

        Parameters
        ----------
        Els: ChFiDS_ElSpine

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_AppendOffsetElSpine(self, *args)

    def ChangeElSpines(self, *args):
        r"""
        Return
        -------
        ChFiDS_ListOfHElSpine

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_ChangeElSpines(self, *args)

    def ChangeOffsetElSpines(self, *args):
        r"""
        Return
        -------
        ChFiDS_ListOfHElSpine

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_ChangeOffsetElSpines(self, *args)

    def Circle(self, *args):
        r"""
        Return
        -------
        gp_Circ

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_Circle(self, *args)

    def CurrentElementarySpine(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        BRepAdaptor_Curve

        Description
        -----------
        Sets the current curve and returns it.

        """
        return _ChFiDS.ChFiDS_Spine_CurrentElementarySpine(self, *args)

    def CurrentIndexOfElementarySpine(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_CurrentIndexOfElementarySpine(self, *args)

    def D0(self, *args):
        r"""

        Parameters
        ----------
        AbsC: float
        P: gp_Pnt

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_D0(self, *args)

    def D1(self, *args):
        r"""

        Parameters
        ----------
        AbsC: float
        P: gp_Pnt
        V1: gp_Vec

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_D1(self, *args)

    def D2(self, *args):
        r"""

        Parameters
        ----------
        AbsC: float
        P: gp_Pnt
        V1: gp_Vec
        V2: gp_Vec

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_D2(self, *args)

    def Edges(self, *args):
        r"""

        Parameters
        ----------
        I: int

        Return
        -------
        TopoDS_Edge

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_Edges(self, *args)

    def ElSpine(self, *args):
        r"""

        Parameters
        ----------
        IE: int

        Return
        -------
        opencascade::handle<ChFiDS_ElSpine>

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        E: TopoDS_Edge

        Return
        -------
        opencascade::handle<ChFiDS_ElSpine>

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        W: float

        Return
        -------
        opencascade::handle<ChFiDS_ElSpine>

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_ElSpine(self, *args)

    def ErrorStatus(self, *args):
        r"""
        Return
        -------
        ChFiDS_ErrorStatus

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_ErrorStatus(self, *args)

    def FirstParameter(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        IndexSpine: int

        Return
        -------
        float

        Description
        -----------
        Gives the total length of all arcs before the number indexsp.

        """
        return _ChFiDS.ChFiDS_Spine_FirstParameter(self, *args)

    def FirstStatus(self, *args):
        r"""
        Return
        -------
        ChFiDS_State

        Description
        -----------
        Returns if the set of edges starts on a free boundary or if the first vertex is a breakpoint or if the set is closed.

        """
        return _ChFiDS.ChFiDS_Spine_FirstStatus(self, *args)

    def FirstVertex(self, *args):
        r"""
        Return
        -------
        TopoDS_Vertex

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_FirstVertex(self, *args)

    def GetTolesp(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Return tolesp parameter.

        """
        return _ChFiDS.ChFiDS_Spine_GetTolesp(self, *args)

    def GetType(self, *args):
        r"""
        Return
        -------
        GeomAbs_CurveType

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_GetType(self, *args)

    def GetTypeOfConcavity(self, *args):
        r"""
        Return
        -------
        ChFiDS_TypeOfConcavity

        Description
        -----------
        Returns the type of concavity in the connection.

        """
        return _ChFiDS.ChFiDS_Spine_GetTypeOfConcavity(self, *args)

    def HasFirstTgt(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_HasFirstTgt(self, *args)

    def HasLastTgt(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_HasLastTgt(self, *args)

    def Index(self, *args):
        r"""

        Parameters
        ----------
        W: float
        Forward: bool (optional, default to Standard_True)

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        E: TopoDS_Edge

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_Index(self, *args)

    def IsClosed(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_IsClosed(self, *args)

    def IsPeriodic(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_IsPeriodic(self, *args)

    def IsTangencyExtremity(self, *args):
        r"""

        Parameters
        ----------
        IsFirst: bool

        Return
        -------
        bool

        Description
        -----------
        Returns if the set of edges starts (or end) on tangency point.

        """
        return _ChFiDS.ChFiDS_Spine_IsTangencyExtremity(self, *args)

    def LastParameter(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        IndexSpine: int

        Return
        -------
        float

        Description
        -----------
        Gives the total length till the ark with number indexspine (inclus).

        """
        return _ChFiDS.ChFiDS_Spine_LastParameter(self, *args)

    def LastStatus(self, *args):
        r"""
        Return
        -------
        ChFiDS_State

        Description
        -----------
        Returns the state at the end of the set.

        """
        return _ChFiDS.ChFiDS_Spine_LastStatus(self, *args)

    def LastVertex(self, *args):
        r"""
        Return
        -------
        TopoDS_Vertex

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_LastVertex(self, *args)

    def Length(self, *args):
        r"""

        Parameters
        ----------
        IndexSpine: int

        Return
        -------
        float

        Description
        -----------
        Gives the length of ark with number indexsp.

        """
        return _ChFiDS.ChFiDS_Spine_Length(self, *args)

    def Line(self, *args):
        r"""
        Return
        -------
        gp_Lin

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_Line(self, *args)

    def Load(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Prepare the guideline depending on the edges that are elementary arks (take parameters from a single curvilinear abscissa); to be able to call methods on the geometry (first,last,value,d1,d2) it is necessary to start with preparation otherwise an exception will be raised.

        """
        return _ChFiDS.ChFiDS_Spine_Load(self, *args)

    def Mode(self, *args):
        r"""
        Return
        -------
        ChFiDS_ChamfMode

        Description
        -----------
        Return the mode of chamfers used.

        """
        return _ChFiDS.ChFiDS_Spine_Mode(self, *args)

    def NbEdges(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_NbEdges(self, *args)

    def OffsetEdges(self, *args):
        r"""

        Parameters
        ----------
        I: int

        Return
        -------
        TopoDS_Edge

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_OffsetEdges(self, *args)

    def Parameter(self, *args):
        r"""

        Parameters
        ----------
        AbsC: float
        Oriented: bool (optional, default to Standard_True)

        Return
        -------
        U: float

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Index: int
        AbsC: float
        Oriented: bool (optional, default to Standard_True)

        Return
        -------
        U: float

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_Parameter(self, *args)

    def Period(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_Period(self, *args)

    def PutInFirst(self, *args):
        r"""

        Parameters
        ----------
        E: TopoDS_Edge

        Return
        -------
        None

        Description
        -----------
        Store the edge at the first position before all others.

        """
        return _ChFiDS.ChFiDS_Spine_PutInFirst(self, *args)

    def PutInFirstOffset(self, *args):
        r"""

        Parameters
        ----------
        E: TopoDS_Edge

        Return
        -------
        None

        Description
        -----------
        Store the offset edge at the first position before all others.

        """
        return _ChFiDS.ChFiDS_Spine_PutInFirstOffset(self, *args)

    def Reset(self, *args):
        r"""

        Parameters
        ----------
        AllData: bool (optional, default to Standard_False)

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_Reset(self, *args)

    def Resolution(self, *args):
        r"""

        Parameters
        ----------
        R3d: float

        Return
        -------
        float

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_Resolution(self, *args)

    def SetCurrent(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_SetCurrent(self, *args)

    def SetEdges(self, *args):
        r"""

        Parameters
        ----------
        E: TopoDS_Edge

        Return
        -------
        None

        Description
        -----------
        Store edges composing the guideline.

        """
        return _ChFiDS.ChFiDS_Spine_SetEdges(self, *args)

    def SetErrorStatus(self, *args):
        r"""

        Parameters
        ----------
        state: ChFiDS_ErrorStatus

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_SetErrorStatus(self, *args)

    def SetFirstParameter(self, *args):
        r"""

        Parameters
        ----------
        Par: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_SetFirstParameter(self, *args)

    def SetFirstStatus(self, *args):
        r"""

        Parameters
        ----------
        S: ChFiDS_State

        Return
        -------
        None

        Description
        -----------
        Stores if the start of a set of edges starts on a section of free border or forms a closed contour.

        """
        return _ChFiDS.ChFiDS_Spine_SetFirstStatus(self, *args)

    def SetFirstTgt(self, *args):
        r"""

        Parameters
        ----------
        W: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_SetFirstTgt(self, *args)

    def SetLastParameter(self, *args):
        r"""

        Parameters
        ----------
        Par: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_SetLastParameter(self, *args)

    def SetLastStatus(self, *args):
        r"""

        Parameters
        ----------
        S: ChFiDS_State

        Return
        -------
        None

        Description
        -----------
        Stores if the end of a set of edges starts on a section of free border or forms a closed contour.

        """
        return _ChFiDS.ChFiDS_Spine_SetLastStatus(self, *args)

    def SetLastTgt(self, *args):
        r"""

        Parameters
        ----------
        W: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_SetLastTgt(self, *args)

    def SetOffsetEdges(self, *args):
        r"""

        Parameters
        ----------
        E: TopoDS_Edge

        Return
        -------
        None

        Description
        -----------
        Store offset edges composing the offset guideline.

        """
        return _ChFiDS.ChFiDS_Spine_SetOffsetEdges(self, *args)

    def SetReference(self, *args):
        r"""

        Parameters
        ----------
        W: float

        Return
        -------
        None

        Description
        -----------
        Set a parameter reference for the approx.

        Parameters
        ----------
        I: int

        Return
        -------
        None

        Description
        -----------
        Set a parameter reference for the approx, at the middle of edge i.

        """
        return _ChFiDS.ChFiDS_Spine_SetReference(self, *args)

    def SetStatus(self, *args):
        r"""

        Parameters
        ----------
        S: ChFiDS_State
        IsFirst: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_SetStatus(self, *args)

    def SetTangencyExtremity(self, *args):
        r"""

        Parameters
        ----------
        IsTangency: bool
        IsFirst: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_SetTangencyExtremity(self, *args)

    def SetTypeOfConcavity(self, *args):
        r"""

        Parameters
        ----------
        theType: ChFiDS_TypeOfConcavity

        Return
        -------
        None

        Description
        -----------
        Sets the type of concavity in the connection.

        """
        return _ChFiDS.ChFiDS_Spine_SetTypeOfConcavity(self, *args)

    def SplitDone(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        B: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_SplitDone(self, *args)

    def Status(self, *args):
        r"""

        Parameters
        ----------
        IsFirst: bool

        Return
        -------
        ChFiDS_State

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_Status(self, *args)

    def UnsetReference(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_UnsetReference(self, *args)

    def Value(self, *args):
        r"""

        Parameters
        ----------
        AbsC: float

        Return
        -------
        gp_Pnt

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Spine_Value(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_ChFiDS_Spine_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _ChFiDS.delete_ChFiDS_Spine

# Register ChFiDS_Spine in _ChFiDS:
_ChFiDS.ChFiDS_Spine_swigregister(ChFiDS_Spine)
class ChFiDS_Stripe(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _ChFiDS.ChFiDS_Stripe_swiginit(self, _ChFiDS.new_ChFiDS_Stripe(*args))

    def ChangeFirstCurve(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_ChangeFirstCurve(self, *args)

    def ChangeFirstPCurve(self, *args):
        r"""
        Return
        -------
        opencascade::handle<Geom2d_Curve>

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_ChangeFirstPCurve(self, *args)

    def ChangeFirstParameters(self, *args):
        r"""

        Parameters
        ----------
        Pdeb: float
        Pfin: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_ChangeFirstParameters(self, *args)

    def ChangeIndexFirstPointOnS1(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_ChangeIndexFirstPointOnS1(self, *args)

    def ChangeIndexFirstPointOnS2(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_ChangeIndexFirstPointOnS2(self, *args)

    def ChangeIndexLastPointOnS1(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_ChangeIndexLastPointOnS1(self, *args)

    def ChangeIndexLastPointOnS2(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_ChangeIndexLastPointOnS2(self, *args)

    def ChangeLastCurve(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_ChangeLastCurve(self, *args)

    def ChangeLastPCurve(self, *args):
        r"""
        Return
        -------
        opencascade::handle<Geom2d_Curve>

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_ChangeLastPCurve(self, *args)

    def ChangeLastParameters(self, *args):
        r"""

        Parameters
        ----------
        Pdeb: float
        Pfin: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_ChangeLastParameters(self, *args)

    def ChangePCurve(self, *args):
        r"""

        Parameters
        ----------
        First: bool

        Return
        -------
        opencascade::handle<Geom2d_Curve>

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_ChangePCurve(self, *args)

    def ChangeSetOfSurfData(self, *args):
        r"""
        Return
        -------
        opencascade::handle<ChFiDS_HData>

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_ChangeSetOfSurfData(self, *args)

    def ChangeSpine(self, *args):
        r"""
        Return
        -------
        opencascade::handle<ChFiDS_Spine>

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_ChangeSpine(self, *args)

    def Choix(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        C: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_Choix(self, *args)

    def Curve(self, *args):
        r"""

        Parameters
        ----------
        First: bool

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_Curve(self, *args)

    def FirstCurve(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_FirstCurve(self, *args)

    def FirstPCurve(self, *args):
        r"""
        Return
        -------
        opencascade::handle<Geom2d_Curve>

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_FirstPCurve(self, *args)

    def FirstPCurveOrientation(self, *args):
        r"""
        Return
        -------
        TopAbs_Orientation

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        O: TopAbs_Orientation

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_FirstPCurveOrientation(self, *args)

    def FirstParameters(self, *args):
        r"""

        Parameters
        ----------

        Return
        -------
        Pdeb: float
        Pfin: float

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_FirstParameters(self, *args)

    def InDS(self, *args):
        r"""

        Parameters
        ----------
        First: bool
        Nb: int (optional, default to 1)

        Return
        -------
        None

        Description
        -----------
        Set nb of surfdata's at end put in ds.

        """
        return _ChFiDS.ChFiDS_Stripe_InDS(self, *args)

    def IndexFirstPointOnS1(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_IndexFirstPointOnS1(self, *args)

    def IndexFirstPointOnS2(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_IndexFirstPointOnS2(self, *args)

    def IndexLastPointOnS1(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_IndexLastPointOnS1(self, *args)

    def IndexLastPointOnS2(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_IndexLastPointOnS2(self, *args)

    def IndexPoint(self, *args):
        r"""

        Parameters
        ----------
        First: bool
        OnS: int

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_IndexPoint(self, *args)

    def IsInDS(self, *args):
        r"""

        Parameters
        ----------
        First: bool

        Return
        -------
        int

        Description
        -----------
        Returns nb of surfdata's at end being in ds.

        """
        return _ChFiDS.ChFiDS_Stripe_IsInDS(self, *args)

    def LastCurve(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_LastCurve(self, *args)

    def LastPCurve(self, *args):
        r"""
        Return
        -------
        opencascade::handle<Geom2d_Curve>

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_LastPCurve(self, *args)

    def LastPCurveOrientation(self, *args):
        r"""
        Return
        -------
        TopAbs_Orientation

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        O: TopAbs_Orientation

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_LastPCurveOrientation(self, *args)

    def LastParameters(self, *args):
        r"""

        Parameters
        ----------

        Return
        -------
        Pdeb: float
        Pfin: float

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_LastParameters(self, *args)

    def Orientation(self, *args):
        r"""

        Parameters
        ----------
        OnS: int

        Return
        -------
        TopAbs_Orientation

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        First: bool

        Return
        -------
        TopAbs_Orientation

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_Orientation(self, *args)

    def OrientationOnFace1(self, *args):
        r"""
        Return
        -------
        TopAbs_Orientation

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Or1: TopAbs_Orientation

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_OrientationOnFace1(self, *args)

    def OrientationOnFace2(self, *args):
        r"""
        Return
        -------
        TopAbs_Orientation

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Or2: TopAbs_Orientation

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_OrientationOnFace2(self, *args)

    def PCurve(self, *args):
        r"""

        Parameters
        ----------
        First: bool

        Return
        -------
        opencascade::handle<Geom2d_Curve>

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_PCurve(self, *args)

    def Parameters(self, *args):
        r"""

        Parameters
        ----------
        First: bool

        Return
        -------
        Pdeb: float
        Pfin: float

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_Parameters(self, *args)

    def Reset(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Reset everything except spine.

        """
        return _ChFiDS.ChFiDS_Stripe_Reset(self, *args)

    def SetCurve(self, *args):
        r"""

        Parameters
        ----------
        Index: int
        First: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_SetCurve(self, *args)

    def SetIndexPoint(self, *args):
        r"""

        Parameters
        ----------
        Index: int
        First: bool
        OnS: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_SetIndexPoint(self, *args)

    def SetOfSurfData(self, *args):
        r"""
        Return
        -------
        opencascade::handle<ChFiDS_HData>

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_SetOfSurfData(self, *args)

    def SetOrientation(self, *args):
        r"""

        Parameters
        ----------
        Or: TopAbs_Orientation
        OnS: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Or: TopAbs_Orientation
        First: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_SetOrientation(self, *args)

    def SetParameters(self, *args):
        r"""

        Parameters
        ----------
        First: bool
        Pdeb: float
        Pfin: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_SetParameters(self, *args)

    def SetSolidIndex(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_SetSolidIndex(self, *args)

    def SolidIndex(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_SolidIndex(self, *args)

    def Spine(self, *args):
        r"""
        Return
        -------
        opencascade::handle<ChFiDS_Spine>

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_Stripe_Spine(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_ChFiDS_Stripe_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _ChFiDS.delete_ChFiDS_Stripe

# Register ChFiDS_Stripe in _ChFiDS:
_ChFiDS.ChFiDS_Stripe_swigregister(ChFiDS_Stripe)
class ChFiDS_StripeMap(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _ChFiDS.ChFiDS_StripeMap_swiginit(self, _ChFiDS.new_ChFiDS_StripeMap(*args))

    def Add(self, *args):
        r"""

        Parameters
        ----------
        V: TopoDS_Vertex
        F: ChFiDS_Stripe

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_StripeMap_Add(self, *args)

    def Clear(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_StripeMap_Clear(self, *args)

    def Extent(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_StripeMap_Extent(self, *args)

    def FindFromIndex(self, *args):
        r"""

        Parameters
        ----------
        I: int

        Return
        -------
        ChFiDS_ListOfStripe

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_StripeMap_FindFromIndex(self, *args)

    def FindFromKey(self, *args):
        r"""

        Parameters
        ----------
        V: TopoDS_Vertex

        Return
        -------
        ChFiDS_ListOfStripe

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_StripeMap_FindFromKey(self, *args)

    def FindKey(self, *args):
        r"""

        Parameters
        ----------
        I: int

        Return
        -------
        TopoDS_Vertex

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_StripeMap_FindKey(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _ChFiDS.delete_ChFiDS_StripeMap

# Register ChFiDS_StripeMap in _ChFiDS:
_ChFiDS.ChFiDS_StripeMap_swigregister(ChFiDS_StripeMap)
class ChFiDS_SurfData(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _ChFiDS.ChFiDS_SurfData_swiginit(self, _ChFiDS.new_ChFiDS_SurfData(*args))

    def ChangeIndexOfS1(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_ChangeIndexOfS1(self, *args)

    def ChangeIndexOfS2(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_ChangeIndexOfS2(self, *args)

    def ChangeInterference(self, *args):
        r"""

        Parameters
        ----------
        OnS: int

        Return
        -------
        ChFiDS_FaceInterference

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_ChangeInterference(self, *args)

    def ChangeInterferenceOnS1(self, *args):
        r"""
        Return
        -------
        ChFiDS_FaceInterference

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_ChangeInterferenceOnS1(self, *args)

    def ChangeInterferenceOnS2(self, *args):
        r"""
        Return
        -------
        ChFiDS_FaceInterference

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_ChangeInterferenceOnS2(self, *args)

    def ChangeOrientation(self, *args):
        r"""
        Return
        -------
        TopAbs_Orientation

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_ChangeOrientation(self, *args)

    def ChangeSurf(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_ChangeSurf(self, *args)

    def ChangeVertex(self, *args):
        r"""

        Parameters
        ----------
        First: bool
        OnS: int

        Return
        -------
        ChFiDS_CommonPoint

        Description
        -----------
        Returns one of the four vertices whether first is true or wrong and ons equals 1 or 2.

        """
        return _ChFiDS.ChFiDS_SurfData_ChangeVertex(self, *args)

    def ChangeVertexFirstOnS1(self, *args):
        r"""
        Return
        -------
        ChFiDS_CommonPoint

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_ChangeVertexFirstOnS1(self, *args)

    def ChangeVertexFirstOnS2(self, *args):
        r"""
        Return
        -------
        ChFiDS_CommonPoint

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_ChangeVertexFirstOnS2(self, *args)

    def ChangeVertexLastOnS1(self, *args):
        r"""
        Return
        -------
        ChFiDS_CommonPoint

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_ChangeVertexLastOnS1(self, *args)

    def ChangeVertexLastOnS2(self, *args):
        r"""
        Return
        -------
        ChFiDS_CommonPoint

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_ChangeVertexLastOnS2(self, *args)

    def Copy(self, *args):
        r"""

        Parameters
        ----------
        Other: ChFiDS_SurfData

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_Copy(self, *args)

    def FirstExtensionValue(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Extend: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_FirstExtensionValue(self, *args)

    def FirstSpineParam(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Par: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_FirstSpineParam(self, *args)

    def Get2dPoints(self, *args):
        r"""

        Parameters
        ----------
        First: bool
        OnS: int

        Return
        -------
        gp_Pnt2d

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        P2df1: gp_Pnt2d
        P2dl1: gp_Pnt2d
        P2df2: gp_Pnt2d
        P2dl2: gp_Pnt2d

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_Get2dPoints(self, *args)

    def Index(self, *args):
        r"""

        Parameters
        ----------
        OfS: int

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_Index(self, *args)

    def IndexOfC(self, *args):
        r"""

        Parameters
        ----------
        OnS: int

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_IndexOfC(self, *args)

    def IndexOfC1(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_IndexOfC1(self, *args)

    def IndexOfC2(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_IndexOfC2(self, *args)

    def IndexOfS1(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_IndexOfS1(self, *args)

    def IndexOfS2(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_IndexOfS2(self, *args)

    def Interference(self, *args):
        r"""

        Parameters
        ----------
        OnS: int

        Return
        -------
        ChFiDS_FaceInterference

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_Interference(self, *args)

    def InterferenceOnS1(self, *args):
        r"""
        Return
        -------
        ChFiDS_FaceInterference

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_InterferenceOnS1(self, *args)

    def InterferenceOnS2(self, *args):
        r"""
        Return
        -------
        ChFiDS_FaceInterference

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_InterferenceOnS2(self, *args)

    def IsOnCurve(self, *args):
        r"""

        Parameters
        ----------
        OnS: int

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_IsOnCurve(self, *args)

    def IsOnCurve1(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_IsOnCurve1(self, *args)

    def IsOnCurve2(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_IsOnCurve2(self, *args)

    def LastExtensionValue(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Extend: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_LastExtensionValue(self, *args)

    def LastSpineParam(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Par: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_LastSpineParam(self, *args)

    def Orientation(self, *args):
        r"""
        Return
        -------
        TopAbs_Orientation

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_Orientation(self, *args)

    def ResetSimul(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_ResetSimul(self, *args)

    def Set2dPoints(self, *args):
        r"""

        Parameters
        ----------
        P2df1: gp_Pnt2d
        P2dl1: gp_Pnt2d
        P2df2: gp_Pnt2d
        P2dl2: gp_Pnt2d

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_Set2dPoints(self, *args)

    def SetIndexOfC1(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_SetIndexOfC1(self, *args)

    def SetIndexOfC2(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_SetIndexOfC2(self, *args)

    def SetSimul(self, *args):
        r"""

        Parameters
        ----------
        S: Standard_Transient

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_SetSimul(self, *args)

    def Simul(self, *args):
        r"""
        Return
        -------
        opencascade::handle<Standard_Transient>

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_Simul(self, *args)

    def Surf(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_Surf(self, *args)

    def TwistOnS1(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        T: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_TwistOnS1(self, *args)

    def TwistOnS2(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        T: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_TwistOnS2(self, *args)

    def Vertex(self, *args):
        r"""

        Parameters
        ----------
        First: bool
        OnS: int

        Return
        -------
        ChFiDS_CommonPoint

        Description
        -----------
        Returns one of the four vertices whether first is true or wrong and ons equals 1 or 2.

        """
        return _ChFiDS.ChFiDS_SurfData_Vertex(self, *args)

    def VertexFirstOnS1(self, *args):
        r"""
        Return
        -------
        ChFiDS_CommonPoint

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_VertexFirstOnS1(self, *args)

    def VertexFirstOnS2(self, *args):
        r"""
        Return
        -------
        ChFiDS_CommonPoint

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_VertexFirstOnS2(self, *args)

    def VertexLastOnS1(self, *args):
        r"""
        Return
        -------
        ChFiDS_CommonPoint

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_VertexLastOnS1(self, *args)

    def VertexLastOnS2(self, *args):
        r"""
        Return
        -------
        ChFiDS_CommonPoint

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_SurfData_VertexLastOnS2(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_ChFiDS_SurfData_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _ChFiDS.delete_ChFiDS_SurfData

# Register ChFiDS_SurfData in _ChFiDS:
_ChFiDS.ChFiDS_SurfData_swigregister(ChFiDS_SurfData)
class ChFiDS_ChamfSpine(ChFiDS_Spine):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Tol: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _ChFiDS.ChFiDS_ChamfSpine_swiginit(self, _ChFiDS.new_ChFiDS_ChamfSpine(*args))

    def Dists(self, *args):
        r"""

        Parameters
        ----------

        Return
        -------
        Dis1: float
        Dis2: float

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ChamfSpine_Dists(self, *args)

    def GetDist(self, *args):
        r"""

        Parameters
        ----------

        Return
        -------
        Dis: float

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ChamfSpine_GetDist(self, *args)

    def GetDistAngle(self, *args):
        r"""

        Parameters
        ----------

        Return
        -------
        Dis: float
        Angle: float

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ChamfSpine_GetDistAngle(self, *args)

    def IsChamfer(self, *args):
        r"""
        Return
        -------
        ChFiDS_ChamfMethod

        Description
        -----------
        Return the method of chamfers used.

        """
        return _ChFiDS.ChFiDS_ChamfSpine_IsChamfer(self, *args)

    def SetDist(self, *args):
        r"""

        Parameters
        ----------
        Dis: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ChamfSpine_SetDist(self, *args)

    def SetDistAngle(self, *args):
        r"""

        Parameters
        ----------
        Dis: float
        Angle: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ChamfSpine_SetDistAngle(self, *args)

    def SetDists(self, *args):
        r"""

        Parameters
        ----------
        Dis1: float
        Dis2: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ChamfSpine_SetDists(self, *args)

    def SetMode(self, *args):
        r"""

        Parameters
        ----------
        theMode: ChFiDS_ChamfMode

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_ChamfSpine_SetMode(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_ChFiDS_ChamfSpine_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _ChFiDS.delete_ChFiDS_ChamfSpine

# Register ChFiDS_ChamfSpine in _ChFiDS:
_ChFiDS.ChFiDS_ChamfSpine_swigregister(ChFiDS_ChamfSpine)
class ChFiDS_FilSpine(ChFiDS_Spine):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Tol: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _ChFiDS.ChFiDS_FilSpine_swiginit(self, _ChFiDS.new_ChFiDS_FilSpine(*args))

    def ChangeLaw(self, *args):
        r"""

        Parameters
        ----------
        E: TopoDS_Edge

        Return
        -------
        opencascade::handle<Law_Function>

        Description
        -----------
        Returns the elementary law.

        """
        return _ChFiDS.ChFiDS_FilSpine_ChangeLaw(self, *args)

    def IsConstant(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if the radius is constant all along the spine.

        Parameters
        ----------
        IE: int

        Return
        -------
        bool

        Description
        -----------
        Returns true if the radius is constant all along the edge e.

        """
        return _ChFiDS.ChFiDS_FilSpine_IsConstant(self, *args)

    def law(self, *args):
        r"""

        Parameters
        ----------
        Els: ChFiDS_ElSpine

        Return
        -------
        opencascade::handle<Law_Composite>

        Description
        -----------
        No available documentation.

        """
        return _ChFiDS.ChFiDS_FilSpine_law(self, *args)

    def MaxRadFromSeqAndLaws(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns the maximum radius if the fillet is non-constant.

        """
        return _ChFiDS.ChFiDS_FilSpine_MaxRadFromSeqAndLaws(self, *args)

    def Radius(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns the radius if the fillet is constant all along the spine.

        Parameters
        ----------
        IE: int

        Return
        -------
        float

        Description
        -----------
        Returns the radius if the fillet is constant all along the edge e.

        Parameters
        ----------
        E: TopoDS_Edge

        Return
        -------
        float

        Description
        -----------
        Returns the radius if the fillet is constant all along the edge e.

        """
        return _ChFiDS.ChFiDS_FilSpine_Radius(self, *args)

    def SetRadius(self, *args):
        r"""

        Parameters
        ----------
        Radius: float
        E: TopoDS_Edge

        Return
        -------
        None

        Description
        -----------
        Initializes the constant vector on edge e.

        Parameters
        ----------
        Radius: float
        V: TopoDS_Vertex

        Return
        -------
        None

        Description
        -----------
        Initializes the vector on vertex v.

        Parameters
        ----------
        UandR: gp_XY
        IinC: int

        Return
        -------
        None

        Description
        -----------
        Initializes the vector on the point of parameter w.

        Parameters
        ----------
        Radius: float

        Return
        -------
        None

        Description
        -----------
        Initializes the constant vector on all spine.

        Parameters
        ----------
        C: Law_Function
        IinC: int

        Return
        -------
        None

        Description
        -----------
        Initializes the rule of evolution on all spine.

        """
        return _ChFiDS.ChFiDS_FilSpine_SetRadius(self, *args)

    def UnSetRadius(self, *args):
        r"""

        Parameters
        ----------
        E: TopoDS_Edge

        Return
        -------
        None

        Description
        -----------
        Resets the constant vector on edge e.

        Parameters
        ----------
        V: TopoDS_Vertex

        Return
        -------
        None

        Description
        -----------
        Resets the vector on vertex v.

        """
        return _ChFiDS.ChFiDS_FilSpine_UnSetRadius(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_ChFiDS_FilSpine_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _ChFiDS.delete_ChFiDS_FilSpine

# Register ChFiDS_FilSpine in _ChFiDS:
_ChFiDS.ChFiDS_FilSpine_swigregister(ChFiDS_FilSpine)
class ChFiDS_SecHArray1(ChFiDS_SecArray1, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _ChFiDS.ChFiDS_SecHArray1_swiginit(self, _ChFiDS.new_ChFiDS_SecHArray1(*args))

    def Array1(self):
        return _ChFiDS.ChFiDS_SecHArray1_Array1(self)

    def ChangeArray1(self):
        return _ChFiDS.ChFiDS_SecHArray1_ChangeArray1(self)


    @staticmethod
    def DownCast(t):
      return Handle_ChFiDS_SecHArray1_DownCast(t)

    __swig_destroy__ = _ChFiDS.delete_ChFiDS_SecHArray1

# Register ChFiDS_SecHArray1 in _ChFiDS:
_ChFiDS.ChFiDS_SecHArray1_swigregister(ChFiDS_SecHArray1)
class ChFiDS_HData(ChFiDS_SequenceOfSurfData, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _ChFiDS.ChFiDS_HData_swiginit(self, _ChFiDS.new_ChFiDS_HData(*args))

    def Sequence(self):
        return _ChFiDS.ChFiDS_HData_Sequence(self)

    def Append(self, *args):
        return _ChFiDS.ChFiDS_HData_Append(self, *args)

    def ChangeSequence(self):
        return _ChFiDS.ChFiDS_HData_ChangeSequence(self)


    @staticmethod
    def DownCast(t):
      return Handle_ChFiDS_HData_DownCast(t)

    __swig_destroy__ = _ChFiDS.delete_ChFiDS_HData

# Register ChFiDS_HData in _ChFiDS:
_ChFiDS.ChFiDS_HData_swigregister(ChFiDS_HData)



