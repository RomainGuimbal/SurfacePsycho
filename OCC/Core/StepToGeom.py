# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
StepToGeom module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_steptogeom.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_StepToGeom')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_StepToGeom')
    _StepToGeom = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_StepToGeom', [dirname(__file__)])
        except ImportError:
            import _StepToGeom
            return _StepToGeom
        try:
            _mod = imp.load_module('_StepToGeom', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _StepToGeom = swig_import_helper()
    del swig_import_helper
else:
    import _StepToGeom
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

class SwigPyIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwigPyIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwigPyIterator, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _StepToGeom.delete_SwigPyIterator
    __del__ = lambda self: None

    def value(self) -> "PyObject *":
        return _StepToGeom.SwigPyIterator_value(self)

    def incr(self, n: 'size_t'=1) -> "swig::SwigPyIterator *":
        return _StepToGeom.SwigPyIterator_incr(self, n)

    def decr(self, n: 'size_t'=1) -> "swig::SwigPyIterator *":
        return _StepToGeom.SwigPyIterator_decr(self, n)

    def distance(self, x: 'SwigPyIterator') -> "ptrdiff_t":
        return _StepToGeom.SwigPyIterator_distance(self, x)

    def equal(self, x: 'SwigPyIterator') -> "bool":
        return _StepToGeom.SwigPyIterator_equal(self, x)

    def copy(self) -> "swig::SwigPyIterator *":
        return _StepToGeom.SwigPyIterator_copy(self)

    def next(self) -> "PyObject *":
        return _StepToGeom.SwigPyIterator_next(self)

    def __next__(self) -> "PyObject *":
        return _StepToGeom.SwigPyIterator___next__(self)

    def previous(self) -> "PyObject *":
        return _StepToGeom.SwigPyIterator_previous(self)

    def advance(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator *":
        return _StepToGeom.SwigPyIterator_advance(self, n)

    def __eq__(self, x: 'SwigPyIterator') -> "bool":
        return _StepToGeom.SwigPyIterator___eq__(self, x)

    def __ne__(self, x: 'SwigPyIterator') -> "bool":
        return _StepToGeom.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator &":
        return _StepToGeom.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator &":
        return _StepToGeom.SwigPyIterator___isub__(self, n)

    def __add__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator *":
        return _StepToGeom.SwigPyIterator___add__(self, n)

    def __sub__(self, *args) -> "ptrdiff_t":
        return _StepToGeom.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self
SwigPyIterator_swigregister = _StepToGeom.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _StepToGeom.process_exception(error, method_name, class_name)
process_exception = _StepToGeom.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.StepGeom
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.TCollection
import OCC.Core.Message
import OCC.Core.OSD
import OCC.Core.TColStd
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.Resource
import OCC.Core.StepRepr
import OCC.Core.StepBasic
import OCC.Core.Geom
import OCC.Core.GeomAbs
import OCC.Core.TColgp
import OCC.Core.Geom2d

from enum import IntEnum
from OCC.Core.Exception import *



class steptogeom(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, steptogeom, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, steptogeom, name)
    __repr__ = _swig_repr

    def MakeAxis1Placement(*args) -> "opencascade::handle< Geom_Axis1Placement >":
        """
        No available documentation.

        Parameters
        ----------
        SA: StepGeom_Axis1Placement

        Returns
        -------
        opencascade::handle<Geom_Axis1Placement>

        """
        return _StepToGeom.steptogeom_MakeAxis1Placement(*args)

    MakeAxis1Placement = staticmethod(MakeAxis1Placement)

    def MakeAxis2Placement(*args) -> "opencascade::handle< Geom_Axis2Placement >":
        """
        No available documentation.

        Parameters
        ----------
        SA: StepGeom_Axis2Placement3d

        Returns
        -------
        opencascade::handle<Geom_Axis2Placement>

        """
        return _StepToGeom.steptogeom_MakeAxis2Placement(*args)

    MakeAxis2Placement = staticmethod(MakeAxis2Placement)

    def MakeAxisPlacement(*args) -> "opencascade::handle< Geom2d_AxisPlacement >":
        """
        No available documentation.

        Parameters
        ----------
        SA: StepGeom_Axis2Placement2d

        Returns
        -------
        opencascade::handle<Geom2d_AxisPlacement>

        """
        return _StepToGeom.steptogeom_MakeAxisPlacement(*args)

    MakeAxisPlacement = staticmethod(MakeAxisPlacement)

    def MakeBSplineCurve(*args) -> "opencascade::handle< Geom_BSplineCurve >":
        """
        No available documentation.

        Parameters
        ----------
        SC: StepGeom_BSplineCurve

        Returns
        -------
        opencascade::handle<Geom_BSplineCurve>

        """
        return _StepToGeom.steptogeom_MakeBSplineCurve(*args)

    MakeBSplineCurve = staticmethod(MakeBSplineCurve)

    def MakeBSplineCurve2d(*args) -> "opencascade::handle< Geom2d_BSplineCurve >":
        """
        No available documentation.

        Parameters
        ----------
        SC: StepGeom_BSplineCurve

        Returns
        -------
        opencascade::handle<Geom2d_BSplineCurve>

        """
        return _StepToGeom.steptogeom_MakeBSplineCurve2d(*args)

    MakeBSplineCurve2d = staticmethod(MakeBSplineCurve2d)

    def MakeBSplineSurface(*args) -> "opencascade::handle< Geom_BSplineSurface >":
        """
        No available documentation.

        Parameters
        ----------
        SS: StepGeom_BSplineSurface

        Returns
        -------
        opencascade::handle<Geom_BSplineSurface>

        """
        return _StepToGeom.steptogeom_MakeBSplineSurface(*args)

    MakeBSplineSurface = staticmethod(MakeBSplineSurface)

    def MakeBoundedCurve(*args) -> "opencascade::handle< Geom_BoundedCurve >":
        """
        No available documentation.

        Parameters
        ----------
        SC: StepGeom_BoundedCurve

        Returns
        -------
        opencascade::handle<Geom_BoundedCurve>

        """
        return _StepToGeom.steptogeom_MakeBoundedCurve(*args)

    MakeBoundedCurve = staticmethod(MakeBoundedCurve)

    def MakeBoundedCurve2d(*args) -> "opencascade::handle< Geom2d_BoundedCurve >":
        """
        No available documentation.

        Parameters
        ----------
        SC: StepGeom_BoundedCurve

        Returns
        -------
        opencascade::handle<Geom2d_BoundedCurve>

        """
        return _StepToGeom.steptogeom_MakeBoundedCurve2d(*args)

    MakeBoundedCurve2d = staticmethod(MakeBoundedCurve2d)

    def MakeBoundedSurface(*args) -> "opencascade::handle< Geom_BoundedSurface >":
        """
        No available documentation.

        Parameters
        ----------
        SS: StepGeom_BoundedSurface

        Returns
        -------
        opencascade::handle<Geom_BoundedSurface>

        """
        return _StepToGeom.steptogeom_MakeBoundedSurface(*args)

    MakeBoundedSurface = staticmethod(MakeBoundedSurface)

    def MakeCartesianPoint(*args) -> "opencascade::handle< Geom_CartesianPoint >":
        """
        No available documentation.

        Parameters
        ----------
        SP: StepGeom_CartesianPoint

        Returns
        -------
        opencascade::handle<Geom_CartesianPoint>

        """
        return _StepToGeom.steptogeom_MakeCartesianPoint(*args)

    MakeCartesianPoint = staticmethod(MakeCartesianPoint)

    def MakeCartesianPoint2d(*args) -> "opencascade::handle< Geom2d_CartesianPoint >":
        """
        No available documentation.

        Parameters
        ----------
        SP: StepGeom_CartesianPoint

        Returns
        -------
        opencascade::handle<Geom2d_CartesianPoint>

        """
        return _StepToGeom.steptogeom_MakeCartesianPoint2d(*args)

    MakeCartesianPoint2d = staticmethod(MakeCartesianPoint2d)

    def MakeCircle(*args) -> "opencascade::handle< Geom_Circle >":
        """
        No available documentation.

        Parameters
        ----------
        SC: StepGeom_Circle

        Returns
        -------
        opencascade::handle<Geom_Circle>

        """
        return _StepToGeom.steptogeom_MakeCircle(*args)

    MakeCircle = staticmethod(MakeCircle)

    def MakeCircle2d(*args) -> "opencascade::handle< Geom2d_Circle >":
        """
        No available documentation.

        Parameters
        ----------
        SC: StepGeom_Circle

        Returns
        -------
        opencascade::handle<Geom2d_Circle>

        """
        return _StepToGeom.steptogeom_MakeCircle2d(*args)

    MakeCircle2d = staticmethod(MakeCircle2d)

    def MakeConic(*args) -> "opencascade::handle< Geom_Conic >":
        """
        No available documentation.

        Parameters
        ----------
        SC: StepGeom_Conic

        Returns
        -------
        opencascade::handle<Geom_Conic>

        """
        return _StepToGeom.steptogeom_MakeConic(*args)

    MakeConic = staticmethod(MakeConic)

    def MakeConic2d(*args) -> "opencascade::handle< Geom2d_Conic >":
        """
        No available documentation.

        Parameters
        ----------
        SC: StepGeom_Conic

        Returns
        -------
        opencascade::handle<Geom2d_Conic>

        """
        return _StepToGeom.steptogeom_MakeConic2d(*args)

    MakeConic2d = staticmethod(MakeConic2d)

    def MakeConicalSurface(*args) -> "opencascade::handle< Geom_ConicalSurface >":
        """
        No available documentation.

        Parameters
        ----------
        SS: StepGeom_ConicalSurface

        Returns
        -------
        opencascade::handle<Geom_ConicalSurface>

        """
        return _StepToGeom.steptogeom_MakeConicalSurface(*args)

    MakeConicalSurface = staticmethod(MakeConicalSurface)

    def MakeCurve(*args) -> "opencascade::handle< Geom_Curve >":
        """
        No available documentation.

        Parameters
        ----------
        SC: StepGeom_Curve

        Returns
        -------
        opencascade::handle<Geom_Curve>

        """
        return _StepToGeom.steptogeom_MakeCurve(*args)

    MakeCurve = staticmethod(MakeCurve)

    def MakeCurve2d(*args) -> "opencascade::handle< Geom2d_Curve >":
        """
        No available documentation.

        Parameters
        ----------
        SC: StepGeom_Curve

        Returns
        -------
        opencascade::handle<Geom2d_Curve>

        """
        return _StepToGeom.steptogeom_MakeCurve2d(*args)

    MakeCurve2d = staticmethod(MakeCurve2d)

    def MakeCylindricalSurface(*args) -> "opencascade::handle< Geom_CylindricalSurface >":
        """
        No available documentation.

        Parameters
        ----------
        SS: StepGeom_CylindricalSurface

        Returns
        -------
        opencascade::handle<Geom_CylindricalSurface>

        """
        return _StepToGeom.steptogeom_MakeCylindricalSurface(*args)

    MakeCylindricalSurface = staticmethod(MakeCylindricalSurface)

    def MakeDirection(*args) -> "opencascade::handle< Geom_Direction >":
        """
        No available documentation.

        Parameters
        ----------
        SD: StepGeom_Direction

        Returns
        -------
        opencascade::handle<Geom_Direction>

        """
        return _StepToGeom.steptogeom_MakeDirection(*args)

    MakeDirection = staticmethod(MakeDirection)

    def MakeDirection2d(*args) -> "opencascade::handle< Geom2d_Direction >":
        """
        No available documentation.

        Parameters
        ----------
        SD: StepGeom_Direction

        Returns
        -------
        opencascade::handle<Geom2d_Direction>

        """
        return _StepToGeom.steptogeom_MakeDirection2d(*args)

    MakeDirection2d = staticmethod(MakeDirection2d)

    def MakeElementarySurface(*args) -> "opencascade::handle< Geom_ElementarySurface >":
        """
        No available documentation.

        Parameters
        ----------
        SS: StepGeom_ElementarySurface

        Returns
        -------
        opencascade::handle<Geom_ElementarySurface>

        """
        return _StepToGeom.steptogeom_MakeElementarySurface(*args)

    MakeElementarySurface = staticmethod(MakeElementarySurface)

    def MakeEllipse(*args) -> "opencascade::handle< Geom_Ellipse >":
        """
        No available documentation.

        Parameters
        ----------
        SC: StepGeom_Ellipse

        Returns
        -------
        opencascade::handle<Geom_Ellipse>

        """
        return _StepToGeom.steptogeom_MakeEllipse(*args)

    MakeEllipse = staticmethod(MakeEllipse)

    def MakeEllipse2d(*args) -> "opencascade::handle< Geom2d_Ellipse >":
        """
        No available documentation.

        Parameters
        ----------
        SC: StepGeom_Ellipse

        Returns
        -------
        opencascade::handle<Geom2d_Ellipse>

        """
        return _StepToGeom.steptogeom_MakeEllipse2d(*args)

    MakeEllipse2d = staticmethod(MakeEllipse2d)

    def MakeHyperbola(*args) -> "opencascade::handle< Geom_Hyperbola >":
        """
        No available documentation.

        Parameters
        ----------
        SC: StepGeom_Hyperbola

        Returns
        -------
        opencascade::handle<Geom_Hyperbola>

        """
        return _StepToGeom.steptogeom_MakeHyperbola(*args)

    MakeHyperbola = staticmethod(MakeHyperbola)

    def MakeHyperbola2d(*args) -> "opencascade::handle< Geom2d_Hyperbola >":
        """
        No available documentation.

        Parameters
        ----------
        SC: StepGeom_Hyperbola

        Returns
        -------
        opencascade::handle<Geom2d_Hyperbola>

        """
        return _StepToGeom.steptogeom_MakeHyperbola2d(*args)

    MakeHyperbola2d = staticmethod(MakeHyperbola2d)

    def MakeLine(*args) -> "opencascade::handle< Geom_Line >":
        """
        No available documentation.

        Parameters
        ----------
        SC: StepGeom_Line

        Returns
        -------
        opencascade::handle<Geom_Line>

        """
        return _StepToGeom.steptogeom_MakeLine(*args)

    MakeLine = staticmethod(MakeLine)

    def MakeLine2d(*args) -> "opencascade::handle< Geom2d_Line >":
        """
        No available documentation.

        Parameters
        ----------
        SC: StepGeom_Line

        Returns
        -------
        opencascade::handle<Geom2d_Line>

        """
        return _StepToGeom.steptogeom_MakeLine2d(*args)

    MakeLine2d = staticmethod(MakeLine2d)

    def MakeParabola(*args) -> "opencascade::handle< Geom_Parabola >":
        """
        No available documentation.

        Parameters
        ----------
        SC: StepGeom_Parabola

        Returns
        -------
        opencascade::handle<Geom_Parabola>

        """
        return _StepToGeom.steptogeom_MakeParabola(*args)

    MakeParabola = staticmethod(MakeParabola)

    def MakeParabola2d(*args) -> "opencascade::handle< Geom2d_Parabola >":
        """
        No available documentation.

        Parameters
        ----------
        SC: StepGeom_Parabola

        Returns
        -------
        opencascade::handle<Geom2d_Parabola>

        """
        return _StepToGeom.steptogeom_MakeParabola2d(*args)

    MakeParabola2d = staticmethod(MakeParabola2d)

    def MakePlane(*args) -> "opencascade::handle< Geom_Plane >":
        """
        No available documentation.

        Parameters
        ----------
        SP: StepGeom_Plane

        Returns
        -------
        opencascade::handle<Geom_Plane>

        """
        return _StepToGeom.steptogeom_MakePlane(*args)

    MakePlane = staticmethod(MakePlane)

    def MakePolyline(*args) -> "opencascade::handle< Geom_BSplineCurve >":
        """
        No available documentation.

        Parameters
        ----------
        SPL: StepGeom_Polyline

        Returns
        -------
        opencascade::handle<Geom_BSplineCurve>

        """
        return _StepToGeom.steptogeom_MakePolyline(*args)

    MakePolyline = staticmethod(MakePolyline)

    def MakePolyline2d(*args) -> "opencascade::handle< Geom2d_BSplineCurve >":
        """
        No available documentation.

        Parameters
        ----------
        SPL: StepGeom_Polyline

        Returns
        -------
        opencascade::handle<Geom2d_BSplineCurve>

        """
        return _StepToGeom.steptogeom_MakePolyline2d(*args)

    MakePolyline2d = staticmethod(MakePolyline2d)

    def MakeRectangularTrimmedSurface(*args) -> "opencascade::handle< Geom_RectangularTrimmedSurface >":
        """
        No available documentation.

        Parameters
        ----------
        SS: StepGeom_RectangularTrimmedSurface

        Returns
        -------
        opencascade::handle<Geom_RectangularTrimmedSurface>

        """
        return _StepToGeom.steptogeom_MakeRectangularTrimmedSurface(*args)

    MakeRectangularTrimmedSurface = staticmethod(MakeRectangularTrimmedSurface)

    def MakeSphericalSurface(*args) -> "opencascade::handle< Geom_SphericalSurface >":
        """
        No available documentation.

        Parameters
        ----------
        SS: StepGeom_SphericalSurface

        Returns
        -------
        opencascade::handle<Geom_SphericalSurface>

        """
        return _StepToGeom.steptogeom_MakeSphericalSurface(*args)

    MakeSphericalSurface = staticmethod(MakeSphericalSurface)

    def MakeSurface(*args) -> "opencascade::handle< Geom_Surface >":
        """
        No available documentation.

        Parameters
        ----------
        SS: StepGeom_Surface

        Returns
        -------
        opencascade::handle<Geom_Surface>

        """
        return _StepToGeom.steptogeom_MakeSurface(*args)

    MakeSurface = staticmethod(MakeSurface)

    def MakeSurfaceOfLinearExtrusion(*args) -> "opencascade::handle< Geom_SurfaceOfLinearExtrusion >":
        """
        No available documentation.

        Parameters
        ----------
        SS: StepGeom_SurfaceOfLinearExtrusion

        Returns
        -------
        opencascade::handle<Geom_SurfaceOfLinearExtrusion>

        """
        return _StepToGeom.steptogeom_MakeSurfaceOfLinearExtrusion(*args)

    MakeSurfaceOfLinearExtrusion = staticmethod(MakeSurfaceOfLinearExtrusion)

    def MakeSurfaceOfRevolution(*args) -> "opencascade::handle< Geom_SurfaceOfRevolution >":
        """
        No available documentation.

        Parameters
        ----------
        SS: StepGeom_SurfaceOfRevolution

        Returns
        -------
        opencascade::handle<Geom_SurfaceOfRevolution>

        """
        return _StepToGeom.steptogeom_MakeSurfaceOfRevolution(*args)

    MakeSurfaceOfRevolution = staticmethod(MakeSurfaceOfRevolution)

    def MakeSweptSurface(*args) -> "opencascade::handle< Geom_SweptSurface >":
        """
        No available documentation.

        Parameters
        ----------
        SS: StepGeom_SweptSurface

        Returns
        -------
        opencascade::handle<Geom_SweptSurface>

        """
        return _StepToGeom.steptogeom_MakeSweptSurface(*args)

    MakeSweptSurface = staticmethod(MakeSweptSurface)

    def MakeToroidalSurface(*args) -> "opencascade::handle< Geom_ToroidalSurface >":
        """
        No available documentation.

        Parameters
        ----------
        SS: StepGeom_ToroidalSurface

        Returns
        -------
        opencascade::handle<Geom_ToroidalSurface>

        """
        return _StepToGeom.steptogeom_MakeToroidalSurface(*args)

    MakeToroidalSurface = staticmethod(MakeToroidalSurface)

    def MakeTransformation2d(*args) -> "Standard_Boolean":
        """
        No available documentation.

        Parameters
        ----------
        SCTO: StepGeom_CartesianTransformationOperator2d
        CT: gp_Trsf2d

        Returns
        -------
        bool

        """
        return _StepToGeom.steptogeom_MakeTransformation2d(*args)

    MakeTransformation2d = staticmethod(MakeTransformation2d)

    def MakeTransformation3d(*args) -> "Standard_Boolean":
        """
        No available documentation.

        Parameters
        ----------
        SCTO: StepGeom_CartesianTransformationOperator3d
        CT: gp_Trsf

        Returns
        -------
        bool

        """
        return _StepToGeom.steptogeom_MakeTransformation3d(*args)

    MakeTransformation3d = staticmethod(MakeTransformation3d)

    def MakeTrimmedCurve(*args) -> "opencascade::handle< Geom_TrimmedCurve >":
        """
        No available documentation.

        Parameters
        ----------
        SC: StepGeom_TrimmedCurve

        Returns
        -------
        opencascade::handle<Geom_TrimmedCurve>

        """
        return _StepToGeom.steptogeom_MakeTrimmedCurve(*args)

    MakeTrimmedCurve = staticmethod(MakeTrimmedCurve)

    def MakeTrimmedCurve2d(*args) -> "opencascade::handle< Geom2d_BSplineCurve >":
        """
        No available documentation.

        Parameters
        ----------
        SC: StepGeom_TrimmedCurve

        Returns
        -------
        opencascade::handle<Geom2d_BSplineCurve>

        """
        return _StepToGeom.steptogeom_MakeTrimmedCurve2d(*args)

    MakeTrimmedCurve2d = staticmethod(MakeTrimmedCurve2d)

    def MakeVectorWithMagnitude(*args) -> "opencascade::handle< Geom_VectorWithMagnitude >":
        """
        No available documentation.

        Parameters
        ----------
        SV: StepGeom_Vector

        Returns
        -------
        opencascade::handle<Geom_VectorWithMagnitude>

        """
        return _StepToGeom.steptogeom_MakeVectorWithMagnitude(*args)

    MakeVectorWithMagnitude = staticmethod(MakeVectorWithMagnitude)

    def MakeVectorWithMagnitude2d(*args) -> "opencascade::handle< Geom2d_VectorWithMagnitude >":
        """
        No available documentation.

        Parameters
        ----------
        SV: StepGeom_Vector

        Returns
        -------
        opencascade::handle<Geom2d_VectorWithMagnitude>

        """
        return _StepToGeom.steptogeom_MakeVectorWithMagnitude2d(*args)

    MakeVectorWithMagnitude2d = staticmethod(MakeVectorWithMagnitude2d)

    __repr__ = _dumps_object


    def __init__(self):
        this = _StepToGeom.new_steptogeom()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _StepToGeom.delete_steptogeom
    __del__ = lambda self: None
steptogeom_swigregister = _StepToGeom.steptogeom_swigregister
steptogeom_swigregister(steptogeom)

def steptogeom_MakeAxis1Placement(*args) -> "opencascade::handle< Geom_Axis1Placement >":
    """
    No available documentation.

    Parameters
    ----------
    SA: StepGeom_Axis1Placement

    Returns
    -------
    opencascade::handle<Geom_Axis1Placement>

    """
    return _StepToGeom.steptogeom_MakeAxis1Placement(*args)

def steptogeom_MakeAxis2Placement(*args) -> "opencascade::handle< Geom_Axis2Placement >":
    """
    No available documentation.

    Parameters
    ----------
    SA: StepGeom_Axis2Placement3d

    Returns
    -------
    opencascade::handle<Geom_Axis2Placement>

    """
    return _StepToGeom.steptogeom_MakeAxis2Placement(*args)

def steptogeom_MakeAxisPlacement(*args) -> "opencascade::handle< Geom2d_AxisPlacement >":
    """
    No available documentation.

    Parameters
    ----------
    SA: StepGeom_Axis2Placement2d

    Returns
    -------
    opencascade::handle<Geom2d_AxisPlacement>

    """
    return _StepToGeom.steptogeom_MakeAxisPlacement(*args)

def steptogeom_MakeBSplineCurve(*args) -> "opencascade::handle< Geom_BSplineCurve >":
    """
    No available documentation.

    Parameters
    ----------
    SC: StepGeom_BSplineCurve

    Returns
    -------
    opencascade::handle<Geom_BSplineCurve>

    """
    return _StepToGeom.steptogeom_MakeBSplineCurve(*args)

def steptogeom_MakeBSplineCurve2d(*args) -> "opencascade::handle< Geom2d_BSplineCurve >":
    """
    No available documentation.

    Parameters
    ----------
    SC: StepGeom_BSplineCurve

    Returns
    -------
    opencascade::handle<Geom2d_BSplineCurve>

    """
    return _StepToGeom.steptogeom_MakeBSplineCurve2d(*args)

def steptogeom_MakeBSplineSurface(*args) -> "opencascade::handle< Geom_BSplineSurface >":
    """
    No available documentation.

    Parameters
    ----------
    SS: StepGeom_BSplineSurface

    Returns
    -------
    opencascade::handle<Geom_BSplineSurface>

    """
    return _StepToGeom.steptogeom_MakeBSplineSurface(*args)

def steptogeom_MakeBoundedCurve(*args) -> "opencascade::handle< Geom_BoundedCurve >":
    """
    No available documentation.

    Parameters
    ----------
    SC: StepGeom_BoundedCurve

    Returns
    -------
    opencascade::handle<Geom_BoundedCurve>

    """
    return _StepToGeom.steptogeom_MakeBoundedCurve(*args)

def steptogeom_MakeBoundedCurve2d(*args) -> "opencascade::handle< Geom2d_BoundedCurve >":
    """
    No available documentation.

    Parameters
    ----------
    SC: StepGeom_BoundedCurve

    Returns
    -------
    opencascade::handle<Geom2d_BoundedCurve>

    """
    return _StepToGeom.steptogeom_MakeBoundedCurve2d(*args)

def steptogeom_MakeBoundedSurface(*args) -> "opencascade::handle< Geom_BoundedSurface >":
    """
    No available documentation.

    Parameters
    ----------
    SS: StepGeom_BoundedSurface

    Returns
    -------
    opencascade::handle<Geom_BoundedSurface>

    """
    return _StepToGeom.steptogeom_MakeBoundedSurface(*args)

def steptogeom_MakeCartesianPoint(*args) -> "opencascade::handle< Geom_CartesianPoint >":
    """
    No available documentation.

    Parameters
    ----------
    SP: StepGeom_CartesianPoint

    Returns
    -------
    opencascade::handle<Geom_CartesianPoint>

    """
    return _StepToGeom.steptogeom_MakeCartesianPoint(*args)

def steptogeom_MakeCartesianPoint2d(*args) -> "opencascade::handle< Geom2d_CartesianPoint >":
    """
    No available documentation.

    Parameters
    ----------
    SP: StepGeom_CartesianPoint

    Returns
    -------
    opencascade::handle<Geom2d_CartesianPoint>

    """
    return _StepToGeom.steptogeom_MakeCartesianPoint2d(*args)

def steptogeom_MakeCircle(*args) -> "opencascade::handle< Geom_Circle >":
    """
    No available documentation.

    Parameters
    ----------
    SC: StepGeom_Circle

    Returns
    -------
    opencascade::handle<Geom_Circle>

    """
    return _StepToGeom.steptogeom_MakeCircle(*args)

def steptogeom_MakeCircle2d(*args) -> "opencascade::handle< Geom2d_Circle >":
    """
    No available documentation.

    Parameters
    ----------
    SC: StepGeom_Circle

    Returns
    -------
    opencascade::handle<Geom2d_Circle>

    """
    return _StepToGeom.steptogeom_MakeCircle2d(*args)

def steptogeom_MakeConic(*args) -> "opencascade::handle< Geom_Conic >":
    """
    No available documentation.

    Parameters
    ----------
    SC: StepGeom_Conic

    Returns
    -------
    opencascade::handle<Geom_Conic>

    """
    return _StepToGeom.steptogeom_MakeConic(*args)

def steptogeom_MakeConic2d(*args) -> "opencascade::handle< Geom2d_Conic >":
    """
    No available documentation.

    Parameters
    ----------
    SC: StepGeom_Conic

    Returns
    -------
    opencascade::handle<Geom2d_Conic>

    """
    return _StepToGeom.steptogeom_MakeConic2d(*args)

def steptogeom_MakeConicalSurface(*args) -> "opencascade::handle< Geom_ConicalSurface >":
    """
    No available documentation.

    Parameters
    ----------
    SS: StepGeom_ConicalSurface

    Returns
    -------
    opencascade::handle<Geom_ConicalSurface>

    """
    return _StepToGeom.steptogeom_MakeConicalSurface(*args)

def steptogeom_MakeCurve(*args) -> "opencascade::handle< Geom_Curve >":
    """
    No available documentation.

    Parameters
    ----------
    SC: StepGeom_Curve

    Returns
    -------
    opencascade::handle<Geom_Curve>

    """
    return _StepToGeom.steptogeom_MakeCurve(*args)

def steptogeom_MakeCurve2d(*args) -> "opencascade::handle< Geom2d_Curve >":
    """
    No available documentation.

    Parameters
    ----------
    SC: StepGeom_Curve

    Returns
    -------
    opencascade::handle<Geom2d_Curve>

    """
    return _StepToGeom.steptogeom_MakeCurve2d(*args)

def steptogeom_MakeCylindricalSurface(*args) -> "opencascade::handle< Geom_CylindricalSurface >":
    """
    No available documentation.

    Parameters
    ----------
    SS: StepGeom_CylindricalSurface

    Returns
    -------
    opencascade::handle<Geom_CylindricalSurface>

    """
    return _StepToGeom.steptogeom_MakeCylindricalSurface(*args)

def steptogeom_MakeDirection(*args) -> "opencascade::handle< Geom_Direction >":
    """
    No available documentation.

    Parameters
    ----------
    SD: StepGeom_Direction

    Returns
    -------
    opencascade::handle<Geom_Direction>

    """
    return _StepToGeom.steptogeom_MakeDirection(*args)

def steptogeom_MakeDirection2d(*args) -> "opencascade::handle< Geom2d_Direction >":
    """
    No available documentation.

    Parameters
    ----------
    SD: StepGeom_Direction

    Returns
    -------
    opencascade::handle<Geom2d_Direction>

    """
    return _StepToGeom.steptogeom_MakeDirection2d(*args)

def steptogeom_MakeElementarySurface(*args) -> "opencascade::handle< Geom_ElementarySurface >":
    """
    No available documentation.

    Parameters
    ----------
    SS: StepGeom_ElementarySurface

    Returns
    -------
    opencascade::handle<Geom_ElementarySurface>

    """
    return _StepToGeom.steptogeom_MakeElementarySurface(*args)

def steptogeom_MakeEllipse(*args) -> "opencascade::handle< Geom_Ellipse >":
    """
    No available documentation.

    Parameters
    ----------
    SC: StepGeom_Ellipse

    Returns
    -------
    opencascade::handle<Geom_Ellipse>

    """
    return _StepToGeom.steptogeom_MakeEllipse(*args)

def steptogeom_MakeEllipse2d(*args) -> "opencascade::handle< Geom2d_Ellipse >":
    """
    No available documentation.

    Parameters
    ----------
    SC: StepGeom_Ellipse

    Returns
    -------
    opencascade::handle<Geom2d_Ellipse>

    """
    return _StepToGeom.steptogeom_MakeEllipse2d(*args)

def steptogeom_MakeHyperbola(*args) -> "opencascade::handle< Geom_Hyperbola >":
    """
    No available documentation.

    Parameters
    ----------
    SC: StepGeom_Hyperbola

    Returns
    -------
    opencascade::handle<Geom_Hyperbola>

    """
    return _StepToGeom.steptogeom_MakeHyperbola(*args)

def steptogeom_MakeHyperbola2d(*args) -> "opencascade::handle< Geom2d_Hyperbola >":
    """
    No available documentation.

    Parameters
    ----------
    SC: StepGeom_Hyperbola

    Returns
    -------
    opencascade::handle<Geom2d_Hyperbola>

    """
    return _StepToGeom.steptogeom_MakeHyperbola2d(*args)

def steptogeom_MakeLine(*args) -> "opencascade::handle< Geom_Line >":
    """
    No available documentation.

    Parameters
    ----------
    SC: StepGeom_Line

    Returns
    -------
    opencascade::handle<Geom_Line>

    """
    return _StepToGeom.steptogeom_MakeLine(*args)

def steptogeom_MakeLine2d(*args) -> "opencascade::handle< Geom2d_Line >":
    """
    No available documentation.

    Parameters
    ----------
    SC: StepGeom_Line

    Returns
    -------
    opencascade::handle<Geom2d_Line>

    """
    return _StepToGeom.steptogeom_MakeLine2d(*args)

def steptogeom_MakeParabola(*args) -> "opencascade::handle< Geom_Parabola >":
    """
    No available documentation.

    Parameters
    ----------
    SC: StepGeom_Parabola

    Returns
    -------
    opencascade::handle<Geom_Parabola>

    """
    return _StepToGeom.steptogeom_MakeParabola(*args)

def steptogeom_MakeParabola2d(*args) -> "opencascade::handle< Geom2d_Parabola >":
    """
    No available documentation.

    Parameters
    ----------
    SC: StepGeom_Parabola

    Returns
    -------
    opencascade::handle<Geom2d_Parabola>

    """
    return _StepToGeom.steptogeom_MakeParabola2d(*args)

def steptogeom_MakePlane(*args) -> "opencascade::handle< Geom_Plane >":
    """
    No available documentation.

    Parameters
    ----------
    SP: StepGeom_Plane

    Returns
    -------
    opencascade::handle<Geom_Plane>

    """
    return _StepToGeom.steptogeom_MakePlane(*args)

def steptogeom_MakePolyline(*args) -> "opencascade::handle< Geom_BSplineCurve >":
    """
    No available documentation.

    Parameters
    ----------
    SPL: StepGeom_Polyline

    Returns
    -------
    opencascade::handle<Geom_BSplineCurve>

    """
    return _StepToGeom.steptogeom_MakePolyline(*args)

def steptogeom_MakePolyline2d(*args) -> "opencascade::handle< Geom2d_BSplineCurve >":
    """
    No available documentation.

    Parameters
    ----------
    SPL: StepGeom_Polyline

    Returns
    -------
    opencascade::handle<Geom2d_BSplineCurve>

    """
    return _StepToGeom.steptogeom_MakePolyline2d(*args)

def steptogeom_MakeRectangularTrimmedSurface(*args) -> "opencascade::handle< Geom_RectangularTrimmedSurface >":
    """
    No available documentation.

    Parameters
    ----------
    SS: StepGeom_RectangularTrimmedSurface

    Returns
    -------
    opencascade::handle<Geom_RectangularTrimmedSurface>

    """
    return _StepToGeom.steptogeom_MakeRectangularTrimmedSurface(*args)

def steptogeom_MakeSphericalSurface(*args) -> "opencascade::handle< Geom_SphericalSurface >":
    """
    No available documentation.

    Parameters
    ----------
    SS: StepGeom_SphericalSurface

    Returns
    -------
    opencascade::handle<Geom_SphericalSurface>

    """
    return _StepToGeom.steptogeom_MakeSphericalSurface(*args)

def steptogeom_MakeSurface(*args) -> "opencascade::handle< Geom_Surface >":
    """
    No available documentation.

    Parameters
    ----------
    SS: StepGeom_Surface

    Returns
    -------
    opencascade::handle<Geom_Surface>

    """
    return _StepToGeom.steptogeom_MakeSurface(*args)

def steptogeom_MakeSurfaceOfLinearExtrusion(*args) -> "opencascade::handle< Geom_SurfaceOfLinearExtrusion >":
    """
    No available documentation.

    Parameters
    ----------
    SS: StepGeom_SurfaceOfLinearExtrusion

    Returns
    -------
    opencascade::handle<Geom_SurfaceOfLinearExtrusion>

    """
    return _StepToGeom.steptogeom_MakeSurfaceOfLinearExtrusion(*args)

def steptogeom_MakeSurfaceOfRevolution(*args) -> "opencascade::handle< Geom_SurfaceOfRevolution >":
    """
    No available documentation.

    Parameters
    ----------
    SS: StepGeom_SurfaceOfRevolution

    Returns
    -------
    opencascade::handle<Geom_SurfaceOfRevolution>

    """
    return _StepToGeom.steptogeom_MakeSurfaceOfRevolution(*args)

def steptogeom_MakeSweptSurface(*args) -> "opencascade::handle< Geom_SweptSurface >":
    """
    No available documentation.

    Parameters
    ----------
    SS: StepGeom_SweptSurface

    Returns
    -------
    opencascade::handle<Geom_SweptSurface>

    """
    return _StepToGeom.steptogeom_MakeSweptSurface(*args)

def steptogeom_MakeToroidalSurface(*args) -> "opencascade::handle< Geom_ToroidalSurface >":
    """
    No available documentation.

    Parameters
    ----------
    SS: StepGeom_ToroidalSurface

    Returns
    -------
    opencascade::handle<Geom_ToroidalSurface>

    """
    return _StepToGeom.steptogeom_MakeToroidalSurface(*args)

def steptogeom_MakeTransformation2d(*args) -> "Standard_Boolean":
    """
    No available documentation.

    Parameters
    ----------
    SCTO: StepGeom_CartesianTransformationOperator2d
    CT: gp_Trsf2d

    Returns
    -------
    bool

    """
    return _StepToGeom.steptogeom_MakeTransformation2d(*args)

def steptogeom_MakeTransformation3d(*args) -> "Standard_Boolean":
    """
    No available documentation.

    Parameters
    ----------
    SCTO: StepGeom_CartesianTransformationOperator3d
    CT: gp_Trsf

    Returns
    -------
    bool

    """
    return _StepToGeom.steptogeom_MakeTransformation3d(*args)

def steptogeom_MakeTrimmedCurve(*args) -> "opencascade::handle< Geom_TrimmedCurve >":
    """
    No available documentation.

    Parameters
    ----------
    SC: StepGeom_TrimmedCurve

    Returns
    -------
    opencascade::handle<Geom_TrimmedCurve>

    """
    return _StepToGeom.steptogeom_MakeTrimmedCurve(*args)

def steptogeom_MakeTrimmedCurve2d(*args) -> "opencascade::handle< Geom2d_BSplineCurve >":
    """
    No available documentation.

    Parameters
    ----------
    SC: StepGeom_TrimmedCurve

    Returns
    -------
    opencascade::handle<Geom2d_BSplineCurve>

    """
    return _StepToGeom.steptogeom_MakeTrimmedCurve2d(*args)

def steptogeom_MakeVectorWithMagnitude(*args) -> "opencascade::handle< Geom_VectorWithMagnitude >":
    """
    No available documentation.

    Parameters
    ----------
    SV: StepGeom_Vector

    Returns
    -------
    opencascade::handle<Geom_VectorWithMagnitude>

    """
    return _StepToGeom.steptogeom_MakeVectorWithMagnitude(*args)

def steptogeom_MakeVectorWithMagnitude2d(*args) -> "opencascade::handle< Geom2d_VectorWithMagnitude >":
    """
    No available documentation.

    Parameters
    ----------
    SV: StepGeom_Vector

    Returns
    -------
    opencascade::handle<Geom2d_VectorWithMagnitude>

    """
    return _StepToGeom.steptogeom_MakeVectorWithMagnitude2d(*args)



# This file is compatible with both classic and new-style classes.


