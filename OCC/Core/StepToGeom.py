# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.2.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

"""
StepToGeom module, see official documentation at
https://dev.opencascade.org/doc/occt-7.7.0/refman/html/package_steptogeom.html
"""

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _StepToGeom
else:
    import _StepToGeom

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _StepToGeom.delete_SwigPyIterator

    def value(self):
        return _StepToGeom.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _StepToGeom.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _StepToGeom.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _StepToGeom.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _StepToGeom.SwigPyIterator_equal(self, x)

    def copy(self):
        return _StepToGeom.SwigPyIterator_copy(self)

    def next(self):
        return _StepToGeom.SwigPyIterator_next(self)

    def __next__(self):
        return _StepToGeom.SwigPyIterator___next__(self)

    def previous(self):
        return _StepToGeom.SwigPyIterator_previous(self)

    def advance(self, n):
        return _StepToGeom.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _StepToGeom.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _StepToGeom.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _StepToGeom.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _StepToGeom.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _StepToGeom.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _StepToGeom.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _StepToGeom:
_StepToGeom.SwigPyIterator_swigregister(SwigPyIterator)

def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error, method_name, class_name):
    return _StepToGeom.process_exception(error, method_name, class_name)

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

class ios_base(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    erase_event = _StepToGeom.ios_base_erase_event
    imbue_event = _StepToGeom.ios_base_imbue_event
    copyfmt_event = _StepToGeom.ios_base_copyfmt_event

    def register_callback(self, __fn, __index):
        return _StepToGeom.ios_base_register_callback(self, __fn, __index)

    def flags(self, *args):
        return _StepToGeom.ios_base_flags(self, *args)

    def setf(self, *args):
        return _StepToGeom.ios_base_setf(self, *args)

    def unsetf(self, __mask):
        return _StepToGeom.ios_base_unsetf(self, __mask)

    def precision(self, *args):
        return _StepToGeom.ios_base_precision(self, *args)

    def width(self, *args):
        return _StepToGeom.ios_base_width(self, *args)

    @staticmethod
    def sync_with_stdio(__sync=True):
        return _StepToGeom.ios_base_sync_with_stdio(__sync)

    def imbue(self, __loc):
        return _StepToGeom.ios_base_imbue(self, __loc)

    def getloc(self):
        return _StepToGeom.ios_base_getloc(self)

    @staticmethod
    def xalloc():
        return _StepToGeom.ios_base_xalloc()

    def iword(self, __ix):
        return _StepToGeom.ios_base_iword(self, __ix)

    def pword(self, __ix):
        return _StepToGeom.ios_base_pword(self, __ix)
    __swig_destroy__ = _StepToGeom.delete_ios_base

# Register ios_base in _StepToGeom:
_StepToGeom.ios_base_swigregister(ios_base)
cvar = _StepToGeom.cvar
ios_base.boolalpha = _StepToGeom.cvar.ios_base_boolalpha
ios_base.dec = _StepToGeom.cvar.ios_base_dec
ios_base.fixed = _StepToGeom.cvar.ios_base_fixed
ios_base.hex = _StepToGeom.cvar.ios_base_hex
ios_base.internal = _StepToGeom.cvar.ios_base_internal
ios_base.left = _StepToGeom.cvar.ios_base_left
ios_base.oct = _StepToGeom.cvar.ios_base_oct
ios_base.right = _StepToGeom.cvar.ios_base_right
ios_base.scientific = _StepToGeom.cvar.ios_base_scientific
ios_base.showbase = _StepToGeom.cvar.ios_base_showbase
ios_base.showpoint = _StepToGeom.cvar.ios_base_showpoint
ios_base.showpos = _StepToGeom.cvar.ios_base_showpos
ios_base.skipws = _StepToGeom.cvar.ios_base_skipws
ios_base.unitbuf = _StepToGeom.cvar.ios_base_unitbuf
ios_base.uppercase = _StepToGeom.cvar.ios_base_uppercase
ios_base.adjustfield = _StepToGeom.cvar.ios_base_adjustfield
ios_base.basefield = _StepToGeom.cvar.ios_base_basefield
ios_base.floatfield = _StepToGeom.cvar.ios_base_floatfield
ios_base.badbit = _StepToGeom.cvar.ios_base_badbit
ios_base.eofbit = _StepToGeom.cvar.ios_base_eofbit
ios_base.failbit = _StepToGeom.cvar.ios_base_failbit
ios_base.goodbit = _StepToGeom.cvar.ios_base_goodbit
ios_base.app = _StepToGeom.cvar.ios_base_app
ios_base.ate = _StepToGeom.cvar.ios_base_ate
ios_base.binary = _StepToGeom.cvar.ios_base_binary
ios_base.ios_base_in = _StepToGeom.cvar.ios_base_ios_base_in
ios_base.out = _StepToGeom.cvar.ios_base_out
ios_base.trunc = _StepToGeom.cvar.ios_base_trunc
ios_base.beg = _StepToGeom.cvar.ios_base_beg
ios_base.cur = _StepToGeom.cvar.ios_base_cur
ios_base.end = _StepToGeom.cvar.ios_base_end

class ios(ios_base):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def rdstate(self):
        return _StepToGeom.ios_rdstate(self)

    def clear(self, *args):
        return _StepToGeom.ios_clear(self, *args)

    def setstate(self, __state):
        return _StepToGeom.ios_setstate(self, __state)

    def good(self):
        return _StepToGeom.ios_good(self)

    def eof(self):
        return _StepToGeom.ios_eof(self)

    def fail(self):
        return _StepToGeom.ios_fail(self)

    def bad(self):
        return _StepToGeom.ios_bad(self)

    def exceptions(self, *args):
        return _StepToGeom.ios_exceptions(self, *args)

    def __init__(self, __sb):
        _StepToGeom.ios_swiginit(self, _StepToGeom.new_ios(__sb))
    __swig_destroy__ = _StepToGeom.delete_ios

    def tie(self, *args):
        return _StepToGeom.ios_tie(self, *args)

    def rdbuf(self, *args):
        return _StepToGeom.ios_rdbuf(self, *args)

    def copyfmt(self, __rhs):
        return _StepToGeom.ios_copyfmt(self, __rhs)

    def fill(self, *args):
        return _StepToGeom.ios_fill(self, *args)

    def imbue(self, __loc):
        return _StepToGeom.ios_imbue(self, __loc)

    def narrow(self, __c, __dfault):
        return _StepToGeom.ios_narrow(self, __c, __dfault)

    def widen(self, __c):
        return _StepToGeom.ios_widen(self, __c)

# Register ios in _StepToGeom:
_StepToGeom.ios_swigregister(ios)
class ostream(ios):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, __sb):
        _StepToGeom.ostream_swiginit(self, _StepToGeom.new_ostream(__sb))
    __swig_destroy__ = _StepToGeom.delete_ostream

    def __lshift__(self, *args):
        return _StepToGeom.ostream___lshift__(self, *args)

    def put(self, __c):
        return _StepToGeom.ostream_put(self, __c)

    def write(self, __s, __n):
        return _StepToGeom.ostream_write(self, __s, __n)

    def flush(self):
        return _StepToGeom.ostream_flush(self)

    def tellp(self):
        return _StepToGeom.ostream_tellp(self)

    def seekp(self, *args):
        return _StepToGeom.ostream_seekp(self, *args)

# Register ostream in _StepToGeom:
_StepToGeom.ostream_swigregister(ostream)
class istream(ios):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, __sb):
        _StepToGeom.istream_swiginit(self, _StepToGeom.new_istream(__sb))
    __swig_destroy__ = _StepToGeom.delete_istream

    def __rshift__(self, *args):
        return _StepToGeom.istream___rshift__(self, *args)

    def gcount(self):
        return _StepToGeom.istream_gcount(self)

    def get(self, *args):
        return _StepToGeom.istream_get(self, *args)

    def getline(self, *args):
        return _StepToGeom.istream_getline(self, *args)

    def ignore(self, *args):
        return _StepToGeom.istream_ignore(self, *args)

    def peek(self):
        return _StepToGeom.istream_peek(self)

    def read(self, __s, __n):
        return _StepToGeom.istream_read(self, __s, __n)

    def readsome(self, __s, __n):
        return _StepToGeom.istream_readsome(self, __s, __n)

    def putback(self, __c):
        return _StepToGeom.istream_putback(self, __c)

    def unget(self):
        return _StepToGeom.istream_unget(self)

    def sync(self):
        return _StepToGeom.istream_sync(self)

    def tellg(self):
        return _StepToGeom.istream_tellg(self)

    def seekg(self, *args):
        return _StepToGeom.istream_seekg(self, *args)

# Register istream in _StepToGeom:
_StepToGeom.istream_swigregister(istream)
class iostream(istream, ostream):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, __sb):
        _StepToGeom.iostream_swiginit(self, _StepToGeom.new_iostream(__sb))
    __swig_destroy__ = _StepToGeom.delete_iostream

# Register iostream in _StepToGeom:
_StepToGeom.iostream_swigregister(iostream)
cin = cvar.cin
cout = cvar.cout
cerr = cvar.cerr
clog = cvar.clog

endl_cb_ptr = _StepToGeom.endl_cb_ptr
endl = _StepToGeom.endl
ends_cb_ptr = _StepToGeom.ends_cb_ptr
ends = _StepToGeom.ends
flush_cb_ptr = _StepToGeom.flush_cb_ptr
flush = _StepToGeom.flush
import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.StepGeom
import OCC.Core.StepData
import OCC.Core.TCollection
import OCC.Core.Interface
import OCC.Core.Message
import OCC.Core.OSD
import OCC.Core.TColStd
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.Resource
import OCC.Core.StepRepr
import OCC.Core.StepBasic
import OCC.Core.Geom
import OCC.Core.GeomAbs
import OCC.Core.TColgp
import OCC.Core.Geom2d
import OCC.Core.StepKinematics
import OCC.Core.StepShape

from enum import IntEnum
from OCC.Core.Exception import *



class steptogeom(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def MakeAxis1Placement(*args):
        r"""

        Parameters
        ----------
        SA: StepGeom_Axis1Placement
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_Axis1Placement>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeAxis1Placement(*args)

    @staticmethod
    def MakeAxis2Placement(*args):
        r"""

        Parameters
        ----------
        SA: StepGeom_Axis2Placement3d
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_Axis2Placement>

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        SP: StepGeom_SuParameters

        Return
        -------
        opencascade::handle<Geom_Axis2Placement>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeAxis2Placement(*args)

    @staticmethod
    def MakeAxisPlacement(*args):
        r"""

        Parameters
        ----------
        SA: StepGeom_Axis2Placement2d
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom2d_AxisPlacement>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeAxisPlacement(*args)

    @staticmethod
    def MakeBSplineCurve(*args):
        r"""

        Parameters
        ----------
        SC: StepGeom_BSplineCurve
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_BSplineCurve>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeBSplineCurve(*args)

    @staticmethod
    def MakeBSplineCurve2d(*args):
        r"""

        Parameters
        ----------
        SC: StepGeom_BSplineCurve
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom2d_BSplineCurve>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeBSplineCurve2d(*args)

    @staticmethod
    def MakeBSplineSurface(*args):
        r"""

        Parameters
        ----------
        SS: StepGeom_BSplineSurface
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_BSplineSurface>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeBSplineSurface(*args)

    @staticmethod
    def MakeBoundedCurve(*args):
        r"""

        Parameters
        ----------
        SC: StepGeom_BoundedCurve
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_BoundedCurve>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeBoundedCurve(*args)

    @staticmethod
    def MakeBoundedCurve2d(*args):
        r"""

        Parameters
        ----------
        SC: StepGeom_BoundedCurve
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom2d_BoundedCurve>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeBoundedCurve2d(*args)

    @staticmethod
    def MakeBoundedSurface(*args):
        r"""

        Parameters
        ----------
        SS: StepGeom_BoundedSurface
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_BoundedSurface>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeBoundedSurface(*args)

    @staticmethod
    def MakeCartesianPoint(*args):
        r"""

        Parameters
        ----------
        SP: StepGeom_CartesianPoint
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_CartesianPoint>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeCartesianPoint(*args)

    @staticmethod
    def MakeCartesianPoint2d(*args):
        r"""

        Parameters
        ----------
        SP: StepGeom_CartesianPoint
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom2d_CartesianPoint>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeCartesianPoint2d(*args)

    @staticmethod
    def MakeCircle(*args):
        r"""

        Parameters
        ----------
        SC: StepGeom_Circle
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_Circle>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeCircle(*args)

    @staticmethod
    def MakeCircle2d(*args):
        r"""

        Parameters
        ----------
        SC: StepGeom_Circle
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom2d_Circle>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeCircle2d(*args)

    @staticmethod
    def MakeConic(*args):
        r"""

        Parameters
        ----------
        SC: StepGeom_Conic
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_Conic>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeConic(*args)

    @staticmethod
    def MakeConic2d(*args):
        r"""

        Parameters
        ----------
        SC: StepGeom_Conic
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom2d_Conic>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeConic2d(*args)

    @staticmethod
    def MakeConicalSurface(*args):
        r"""

        Parameters
        ----------
        SS: StepGeom_ConicalSurface
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_ConicalSurface>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeConicalSurface(*args)

    @staticmethod
    def MakeCurve(*args):
        r"""

        Parameters
        ----------
        SC: StepGeom_Curve
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_Curve>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeCurve(*args)

    @staticmethod
    def MakeCurve2d(*args):
        r"""

        Parameters
        ----------
        SC: StepGeom_Curve
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom2d_Curve>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeCurve2d(*args)

    @staticmethod
    def MakeCylindricalSurface(*args):
        r"""

        Parameters
        ----------
        SS: StepGeom_CylindricalSurface
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_CylindricalSurface>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeCylindricalSurface(*args)

    @staticmethod
    def MakeDirection(*args):
        r"""

        Parameters
        ----------
        SD: StepGeom_Direction

        Return
        -------
        opencascade::handle<Geom_Direction>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeDirection(*args)

    @staticmethod
    def MakeDirection2d(*args):
        r"""

        Parameters
        ----------
        SD: StepGeom_Direction

        Return
        -------
        opencascade::handle<Geom2d_Direction>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeDirection2d(*args)

    @staticmethod
    def MakeElementarySurface(*args):
        r"""

        Parameters
        ----------
        SS: StepGeom_ElementarySurface
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_ElementarySurface>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeElementarySurface(*args)

    @staticmethod
    def MakeEllipse(*args):
        r"""

        Parameters
        ----------
        SC: StepGeom_Ellipse
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_Ellipse>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeEllipse(*args)

    @staticmethod
    def MakeEllipse2d(*args):
        r"""

        Parameters
        ----------
        SC: StepGeom_Ellipse
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom2d_Ellipse>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeEllipse2d(*args)

    @staticmethod
    def MakeHyperbola(*args):
        r"""

        Parameters
        ----------
        SC: StepGeom_Hyperbola
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_Hyperbola>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeHyperbola(*args)

    @staticmethod
    def MakeHyperbola2d(*args):
        r"""

        Parameters
        ----------
        SC: StepGeom_Hyperbola
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom2d_Hyperbola>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeHyperbola2d(*args)

    @staticmethod
    def MakeLine(*args):
        r"""

        Parameters
        ----------
        SC: StepGeom_Line
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_Line>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeLine(*args)

    @staticmethod
    def MakeLine2d(*args):
        r"""

        Parameters
        ----------
        SC: StepGeom_Line
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom2d_Line>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeLine2d(*args)

    @staticmethod
    def MakeParabola(*args):
        r"""

        Parameters
        ----------
        SC: StepGeom_Parabola
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_Parabola>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeParabola(*args)

    @staticmethod
    def MakeParabola2d(*args):
        r"""

        Parameters
        ----------
        SC: StepGeom_Parabola
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom2d_Parabola>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeParabola2d(*args)

    @staticmethod
    def MakePlane(*args):
        r"""

        Parameters
        ----------
        SP: StepGeom_Plane
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_Plane>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakePlane(*args)

    @staticmethod
    def MakePolyline(*args):
        r"""

        Parameters
        ----------
        SPL: StepGeom_Polyline
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_BSplineCurve>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakePolyline(*args)

    @staticmethod
    def MakePolyline2d(*args):
        r"""

        Parameters
        ----------
        SPL: StepGeom_Polyline
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom2d_BSplineCurve>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakePolyline2d(*args)

    @staticmethod
    def MakeRectangularTrimmedSurface(*args):
        r"""

        Parameters
        ----------
        SS: StepGeom_RectangularTrimmedSurface
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_RectangularTrimmedSurface>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeRectangularTrimmedSurface(*args)

    @staticmethod
    def MakeSphericalSurface(*args):
        r"""

        Parameters
        ----------
        SS: StepGeom_SphericalSurface
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_SphericalSurface>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeSphericalSurface(*args)

    @staticmethod
    def MakeSurface(*args):
        r"""

        Parameters
        ----------
        SS: StepGeom_Surface
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_Surface>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeSurface(*args)

    @staticmethod
    def MakeSurfaceOfLinearExtrusion(*args):
        r"""

        Parameters
        ----------
        SS: StepGeom_SurfaceOfLinearExtrusion
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_SurfaceOfLinearExtrusion>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeSurfaceOfLinearExtrusion(*args)

    @staticmethod
    def MakeSurfaceOfRevolution(*args):
        r"""

        Parameters
        ----------
        SS: StepGeom_SurfaceOfRevolution
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_SurfaceOfRevolution>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeSurfaceOfRevolution(*args)

    @staticmethod
    def MakeSweptSurface(*args):
        r"""

        Parameters
        ----------
        SS: StepGeom_SweptSurface
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_SweptSurface>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeSweptSurface(*args)

    @staticmethod
    def MakeToroidalSurface(*args):
        r"""

        Parameters
        ----------
        SS: StepGeom_ToroidalSurface
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_ToroidalSurface>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeToroidalSurface(*args)

    @staticmethod
    def MakeTransformation2d(*args):
        r"""

        Parameters
        ----------
        SCTO: StepGeom_CartesianTransformationOperator2d
        CT: gp_Trsf2d
        theLocalFactors: StepData_Factors

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeTransformation2d(*args)

    @staticmethod
    def MakeTransformation3d(*args):
        r"""

        Parameters
        ----------
        SCTO: StepGeom_CartesianTransformationOperator3d
        CT: gp_Trsf
        theLocalFactors: StepData_Factors

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeTransformation3d(*args)

    @staticmethod
    def MakeTrimmedCurve(*args):
        r"""

        Parameters
        ----------
        SC: StepGeom_TrimmedCurve
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_TrimmedCurve>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeTrimmedCurve(*args)

    @staticmethod
    def MakeTrimmedCurve2d(*args):
        r"""

        Parameters
        ----------
        SC: StepGeom_TrimmedCurve
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom2d_BSplineCurve>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeTrimmedCurve2d(*args)

    @staticmethod
    def MakeVectorWithMagnitude(*args):
        r"""

        Parameters
        ----------
        SV: StepGeom_Vector
        theLocalFactors: StepData_Factors

        Return
        -------
        opencascade::handle<Geom_VectorWithMagnitude>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeVectorWithMagnitude(*args)

    @staticmethod
    def MakeVectorWithMagnitude2d(*args):
        r"""

        Parameters
        ----------
        SV: StepGeom_Vector

        Return
        -------
        opencascade::handle<Geom2d_VectorWithMagnitude>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeVectorWithMagnitude2d(*args)

    @staticmethod
    def MakeYprRotation(*args):
        r"""

        Parameters
        ----------
        SR: StepKinematics_SpatialRotation
        theCntxt: StepRepr_GlobalUnitAssignedContext

        Return
        -------
        opencascade::handle<TColStd_HArray1OfReal>

        Description
        -----------
        No available documentation.

        """
        return _StepToGeom.steptogeom_MakeYprRotation(*args)

    __repr__ = _dumps_object


    def __init__(self):
        _StepToGeom.steptogeom_swiginit(self, _StepToGeom.new_steptogeom())
    __swig_destroy__ = _StepToGeom.delete_steptogeom

# Register steptogeom in _StepToGeom:
_StepToGeom.steptogeom_swigregister(steptogeom)



@deprecated
def steptogeom_MakeAxis1Placement(*args):
	return steptogeom.MakeAxis1Placement(*args)

@deprecated
def steptogeom_MakeAxis2Placement(*args):
	return steptogeom.MakeAxis2Placement(*args)

@deprecated
def steptogeom_MakeAxis2Placement(*args):
	return steptogeom.MakeAxis2Placement(*args)

@deprecated
def steptogeom_MakeAxisPlacement(*args):
	return steptogeom.MakeAxisPlacement(*args)

@deprecated
def steptogeom_MakeBSplineCurve(*args):
	return steptogeom.MakeBSplineCurve(*args)

@deprecated
def steptogeom_MakeBSplineCurve2d(*args):
	return steptogeom.MakeBSplineCurve2d(*args)

@deprecated
def steptogeom_MakeBSplineSurface(*args):
	return steptogeom.MakeBSplineSurface(*args)

@deprecated
def steptogeom_MakeBoundedCurve(*args):
	return steptogeom.MakeBoundedCurve(*args)

@deprecated
def steptogeom_MakeBoundedCurve2d(*args):
	return steptogeom.MakeBoundedCurve2d(*args)

@deprecated
def steptogeom_MakeBoundedSurface(*args):
	return steptogeom.MakeBoundedSurface(*args)

@deprecated
def steptogeom_MakeCartesianPoint(*args):
	return steptogeom.MakeCartesianPoint(*args)

@deprecated
def steptogeom_MakeCartesianPoint2d(*args):
	return steptogeom.MakeCartesianPoint2d(*args)

@deprecated
def steptogeom_MakeCircle(*args):
	return steptogeom.MakeCircle(*args)

@deprecated
def steptogeom_MakeCircle2d(*args):
	return steptogeom.MakeCircle2d(*args)

@deprecated
def steptogeom_MakeConic(*args):
	return steptogeom.MakeConic(*args)

@deprecated
def steptogeom_MakeConic2d(*args):
	return steptogeom.MakeConic2d(*args)

@deprecated
def steptogeom_MakeConicalSurface(*args):
	return steptogeom.MakeConicalSurface(*args)

@deprecated
def steptogeom_MakeCurve(*args):
	return steptogeom.MakeCurve(*args)

@deprecated
def steptogeom_MakeCurve2d(*args):
	return steptogeom.MakeCurve2d(*args)

@deprecated
def steptogeom_MakeCylindricalSurface(*args):
	return steptogeom.MakeCylindricalSurface(*args)

@deprecated
def steptogeom_MakeDirection(*args):
	return steptogeom.MakeDirection(*args)

@deprecated
def steptogeom_MakeDirection2d(*args):
	return steptogeom.MakeDirection2d(*args)

@deprecated
def steptogeom_MakeElementarySurface(*args):
	return steptogeom.MakeElementarySurface(*args)

@deprecated
def steptogeom_MakeEllipse(*args):
	return steptogeom.MakeEllipse(*args)

@deprecated
def steptogeom_MakeEllipse2d(*args):
	return steptogeom.MakeEllipse2d(*args)

@deprecated
def steptogeom_MakeHyperbola(*args):
	return steptogeom.MakeHyperbola(*args)

@deprecated
def steptogeom_MakeHyperbola2d(*args):
	return steptogeom.MakeHyperbola2d(*args)

@deprecated
def steptogeom_MakeLine(*args):
	return steptogeom.MakeLine(*args)

@deprecated
def steptogeom_MakeLine2d(*args):
	return steptogeom.MakeLine2d(*args)

@deprecated
def steptogeom_MakeParabola(*args):
	return steptogeom.MakeParabola(*args)

@deprecated
def steptogeom_MakeParabola2d(*args):
	return steptogeom.MakeParabola2d(*args)

@deprecated
def steptogeom_MakePlane(*args):
	return steptogeom.MakePlane(*args)

@deprecated
def steptogeom_MakePolyline(*args):
	return steptogeom.MakePolyline(*args)

@deprecated
def steptogeom_MakePolyline2d(*args):
	return steptogeom.MakePolyline2d(*args)

@deprecated
def steptogeom_MakeRectangularTrimmedSurface(*args):
	return steptogeom.MakeRectangularTrimmedSurface(*args)

@deprecated
def steptogeom_MakeSphericalSurface(*args):
	return steptogeom.MakeSphericalSurface(*args)

@deprecated
def steptogeom_MakeSurface(*args):
	return steptogeom.MakeSurface(*args)

@deprecated
def steptogeom_MakeSurfaceOfLinearExtrusion(*args):
	return steptogeom.MakeSurfaceOfLinearExtrusion(*args)

@deprecated
def steptogeom_MakeSurfaceOfRevolution(*args):
	return steptogeom.MakeSurfaceOfRevolution(*args)

@deprecated
def steptogeom_MakeSweptSurface(*args):
	return steptogeom.MakeSweptSurface(*args)

@deprecated
def steptogeom_MakeToroidalSurface(*args):
	return steptogeom.MakeToroidalSurface(*args)

@deprecated
def steptogeom_MakeTransformation2d(*args):
	return steptogeom.MakeTransformation2d(*args)

@deprecated
def steptogeom_MakeTransformation3d(*args):
	return steptogeom.MakeTransformation3d(*args)

@deprecated
def steptogeom_MakeTrimmedCurve(*args):
	return steptogeom.MakeTrimmedCurve(*args)

@deprecated
def steptogeom_MakeTrimmedCurve2d(*args):
	return steptogeom.MakeTrimmedCurve2d(*args)

@deprecated
def steptogeom_MakeVectorWithMagnitude(*args):
	return steptogeom.MakeVectorWithMagnitude(*args)

@deprecated
def steptogeom_MakeVectorWithMagnitude2d(*args):
	return steptogeom.MakeVectorWithMagnitude2d(*args)

@deprecated
def steptogeom_MakeYprRotation(*args):
	return steptogeom.MakeYprRotation(*args)



