# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

"""
TransferBRep module, see official documentation at
https://www.opencascade.com/doc/occt-7.7.0/refman/html/package_transferbrep.html
"""

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _TransferBRep
else:
    import _TransferBRep

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _TransferBRep.delete_SwigPyIterator

    def value(self):
        return _TransferBRep.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _TransferBRep.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _TransferBRep.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _TransferBRep.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _TransferBRep.SwigPyIterator_equal(self, x)

    def copy(self):
        return _TransferBRep.SwigPyIterator_copy(self)

    def next(self):
        return _TransferBRep.SwigPyIterator_next(self)

    def __next__(self):
        return _TransferBRep.SwigPyIterator___next__(self)

    def previous(self):
        return _TransferBRep.SwigPyIterator_previous(self)

    def advance(self, n):
        return _TransferBRep.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _TransferBRep.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _TransferBRep.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _TransferBRep.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _TransferBRep.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _TransferBRep.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _TransferBRep.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _TransferBRep:
_TransferBRep.SwigPyIterator_swigregister(SwigPyIterator)

def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error, method_name, class_name):
    return _TransferBRep.process_exception(error, method_name, class_name)

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.Interface
import OCC.Core.TCollection
import OCC.Core.Message
import OCC.Core.OSD
import OCC.Core.TColStd
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.TopTools
import OCC.Core.Transfer

from enum import IntEnum
from OCC.Core.Exception import *




def Handle_TransferBRep_BinderOfShape_Create():
    return _TransferBRep.Handle_TransferBRep_BinderOfShape_Create()

def Handle_TransferBRep_BinderOfShape_DownCast(t):
    return _TransferBRep.Handle_TransferBRep_BinderOfShape_DownCast(t)

def Handle_TransferBRep_BinderOfShape_IsNull(t):
    return _TransferBRep.Handle_TransferBRep_BinderOfShape_IsNull(t)

def Handle_TransferBRep_OrientedShapeMapper_Create():
    return _TransferBRep.Handle_TransferBRep_OrientedShapeMapper_Create()

def Handle_TransferBRep_OrientedShapeMapper_DownCast(t):
    return _TransferBRep.Handle_TransferBRep_OrientedShapeMapper_DownCast(t)

def Handle_TransferBRep_OrientedShapeMapper_IsNull(t):
    return _TransferBRep.Handle_TransferBRep_OrientedShapeMapper_IsNull(t)

def Handle_TransferBRep_ShapeListBinder_Create():
    return _TransferBRep.Handle_TransferBRep_ShapeListBinder_Create()

def Handle_TransferBRep_ShapeListBinder_DownCast(t):
    return _TransferBRep.Handle_TransferBRep_ShapeListBinder_DownCast(t)

def Handle_TransferBRep_ShapeListBinder_IsNull(t):
    return _TransferBRep.Handle_TransferBRep_ShapeListBinder_IsNull(t)

def Handle_TransferBRep_ShapeMapper_Create():
    return _TransferBRep.Handle_TransferBRep_ShapeMapper_Create()

def Handle_TransferBRep_ShapeMapper_DownCast(t):
    return _TransferBRep.Handle_TransferBRep_ShapeMapper_DownCast(t)

def Handle_TransferBRep_ShapeMapper_IsNull(t):
    return _TransferBRep.Handle_TransferBRep_ShapeMapper_IsNull(t)

def Handle_TransferBRep_TransferResultInfo_Create():
    return _TransferBRep.Handle_TransferBRep_TransferResultInfo_Create()

def Handle_TransferBRep_TransferResultInfo_DownCast(t):
    return _TransferBRep.Handle_TransferBRep_TransferResultInfo_DownCast(t)

def Handle_TransferBRep_TransferResultInfo_IsNull(t):
    return _TransferBRep.Handle_TransferBRep_TransferResultInfo_IsNull(t)

def Handle_TransferBRep_ShapeBinder_Create():
    return _TransferBRep.Handle_TransferBRep_ShapeBinder_Create()

def Handle_TransferBRep_ShapeBinder_DownCast(t):
    return _TransferBRep.Handle_TransferBRep_ShapeBinder_DownCast(t)

def Handle_TransferBRep_ShapeBinder_IsNull(t):
    return _TransferBRep.Handle_TransferBRep_ShapeBinder_IsNull(t)

def Handle_TransferBRep_HSequenceOfTransferResultInfo_Create():
    return _TransferBRep.Handle_TransferBRep_HSequenceOfTransferResultInfo_Create()

def Handle_TransferBRep_HSequenceOfTransferResultInfo_DownCast(t):
    return _TransferBRep.Handle_TransferBRep_HSequenceOfTransferResultInfo_DownCast(t)

def Handle_TransferBRep_HSequenceOfTransferResultInfo_IsNull(t):
    return _TransferBRep.Handle_TransferBRep_HSequenceOfTransferResultInfo_IsNull(t)
class TransferBRep_SequenceOfTransferResultInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_begin(self)

    def end(self):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_end(self)

    def cbegin(self):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_cbegin(self)

    def cend(self):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_cend(self)

    def __init__(self, *args):
        _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_swiginit(self, _TransferBRep.new_TransferBRep_SequenceOfTransferResultInfo(*args))

    def Size(self):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_Size(self)

    def Length(self):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_Length(self)

    def Lower(self):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_Lower(self)

    def Upper(self):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_Upper(self)

    def IsEmpty(self):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_IsEmpty(self)

    def Reverse(self):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_Reverse(self)

    def Exchange(self, I, J):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_Exchange(self, I, J)

    @staticmethod
    def delNode(theNode, theAl):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_delNode(theNode, theAl)

    def Clear(self, theAllocator=0):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_Clear(self, theAllocator)

    def Assign(self, theOther):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_Assign(self, theOther)

    def Set(self, theOther):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_Set(self, theOther)

    def Remove(self, *args):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_Remove(self, *args)

    def Append(self, *args):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_Append(self, *args)

    def Prepend(self, *args):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_Prepend(self, *args)

    def InsertBefore(self, *args):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_InsertAfter(self, *args)

    def Split(self, theIndex, theSeq):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_Split(self, theIndex, theSeq)

    def First(self):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_First(self)

    def ChangeFirst(self):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_ChangeFirst(self)

    def Last(self):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_Last(self)

    def ChangeLast(self):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_ChangeLast(self)

    def Value(self, theIndex):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_Value(self, theIndex)

    def ChangeValue(self, theIndex):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_ChangeValue(self, theIndex)

    def __call__(self, *args):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo___call__(self, *args)

    def SetValue(self, theIndex, theItem):
        return _TransferBRep.TransferBRep_SequenceOfTransferResultInfo_SetValue(self, theIndex, theItem)
    __swig_destroy__ = _TransferBRep.delete_TransferBRep_SequenceOfTransferResultInfo

    def __len__(self):
        return self.Size()


# Register TransferBRep_SequenceOfTransferResultInfo in _TransferBRep:
_TransferBRep.TransferBRep_SequenceOfTransferResultInfo_swigregister(TransferBRep_SequenceOfTransferResultInfo)
class transferbrep(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def CheckObject(*args):
        r"""

        Parameters
        ----------
        chl: Interface_CheckIterator
        obj: Standard_Transient

        Return
        -------
        Interface_CheckIterator

        Description
        -----------
        Returns the check-list bound to a given object, generally none (if ok) or one check. <obj> can be, either a true transient object or entity, or a shapemapper, in that case the shape is considered.

        """
        return _TransferBRep.transferbrep_CheckObject(*args)

    @staticmethod
    def Checked(*args):
        r"""

        Parameters
        ----------
        chl: Interface_CheckIterator
        alsoshapes: bool (optional, default to Standard_False)

        Return
        -------
        opencascade::handle<TColStd_HSequenceOfTransient>

        Description
        -----------
        Returns the list of objects to which a non-empty check is bound in a check-list. objects are transients, they can then be either imagine objects entities for an interface norm. <alsoshapes> commands shapes to be returned too (as shapemapper), see also checkedshapes.

        """
        return _TransferBRep.transferbrep_Checked(*args)

    @staticmethod
    def CheckedShapes(*args):
        r"""

        Parameters
        ----------
        chl: Interface_CheckIterator

        Return
        -------
        opencascade::handle<TopTools_HSequenceOfShape>

        Description
        -----------
        Returns the list of shapes to which a non-empty check is bound in a check-list.

        """
        return _TransferBRep.transferbrep_CheckedShapes(*args)

    @staticmethod
    def PrintResultInfo(*args):
        r"""

        Parameters
        ----------
        Printer: Message_Printer
        Header: Message_Msg
        ResultInfo: TransferBRep_TransferResultInfo
        printEmpty: bool (optional, default to Standard_True)

        Return
        -------
        None

        Description
        -----------
        Prints the results of transfer to given priner with given header.

        """
        return _TransferBRep.transferbrep_PrintResultInfo(*args)

    @staticmethod
    def ResultCheckList(*args):
        r"""

        Parameters
        ----------
        chl: Interface_CheckIterator
        FP: Transfer_FinderProcess
        model: Interface_InterfaceModel

        Return
        -------
        Interface_CheckIterator

        Description
        -----------
        Takes a starting checkiterator which brings checks bound with starting objects (shapes, transient from an imagine appli ...) and converts it to a checkiterator in which checks are bound with results in an interfacemodel mapping is recorded in the finderprocess starting objects for which no individual result is recorded remain in their state.

        """
        return _TransferBRep.transferbrep_ResultCheckList(*args)

    @staticmethod
    def ResultFromShape(*args):
        r"""

        Parameters
        ----------
        FP: Transfer_FinderProcess
        shape: TopoDS_Shape

        Return
        -------
        opencascade::handle<Transfer_Binder>

        Description
        -----------
        Returns the result (as a binder) attached to a given shape null if none.

        """
        return _TransferBRep.transferbrep_ResultFromShape(*args)

    @staticmethod
    def SetShapeResult(*args):
        r"""

        Parameters
        ----------
        TP: Transfer_TransientProcess
        ent: Standard_Transient
        result: TopoDS_Shape

        Return
        -------
        None

        Description
        -----------
        Sets a shape as a result for a starting entity <ent> (reverse of shaperesult) it simply creates a shapebinder then binds it to the entity.

        """
        return _TransferBRep.transferbrep_SetShapeResult(*args)

    @staticmethod
    def SetTransientFromShape(*args):
        r"""

        Parameters
        ----------
        FP: Transfer_FinderProcess
        shape: TopoDS_Shape
        result: Standard_Transient

        Return
        -------
        None

        Description
        -----------
        Binds a transient result to a shape in a finderprocess (as first result if multiple: does not add it to existing one).

        """
        return _TransferBRep.transferbrep_SetTransientFromShape(*args)

    @staticmethod
    def ShapeMapper(*args):
        r"""

        Parameters
        ----------
        FP: Transfer_FinderProcess
        shape: TopoDS_Shape

        Return
        -------
        opencascade::handle<TransferBRep_ShapeMapper>

        Description
        -----------
        Returns a shapemapper for a given shape (location included) either <shape> is already mapped, then its mapper is returned or it is not, then a new one is created then returned, but it is not mapped here (use bind or findelsebind to do this).

        """
        return _TransferBRep.transferbrep_ShapeMapper(*args)

    @staticmethod
    def ShapeResult(*args):
        r"""

        Parameters
        ----------
        binder: Transfer_Binder

        Return
        -------
        TopoDS_Shape

        Description
        -----------
        Get the shape recorded in a binder if the binder brings a multiple result, search for the shape.

        Parameters
        ----------
        TP: Transfer_TransientProcess
        ent: Standard_Transient

        Return
        -------
        TopoDS_Shape

        Description
        -----------
        Get the shape recorded in a transientprocess as result of the transfer of an entity. i.e. in the binder bound to that entity if no result or result not a single shape, returns a null shape.

        """
        return _TransferBRep.transferbrep_ShapeResult(*args)

    @staticmethod
    def ShapeState(*args):
        r"""

        Parameters
        ----------
        FP: Transfer_FinderProcess
        shape: TopoDS_Shape

        Return
        -------
        TopAbs_Orientation

        Description
        -----------
        Returns a status regarding a shape in a finderprocess - forward means bound with same orientation - reversed means bound with reverse orientation - external means not bound - internal is not used.

        """
        return _TransferBRep.transferbrep_ShapeState(*args)

    @staticmethod
    def Shapes(*args):
        r"""

        Parameters
        ----------
        TP: Transfer_TransientProcess
        rootsonly: bool (optional, default to Standard_True)

        Return
        -------
        opencascade::handle<TopTools_HSequenceOfShape>

        Description
        -----------
        Gets the shapes recorded in a transientprocess as result of a transfer, considers roots only or all results according <rootsonly>, returns them as a hsequence.

        Parameters
        ----------
        TP: Transfer_TransientProcess
        list: TColStd_HSequenceOfTransient

        Return
        -------
        opencascade::handle<TopTools_HSequenceOfShape>

        Description
        -----------
        Gets the shapes recorded in a transientprocess as result of a transfer, for a given list of starting entities, returns the shapes as a hsequence.

        """
        return _TransferBRep.transferbrep_Shapes(*args)

    @staticmethod
    def TransferResultInfo(*args):
        r"""

        Parameters
        ----------
        TP: Transfer_TransientProcess
        EntityTypes: TColStd_HSequenceOfTransient
        InfoSeq: TransferBRep_HSequenceOfTransferResultInfo

        Return
        -------
        None

        Description
        -----------
        Fills sequence of transferresultinfo for each type of entity given in the entitytypes (entity are given as objects). method iskind applied to the entities in tp is used to compare with entities in entitytypes. topabs_shapeenum).

        Parameters
        ----------
        FP: Transfer_FinderProcess
        ShapeTypes: TColStd_HSequenceOfInteger
        InfoSeq: TransferBRep_HSequenceOfTransferResultInfo

        Return
        -------
        None

        Description
        -----------
        Fills sequence of transferresultinfo for each type of shape given in the shapetypes (which are in fact considered as topabs_shapeenum). the finders in the fp are considered as shapemappers.

        """
        return _TransferBRep.transferbrep_TransferResultInfo(*args)

    @staticmethod
    def TransientFromShape(*args):
        r"""

        Parameters
        ----------
        FP: Transfer_FinderProcess
        shape: TopoDS_Shape

        Return
        -------
        opencascade::handle<Standard_Transient>

        Description
        -----------
        Returns the result as pure transient attached to a shape first one if multiple result.

        """
        return _TransferBRep.transferbrep_TransientFromShape(*args)

    __repr__ = _dumps_object

    @methodnotwrapped
    def BRepCheck(self):
    	pass


    def __init__(self):
        _TransferBRep.transferbrep_swiginit(self, _TransferBRep.new_transferbrep())
    __swig_destroy__ = _TransferBRep.delete_transferbrep

# Register transferbrep in _TransferBRep:
_TransferBRep.transferbrep_swigregister(transferbrep)
class TransferBRep_BinderOfShape(OCC.Core.Transfer.Transfer_Binder):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Normal standard constructor, creates an empty binderofshape.

        Parameters
        ----------
        res: TopoDS_Shape

        Return
        -------
        None

        Description
        -----------
        Constructor which in the same time defines the result returns true if a starting object is bound with several results: here, returns always false but it can have next results.

        """
        _TransferBRep.TransferBRep_BinderOfShape_swiginit(self, _TransferBRep.new_TransferBRep_BinderOfShape(*args))

    def CResult(self, *args):
        r"""
        Return
        -------
        TopoDS_Shape

        Description
        -----------
        Returns the defined result, if there is one, and allows to change it (avoids result + setresult). admits that result can be not yet defined warning: a call to cresult causes result to be known as defined.

        """
        return _TransferBRep.TransferBRep_BinderOfShape_CResult(self, *args)

    def Result(self, *args):
        r"""
        Return
        -------
        TopoDS_Shape

        Description
        -----------
        Returns the defined result, if there is one.

        """
        return _TransferBRep.TransferBRep_BinderOfShape_Result(self, *args)

    def SetResult(self, *args):
        r"""

        Parameters
        ----------
        res: TopoDS_Shape

        Return
        -------
        None

        Description
        -----------
        Defines the result.

        """
        return _TransferBRep.TransferBRep_BinderOfShape_SetResult(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TransferBRep_BinderOfShape_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TransferBRep.delete_TransferBRep_BinderOfShape

# Register TransferBRep_BinderOfShape in _TransferBRep:
_TransferBRep.TransferBRep_BinderOfShape_swigregister(TransferBRep_BinderOfShape)
class TransferBRep_OrientedShapeMapper(OCC.Core.Transfer.Transfer_Finder):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        akey: TopoDS_Shape

        Return
        -------
        None

        Description
        -----------
        Creates a mapper with a value. this value can then not be changed. it is used by the hasher to compute the hashcode, which will then be stored for an immediate reading.

        """
        _TransferBRep.TransferBRep_OrientedShapeMapper_swiginit(self, _TransferBRep.new_TransferBRep_OrientedShapeMapper(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        TopoDS_Shape

        Description
        -----------
        Returns the contained value.

        """
        return _TransferBRep.TransferBRep_OrientedShapeMapper_Value(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TransferBRep_OrientedShapeMapper_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TransferBRep.delete_TransferBRep_OrientedShapeMapper

# Register TransferBRep_OrientedShapeMapper in _TransferBRep:
_TransferBRep.TransferBRep_OrientedShapeMapper_swigregister(TransferBRep_OrientedShapeMapper)
class TransferBRep_Reader(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Initializes a non-specialised reader. typically, for each norm or protocol, is will be required to define a specific create to load a file and transfer it.

        """
        _TransferBRep.TransferBRep_Reader_swiginit(self, _TransferBRep.new_TransferBRep_Reader(*args))

    def Actor(self, *args):
        r"""
        Return
        -------
        opencascade::handle<Transfer_ActorOfTransientProcess>

        Description
        -----------
        Returns the recorded actor.

        """
        return _TransferBRep.TransferBRep_Reader_Actor(self, *args)

    def BeginTransfer(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Initializes the reader for a transfer (one,roots, or list) also calls preparetransfer returns true when done, false if could not be done.

        """
        return _TransferBRep.TransferBRep_Reader_BeginTransfer(self, *args)

    def CheckListModel(self, *args):
        r"""
        Return
        -------
        Interface_CheckIterator

        Description
        -----------
        Checks the model (complete: syntax + semantic) and returns the produced check list.

        """
        return _TransferBRep.TransferBRep_Reader_CheckListModel(self, *args)

    def CheckListResult(self, *args):
        r"""
        Return
        -------
        Interface_CheckIterator

        Description
        -----------
        Checks the result of last transfer (individual or roots, no cumulation on several transfers) and returns the produced list.

        """
        return _TransferBRep.TransferBRep_Reader_CheckListResult(self, *args)

    def CheckStatusModel(self, *args):
        r"""

        Parameters
        ----------
        withprint: bool

        Return
        -------
        bool

        Description
        -----------
        Checks the model. returns true if there is no fail at all (regardless warnings) if <withprint> is true, also sends checks on standard output.

        """
        return _TransferBRep.TransferBRep_Reader_CheckStatusModel(self, *args)

    def CheckStatusResult(self, *args):
        r"""

        Parameters
        ----------
        withprints: bool

        Return
        -------
        bool

        Description
        -----------
        Checks the result of last transfer (individual or roots, no cumulation on several transfers). returns true if no fail occurred during transfer (queries the transientprocess).

        """
        return _TransferBRep.TransferBRep_Reader_CheckStatusResult(self, *args)

    def Clear(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Clears the result and done status. but not the model.

        """
        return _TransferBRep.TransferBRep_Reader_Clear(self, *args)

    def EndTransfer(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Ebds a transfer (one, roots or list) by recording its result.

        """
        return _TransferBRep.TransferBRep_Reader_EndTransfer(self, *args)

    def FileNotFound(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if filestatus is for filenotfound.

        """
        return _TransferBRep.TransferBRep_Reader_FileNotFound(self, *args)

    def FileStatus(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the file status.

        """
        return _TransferBRep.TransferBRep_Reader_FileStatus(self, *args)

    def IsDone(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if the last transfer/transferroots was a success.

        """
        return _TransferBRep.TransferBRep_Reader_IsDone(self, *args)

    def GetModeNewTransfer(self):
        r"""GetModeNewTransfer(TransferBRep_Reader self) -> Standard_Boolean"""
        return _TransferBRep.TransferBRep_Reader_GetModeNewTransfer(self)

    def SetModeNewTransfer(self, value):
        r"""SetModeNewTransfer(TransferBRep_Reader self, Standard_Boolean value)"""
        return _TransferBRep.TransferBRep_Reader_SetModeNewTransfer(self, value)

    def Model(self, *args):
        r"""
        Return
        -------
        opencascade::handle<Interface_InterfaceModel>

        Description
        -----------
        Returns the model to be worked on.

        """
        return _TransferBRep.TransferBRep_Reader_Model(self, *args)

    def NbShapes(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the count of produced shapes (roots).

        """
        return _TransferBRep.TransferBRep_Reader_NbShapes(self, *args)

    def NbTransients(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the count of produced transient results (roots).

        """
        return _TransferBRep.TransferBRep_Reader_NbTransients(self, *args)

    def OneShape(self, *args):
        r"""
        Return
        -------
        TopoDS_Shape

        Description
        -----------
        Returns a unique shape for the result: - a void shape (type = shape) if result is empty - a simple shape if result has only one: returns this one - a compound if result has more than one shape.

        """
        return _TransferBRep.TransferBRep_Reader_OneShape(self, *args)

    def PrepareTransfer(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Prepares the transfer. also can act on the actor or change the transientprocess if required. should not set the actor into the transientprocess, it is done by caller. the provided default does nothing.

        """
        return _TransferBRep.TransferBRep_Reader_PrepareTransfer(self, *args)

    def Protocol(self, *args):
        r"""
        Return
        -------
        opencascade::handle<Interface_Protocol>

        Description
        -----------
        Returns the recorded protocol.

        """
        return _TransferBRep.TransferBRep_Reader_Protocol(self, *args)

    def SetActor(self, *args):
        r"""

        Parameters
        ----------
        actor: Transfer_ActorOfTransientProcess

        Return
        -------
        None

        Description
        -----------
        Records the actor to be used for transfers.

        """
        return _TransferBRep.TransferBRep_Reader_SetActor(self, *args)

    def SetFileStatus(self, *args):
        r"""

        Parameters
        ----------
        status: int

        Return
        -------
        None

        Description
        -----------
        Sets file status to be interpreted as follows: = 0 ok < 0 file not found > 0 read error, no model could be created.

        """
        return _TransferBRep.TransferBRep_Reader_SetFileStatus(self, *args)

    def SetModel(self, *args):
        r"""

        Parameters
        ----------
        model: Interface_InterfaceModel

        Return
        -------
        None

        Description
        -----------
        Specifies a model to work on also clears the result and done status.

        """
        return _TransferBRep.TransferBRep_Reader_SetModel(self, *args)

    def SetProtocol(self, *args):
        r"""

        Parameters
        ----------
        protocol: Interface_Protocol

        Return
        -------
        None

        Description
        -----------
        Records the protocol to be used for read and transfer roots.

        """
        return _TransferBRep.TransferBRep_Reader_SetProtocol(self, *args)

    def Shape(self, *args):
        r"""

        Parameters
        ----------
        num: int (optional, default to 1)

        Return
        -------
        TopoDS_Shape

        Description
        -----------
        Returns a shape given its rank, by default the first one.

        """
        return _TransferBRep.TransferBRep_Reader_Shape(self, *args)

    def ShapeResult(self, *args):
        r"""

        Parameters
        ----------
        ent: Standard_Transient

        Return
        -------
        TopoDS_Shape

        Description
        -----------
        Returns a shape produced from a given entity (if it was individually transferred or if an intermediate result is known). if no shape is bound with <ent>, returns a null shape warning: runs on the last call to transfer,transferroots,transferlist.

        """
        return _TransferBRep.TransferBRep_Reader_ShapeResult(self, *args)

    def Shapes(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TopTools_HSequenceOfShape>

        Description
        -----------
        Returns the complete list of produced shapes.

        """
        return _TransferBRep.TransferBRep_Reader_Shapes(self, *args)

    def SyntaxError(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if filestatus is for error during read (major error; for local error, see checkmodel).

        """
        return _TransferBRep.TransferBRep_Reader_SyntaxError(self, *args)

    def Transfer(self, *args):
        r"""

        Parameters
        ----------
        num: int
        theProgress: Message_ProgressRange (optional, default to Message_ProgressRange())

        Return
        -------
        bool

        Description
        -----------
        Transfers an entity given its rank in the model (root or not) returns true if it is recognized as geom-topol. (but it can have failed: see isdone).

        """
        return _TransferBRep.TransferBRep_Reader_Transfer(self, *args)

    def TransferList(self, *args):
        r"""

        Parameters
        ----------
        list: TColStd_HSequenceOfTransient
        theProgress: Message_ProgressRange (optional, default to Message_ProgressRange())

        Return
        -------
        None

        Description
        -----------
        Transfers a list of entities (only the ones also in the model) remark: former result is cleared.

        """
        return _TransferBRep.TransferBRep_Reader_TransferList(self, *args)

    def TransferRoots(self, *args):
        r"""

        Parameters
        ----------
        theProgress: Message_ProgressRange (optional, default to Message_ProgressRange())

        Return
        -------
        None

        Description
        -----------
        Transfers all root entities which are recognized as geom-topol the result will be a list of shapes. this method calls user redefinable preparetransfer remark: former result is cleared.

        """
        return _TransferBRep.TransferBRep_Reader_TransferRoots(self, *args)

    def Transient(self, *args):
        r"""

        Parameters
        ----------
        num: int (optional, default to 1)

        Return
        -------
        opencascade::handle<Standard_Transient>

        Description
        -----------
        Returns a transient root result, given its rank (by default the first one).

        """
        return _TransferBRep.TransferBRep_Reader_Transient(self, *args)

    def TransientProcess(self, *args):
        r"""
        Return
        -------
        opencascade::handle<Transfer_TransientProcess>

        Description
        -----------
        Returns the transientprocess. it records information about the very last transfer done. null if no transfer yet done. can be used for queries more accurate than the default ones.

        """
        return _TransferBRep.TransferBRep_Reader_TransientProcess(self, *args)

    def Transients(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TColStd_HSequenceOfTransient>

        Description
        -----------
        Returns the complete list of produced transient results.

        """
        return _TransferBRep.TransferBRep_Reader_Transients(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _TransferBRep.delete_TransferBRep_Reader

# Register TransferBRep_Reader in _TransferBRep:
_TransferBRep.TransferBRep_Reader_swigregister(TransferBRep_Reader)
class TransferBRep_ShapeInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def Type(*args):
        r"""

        Parameters
        ----------
        ent: TopoDS_Shape

        Return
        -------
        opencascade::handle<Standard_Type>

        Description
        -----------
        Returns the type attached to an object here, tshape (shape has no dynamic type).

        """
        return _TransferBRep.TransferBRep_ShapeInfo_Type(*args)

    @staticmethod
    def TypeName(*args):
        r"""

        Parameters
        ----------
        ent: TopoDS_Shape

        Return
        -------
        str

        Description
        -----------
        Returns type name (string) here, the true name of the type of a shape.

        """
        return _TransferBRep.TransferBRep_ShapeInfo_TypeName(*args)

    __repr__ = _dumps_object


    def __init__(self):
        _TransferBRep.TransferBRep_ShapeInfo_swiginit(self, _TransferBRep.new_TransferBRep_ShapeInfo())
    __swig_destroy__ = _TransferBRep.delete_TransferBRep_ShapeInfo

# Register TransferBRep_ShapeInfo in _TransferBRep:
_TransferBRep.TransferBRep_ShapeInfo_swigregister(TransferBRep_ShapeInfo)
class TransferBRep_ShapeListBinder(OCC.Core.Transfer.Transfer_Binder):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        list: TopTools_HSequenceOfShape

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TransferBRep.TransferBRep_ShapeListBinder_swiginit(self, _TransferBRep.new_TransferBRep_ShapeListBinder(*args))

    def AddResult(self, *args):
        r"""

        Parameters
        ----------
        res: TopoDS_Shape

        Return
        -------
        None

        Description
        -----------
        Adds an item to the result list.

        """
        return _TransferBRep.TransferBRep_ShapeListBinder_AddResult(self, *args)

    def CompSolid(self, *args):
        r"""

        Parameters
        ----------
        num: int

        Return
        -------
        TopoDS_CompSolid

        Description
        -----------
        No available documentation.

        """
        return _TransferBRep.TransferBRep_ShapeListBinder_CompSolid(self, *args)

    def Compound(self, *args):
        r"""

        Parameters
        ----------
        num: int

        Return
        -------
        TopoDS_Compound

        Description
        -----------
        No available documentation.

        """
        return _TransferBRep.TransferBRep_ShapeListBinder_Compound(self, *args)

    def Edge(self, *args):
        r"""

        Parameters
        ----------
        num: int

        Return
        -------
        TopoDS_Edge

        Description
        -----------
        No available documentation.

        """
        return _TransferBRep.TransferBRep_ShapeListBinder_Edge(self, *args)

    def Face(self, *args):
        r"""

        Parameters
        ----------
        num: int

        Return
        -------
        TopoDS_Face

        Description
        -----------
        No available documentation.

        """
        return _TransferBRep.TransferBRep_ShapeListBinder_Face(self, *args)

    def NbShapes(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _TransferBRep.TransferBRep_ShapeListBinder_NbShapes(self, *args)

    def Result(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TopTools_HSequenceOfShape>

        Description
        -----------
        No available documentation.

        """
        return _TransferBRep.TransferBRep_ShapeListBinder_Result(self, *args)

    def SetResult(self, *args):
        r"""

        Parameters
        ----------
        num: int
        res: TopoDS_Shape

        Return
        -------
        None

        Description
        -----------
        Changes an already defined sub-result.

        """
        return _TransferBRep.TransferBRep_ShapeListBinder_SetResult(self, *args)

    def Shape(self, *args):
        r"""

        Parameters
        ----------
        num: int

        Return
        -------
        TopoDS_Shape

        Description
        -----------
        No available documentation.

        """
        return _TransferBRep.TransferBRep_ShapeListBinder_Shape(self, *args)

    def ShapeType(self, *args):
        r"""

        Parameters
        ----------
        num: int

        Return
        -------
        TopAbs_ShapeEnum

        Description
        -----------
        No available documentation.

        """
        return _TransferBRep.TransferBRep_ShapeListBinder_ShapeType(self, *args)

    def Shell(self, *args):
        r"""

        Parameters
        ----------
        num: int

        Return
        -------
        TopoDS_Shell

        Description
        -----------
        No available documentation.

        """
        return _TransferBRep.TransferBRep_ShapeListBinder_Shell(self, *args)

    def Solid(self, *args):
        r"""

        Parameters
        ----------
        num: int

        Return
        -------
        TopoDS_Solid

        Description
        -----------
        No available documentation.

        """
        return _TransferBRep.TransferBRep_ShapeListBinder_Solid(self, *args)

    def Vertex(self, *args):
        r"""

        Parameters
        ----------
        num: int

        Return
        -------
        TopoDS_Vertex

        Description
        -----------
        No available documentation.

        """
        return _TransferBRep.TransferBRep_ShapeListBinder_Vertex(self, *args)

    def Wire(self, *args):
        r"""

        Parameters
        ----------
        num: int

        Return
        -------
        TopoDS_Wire

        Description
        -----------
        No available documentation.

        """
        return _TransferBRep.TransferBRep_ShapeListBinder_Wire(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TransferBRep_ShapeListBinder_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TransferBRep.delete_TransferBRep_ShapeListBinder

# Register TransferBRep_ShapeListBinder in _TransferBRep:
_TransferBRep.TransferBRep_ShapeListBinder_swigregister(TransferBRep_ShapeListBinder)
class TransferBRep_ShapeMapper(OCC.Core.Transfer.Transfer_Finder):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        akey: TopoDS_Shape

        Return
        -------
        None

        Description
        -----------
        Creates a mapper with a value. this value can then not be changed. it is used by the hasher to compute the hashcode, which will then be stored for an immediate reading.

        """
        _TransferBRep.TransferBRep_ShapeMapper_swiginit(self, _TransferBRep.new_TransferBRep_ShapeMapper(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        TopoDS_Shape

        Description
        -----------
        Returns the contained value.

        """
        return _TransferBRep.TransferBRep_ShapeMapper_Value(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TransferBRep_ShapeMapper_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TransferBRep.delete_TransferBRep_ShapeMapper

# Register TransferBRep_ShapeMapper in _TransferBRep:
_TransferBRep.TransferBRep_ShapeMapper_swigregister(TransferBRep_ShapeMapper)
class TransferBRep_TransferResultInfo(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Creates object with all fields nullified.

        """
        _TransferBRep.TransferBRep_TransferResultInfo_swiginit(self, _TransferBRep.new_TransferBRep_TransferResultInfo(*args))

    def Clear(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Resets all the fields.

        """
        return _TransferBRep.TransferBRep_TransferResultInfo_Clear(self, *args)

    def GetNoResult(self):
        r"""GetNoResult(TransferBRep_TransferResultInfo self) -> Standard_Integer"""
        return _TransferBRep.TransferBRep_TransferResultInfo_GetNoResult(self)

    def SetNoResult(self, value):
        r"""SetNoResult(TransferBRep_TransferResultInfo self, Standard_Integer value)"""
        return _TransferBRep.TransferBRep_TransferResultInfo_SetNoResult(self, value)

    def GetNoResultFail(self):
        r"""GetNoResultFail(TransferBRep_TransferResultInfo self) -> Standard_Integer"""
        return _TransferBRep.TransferBRep_TransferResultInfo_GetNoResultFail(self)

    def SetNoResultFail(self, value):
        r"""SetNoResultFail(TransferBRep_TransferResultInfo self, Standard_Integer value)"""
        return _TransferBRep.TransferBRep_TransferResultInfo_SetNoResultFail(self, value)

    def GetNoResultWarning(self):
        r"""GetNoResultWarning(TransferBRep_TransferResultInfo self) -> Standard_Integer"""
        return _TransferBRep.TransferBRep_TransferResultInfo_GetNoResultWarning(self)

    def SetNoResultWarning(self, value):
        r"""SetNoResultWarning(TransferBRep_TransferResultInfo self, Standard_Integer value)"""
        return _TransferBRep.TransferBRep_TransferResultInfo_SetNoResultWarning(self, value)

    def GetNoResultWarningFail(self):
        r"""GetNoResultWarningFail(TransferBRep_TransferResultInfo self) -> Standard_Integer"""
        return _TransferBRep.TransferBRep_TransferResultInfo_GetNoResultWarningFail(self)

    def SetNoResultWarningFail(self, value):
        r"""SetNoResultWarningFail(TransferBRep_TransferResultInfo self, Standard_Integer value)"""
        return _TransferBRep.TransferBRep_TransferResultInfo_SetNoResultWarningFail(self, value)

    def GetResult(self):
        r"""GetResult(TransferBRep_TransferResultInfo self) -> Standard_Integer"""
        return _TransferBRep.TransferBRep_TransferResultInfo_GetResult(self)

    def SetResult(self, value):
        r"""SetResult(TransferBRep_TransferResultInfo self, Standard_Integer value)"""
        return _TransferBRep.TransferBRep_TransferResultInfo_SetResult(self, value)

    def GetResultFail(self):
        r"""GetResultFail(TransferBRep_TransferResultInfo self) -> Standard_Integer"""
        return _TransferBRep.TransferBRep_TransferResultInfo_GetResultFail(self)

    def SetResultFail(self, value):
        r"""SetResultFail(TransferBRep_TransferResultInfo self, Standard_Integer value)"""
        return _TransferBRep.TransferBRep_TransferResultInfo_SetResultFail(self, value)

    def GetResultWarning(self):
        r"""GetResultWarning(TransferBRep_TransferResultInfo self) -> Standard_Integer"""
        return _TransferBRep.TransferBRep_TransferResultInfo_GetResultWarning(self)

    def SetResultWarning(self, value):
        r"""SetResultWarning(TransferBRep_TransferResultInfo self, Standard_Integer value)"""
        return _TransferBRep.TransferBRep_TransferResultInfo_SetResultWarning(self, value)

    def GetResultWarningFail(self):
        r"""GetResultWarningFail(TransferBRep_TransferResultInfo self) -> Standard_Integer"""
        return _TransferBRep.TransferBRep_TransferResultInfo_GetResultWarningFail(self)

    def SetResultWarningFail(self, value):
        r"""SetResultWarningFail(TransferBRep_TransferResultInfo self, Standard_Integer value)"""
        return _TransferBRep.TransferBRep_TransferResultInfo_SetResultWarningFail(self, value)


    @staticmethod
    def DownCast(t):
      return Handle_TransferBRep_TransferResultInfo_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TransferBRep.delete_TransferBRep_TransferResultInfo

# Register TransferBRep_TransferResultInfo in _TransferBRep:
_TransferBRep.TransferBRep_TransferResultInfo_swigregister(TransferBRep_TransferResultInfo)
class TransferBRep_ShapeBinder(TransferBRep_BinderOfShape):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Creates an empty shapebinder.

        Parameters
        ----------
        res: TopoDS_Shape

        Return
        -------
        None

        Description
        -----------
        Creates a shapebinder with a result.

        """
        _TransferBRep.TransferBRep_ShapeBinder_swiginit(self, _TransferBRep.new_TransferBRep_ShapeBinder(*args))

    def CompSolid(self, *args):
        r"""
        Return
        -------
        TopoDS_CompSolid

        Description
        -----------
        No available documentation.

        """
        return _TransferBRep.TransferBRep_ShapeBinder_CompSolid(self, *args)

    def Compound(self, *args):
        r"""
        Return
        -------
        TopoDS_Compound

        Description
        -----------
        No available documentation.

        """
        return _TransferBRep.TransferBRep_ShapeBinder_Compound(self, *args)

    def Edge(self, *args):
        r"""
        Return
        -------
        TopoDS_Edge

        Description
        -----------
        No available documentation.

        """
        return _TransferBRep.TransferBRep_ShapeBinder_Edge(self, *args)

    def Face(self, *args):
        r"""
        Return
        -------
        TopoDS_Face

        Description
        -----------
        No available documentation.

        """
        return _TransferBRep.TransferBRep_ShapeBinder_Face(self, *args)

    def ShapeType(self, *args):
        r"""
        Return
        -------
        TopAbs_ShapeEnum

        Description
        -----------
        Returns the type of the shape result (under topabs form).

        """
        return _TransferBRep.TransferBRep_ShapeBinder_ShapeType(self, *args)

    def Shell(self, *args):
        r"""
        Return
        -------
        TopoDS_Shell

        Description
        -----------
        No available documentation.

        """
        return _TransferBRep.TransferBRep_ShapeBinder_Shell(self, *args)

    def Solid(self, *args):
        r"""
        Return
        -------
        TopoDS_Solid

        Description
        -----------
        No available documentation.

        """
        return _TransferBRep.TransferBRep_ShapeBinder_Solid(self, *args)

    def Vertex(self, *args):
        r"""
        Return
        -------
        TopoDS_Vertex

        Description
        -----------
        No available documentation.

        """
        return _TransferBRep.TransferBRep_ShapeBinder_Vertex(self, *args)

    def Wire(self, *args):
        r"""
        Return
        -------
        TopoDS_Wire

        Description
        -----------
        No available documentation.

        """
        return _TransferBRep.TransferBRep_ShapeBinder_Wire(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TransferBRep_ShapeBinder_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TransferBRep.delete_TransferBRep_ShapeBinder

# Register TransferBRep_ShapeBinder in _TransferBRep:
_TransferBRep.TransferBRep_ShapeBinder_swigregister(TransferBRep_ShapeBinder)
class TransferBRep_HSequenceOfTransferResultInfo(TransferBRep_SequenceOfTransferResultInfo, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TransferBRep.TransferBRep_HSequenceOfTransferResultInfo_swiginit(self, _TransferBRep.new_TransferBRep_HSequenceOfTransferResultInfo(*args))

    def Sequence(self):
        return _TransferBRep.TransferBRep_HSequenceOfTransferResultInfo_Sequence(self)

    def Append(self, *args):
        return _TransferBRep.TransferBRep_HSequenceOfTransferResultInfo_Append(self, *args)

    def ChangeSequence(self):
        return _TransferBRep.TransferBRep_HSequenceOfTransferResultInfo_ChangeSequence(self)


    @staticmethod
    def DownCast(t):
      return Handle_TransferBRep_HSequenceOfTransferResultInfo_DownCast(t)

    __swig_destroy__ = _TransferBRep.delete_TransferBRep_HSequenceOfTransferResultInfo

# Register TransferBRep_HSequenceOfTransferResultInfo in _TransferBRep:
_TransferBRep.TransferBRep_HSequenceOfTransferResultInfo_swigregister(TransferBRep_HSequenceOfTransferResultInfo)



@deprecated
def transferbrep_CheckObject(*args):
	return transferbrep.CheckObject(*args)

@deprecated
def transferbrep_Checked(*args):
	return transferbrep.Checked(*args)

@deprecated
def transferbrep_CheckedShapes(*args):
	return transferbrep.CheckedShapes(*args)

@deprecated
def transferbrep_PrintResultInfo(*args):
	return transferbrep.PrintResultInfo(*args)

@deprecated
def transferbrep_ResultCheckList(*args):
	return transferbrep.ResultCheckList(*args)

@deprecated
def transferbrep_ResultFromShape(*args):
	return transferbrep.ResultFromShape(*args)

@deprecated
def transferbrep_SetShapeResult(*args):
	return transferbrep.SetShapeResult(*args)

@deprecated
def transferbrep_SetTransientFromShape(*args):
	return transferbrep.SetTransientFromShape(*args)

@deprecated
def transferbrep_ShapeMapper(*args):
	return transferbrep.ShapeMapper(*args)

@deprecated
def transferbrep_ShapeResult(*args):
	return transferbrep.ShapeResult(*args)

@deprecated
def transferbrep_ShapeResult(*args):
	return transferbrep.ShapeResult(*args)

@deprecated
def transferbrep_ShapeState(*args):
	return transferbrep.ShapeState(*args)

@deprecated
def transferbrep_Shapes(*args):
	return transferbrep.Shapes(*args)

@deprecated
def transferbrep_Shapes(*args):
	return transferbrep.Shapes(*args)

@deprecated
def transferbrep_TransferResultInfo(*args):
	return transferbrep.TransferResultInfo(*args)

@deprecated
def transferbrep_TransferResultInfo(*args):
	return transferbrep.TransferResultInfo(*args)

@deprecated
def transferbrep_TransientFromShape(*args):
	return transferbrep.TransientFromShape(*args)

@deprecated
def TransferBRep_ShapeInfo_Type(*args):
	return TransferBRep_ShapeInfo.Type(*args)

@deprecated
def TransferBRep_ShapeInfo_TypeName(*args):
	return TransferBRep_ShapeInfo.TypeName(*args)



