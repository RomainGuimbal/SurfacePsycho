# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

"""
RWHeaderSection module, see official documentation at
https://www.opencascade.com/doc/occt-7.7.0/refman/html/package_rwheadersection.html
"""

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _RWHeaderSection
else:
    import _RWHeaderSection

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _RWHeaderSection.delete_SwigPyIterator

    def value(self):
        return _RWHeaderSection.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _RWHeaderSection.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _RWHeaderSection.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _RWHeaderSection.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _RWHeaderSection.SwigPyIterator_equal(self, x)

    def copy(self):
        return _RWHeaderSection.SwigPyIterator_copy(self)

    def next(self):
        return _RWHeaderSection.SwigPyIterator_next(self)

    def __next__(self):
        return _RWHeaderSection.SwigPyIterator___next__(self)

    def previous(self):
        return _RWHeaderSection.SwigPyIterator_previous(self)

    def advance(self, n):
        return _RWHeaderSection.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _RWHeaderSection.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _RWHeaderSection.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _RWHeaderSection.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _RWHeaderSection.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _RWHeaderSection.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _RWHeaderSection.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _RWHeaderSection:
_RWHeaderSection.SwigPyIterator_swigregister(SwigPyIterator)

def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error, method_name, class_name):
    return _RWHeaderSection.process_exception(error, method_name, class_name)

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.TCollection
import OCC.Core.Message
import OCC.Core.OSD
import OCC.Core.TColStd
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.Resource
import OCC.Core.HeaderSection

from enum import IntEnum
from OCC.Core.Exception import *




def Handle_RWHeaderSection_GeneralModule_Create():
    return _RWHeaderSection.Handle_RWHeaderSection_GeneralModule_Create()

def Handle_RWHeaderSection_GeneralModule_DownCast(t):
    return _RWHeaderSection.Handle_RWHeaderSection_GeneralModule_DownCast(t)

def Handle_RWHeaderSection_GeneralModule_IsNull(t):
    return _RWHeaderSection.Handle_RWHeaderSection_GeneralModule_IsNull(t)

def Handle_RWHeaderSection_ReadWriteModule_Create():
    return _RWHeaderSection.Handle_RWHeaderSection_ReadWriteModule_Create()

def Handle_RWHeaderSection_ReadWriteModule_DownCast(t):
    return _RWHeaderSection.Handle_RWHeaderSection_ReadWriteModule_DownCast(t)

def Handle_RWHeaderSection_ReadWriteModule_IsNull(t):
    return _RWHeaderSection.Handle_RWHeaderSection_ReadWriteModule_IsNull(t)
class rwheadersection(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def Init(*args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Enforced the initialisation of the libraries.

        """
        return _RWHeaderSection.rwheadersection_Init(*args)

    __repr__ = _dumps_object


    def __init__(self):
        _RWHeaderSection.rwheadersection_swiginit(self, _RWHeaderSection.new_rwheadersection())
    __swig_destroy__ = _RWHeaderSection.delete_rwheadersection

# Register rwheadersection in _RWHeaderSection:
_RWHeaderSection.rwheadersection_swigregister(rwheadersection)
class RWHeaderSection_GeneralModule(OCC.Core.StepData.StepData_GeneralModule):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Creates a generalmodule.

        """
        _RWHeaderSection.RWHeaderSection_GeneralModule_swiginit(self, _RWHeaderSection.new_RWHeaderSection_GeneralModule(*args))


    @staticmethod
    def DownCast(t):
      return Handle_RWHeaderSection_GeneralModule_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWHeaderSection.delete_RWHeaderSection_GeneralModule

# Register RWHeaderSection_GeneralModule in _RWHeaderSection:
_RWHeaderSection.RWHeaderSection_GeneralModule_swigregister(RWHeaderSection_GeneralModule)
class RWHeaderSection_RWFileDescription(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _RWHeaderSection.RWHeaderSection_RWFileDescription_swiginit(self, _RWHeaderSection.new_RWHeaderSection_RWFileDescription(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: HeaderSection_FileDescription

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _RWHeaderSection.RWHeaderSection_RWFileDescription_ReadStep(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: HeaderSection_FileDescription

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _RWHeaderSection.RWHeaderSection_RWFileDescription_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWHeaderSection.delete_RWHeaderSection_RWFileDescription

# Register RWHeaderSection_RWFileDescription in _RWHeaderSection:
_RWHeaderSection.RWHeaderSection_RWFileDescription_swigregister(RWHeaderSection_RWFileDescription)
class RWHeaderSection_RWFileName(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _RWHeaderSection.RWHeaderSection_RWFileName_swiginit(self, _RWHeaderSection.new_RWHeaderSection_RWFileName(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: HeaderSection_FileName

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _RWHeaderSection.RWHeaderSection_RWFileName_ReadStep(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: HeaderSection_FileName

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _RWHeaderSection.RWHeaderSection_RWFileName_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWHeaderSection.delete_RWHeaderSection_RWFileName

# Register RWHeaderSection_RWFileName in _RWHeaderSection:
_RWHeaderSection.RWHeaderSection_RWFileName_swigregister(RWHeaderSection_RWFileName)
class RWHeaderSection_RWFileSchema(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _RWHeaderSection.RWHeaderSection_RWFileSchema_swiginit(self, _RWHeaderSection.new_RWHeaderSection_RWFileSchema(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: HeaderSection_FileSchema

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _RWHeaderSection.RWHeaderSection_RWFileSchema_ReadStep(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: HeaderSection_FileSchema

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _RWHeaderSection.RWHeaderSection_RWFileSchema_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWHeaderSection.delete_RWHeaderSection_RWFileSchema

# Register RWHeaderSection_RWFileSchema in _RWHeaderSection:
_RWHeaderSection.RWHeaderSection_RWFileSchema_swigregister(RWHeaderSection_RWFileSchema)
class RWHeaderSection_ReadWriteModule(OCC.Core.StepData.StepData_ReadWriteModule):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _RWHeaderSection.RWHeaderSection_ReadWriteModule_swiginit(self, _RWHeaderSection.new_RWHeaderSection_ReadWriteModule(*args))

    def CaseStep(self, *args):
        r"""

        Parameters
        ----------
        atype: str

        Return
        -------
        int

        Description
        -----------
        Associates a positive case number to each type of headersection entity, given as a string defined in the express form.

        Parameters
        ----------
        types: TColStd_SequenceOfAsciiString

        Return
        -------
        int

        Description
        -----------
        Associates a positive case number to each type of headersection complex entity, given as a string defined in the express form.

        """
        return _RWHeaderSection.RWHeaderSection_ReadWriteModule_CaseStep(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_RWHeaderSection_ReadWriteModule_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWHeaderSection.delete_RWHeaderSection_ReadWriteModule

# Register RWHeaderSection_ReadWriteModule in _RWHeaderSection:
_RWHeaderSection.RWHeaderSection_ReadWriteModule_swigregister(RWHeaderSection_ReadWriteModule)



@deprecated
def rwheadersection_Init(*args):
	return rwheadersection.Init(*args)



