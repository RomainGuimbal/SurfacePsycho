# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

"""
StepToTopoDS module, see official documentation at
https://www.opencascade.com/doc/occt-7.7.0/refman/html/package_steptotopods.html
"""

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _StepToTopoDS
else:
    import _StepToTopoDS

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _StepToTopoDS.delete_SwigPyIterator

    def value(self):
        return _StepToTopoDS.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _StepToTopoDS.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _StepToTopoDS.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _StepToTopoDS.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _StepToTopoDS.SwigPyIterator_equal(self, x)

    def copy(self):
        return _StepToTopoDS.SwigPyIterator_copy(self)

    def next(self):
        return _StepToTopoDS.SwigPyIterator_next(self)

    def __next__(self):
        return _StepToTopoDS.SwigPyIterator___next__(self)

    def previous(self):
        return _StepToTopoDS.SwigPyIterator_previous(self)

    def advance(self, n):
        return _StepToTopoDS.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _StepToTopoDS.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _StepToTopoDS.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _StepToTopoDS.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _StepToTopoDS.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _StepToTopoDS.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _StepToTopoDS.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _StepToTopoDS:
_StepToTopoDS.SwigPyIterator_swigregister(SwigPyIterator)

def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error, method_name, class_name):
    return _StepToTopoDS.process_exception(error, method_name, class_name)

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.StepRepr
import OCC.Core.TCollection
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.Message
import OCC.Core.OSD
import OCC.Core.TColStd
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.Resource
import OCC.Core.StepBasic
import OCC.Core.StepShape
import OCC.Core.StepGeom
import OCC.Core.Geom
import OCC.Core.GeomAbs
import OCC.Core.TColgp
import OCC.Core.Transfer
import OCC.Core.Geom2d
import OCC.Core.StepVisual

from enum import IntEnum
from OCC.Core.Exception import *

StepToTopoDS_BuilderDone = _StepToTopoDS.StepToTopoDS_BuilderDone
StepToTopoDS_BuilderOther = _StepToTopoDS.StepToTopoDS_BuilderOther
StepToTopoDS_GeometricToolDone = _StepToTopoDS.StepToTopoDS_GeometricToolDone
StepToTopoDS_GeometricToolIsDegenerated = _StepToTopoDS.StepToTopoDS_GeometricToolIsDegenerated
StepToTopoDS_GeometricToolHasNoPCurve = _StepToTopoDS.StepToTopoDS_GeometricToolHasNoPCurve
StepToTopoDS_GeometricToolWrong3dParameters = _StepToTopoDS.StepToTopoDS_GeometricToolWrong3dParameters
StepToTopoDS_GeometricToolNoProjectiOnCurve = _StepToTopoDS.StepToTopoDS_GeometricToolNoProjectiOnCurve
StepToTopoDS_GeometricToolOther = _StepToTopoDS.StepToTopoDS_GeometricToolOther
StepToTopoDS_TranslateEdgeDone = _StepToTopoDS.StepToTopoDS_TranslateEdgeDone
StepToTopoDS_TranslateEdgeOther = _StepToTopoDS.StepToTopoDS_TranslateEdgeOther
StepToTopoDS_TranslateEdgeLoopDone = _StepToTopoDS.StepToTopoDS_TranslateEdgeLoopDone
StepToTopoDS_TranslateEdgeLoopOther = _StepToTopoDS.StepToTopoDS_TranslateEdgeLoopOther
StepToTopoDS_TranslateFaceDone = _StepToTopoDS.StepToTopoDS_TranslateFaceDone
StepToTopoDS_TranslateFaceOther = _StepToTopoDS.StepToTopoDS_TranslateFaceOther
StepToTopoDS_TranslatePolyLoopDone = _StepToTopoDS.StepToTopoDS_TranslatePolyLoopDone
StepToTopoDS_TranslatePolyLoopOther = _StepToTopoDS.StepToTopoDS_TranslatePolyLoopOther
StepToTopoDS_TranslateShellDone = _StepToTopoDS.StepToTopoDS_TranslateShellDone
StepToTopoDS_TranslateShellOther = _StepToTopoDS.StepToTopoDS_TranslateShellOther
StepToTopoDS_TranslateSolidDone = _StepToTopoDS.StepToTopoDS_TranslateSolidDone
StepToTopoDS_TranslateSolidOther = _StepToTopoDS.StepToTopoDS_TranslateSolidOther
StepToTopoDS_TranslateVertexDone = _StepToTopoDS.StepToTopoDS_TranslateVertexDone
StepToTopoDS_TranslateVertexOther = _StepToTopoDS.StepToTopoDS_TranslateVertexOther
StepToTopoDS_TranslateVertexLoopDone = _StepToTopoDS.StepToTopoDS_TranslateVertexLoopDone
StepToTopoDS_TranslateVertexLoopOther = _StepToTopoDS.StepToTopoDS_TranslateVertexLoopOther


class StepToTopoDS_BuilderError(IntEnum):
	StepToTopoDS_BuilderDone = 0
	StepToTopoDS_BuilderOther = 1
StepToTopoDS_BuilderDone = StepToTopoDS_BuilderError.StepToTopoDS_BuilderDone
StepToTopoDS_BuilderOther = StepToTopoDS_BuilderError.StepToTopoDS_BuilderOther

class StepToTopoDS_GeometricToolError(IntEnum):
	StepToTopoDS_GeometricToolDone = 0
	StepToTopoDS_GeometricToolIsDegenerated = 1
	StepToTopoDS_GeometricToolHasNoPCurve = 2
	StepToTopoDS_GeometricToolWrong3dParameters = 3
	StepToTopoDS_GeometricToolNoProjectiOnCurve = 4
	StepToTopoDS_GeometricToolOther = 5
StepToTopoDS_GeometricToolDone = StepToTopoDS_GeometricToolError.StepToTopoDS_GeometricToolDone
StepToTopoDS_GeometricToolIsDegenerated = StepToTopoDS_GeometricToolError.StepToTopoDS_GeometricToolIsDegenerated
StepToTopoDS_GeometricToolHasNoPCurve = StepToTopoDS_GeometricToolError.StepToTopoDS_GeometricToolHasNoPCurve
StepToTopoDS_GeometricToolWrong3dParameters = StepToTopoDS_GeometricToolError.StepToTopoDS_GeometricToolWrong3dParameters
StepToTopoDS_GeometricToolNoProjectiOnCurve = StepToTopoDS_GeometricToolError.StepToTopoDS_GeometricToolNoProjectiOnCurve
StepToTopoDS_GeometricToolOther = StepToTopoDS_GeometricToolError.StepToTopoDS_GeometricToolOther

class StepToTopoDS_TranslateEdgeError(IntEnum):
	StepToTopoDS_TranslateEdgeDone = 0
	StepToTopoDS_TranslateEdgeOther = 1
StepToTopoDS_TranslateEdgeDone = StepToTopoDS_TranslateEdgeError.StepToTopoDS_TranslateEdgeDone
StepToTopoDS_TranslateEdgeOther = StepToTopoDS_TranslateEdgeError.StepToTopoDS_TranslateEdgeOther

class StepToTopoDS_TranslateEdgeLoopError(IntEnum):
	StepToTopoDS_TranslateEdgeLoopDone = 0
	StepToTopoDS_TranslateEdgeLoopOther = 1
StepToTopoDS_TranslateEdgeLoopDone = StepToTopoDS_TranslateEdgeLoopError.StepToTopoDS_TranslateEdgeLoopDone
StepToTopoDS_TranslateEdgeLoopOther = StepToTopoDS_TranslateEdgeLoopError.StepToTopoDS_TranslateEdgeLoopOther

class StepToTopoDS_TranslateFaceError(IntEnum):
	StepToTopoDS_TranslateFaceDone = 0
	StepToTopoDS_TranslateFaceOther = 1
StepToTopoDS_TranslateFaceDone = StepToTopoDS_TranslateFaceError.StepToTopoDS_TranslateFaceDone
StepToTopoDS_TranslateFaceOther = StepToTopoDS_TranslateFaceError.StepToTopoDS_TranslateFaceOther

class StepToTopoDS_TranslatePolyLoopError(IntEnum):
	StepToTopoDS_TranslatePolyLoopDone = 0
	StepToTopoDS_TranslatePolyLoopOther = 1
StepToTopoDS_TranslatePolyLoopDone = StepToTopoDS_TranslatePolyLoopError.StepToTopoDS_TranslatePolyLoopDone
StepToTopoDS_TranslatePolyLoopOther = StepToTopoDS_TranslatePolyLoopError.StepToTopoDS_TranslatePolyLoopOther

class StepToTopoDS_TranslateShellError(IntEnum):
	StepToTopoDS_TranslateShellDone = 0
	StepToTopoDS_TranslateShellOther = 1
StepToTopoDS_TranslateShellDone = StepToTopoDS_TranslateShellError.StepToTopoDS_TranslateShellDone
StepToTopoDS_TranslateShellOther = StepToTopoDS_TranslateShellError.StepToTopoDS_TranslateShellOther

class StepToTopoDS_TranslateSolidError(IntEnum):
	StepToTopoDS_TranslateSolidDone = 0
	StepToTopoDS_TranslateSolidOther = 1
StepToTopoDS_TranslateSolidDone = StepToTopoDS_TranslateSolidError.StepToTopoDS_TranslateSolidDone
StepToTopoDS_TranslateSolidOther = StepToTopoDS_TranslateSolidError.StepToTopoDS_TranslateSolidOther

class StepToTopoDS_TranslateVertexError(IntEnum):
	StepToTopoDS_TranslateVertexDone = 0
	StepToTopoDS_TranslateVertexOther = 1
StepToTopoDS_TranslateVertexDone = StepToTopoDS_TranslateVertexError.StepToTopoDS_TranslateVertexDone
StepToTopoDS_TranslateVertexOther = StepToTopoDS_TranslateVertexError.StepToTopoDS_TranslateVertexOther

class StepToTopoDS_TranslateVertexLoopError(IntEnum):
	StepToTopoDS_TranslateVertexLoopDone = 0
	StepToTopoDS_TranslateVertexLoopOther = 1
StepToTopoDS_TranslateVertexLoopDone = StepToTopoDS_TranslateVertexLoopError.StepToTopoDS_TranslateVertexLoopDone
StepToTopoDS_TranslateVertexLoopOther = StepToTopoDS_TranslateVertexLoopError.StepToTopoDS_TranslateVertexLoopOther

class StepToTopoDS_DataMapOfRI(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRI_begin(self)

    def end(self):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRI_end(self)

    def cbegin(self):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRI_cbegin(self)

    def cend(self):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRI_cend(self)

    def __init__(self, *args):
        _StepToTopoDS.StepToTopoDS_DataMapOfRI_swiginit(self, _StepToTopoDS.new_StepToTopoDS_DataMapOfRI(*args))

    def Exchange(self, theOther):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRI_Exchange(self, theOther)

    def Assign(self, theOther):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRI_Assign(self, theOther)

    def Set(self, theOther):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRI_Set(self, theOther)

    def ReSize(self, N):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRI_ReSize(self, N)

    def Bind(self, theKey, theItem):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRI_Bind(self, theKey, theItem)

    def Bound(self, theKey, theItem):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRI_Bound(self, theKey, theItem)

    def IsBound(self, theKey):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRI_IsBound(self, theKey)

    def UnBind(self, theKey):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRI_UnBind(self, theKey)

    def Seek(self, theKey):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRI_Seek(self, theKey)

    def Find(self, *args):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRI_Find(self, *args)

    def ChangeSeek(self, theKey):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRI_ChangeSeek(self, theKey)

    def ChangeFind(self, theKey):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRI_ChangeFind(self, theKey)

    def __call__(self, *args):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRI___call__(self, *args)

    def Clear(self, *args):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRI_Clear(self, *args)
    __swig_destroy__ = _StepToTopoDS.delete_StepToTopoDS_DataMapOfRI

    def Size(self):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRI_Size(self)

# Register StepToTopoDS_DataMapOfRI in _StepToTopoDS:
_StepToTopoDS.StepToTopoDS_DataMapOfRI_swigregister(StepToTopoDS_DataMapOfRI)
class StepToTopoDS_DataMapOfRINames(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRINames_begin(self)

    def end(self):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRINames_end(self)

    def cbegin(self):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRINames_cbegin(self)

    def cend(self):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRINames_cend(self)

    def __init__(self, *args):
        _StepToTopoDS.StepToTopoDS_DataMapOfRINames_swiginit(self, _StepToTopoDS.new_StepToTopoDS_DataMapOfRINames(*args))

    def Exchange(self, theOther):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRINames_Exchange(self, theOther)

    def Assign(self, theOther):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRINames_Assign(self, theOther)

    def Set(self, theOther):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRINames_Set(self, theOther)

    def ReSize(self, N):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRINames_ReSize(self, N)

    def Bind(self, theKey, theItem):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRINames_Bind(self, theKey, theItem)

    def Bound(self, theKey, theItem):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRINames_Bound(self, theKey, theItem)

    def IsBound(self, theKey):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRINames_IsBound(self, theKey)

    def UnBind(self, theKey):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRINames_UnBind(self, theKey)

    def Seek(self, theKey):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRINames_Seek(self, theKey)

    def Find(self, *args):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRINames_Find(self, *args)

    def ChangeSeek(self, theKey):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRINames_ChangeSeek(self, theKey)

    def ChangeFind(self, theKey):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRINames_ChangeFind(self, theKey)

    def __call__(self, *args):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRINames___call__(self, *args)

    def Clear(self, *args):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRINames_Clear(self, *args)
    __swig_destroy__ = _StepToTopoDS.delete_StepToTopoDS_DataMapOfRINames

    def Size(self):
        return _StepToTopoDS.StepToTopoDS_DataMapOfRINames_Size(self)

# Register StepToTopoDS_DataMapOfRINames in _StepToTopoDS:
_StepToTopoDS.StepToTopoDS_DataMapOfRINames_swigregister(StepToTopoDS_DataMapOfRINames)
class StepToTopoDS_DataMapOfTRI(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _StepToTopoDS.StepToTopoDS_DataMapOfTRI_begin(self)

    def end(self):
        return _StepToTopoDS.StepToTopoDS_DataMapOfTRI_end(self)

    def cbegin(self):
        return _StepToTopoDS.StepToTopoDS_DataMapOfTRI_cbegin(self)

    def cend(self):
        return _StepToTopoDS.StepToTopoDS_DataMapOfTRI_cend(self)

    def __init__(self, *args):
        _StepToTopoDS.StepToTopoDS_DataMapOfTRI_swiginit(self, _StepToTopoDS.new_StepToTopoDS_DataMapOfTRI(*args))

    def Exchange(self, theOther):
        return _StepToTopoDS.StepToTopoDS_DataMapOfTRI_Exchange(self, theOther)

    def Assign(self, theOther):
        return _StepToTopoDS.StepToTopoDS_DataMapOfTRI_Assign(self, theOther)

    def Set(self, theOther):
        return _StepToTopoDS.StepToTopoDS_DataMapOfTRI_Set(self, theOther)

    def ReSize(self, N):
        return _StepToTopoDS.StepToTopoDS_DataMapOfTRI_ReSize(self, N)

    def Bind(self, theKey, theItem):
        return _StepToTopoDS.StepToTopoDS_DataMapOfTRI_Bind(self, theKey, theItem)

    def Bound(self, theKey, theItem):
        return _StepToTopoDS.StepToTopoDS_DataMapOfTRI_Bound(self, theKey, theItem)

    def IsBound(self, theKey):
        return _StepToTopoDS.StepToTopoDS_DataMapOfTRI_IsBound(self, theKey)

    def UnBind(self, theKey):
        return _StepToTopoDS.StepToTopoDS_DataMapOfTRI_UnBind(self, theKey)

    def Seek(self, theKey):
        return _StepToTopoDS.StepToTopoDS_DataMapOfTRI_Seek(self, theKey)

    def Find(self, *args):
        return _StepToTopoDS.StepToTopoDS_DataMapOfTRI_Find(self, *args)

    def ChangeSeek(self, theKey):
        return _StepToTopoDS.StepToTopoDS_DataMapOfTRI_ChangeSeek(self, theKey)

    def ChangeFind(self, theKey):
        return _StepToTopoDS.StepToTopoDS_DataMapOfTRI_ChangeFind(self, theKey)

    def __call__(self, *args):
        return _StepToTopoDS.StepToTopoDS_DataMapOfTRI___call__(self, *args)

    def Clear(self, *args):
        return _StepToTopoDS.StepToTopoDS_DataMapOfTRI_Clear(self, *args)
    __swig_destroy__ = _StepToTopoDS.delete_StepToTopoDS_DataMapOfTRI

    def Size(self):
        return _StepToTopoDS.StepToTopoDS_DataMapOfTRI_Size(self)

# Register StepToTopoDS_DataMapOfTRI in _StepToTopoDS:
_StepToTopoDS.StepToTopoDS_DataMapOfTRI_swigregister(StepToTopoDS_DataMapOfTRI)
class StepToTopoDS_PointEdgeMap(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _StepToTopoDS.StepToTopoDS_PointEdgeMap_begin(self)

    def end(self):
        return _StepToTopoDS.StepToTopoDS_PointEdgeMap_end(self)

    def cbegin(self):
        return _StepToTopoDS.StepToTopoDS_PointEdgeMap_cbegin(self)

    def cend(self):
        return _StepToTopoDS.StepToTopoDS_PointEdgeMap_cend(self)

    def __init__(self, *args):
        _StepToTopoDS.StepToTopoDS_PointEdgeMap_swiginit(self, _StepToTopoDS.new_StepToTopoDS_PointEdgeMap(*args))

    def Exchange(self, theOther):
        return _StepToTopoDS.StepToTopoDS_PointEdgeMap_Exchange(self, theOther)

    def Assign(self, theOther):
        return _StepToTopoDS.StepToTopoDS_PointEdgeMap_Assign(self, theOther)

    def Set(self, theOther):
        return _StepToTopoDS.StepToTopoDS_PointEdgeMap_Set(self, theOther)

    def ReSize(self, N):
        return _StepToTopoDS.StepToTopoDS_PointEdgeMap_ReSize(self, N)

    def Bind(self, theKey, theItem):
        return _StepToTopoDS.StepToTopoDS_PointEdgeMap_Bind(self, theKey, theItem)

    def Bound(self, theKey, theItem):
        return _StepToTopoDS.StepToTopoDS_PointEdgeMap_Bound(self, theKey, theItem)

    def IsBound(self, theKey):
        return _StepToTopoDS.StepToTopoDS_PointEdgeMap_IsBound(self, theKey)

    def UnBind(self, theKey):
        return _StepToTopoDS.StepToTopoDS_PointEdgeMap_UnBind(self, theKey)

    def Seek(self, theKey):
        return _StepToTopoDS.StepToTopoDS_PointEdgeMap_Seek(self, theKey)

    def Find(self, *args):
        return _StepToTopoDS.StepToTopoDS_PointEdgeMap_Find(self, *args)

    def ChangeSeek(self, theKey):
        return _StepToTopoDS.StepToTopoDS_PointEdgeMap_ChangeSeek(self, theKey)

    def ChangeFind(self, theKey):
        return _StepToTopoDS.StepToTopoDS_PointEdgeMap_ChangeFind(self, theKey)

    def __call__(self, *args):
        return _StepToTopoDS.StepToTopoDS_PointEdgeMap___call__(self, *args)

    def Clear(self, *args):
        return _StepToTopoDS.StepToTopoDS_PointEdgeMap_Clear(self, *args)
    __swig_destroy__ = _StepToTopoDS.delete_StepToTopoDS_PointEdgeMap

    def Size(self):
        return _StepToTopoDS.StepToTopoDS_PointEdgeMap_Size(self)

# Register StepToTopoDS_PointEdgeMap in _StepToTopoDS:
_StepToTopoDS.StepToTopoDS_PointEdgeMap_swigregister(StepToTopoDS_PointEdgeMap)
class StepToTopoDS_PointVertexMap(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _StepToTopoDS.StepToTopoDS_PointVertexMap_begin(self)

    def end(self):
        return _StepToTopoDS.StepToTopoDS_PointVertexMap_end(self)

    def cbegin(self):
        return _StepToTopoDS.StepToTopoDS_PointVertexMap_cbegin(self)

    def cend(self):
        return _StepToTopoDS.StepToTopoDS_PointVertexMap_cend(self)

    def __init__(self, *args):
        _StepToTopoDS.StepToTopoDS_PointVertexMap_swiginit(self, _StepToTopoDS.new_StepToTopoDS_PointVertexMap(*args))

    def Exchange(self, theOther):
        return _StepToTopoDS.StepToTopoDS_PointVertexMap_Exchange(self, theOther)

    def Assign(self, theOther):
        return _StepToTopoDS.StepToTopoDS_PointVertexMap_Assign(self, theOther)

    def Set(self, theOther):
        return _StepToTopoDS.StepToTopoDS_PointVertexMap_Set(self, theOther)

    def ReSize(self, N):
        return _StepToTopoDS.StepToTopoDS_PointVertexMap_ReSize(self, N)

    def Bind(self, theKey, theItem):
        return _StepToTopoDS.StepToTopoDS_PointVertexMap_Bind(self, theKey, theItem)

    def Bound(self, theKey, theItem):
        return _StepToTopoDS.StepToTopoDS_PointVertexMap_Bound(self, theKey, theItem)

    def IsBound(self, theKey):
        return _StepToTopoDS.StepToTopoDS_PointVertexMap_IsBound(self, theKey)

    def UnBind(self, theKey):
        return _StepToTopoDS.StepToTopoDS_PointVertexMap_UnBind(self, theKey)

    def Seek(self, theKey):
        return _StepToTopoDS.StepToTopoDS_PointVertexMap_Seek(self, theKey)

    def Find(self, *args):
        return _StepToTopoDS.StepToTopoDS_PointVertexMap_Find(self, *args)

    def ChangeSeek(self, theKey):
        return _StepToTopoDS.StepToTopoDS_PointVertexMap_ChangeSeek(self, theKey)

    def ChangeFind(self, theKey):
        return _StepToTopoDS.StepToTopoDS_PointVertexMap_ChangeFind(self, theKey)

    def __call__(self, *args):
        return _StepToTopoDS.StepToTopoDS_PointVertexMap___call__(self, *args)

    def Clear(self, *args):
        return _StepToTopoDS.StepToTopoDS_PointVertexMap_Clear(self, *args)
    __swig_destroy__ = _StepToTopoDS.delete_StepToTopoDS_PointVertexMap

    def Size(self):
        return _StepToTopoDS.StepToTopoDS_PointVertexMap_Size(self)

# Register StepToTopoDS_PointVertexMap in _StepToTopoDS:
_StepToTopoDS.StepToTopoDS_PointVertexMap_swigregister(StepToTopoDS_PointVertexMap)
class steptotopods(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def DecodeBuilderError(*args):
        r"""

        Parameters
        ----------
        Error: StepToTopoDS_BuilderError

        Return
        -------
        opencascade::handle<TCollection_HAsciiString>

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.steptotopods_DecodeBuilderError(*args)

    @staticmethod
    def DecodeEdgeError(*args):
        r"""

        Parameters
        ----------
        Error: StepToTopoDS_TranslateEdgeError

        Return
        -------
        opencascade::handle<TCollection_HAsciiString>

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.steptotopods_DecodeEdgeError(*args)

    @staticmethod
    def DecodeFaceError(*args):
        r"""

        Parameters
        ----------
        Error: StepToTopoDS_TranslateFaceError

        Return
        -------
        opencascade::handle<TCollection_HAsciiString>

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.steptotopods_DecodeFaceError(*args)

    @staticmethod
    def DecodeGeometricToolError(*args):
        r"""

        Parameters
        ----------
        Error: StepToTopoDS_GeometricToolError

        Return
        -------
        str

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.steptotopods_DecodeGeometricToolError(*args)

    @staticmethod
    def DecodePolyLoopError(*args):
        r"""

        Parameters
        ----------
        Error: StepToTopoDS_TranslatePolyLoopError

        Return
        -------
        opencascade::handle<TCollection_HAsciiString>

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.steptotopods_DecodePolyLoopError(*args)

    @staticmethod
    def DecodeShellError(*args):
        r"""

        Parameters
        ----------
        Error: StepToTopoDS_TranslateShellError

        Return
        -------
        opencascade::handle<TCollection_HAsciiString>

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.steptotopods_DecodeShellError(*args)

    @staticmethod
    def DecodeVertexError(*args):
        r"""

        Parameters
        ----------
        Error: StepToTopoDS_TranslateVertexError

        Return
        -------
        opencascade::handle<TCollection_HAsciiString>

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.steptotopods_DecodeVertexError(*args)

    @staticmethod
    def DecodeVertexLoopError(*args):
        r"""

        Parameters
        ----------
        Error: StepToTopoDS_TranslateVertexLoopError

        Return
        -------
        opencascade::handle<TCollection_HAsciiString>

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.steptotopods_DecodeVertexLoopError(*args)

    __repr__ = _dumps_object


    def __init__(self):
        _StepToTopoDS.steptotopods_swiginit(self, _StepToTopoDS.new_steptotopods())
    __swig_destroy__ = _StepToTopoDS.delete_steptotopods

# Register steptotopods in _StepToTopoDS:
_StepToTopoDS.steptotopods_swigregister(steptotopods)
class StepToTopoDS_CartesianPointHasher(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def HashCode(*args):
        r"""

        Parameters
        ----------
        theCartesianPoint: Handle ( StepGeom_CartesianPoint )
        theUpperBound: int

        Return
        -------
        int

        Description
        -----------
        Computes a hash code for the cartesian point, in the range [1, theupperbound] @param thecartesianpoint the cartesian point which hash code is to be computed @param theupperbound the upper bound of the range a computing hash code must be within return a computed hash code, in the range [1, theupperbound].

        """
        return _StepToTopoDS.StepToTopoDS_CartesianPointHasher_HashCode(*args)

    @staticmethod
    def IsEqual(*args):
        r"""

        Parameters
        ----------
        K1: StepGeom_CartesianPoint
        K2: StepGeom_CartesianPoint

        Return
        -------
        bool

        Description
        -----------
        Returns true when the two cartesianpoint are the same.

        """
        return _StepToTopoDS.StepToTopoDS_CartesianPointHasher_IsEqual(*args)

    __repr__ = _dumps_object


    def __init__(self):
        _StepToTopoDS.StepToTopoDS_CartesianPointHasher_swiginit(self, _StepToTopoDS.new_StepToTopoDS_CartesianPointHasher())
    __swig_destroy__ = _StepToTopoDS.delete_StepToTopoDS_CartesianPointHasher

# Register StepToTopoDS_CartesianPointHasher in _StepToTopoDS:
_StepToTopoDS.StepToTopoDS_CartesianPointHasher_swigregister(StepToTopoDS_CartesianPointHasher)
class StepToTopoDS_GeometricTool(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def IsLikeSeam(*args):
        r"""

        Parameters
        ----------
        SC: StepGeom_SurfaceCurve
        S: StepGeom_Surface
        E: StepShape_Edge
        EL: StepShape_EdgeLoop

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_GeometricTool_IsLikeSeam(*args)

    @staticmethod
    def IsSeamCurve(*args):
        r"""

        Parameters
        ----------
        SC: StepGeom_SurfaceCurve
        S: StepGeom_Surface
        E: StepShape_Edge
        EL: StepShape_EdgeLoop

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_GeometricTool_IsSeamCurve(*args)

    @staticmethod
    def PCurve(*args):
        r"""

        Parameters
        ----------
        SC: StepGeom_SurfaceCurve
        S: StepGeom_Surface
        PC: StepGeom_Pcurve
        last: int (optional, default to 0)

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_GeometricTool_PCurve(*args)

    @staticmethod
    def UpdateParam3d(*args):
        r"""

        Parameters
        ----------
        C: Geom_Curve
        preci: float

        Return
        -------
        w1: float
        w2: float

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_GeometricTool_UpdateParam3d(*args)

    __repr__ = _dumps_object


    def __init__(self):
        _StepToTopoDS.StepToTopoDS_GeometricTool_swiginit(self, _StepToTopoDS.new_StepToTopoDS_GeometricTool())
    __swig_destroy__ = _StepToTopoDS.delete_StepToTopoDS_GeometricTool

# Register StepToTopoDS_GeometricTool in _StepToTopoDS:
_StepToTopoDS.StepToTopoDS_GeometricTool_swigregister(StepToTopoDS_GeometricTool)
class StepToTopoDS_NMTool(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        MapOfRI: StepToTopoDS_DataMapOfRI
        MapOfRINames: StepToTopoDS_DataMapOfRINames

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _StepToTopoDS.StepToTopoDS_NMTool_swiginit(self, _StepToTopoDS.new_StepToTopoDS_NMTool(*args))

    def Bind(self, *args):
        r"""

        Parameters
        ----------
        RI: StepRepr_RepresentationItem
        S: TopoDS_Shape

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        RIName: str
        S: TopoDS_Shape

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_NMTool_Bind(self, *args)

    def CleanUp(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_NMTool_CleanUp(self, *args)

    def Find(self, *args):
        r"""

        Parameters
        ----------
        RI: StepRepr_RepresentationItem

        Return
        -------
        TopoDS_Shape

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        RIName: str

        Return
        -------
        TopoDS_Shape

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_NMTool_Find(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        MapOfRI: StepToTopoDS_DataMapOfRI
        MapOfRINames: StepToTopoDS_DataMapOfRINames

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_NMTool_Init(self, *args)

    def IsActive(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_NMTool_IsActive(self, *args)

    def IsBound(self, *args):
        r"""

        Parameters
        ----------
        RI: StepRepr_RepresentationItem

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        RIName: str

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_NMTool_IsBound(self, *args)

    def IsIDEASCase(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_NMTool_IsIDEASCase(self, *args)

    def IsPureNMShell(self, *args):
        r"""

        Parameters
        ----------
        Shell: TopoDS_Shape

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_NMTool_IsPureNMShell(self, *args)

    def IsSuspectedAsClosing(self, *args):
        r"""

        Parameters
        ----------
        BaseShell: TopoDS_Shape
        SuspectedShell: TopoDS_Shape

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_NMTool_IsSuspectedAsClosing(self, *args)

    def RegisterNMEdge(self, *args):
        r"""

        Parameters
        ----------
        Edge: TopoDS_Shape

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_NMTool_RegisterNMEdge(self, *args)

    def SetActive(self, *args):
        r"""

        Parameters
        ----------
        isActive: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_NMTool_SetActive(self, *args)

    def SetIDEASCase(self, *args):
        r"""

        Parameters
        ----------
        IDEASCase: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_NMTool_SetIDEASCase(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepToTopoDS.delete_StepToTopoDS_NMTool

# Register StepToTopoDS_NMTool in _StepToTopoDS:
_StepToTopoDS.StepToTopoDS_NMTool_swigregister(StepToTopoDS_NMTool)
class StepToTopoDS_PointPair(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        P1: StepGeom_CartesianPoint
        P2: StepGeom_CartesianPoint

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _StepToTopoDS.StepToTopoDS_PointPair_swiginit(self, _StepToTopoDS.new_StepToTopoDS_PointPair(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepToTopoDS.delete_StepToTopoDS_PointPair

# Register StepToTopoDS_PointPair in _StepToTopoDS:
_StepToTopoDS.StepToTopoDS_PointPair_swigregister(StepToTopoDS_PointPair)
class StepToTopoDS_PointPairHasher(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def HashCode(*args):
        r"""

        Parameters
        ----------
        thePointPair: StepToTopoDS_PointPair
        theUpperBound: int

        Return
        -------
        int

        Description
        -----------
        Computes a hash code for the point pair, in the range [1, theupperbound] @param thepointpair the point pair which hash code is to be computed @param theupperbound the upper bound of the range a computing hash code must be within return a computed hash code, in the range [1, theupperbound].

        """
        return _StepToTopoDS.StepToTopoDS_PointPairHasher_HashCode(*args)

    @staticmethod
    def IsEqual(*args):
        r"""

        Parameters
        ----------
        K1: StepToTopoDS_PointPair
        K2: StepToTopoDS_PointPair

        Return
        -------
        bool

        Description
        -----------
        Returns true when the two pointpair are the same.

        """
        return _StepToTopoDS.StepToTopoDS_PointPairHasher_IsEqual(*args)

    __repr__ = _dumps_object


    def __init__(self):
        _StepToTopoDS.StepToTopoDS_PointPairHasher_swiginit(self, _StepToTopoDS.new_StepToTopoDS_PointPairHasher())
    __swig_destroy__ = _StepToTopoDS.delete_StepToTopoDS_PointPairHasher

# Register StepToTopoDS_PointPairHasher in _StepToTopoDS:
_StepToTopoDS.StepToTopoDS_PointPairHasher_swigregister(StepToTopoDS_PointPairHasher)
class StepToTopoDS_Root(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def IsDone(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Root_IsDone(self, *args)

    def MaxTol(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns the value of 'maxtol'.

        """
        return _StepToTopoDS.StepToTopoDS_Root_MaxTol(self, *args)

    def Precision(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns the value of 'myprecision'.

        """
        return _StepToTopoDS.StepToTopoDS_Root_Precision(self, *args)

    def SetMaxTol(self, *args):
        r"""

        Parameters
        ----------
        maxpreci: float

        Return
        -------
        None

        Description
        -----------
        Sets the value of maxtol.

        """
        return _StepToTopoDS.StepToTopoDS_Root_SetMaxTol(self, *args)

    def SetPrecision(self, *args):
        r"""

        Parameters
        ----------
        preci: float

        Return
        -------
        None

        Description
        -----------
        Sets the value of 'myprecision'.

        """
        return _StepToTopoDS.StepToTopoDS_Root_SetPrecision(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepToTopoDS.delete_StepToTopoDS_Root

# Register StepToTopoDS_Root in _StepToTopoDS:
_StepToTopoDS.StepToTopoDS_Root_swigregister(StepToTopoDS_Root)
class StepToTopoDS_Tool(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Map: StepToTopoDS_DataMapOfTRI
        TP: Transfer_TransientProcess

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _StepToTopoDS.StepToTopoDS_Tool_swiginit(self, _StepToTopoDS.new_StepToTopoDS_Tool(*args))

    def AddContinuity(self, *args):
        r"""

        Parameters
        ----------
        GeomSurf: Geom_Surface

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        GeomCurve: Geom_Curve

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        GeomCur2d: Geom2d_Curve

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_AddContinuity(self, *args)

    def Bind(self, *args):
        r"""

        Parameters
        ----------
        TRI: StepShape_TopologicalRepresentationItem
        S: TopoDS_Shape

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_Bind(self, *args)

    def BindEdge(self, *args):
        r"""

        Parameters
        ----------
        PP: StepToTopoDS_PointPair
        E: TopoDS_Edge

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_BindEdge(self, *args)

    def BindVertex(self, *args):
        r"""

        Parameters
        ----------
        P: StepGeom_CartesianPoint
        V: TopoDS_Vertex

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_BindVertex(self, *args)

    def C0Cur2(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_C0Cur2(self, *args)

    def C0Cur3(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_C0Cur3(self, *args)

    def C0Surf(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_C0Surf(self, *args)

    def C1Cur2(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_C1Cur2(self, *args)

    def C1Cur3(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_C1Cur3(self, *args)

    def C1Surf(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_C1Surf(self, *args)

    def C2Cur2(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_C2Cur2(self, *args)

    def C2Cur3(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_C2Cur3(self, *args)

    def C2Surf(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_C2Surf(self, *args)

    def ClearEdgeMap(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_ClearEdgeMap(self, *args)

    def ClearVertexMap(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_ClearVertexMap(self, *args)

    def ComputePCurve(self, *args):
        r"""

        Parameters
        ----------
        B: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_ComputePCurve(self, *args)

    def Find(self, *args):
        r"""

        Parameters
        ----------
        TRI: StepShape_TopologicalRepresentationItem

        Return
        -------
        TopoDS_Shape

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_Find(self, *args)

    def FindEdge(self, *args):
        r"""

        Parameters
        ----------
        PP: StepToTopoDS_PointPair

        Return
        -------
        TopoDS_Edge

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_FindEdge(self, *args)

    def FindVertex(self, *args):
        r"""

        Parameters
        ----------
        P: StepGeom_CartesianPoint

        Return
        -------
        TopoDS_Vertex

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_FindVertex(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        Map: StepToTopoDS_DataMapOfTRI
        TP: Transfer_TransientProcess

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_Init(self, *args)

    def IsBound(self, *args):
        r"""

        Parameters
        ----------
        TRI: StepShape_TopologicalRepresentationItem

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_IsBound(self, *args)

    def IsEdgeBound(self, *args):
        r"""

        Parameters
        ----------
        PP: StepToTopoDS_PointPair

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_IsEdgeBound(self, *args)

    def IsVertexBound(self, *args):
        r"""

        Parameters
        ----------
        PG: StepGeom_CartesianPoint

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_IsVertexBound(self, *args)

    def TransientProcess(self, *args):
        r"""
        Return
        -------
        opencascade::handle<Transfer_TransientProcess>

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_Tool_TransientProcess(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepToTopoDS.delete_StepToTopoDS_Tool

# Register StepToTopoDS_Tool in _StepToTopoDS:
_StepToTopoDS.StepToTopoDS_Tool_swigregister(StepToTopoDS_Tool)
class StepToTopoDS_MakeTransformed(StepToTopoDS_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _StepToTopoDS.StepToTopoDS_MakeTransformed_swiginit(self, _StepToTopoDS.new_StepToTopoDS_MakeTransformed(*args))

    def Compute(self, *args):
        r"""

        Parameters
        ----------
        Origin: StepGeom_Axis2Placement3d
        Target: StepGeom_Axis2Placement3d

        Return
        -------
        bool

        Description
        -----------
        Computes a transformation to pass from an origin placement to a target placement. returns true when done if not done, the transformation will by identity.

        Parameters
        ----------
        Operator: StepGeom_CartesianTransformationOperator3d

        Return
        -------
        bool

        Description
        -----------
        Computes a transformation defined by an operator 3d.

        """
        return _StepToTopoDS.StepToTopoDS_MakeTransformed_Compute(self, *args)

    def Transform(self, *args):
        r"""

        Parameters
        ----------
        shape: TopoDS_Shape

        Return
        -------
        bool

        Description
        -----------
        Applies the computed transformation to a shape returns false if the transformation is identity.

        """
        return _StepToTopoDS.StepToTopoDS_MakeTransformed_Transform(self, *args)

    def Transformation(self, *args):
        r"""
        Return
        -------
        gp_Trsf

        Description
        -----------
        Returns the computed transformation (identity if not yet or if failed).

        """
        return _StepToTopoDS.StepToTopoDS_MakeTransformed_Transformation(self, *args)

    def TranslateMappedItem(self, *args):
        r"""

        Parameters
        ----------
        mapit: StepRepr_MappedItem
        TP: Transfer_TransientProcess
        theProgress: Message_ProgressRange (optional, default to Message_ProgressRange())

        Return
        -------
        TopoDS_Shape

        Description
        -----------
        Translates a mappeditem. more precisely a mappeditem has a mappingsource and a mappingtarget mappingsource has a mappedrepresentation and a mappingorigin mappedrepresentation is the basic item to be instanced mappingorigin is the starting placement mappingtarget is the final placement //! hence, the transformation from mappingorigin and mappingtarget is computed, the mappedrepr. is converted to a shape, then transformed as an instance of this shape.

        """
        return _StepToTopoDS.StepToTopoDS_MakeTransformed_TranslateMappedItem(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepToTopoDS.delete_StepToTopoDS_MakeTransformed

# Register StepToTopoDS_MakeTransformed in _StepToTopoDS:
_StepToTopoDS.StepToTopoDS_MakeTransformed_swigregister(StepToTopoDS_MakeTransformed)
class StepToTopoDS_TranslateCompositeCurve(StepToTopoDS_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        Parameters
        ----------
        CC: StepGeom_CompositeCurve
        TP: Transfer_TransientProcess

        Return
        -------
        None

        Description
        -----------
        Translates standalone composite_curve.

        Parameters
        ----------
        CC: StepGeom_CompositeCurve
        TP: Transfer_TransientProcess
        S: StepGeom_Surface
        Surf: Geom_Surface

        Return
        -------
        None

        Description
        -----------
        Translates composite_curve lying on surface.

        """
        _StepToTopoDS.StepToTopoDS_TranslateCompositeCurve_swiginit(self, _StepToTopoDS.new_StepToTopoDS_TranslateCompositeCurve(*args))

    def Init(self, *args):
        r"""

        Parameters
        ----------
        CC: StepGeom_CompositeCurve
        TP: Transfer_TransientProcess

        Return
        -------
        bool

        Description
        -----------
        Translates standalone composite_curve.

        Parameters
        ----------
        CC: StepGeom_CompositeCurve
        TP: Transfer_TransientProcess
        S: StepGeom_Surface
        Surf: Geom_Surface

        Return
        -------
        bool

        Description
        -----------
        Translates composite_curve lying on surface.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateCompositeCurve_Init(self, *args)

    def IsInfiniteSegment(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if composite_curve contains a segment with infinite parameters.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateCompositeCurve_IsInfiniteSegment(self, *args)

    def Value(self, *args):
        r"""
        Return
        -------
        TopoDS_Wire

        Description
        -----------
        Returns result of last translation or null wire if failed.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateCompositeCurve_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepToTopoDS.delete_StepToTopoDS_TranslateCompositeCurve

# Register StepToTopoDS_TranslateCompositeCurve in _StepToTopoDS:
_StepToTopoDS.StepToTopoDS_TranslateCompositeCurve_swigregister(StepToTopoDS_TranslateCompositeCurve)
class StepToTopoDS_TranslateCurveBoundedSurface(StepToTopoDS_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Create empty tool.

        Parameters
        ----------
        CBS: StepGeom_CurveBoundedSurface
        TP: Transfer_TransientProcess

        Return
        -------
        None

        Description
        -----------
        Translate surface.

        """
        _StepToTopoDS.StepToTopoDS_TranslateCurveBoundedSurface_swiginit(self, _StepToTopoDS.new_StepToTopoDS_TranslateCurveBoundedSurface(*args))

    def Init(self, *args):
        r"""

        Parameters
        ----------
        CBS: StepGeom_CurveBoundedSurface
        TP: Transfer_TransientProcess

        Return
        -------
        bool

        Description
        -----------
        Translate surface.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateCurveBoundedSurface_Init(self, *args)

    def Value(self, *args):
        r"""
        Return
        -------
        TopoDS_Face

        Description
        -----------
        Returns result of last translation or null wire if failed.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateCurveBoundedSurface_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepToTopoDS.delete_StepToTopoDS_TranslateCurveBoundedSurface

# Register StepToTopoDS_TranslateCurveBoundedSurface in _StepToTopoDS:
_StepToTopoDS.StepToTopoDS_TranslateCurveBoundedSurface_swigregister(StepToTopoDS_TranslateCurveBoundedSurface)
class StepToTopoDS_TranslateEdge(StepToTopoDS_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        E: StepShape_Edge
        T: StepToTopoDS_Tool
        NMTool: StepToTopoDS_NMTool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _StepToTopoDS.StepToTopoDS_TranslateEdge_swiginit(self, _StepToTopoDS.new_StepToTopoDS_TranslateEdge(*args))

    def Error(self, *args):
        r"""
        Return
        -------
        StepToTopoDS_TranslateEdgeError

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateEdge_Error(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        E: StepShape_Edge
        T: StepToTopoDS_Tool
        NMTool: StepToTopoDS_NMTool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateEdge_Init(self, *args)

    def MakeFromCurve3D(self, *args):
        r"""

        Parameters
        ----------
        C3D: StepGeom_Curve
        EC: StepShape_EdgeCurve
        Vend: StepShape_Vertex
        preci: float
        E: TopoDS_Edge
        V1: TopoDS_Vertex
        V2: TopoDS_Vertex
        T: StepToTopoDS_Tool

        Return
        -------
        None

        Description
        -----------
        Warning! c3d is assumed to be a curve 3d ... other cases to checked before calling this.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateEdge_MakeFromCurve3D(self, *args)

    def MakePCurve(self, *args):
        r"""

        Parameters
        ----------
        PCU: StepGeom_Pcurve
        ConvSurf: Geom_Surface

        Return
        -------
        opencascade::handle<Geom2d_Curve>

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateEdge_MakePCurve(self, *args)

    def Value(self, *args):
        r"""
        Return
        -------
        TopoDS_Shape

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateEdge_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepToTopoDS.delete_StepToTopoDS_TranslateEdge

# Register StepToTopoDS_TranslateEdge in _StepToTopoDS:
_StepToTopoDS.StepToTopoDS_TranslateEdge_swigregister(StepToTopoDS_TranslateEdge)
class StepToTopoDS_TranslateEdgeLoop(StepToTopoDS_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        FB: StepShape_FaceBound
        F: TopoDS_Face
        S: Geom_Surface
        SS: StepGeom_Surface
        ss: bool
        T: StepToTopoDS_Tool
        NMTool: StepToTopoDS_NMTool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _StepToTopoDS.StepToTopoDS_TranslateEdgeLoop_swiginit(self, _StepToTopoDS.new_StepToTopoDS_TranslateEdgeLoop(*args))

    def Error(self, *args):
        r"""
        Return
        -------
        StepToTopoDS_TranslateEdgeLoopError

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateEdgeLoop_Error(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        FB: StepShape_FaceBound
        F: TopoDS_Face
        S: Geom_Surface
        SS: StepGeom_Surface
        ss: bool
        T: StepToTopoDS_Tool
        NMTool: StepToTopoDS_NMTool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateEdgeLoop_Init(self, *args)

    def Value(self, *args):
        r"""
        Return
        -------
        TopoDS_Shape

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateEdgeLoop_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepToTopoDS.delete_StepToTopoDS_TranslateEdgeLoop

# Register StepToTopoDS_TranslateEdgeLoop in _StepToTopoDS:
_StepToTopoDS.StepToTopoDS_TranslateEdgeLoop_swigregister(StepToTopoDS_TranslateEdgeLoop)
class StepToTopoDS_TranslateFace(StepToTopoDS_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        FS: StepShape_FaceSurface
        T: StepToTopoDS_Tool
        NMTool: StepToTopoDS_NMTool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        theTF: StepVisual_TessellatedFace
        theTool: StepToTopoDS_Tool
        theNMTool: StepToTopoDS_NMTool
        theReadTessellatedWhenNoBRepOnly: bool

        Return
        -------
        theHasGeom: bool

        Description
        -----------
        No available documentation.

        """
        _StepToTopoDS.StepToTopoDS_TranslateFace_swiginit(self, _StepToTopoDS.new_StepToTopoDS_TranslateFace(*args))

    def Error(self, *args):
        r"""
        Return
        -------
        StepToTopoDS_TranslateFaceError

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateFace_Error(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        FS: StepShape_FaceSurface
        T: StepToTopoDS_Tool
        NMTool: StepToTopoDS_NMTool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        theTF: StepVisual_TessellatedFace
        theTool: StepToTopoDS_Tool
        theNMTool: StepToTopoDS_NMTool
        theReadTessellatedWhenNoBRepOnly: bool

        Return
        -------
        theHasGeom: bool

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateFace_Init(self, *args)

    def Value(self, *args):
        r"""
        Return
        -------
        TopoDS_Shape

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateFace_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepToTopoDS.delete_StepToTopoDS_TranslateFace

# Register StepToTopoDS_TranslateFace in _StepToTopoDS:
_StepToTopoDS.StepToTopoDS_TranslateFace_swigregister(StepToTopoDS_TranslateFace)
class StepToTopoDS_TranslatePolyLoop(StepToTopoDS_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        PL: StepShape_PolyLoop
        T: StepToTopoDS_Tool
        S: Geom_Surface
        F: TopoDS_Face

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _StepToTopoDS.StepToTopoDS_TranslatePolyLoop_swiginit(self, _StepToTopoDS.new_StepToTopoDS_TranslatePolyLoop(*args))

    def Error(self, *args):
        r"""
        Return
        -------
        StepToTopoDS_TranslatePolyLoopError

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslatePolyLoop_Error(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        PL: StepShape_PolyLoop
        T: StepToTopoDS_Tool
        S: Geom_Surface
        F: TopoDS_Face

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslatePolyLoop_Init(self, *args)

    def Value(self, *args):
        r"""
        Return
        -------
        TopoDS_Shape

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslatePolyLoop_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepToTopoDS.delete_StepToTopoDS_TranslatePolyLoop

# Register StepToTopoDS_TranslatePolyLoop in _StepToTopoDS:
_StepToTopoDS.StepToTopoDS_TranslatePolyLoop_swigregister(StepToTopoDS_TranslatePolyLoop)
class StepToTopoDS_TranslateShell(StepToTopoDS_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _StepToTopoDS.StepToTopoDS_TranslateShell_swiginit(self, _StepToTopoDS.new_StepToTopoDS_TranslateShell(*args))

    def Error(self, *args):
        r"""
        Return
        -------
        StepToTopoDS_TranslateShellError

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateShell_Error(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        CFS: StepShape_ConnectedFaceSet
        T: StepToTopoDS_Tool
        NMTool: StepToTopoDS_NMTool
        theProgress: Message_ProgressRange (optional, default to Message_ProgressRange())

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        theTSh: StepVisual_TessellatedShell
        theTool: StepToTopoDS_Tool
        theNMTool: StepToTopoDS_NMTool
        theReadTessellatedWhenNoBRepOnly: bool
        theProgress: Message_ProgressRange (optional, default to Message_ProgressRange())

        Return
        -------
        theHasGeom: bool

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateShell_Init(self, *args)

    def Value(self, *args):
        r"""
        Return
        -------
        TopoDS_Shape

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateShell_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepToTopoDS.delete_StepToTopoDS_TranslateShell

# Register StepToTopoDS_TranslateShell in _StepToTopoDS:
_StepToTopoDS.StepToTopoDS_TranslateShell_swigregister(StepToTopoDS_TranslateShell)
class StepToTopoDS_TranslateSolid(StepToTopoDS_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _StepToTopoDS.StepToTopoDS_TranslateSolid_swiginit(self, _StepToTopoDS.new_StepToTopoDS_TranslateSolid(*args))

    def Error(self, *args):
        r"""
        Return
        -------
        StepToTopoDS_TranslateSolidError

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateSolid_Error(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theTSo: StepVisual_TessellatedSolid
        theTP: Transfer_TransientProcess
        theTool: StepToTopoDS_Tool
        theNMTool: StepToTopoDS_NMTool
        theReadTessellatedWhenNoBRepOnly: bool
        theProgress: Message_ProgressRange (optional, default to Message_ProgressRange())

        Return
        -------
        theHasGeom: bool

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateSolid_Init(self, *args)

    def Value(self, *args):
        r"""
        Return
        -------
        TopoDS_Shape

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateSolid_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepToTopoDS.delete_StepToTopoDS_TranslateSolid

# Register StepToTopoDS_TranslateSolid in _StepToTopoDS:
_StepToTopoDS.StepToTopoDS_TranslateSolid_swigregister(StepToTopoDS_TranslateSolid)
class StepToTopoDS_TranslateVertex(StepToTopoDS_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        V: StepShape_Vertex
        T: StepToTopoDS_Tool
        NMTool: StepToTopoDS_NMTool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _StepToTopoDS.StepToTopoDS_TranslateVertex_swiginit(self, _StepToTopoDS.new_StepToTopoDS_TranslateVertex(*args))

    def Error(self, *args):
        r"""
        Return
        -------
        StepToTopoDS_TranslateVertexError

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateVertex_Error(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        V: StepShape_Vertex
        T: StepToTopoDS_Tool
        NMTool: StepToTopoDS_NMTool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateVertex_Init(self, *args)

    def Value(self, *args):
        r"""
        Return
        -------
        TopoDS_Shape

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateVertex_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepToTopoDS.delete_StepToTopoDS_TranslateVertex

# Register StepToTopoDS_TranslateVertex in _StepToTopoDS:
_StepToTopoDS.StepToTopoDS_TranslateVertex_swigregister(StepToTopoDS_TranslateVertex)
class StepToTopoDS_TranslateVertexLoop(StepToTopoDS_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        VL: StepShape_VertexLoop
        T: StepToTopoDS_Tool
        NMTool: StepToTopoDS_NMTool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _StepToTopoDS.StepToTopoDS_TranslateVertexLoop_swiginit(self, _StepToTopoDS.new_StepToTopoDS_TranslateVertexLoop(*args))

    def Error(self, *args):
        r"""
        Return
        -------
        StepToTopoDS_TranslateVertexLoopError

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateVertexLoop_Error(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        VL: StepShape_VertexLoop
        T: StepToTopoDS_Tool
        NMTool: StepToTopoDS_NMTool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateVertexLoop_Init(self, *args)

    def Value(self, *args):
        r"""
        Return
        -------
        TopoDS_Shape

        Description
        -----------
        No available documentation.

        """
        return _StepToTopoDS.StepToTopoDS_TranslateVertexLoop_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepToTopoDS.delete_StepToTopoDS_TranslateVertexLoop

# Register StepToTopoDS_TranslateVertexLoop in _StepToTopoDS:
_StepToTopoDS.StepToTopoDS_TranslateVertexLoop_swigregister(StepToTopoDS_TranslateVertexLoop)

@classnotwrapped
class StepToTopoDS_Builder:
	pass

@classnotwrapped
class StepToTopoDS_PointVertexMap:
	pass





@deprecated
def steptotopods_DecodeBuilderError(*args):
	return steptotopods.DecodeBuilderError(*args)

@deprecated
def steptotopods_DecodeEdgeError(*args):
	return steptotopods.DecodeEdgeError(*args)

@deprecated
def steptotopods_DecodeFaceError(*args):
	return steptotopods.DecodeFaceError(*args)

@deprecated
def steptotopods_DecodeGeometricToolError(*args):
	return steptotopods.DecodeGeometricToolError(*args)

@deprecated
def steptotopods_DecodePolyLoopError(*args):
	return steptotopods.DecodePolyLoopError(*args)

@deprecated
def steptotopods_DecodeShellError(*args):
	return steptotopods.DecodeShellError(*args)

@deprecated
def steptotopods_DecodeVertexError(*args):
	return steptotopods.DecodeVertexError(*args)

@deprecated
def steptotopods_DecodeVertexLoopError(*args):
	return steptotopods.DecodeVertexLoopError(*args)

@deprecated
def StepToTopoDS_CartesianPointHasher_HashCode(*args):
	return StepToTopoDS_CartesianPointHasher.HashCode(*args)

@deprecated
def StepToTopoDS_CartesianPointHasher_IsEqual(*args):
	return StepToTopoDS_CartesianPointHasher.IsEqual(*args)

@deprecated
def StepToTopoDS_GeometricTool_IsLikeSeam(*args):
	return StepToTopoDS_GeometricTool.IsLikeSeam(*args)

@deprecated
def StepToTopoDS_GeometricTool_IsSeamCurve(*args):
	return StepToTopoDS_GeometricTool.IsSeamCurve(*args)

@deprecated
def StepToTopoDS_GeometricTool_PCurve(*args):
	return StepToTopoDS_GeometricTool.PCurve(*args)

@deprecated
def StepToTopoDS_GeometricTool_UpdateParam3d(*args):
	return StepToTopoDS_GeometricTool.UpdateParam3d(*args)

@deprecated
def StepToTopoDS_PointPairHasher_HashCode(*args):
	return StepToTopoDS_PointPairHasher.HashCode(*args)

@deprecated
def StepToTopoDS_PointPairHasher_IsEqual(*args):
	return StepToTopoDS_PointPairHasher.IsEqual(*args)



