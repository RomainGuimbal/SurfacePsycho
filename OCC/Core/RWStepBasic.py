# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
RWStepBasic module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_rwstepbasic.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_RWStepBasic')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_RWStepBasic')
    _RWStepBasic = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_RWStepBasic', [dirname(__file__)])
        except ImportError:
            import _RWStepBasic
            return _RWStepBasic
        try:
            _mod = imp.load_module('_RWStepBasic', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _RWStepBasic = swig_import_helper()
    del swig_import_helper
else:
    import _RWStepBasic
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

class SwigPyIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwigPyIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwigPyIterator, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _RWStepBasic.delete_SwigPyIterator
    __del__ = lambda self: None

    def value(self) -> "PyObject *":
        return _RWStepBasic.SwigPyIterator_value(self)

    def incr(self, n: 'size_t'=1) -> "swig::SwigPyIterator *":
        return _RWStepBasic.SwigPyIterator_incr(self, n)

    def decr(self, n: 'size_t'=1) -> "swig::SwigPyIterator *":
        return _RWStepBasic.SwigPyIterator_decr(self, n)

    def distance(self, x: 'SwigPyIterator') -> "ptrdiff_t":
        return _RWStepBasic.SwigPyIterator_distance(self, x)

    def equal(self, x: 'SwigPyIterator') -> "bool":
        return _RWStepBasic.SwigPyIterator_equal(self, x)

    def copy(self) -> "swig::SwigPyIterator *":
        return _RWStepBasic.SwigPyIterator_copy(self)

    def next(self) -> "PyObject *":
        return _RWStepBasic.SwigPyIterator_next(self)

    def __next__(self) -> "PyObject *":
        return _RWStepBasic.SwigPyIterator___next__(self)

    def previous(self) -> "PyObject *":
        return _RWStepBasic.SwigPyIterator_previous(self)

    def advance(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator *":
        return _RWStepBasic.SwigPyIterator_advance(self, n)

    def __eq__(self, x: 'SwigPyIterator') -> "bool":
        return _RWStepBasic.SwigPyIterator___eq__(self, x)

    def __ne__(self, x: 'SwigPyIterator') -> "bool":
        return _RWStepBasic.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator &":
        return _RWStepBasic.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator &":
        return _RWStepBasic.SwigPyIterator___isub__(self, n)

    def __add__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator *":
        return _RWStepBasic.SwigPyIterator___add__(self, n)

    def __sub__(self, *args) -> "ptrdiff_t":
        return _RWStepBasic.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self
SwigPyIterator_swigregister = _RWStepBasic.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _RWStepBasic.process_exception(error, method_name, class_name)
process_exception = _RWStepBasic.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.TCollection
import OCC.Core.Message
import OCC.Core.OSD
import OCC.Core.TColStd
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.Resource
import OCC.Core.StepBasic

from enum import IntEnum
from OCC.Core.Exception import *



class RWStepBasic_RWAction(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWAction, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWAction, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWAction(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads action.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_Action

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWAction_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_Action
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWAction_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes action.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_Action

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWAction_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWAction
    __del__ = lambda self: None
RWStepBasic_RWAction_swigregister = _RWStepBasic.RWStepBasic_RWAction_swigregister
RWStepBasic_RWAction_swigregister(RWStepBasic_RWAction)

class RWStepBasic_RWActionAssignment(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWActionAssignment, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWActionAssignment, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWActionAssignment(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads actionassignment.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ActionAssignment

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWActionAssignment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_ActionAssignment
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWActionAssignment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes actionassignment.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ActionAssignment

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWActionAssignment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWActionAssignment
    __del__ = lambda self: None
RWStepBasic_RWActionAssignment_swigregister = _RWStepBasic.RWStepBasic_RWActionAssignment_swigregister
RWStepBasic_RWActionAssignment_swigregister(RWStepBasic_RWActionAssignment)

class RWStepBasic_RWActionMethod(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWActionMethod, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWActionMethod, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWActionMethod(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads actionmethod.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ActionMethod

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWActionMethod_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_ActionMethod
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWActionMethod_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes actionmethod.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ActionMethod

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWActionMethod_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWActionMethod
    __del__ = lambda self: None
RWStepBasic_RWActionMethod_swigregister = _RWStepBasic.RWStepBasic_RWActionMethod_swigregister
RWStepBasic_RWActionMethod_swigregister(RWStepBasic_RWActionMethod)

class RWStepBasic_RWActionRequestAssignment(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWActionRequestAssignment, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWActionRequestAssignment, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWActionRequestAssignment(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads actionrequestassignment.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ActionRequestAssignment

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWActionRequestAssignment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_ActionRequestAssignment
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWActionRequestAssignment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes actionrequestassignment.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ActionRequestAssignment

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWActionRequestAssignment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWActionRequestAssignment
    __del__ = lambda self: None
RWStepBasic_RWActionRequestAssignment_swigregister = _RWStepBasic.RWStepBasic_RWActionRequestAssignment_swigregister
RWStepBasic_RWActionRequestAssignment_swigregister(RWStepBasic_RWActionRequestAssignment)

class RWStepBasic_RWActionRequestSolution(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWActionRequestSolution, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWActionRequestSolution, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWActionRequestSolution(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads actionrequestsolution.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ActionRequestSolution

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWActionRequestSolution_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_ActionRequestSolution
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWActionRequestSolution_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes actionrequestsolution.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ActionRequestSolution

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWActionRequestSolution_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWActionRequestSolution
    __del__ = lambda self: None
RWStepBasic_RWActionRequestSolution_swigregister = _RWStepBasic.RWStepBasic_RWActionRequestSolution_swigregister
RWStepBasic_RWActionRequestSolution_swigregister(RWStepBasic_RWActionRequestSolution)

class RWStepBasic_RWAddress(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWAddress, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWAddress, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWAddress(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_Address

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWAddress_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_Address

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWAddress_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWAddress
    __del__ = lambda self: None
RWStepBasic_RWAddress_swigregister = _RWStepBasic.RWStepBasic_RWAddress_swigregister
RWStepBasic_RWAddress_swigregister(RWStepBasic_RWAddress)

class RWStepBasic_RWApplicationContext(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWApplicationContext, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWApplicationContext, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWApplicationContext(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ApplicationContext

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApplicationContext_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ApplicationContext

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApplicationContext_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWApplicationContext
    __del__ = lambda self: None
RWStepBasic_RWApplicationContext_swigregister = _RWStepBasic.RWStepBasic_RWApplicationContext_swigregister
RWStepBasic_RWApplicationContext_swigregister(RWStepBasic_RWApplicationContext)

class RWStepBasic_RWApplicationContextElement(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWApplicationContextElement, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWApplicationContextElement, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWApplicationContextElement(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ApplicationContextElement

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApplicationContextElement_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ApplicationContextElement
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApplicationContextElement_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ApplicationContextElement

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApplicationContextElement_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWApplicationContextElement
    __del__ = lambda self: None
RWStepBasic_RWApplicationContextElement_swigregister = _RWStepBasic.RWStepBasic_RWApplicationContextElement_swigregister
RWStepBasic_RWApplicationContextElement_swigregister(RWStepBasic_RWApplicationContextElement)

class RWStepBasic_RWApplicationProtocolDefinition(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWApplicationProtocolDefinition, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWApplicationProtocolDefinition, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWApplicationProtocolDefinition(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ApplicationProtocolDefinition

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApplicationProtocolDefinition_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ApplicationProtocolDefinition
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApplicationProtocolDefinition_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ApplicationProtocolDefinition

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApplicationProtocolDefinition_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWApplicationProtocolDefinition
    __del__ = lambda self: None
RWStepBasic_RWApplicationProtocolDefinition_swigregister = _RWStepBasic.RWStepBasic_RWApplicationProtocolDefinition_swigregister
RWStepBasic_RWApplicationProtocolDefinition_swigregister(RWStepBasic_RWApplicationProtocolDefinition)

class RWStepBasic_RWApproval(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWApproval, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWApproval, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWApproval(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_Approval

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApproval_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_Approval
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApproval_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_Approval

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApproval_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWApproval
    __del__ = lambda self: None
RWStepBasic_RWApproval_swigregister = _RWStepBasic.RWStepBasic_RWApproval_swigregister
RWStepBasic_RWApproval_swigregister(RWStepBasic_RWApproval)

class RWStepBasic_RWApprovalDateTime(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWApprovalDateTime, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWApprovalDateTime, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWApprovalDateTime(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ApprovalDateTime

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApprovalDateTime_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ApprovalDateTime
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApprovalDateTime_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ApprovalDateTime

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApprovalDateTime_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWApprovalDateTime
    __del__ = lambda self: None
RWStepBasic_RWApprovalDateTime_swigregister = _RWStepBasic.RWStepBasic_RWApprovalDateTime_swigregister
RWStepBasic_RWApprovalDateTime_swigregister(RWStepBasic_RWApprovalDateTime)

class RWStepBasic_RWApprovalPersonOrganization(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWApprovalPersonOrganization, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWApprovalPersonOrganization, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWApprovalPersonOrganization(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ApprovalPersonOrganization

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApprovalPersonOrganization_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ApprovalPersonOrganization
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApprovalPersonOrganization_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ApprovalPersonOrganization

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApprovalPersonOrganization_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWApprovalPersonOrganization
    __del__ = lambda self: None
RWStepBasic_RWApprovalPersonOrganization_swigregister = _RWStepBasic.RWStepBasic_RWApprovalPersonOrganization_swigregister
RWStepBasic_RWApprovalPersonOrganization_swigregister(RWStepBasic_RWApprovalPersonOrganization)

class RWStepBasic_RWApprovalRelationship(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWApprovalRelationship, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWApprovalRelationship, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWApprovalRelationship(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ApprovalRelationship

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApprovalRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ApprovalRelationship
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApprovalRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ApprovalRelationship

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApprovalRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWApprovalRelationship
    __del__ = lambda self: None
RWStepBasic_RWApprovalRelationship_swigregister = _RWStepBasic.RWStepBasic_RWApprovalRelationship_swigregister
RWStepBasic_RWApprovalRelationship_swigregister(RWStepBasic_RWApprovalRelationship)

class RWStepBasic_RWApprovalRole(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWApprovalRole, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWApprovalRole, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWApprovalRole(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ApprovalRole

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApprovalRole_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ApprovalRole

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApprovalRole_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWApprovalRole
    __del__ = lambda self: None
RWStepBasic_RWApprovalRole_swigregister = _RWStepBasic.RWStepBasic_RWApprovalRole_swigregister
RWStepBasic_RWApprovalRole_swigregister(RWStepBasic_RWApprovalRole)

class RWStepBasic_RWApprovalStatus(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWApprovalStatus, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWApprovalStatus, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWApprovalStatus(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ApprovalStatus

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApprovalStatus_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ApprovalStatus

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWApprovalStatus_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWApprovalStatus
    __del__ = lambda self: None
RWStepBasic_RWApprovalStatus_swigregister = _RWStepBasic.RWStepBasic_RWApprovalStatus_swigregister
RWStepBasic_RWApprovalStatus_swigregister(RWStepBasic_RWApprovalStatus)

class RWStepBasic_RWCalendarDate(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWCalendarDate, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWCalendarDate, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWCalendarDate(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_CalendarDate

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWCalendarDate_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_CalendarDate

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWCalendarDate_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWCalendarDate
    __del__ = lambda self: None
RWStepBasic_RWCalendarDate_swigregister = _RWStepBasic.RWStepBasic_RWCalendarDate_swigregister
RWStepBasic_RWCalendarDate_swigregister(RWStepBasic_RWCalendarDate)

class RWStepBasic_RWCertification(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWCertification, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWCertification, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWCertification(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads certification.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_Certification

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWCertification_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_Certification
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWCertification_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes certification.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_Certification

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWCertification_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWCertification
    __del__ = lambda self: None
RWStepBasic_RWCertification_swigregister = _RWStepBasic.RWStepBasic_RWCertification_swigregister
RWStepBasic_RWCertification_swigregister(RWStepBasic_RWCertification)

class RWStepBasic_RWCertificationAssignment(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWCertificationAssignment, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWCertificationAssignment, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWCertificationAssignment(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads certificationassignment.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_CertificationAssignment

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWCertificationAssignment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_CertificationAssignment
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWCertificationAssignment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes certificationassignment.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_CertificationAssignment

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWCertificationAssignment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWCertificationAssignment
    __del__ = lambda self: None
RWStepBasic_RWCertificationAssignment_swigregister = _RWStepBasic.RWStepBasic_RWCertificationAssignment_swigregister
RWStepBasic_RWCertificationAssignment_swigregister(RWStepBasic_RWCertificationAssignment)

class RWStepBasic_RWCertificationType(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWCertificationType, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWCertificationType, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWCertificationType(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads certificationtype.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_CertificationType

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWCertificationType_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_CertificationType
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWCertificationType_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes certificationtype.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_CertificationType

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWCertificationType_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWCertificationType
    __del__ = lambda self: None
RWStepBasic_RWCertificationType_swigregister = _RWStepBasic.RWStepBasic_RWCertificationType_swigregister
RWStepBasic_RWCertificationType_swigregister(RWStepBasic_RWCertificationType)

class RWStepBasic_RWCharacterizedObject(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWCharacterizedObject, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWCharacterizedObject, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWCharacterizedObject(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads characterizedobject.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_CharacterizedObject

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWCharacterizedObject_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_CharacterizedObject
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWCharacterizedObject_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes characterizedobject.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_CharacterizedObject

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWCharacterizedObject_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWCharacterizedObject
    __del__ = lambda self: None
RWStepBasic_RWCharacterizedObject_swigregister = _RWStepBasic.RWStepBasic_RWCharacterizedObject_swigregister
RWStepBasic_RWCharacterizedObject_swigregister(RWStepBasic_RWCharacterizedObject)

class RWStepBasic_RWContract(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWContract, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWContract, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWContract(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads contract.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_Contract

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWContract_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_Contract
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWContract_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes contract.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_Contract

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWContract_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWContract
    __del__ = lambda self: None
RWStepBasic_RWContract_swigregister = _RWStepBasic.RWStepBasic_RWContract_swigregister
RWStepBasic_RWContract_swigregister(RWStepBasic_RWContract)

class RWStepBasic_RWContractAssignment(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWContractAssignment, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWContractAssignment, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWContractAssignment(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads contractassignment.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ContractAssignment

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWContractAssignment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_ContractAssignment
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWContractAssignment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes contractassignment.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ContractAssignment

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWContractAssignment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWContractAssignment
    __del__ = lambda self: None
RWStepBasic_RWContractAssignment_swigregister = _RWStepBasic.RWStepBasic_RWContractAssignment_swigregister
RWStepBasic_RWContractAssignment_swigregister(RWStepBasic_RWContractAssignment)

class RWStepBasic_RWContractType(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWContractType, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWContractType, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWContractType(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads contracttype.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ContractType

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWContractType_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_ContractType
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWContractType_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes contracttype.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ContractType

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWContractType_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWContractType
    __del__ = lambda self: None
RWStepBasic_RWContractType_swigregister = _RWStepBasic.RWStepBasic_RWContractType_swigregister
RWStepBasic_RWContractType_swigregister(RWStepBasic_RWContractType)

class RWStepBasic_RWConversionBasedUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWConversionBasedUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWConversionBasedUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWConversionBasedUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ConversionBasedUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ConversionBasedUnit
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ConversionBasedUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWConversionBasedUnit
    __del__ = lambda self: None
RWStepBasic_RWConversionBasedUnit_swigregister = _RWStepBasic.RWStepBasic_RWConversionBasedUnit_swigregister
RWStepBasic_RWConversionBasedUnit_swigregister(RWStepBasic_RWConversionBasedUnit)

class RWStepBasic_RWConversionBasedUnitAndAreaUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWConversionBasedUnitAndAreaUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWConversionBasedUnitAndAreaUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWConversionBasedUnitAndAreaUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ConversionBasedUnitAndAreaUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndAreaUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ConversionBasedUnitAndAreaUnit
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndAreaUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ConversionBasedUnitAndAreaUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndAreaUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWConversionBasedUnitAndAreaUnit
    __del__ = lambda self: None
RWStepBasic_RWConversionBasedUnitAndAreaUnit_swigregister = _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndAreaUnit_swigregister
RWStepBasic_RWConversionBasedUnitAndAreaUnit_swigregister(RWStepBasic_RWConversionBasedUnitAndAreaUnit)

class RWStepBasic_RWConversionBasedUnitAndLengthUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWConversionBasedUnitAndLengthUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWConversionBasedUnitAndLengthUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWConversionBasedUnitAndLengthUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ConversionBasedUnitAndLengthUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndLengthUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ConversionBasedUnitAndLengthUnit
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndLengthUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ConversionBasedUnitAndLengthUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndLengthUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWConversionBasedUnitAndLengthUnit
    __del__ = lambda self: None
RWStepBasic_RWConversionBasedUnitAndLengthUnit_swigregister = _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndLengthUnit_swigregister
RWStepBasic_RWConversionBasedUnitAndLengthUnit_swigregister(RWStepBasic_RWConversionBasedUnitAndLengthUnit)

class RWStepBasic_RWConversionBasedUnitAndMassUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWConversionBasedUnitAndMassUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWConversionBasedUnitAndMassUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWConversionBasedUnitAndMassUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ConversionBasedUnitAndMassUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndMassUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ConversionBasedUnitAndMassUnit
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndMassUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ConversionBasedUnitAndMassUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndMassUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWConversionBasedUnitAndMassUnit
    __del__ = lambda self: None
RWStepBasic_RWConversionBasedUnitAndMassUnit_swigregister = _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndMassUnit_swigregister
RWStepBasic_RWConversionBasedUnitAndMassUnit_swigregister(RWStepBasic_RWConversionBasedUnitAndMassUnit)

class RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ConversionBasedUnitAndPlaneAngleUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ConversionBasedUnitAndPlaneAngleUnit
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ConversionBasedUnitAndPlaneAngleUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit
    __del__ = lambda self: None
RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit_swigregister = _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit_swigregister
RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit_swigregister(RWStepBasic_RWConversionBasedUnitAndPlaneAngleUnit)

class RWStepBasic_RWConversionBasedUnitAndRatioUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWConversionBasedUnitAndRatioUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWConversionBasedUnitAndRatioUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWConversionBasedUnitAndRatioUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ConversionBasedUnitAndRatioUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndRatioUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ConversionBasedUnitAndRatioUnit
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndRatioUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ConversionBasedUnitAndRatioUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndRatioUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWConversionBasedUnitAndRatioUnit
    __del__ = lambda self: None
RWStepBasic_RWConversionBasedUnitAndRatioUnit_swigregister = _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndRatioUnit_swigregister
RWStepBasic_RWConversionBasedUnitAndRatioUnit_swigregister(RWStepBasic_RWConversionBasedUnitAndRatioUnit)

class RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ConversionBasedUnitAndSolidAngleUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ConversionBasedUnitAndSolidAngleUnit
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ConversionBasedUnitAndSolidAngleUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit
    __del__ = lambda self: None
RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit_swigregister = _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit_swigregister
RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit_swigregister(RWStepBasic_RWConversionBasedUnitAndSolidAngleUnit)

class RWStepBasic_RWConversionBasedUnitAndTimeUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWConversionBasedUnitAndTimeUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWConversionBasedUnitAndTimeUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWConversionBasedUnitAndTimeUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ConversionBasedUnitAndTimeUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndTimeUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ConversionBasedUnitAndTimeUnit
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndTimeUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ConversionBasedUnitAndTimeUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndTimeUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWConversionBasedUnitAndTimeUnit
    __del__ = lambda self: None
RWStepBasic_RWConversionBasedUnitAndTimeUnit_swigregister = _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndTimeUnit_swigregister
RWStepBasic_RWConversionBasedUnitAndTimeUnit_swigregister(RWStepBasic_RWConversionBasedUnitAndTimeUnit)

class RWStepBasic_RWConversionBasedUnitAndVolumeUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWConversionBasedUnitAndVolumeUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWConversionBasedUnitAndVolumeUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWConversionBasedUnitAndVolumeUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ConversionBasedUnitAndVolumeUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndVolumeUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ConversionBasedUnitAndVolumeUnit
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndVolumeUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ConversionBasedUnitAndVolumeUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndVolumeUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWConversionBasedUnitAndVolumeUnit
    __del__ = lambda self: None
RWStepBasic_RWConversionBasedUnitAndVolumeUnit_swigregister = _RWStepBasic.RWStepBasic_RWConversionBasedUnitAndVolumeUnit_swigregister
RWStepBasic_RWConversionBasedUnitAndVolumeUnit_swigregister(RWStepBasic_RWConversionBasedUnitAndVolumeUnit)

class RWStepBasic_RWCoordinatedUniversalTimeOffset(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWCoordinatedUniversalTimeOffset, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWCoordinatedUniversalTimeOffset, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWCoordinatedUniversalTimeOffset(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_CoordinatedUniversalTimeOffset

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWCoordinatedUniversalTimeOffset_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_CoordinatedUniversalTimeOffset

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWCoordinatedUniversalTimeOffset_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWCoordinatedUniversalTimeOffset
    __del__ = lambda self: None
RWStepBasic_RWCoordinatedUniversalTimeOffset_swigregister = _RWStepBasic.RWStepBasic_RWCoordinatedUniversalTimeOffset_swigregister
RWStepBasic_RWCoordinatedUniversalTimeOffset_swigregister(RWStepBasic_RWCoordinatedUniversalTimeOffset)

class RWStepBasic_RWDate(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWDate, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWDate, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWDate(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_Date

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDate_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_Date

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDate_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDate
    __del__ = lambda self: None
RWStepBasic_RWDate_swigregister = _RWStepBasic.RWStepBasic_RWDate_swigregister
RWStepBasic_RWDate_swigregister(RWStepBasic_RWDate)

class RWStepBasic_RWDateAndTime(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWDateAndTime, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWDateAndTime, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWDateAndTime(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_DateAndTime

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDateAndTime_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_DateAndTime
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDateAndTime_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_DateAndTime

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDateAndTime_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDateAndTime
    __del__ = lambda self: None
RWStepBasic_RWDateAndTime_swigregister = _RWStepBasic.RWStepBasic_RWDateAndTime_swigregister
RWStepBasic_RWDateAndTime_swigregister(RWStepBasic_RWDateAndTime)

class RWStepBasic_RWDateRole(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWDateRole, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWDateRole, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWDateRole(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_DateRole

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDateRole_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_DateRole

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDateRole_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDateRole
    __del__ = lambda self: None
RWStepBasic_RWDateRole_swigregister = _RWStepBasic.RWStepBasic_RWDateRole_swigregister
RWStepBasic_RWDateRole_swigregister(RWStepBasic_RWDateRole)

class RWStepBasic_RWDateTimeRole(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWDateTimeRole, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWDateTimeRole, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWDateTimeRole(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_DateTimeRole

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDateTimeRole_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_DateTimeRole

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDateTimeRole_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDateTimeRole
    __del__ = lambda self: None
RWStepBasic_RWDateTimeRole_swigregister = _RWStepBasic.RWStepBasic_RWDateTimeRole_swigregister
RWStepBasic_RWDateTimeRole_swigregister(RWStepBasic_RWDateTimeRole)

class RWStepBasic_RWDerivedUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWDerivedUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWDerivedUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWDerivedUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_DerivedUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDerivedUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_DerivedUnit
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDerivedUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_DerivedUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDerivedUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDerivedUnit
    __del__ = lambda self: None
RWStepBasic_RWDerivedUnit_swigregister = _RWStepBasic.RWStepBasic_RWDerivedUnit_swigregister
RWStepBasic_RWDerivedUnit_swigregister(RWStepBasic_RWDerivedUnit)

class RWStepBasic_RWDerivedUnitElement(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWDerivedUnitElement, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWDerivedUnitElement, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWDerivedUnitElement(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_DerivedUnitElement

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDerivedUnitElement_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_DerivedUnitElement
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDerivedUnitElement_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_DerivedUnitElement

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDerivedUnitElement_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDerivedUnitElement
    __del__ = lambda self: None
RWStepBasic_RWDerivedUnitElement_swigregister = _RWStepBasic.RWStepBasic_RWDerivedUnitElement_swigregister
RWStepBasic_RWDerivedUnitElement_swigregister(RWStepBasic_RWDerivedUnitElement)

class RWStepBasic_RWDimensionalExponents(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWDimensionalExponents, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWDimensionalExponents, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWDimensionalExponents(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_DimensionalExponents

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDimensionalExponents_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_DimensionalExponents

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDimensionalExponents_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDimensionalExponents
    __del__ = lambda self: None
RWStepBasic_RWDimensionalExponents_swigregister = _RWStepBasic.RWStepBasic_RWDimensionalExponents_swigregister
RWStepBasic_RWDimensionalExponents_swigregister(RWStepBasic_RWDimensionalExponents)

class RWStepBasic_RWDocument(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWDocument, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWDocument, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWDocument(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads document.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_Document

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocument_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_Document
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocument_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes document.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_Document

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocument_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDocument
    __del__ = lambda self: None
RWStepBasic_RWDocument_swigregister = _RWStepBasic.RWStepBasic_RWDocument_swigregister
RWStepBasic_RWDocument_swigregister(RWStepBasic_RWDocument)

class RWStepBasic_RWDocumentFile(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWDocumentFile, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWDocumentFile, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWDocumentFile(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads documentfile.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_DocumentFile

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocumentFile_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_DocumentFile
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocumentFile_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes documentfile.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_DocumentFile

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocumentFile_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDocumentFile
    __del__ = lambda self: None
RWStepBasic_RWDocumentFile_swigregister = _RWStepBasic.RWStepBasic_RWDocumentFile_swigregister
RWStepBasic_RWDocumentFile_swigregister(RWStepBasic_RWDocumentFile)

class RWStepBasic_RWDocumentProductAssociation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWDocumentProductAssociation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWDocumentProductAssociation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWDocumentProductAssociation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads documentproductassociation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_DocumentProductAssociation

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocumentProductAssociation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_DocumentProductAssociation
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocumentProductAssociation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes documentproductassociation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_DocumentProductAssociation

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocumentProductAssociation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDocumentProductAssociation
    __del__ = lambda self: None
RWStepBasic_RWDocumentProductAssociation_swigregister = _RWStepBasic.RWStepBasic_RWDocumentProductAssociation_swigregister
RWStepBasic_RWDocumentProductAssociation_swigregister(RWStepBasic_RWDocumentProductAssociation)

class RWStepBasic_RWDocumentProductEquivalence(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWDocumentProductEquivalence, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWDocumentProductEquivalence, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWDocumentProductEquivalence(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads documentproductequivalence.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_DocumentProductEquivalence

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocumentProductEquivalence_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_DocumentProductEquivalence
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocumentProductEquivalence_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes documentproductequivalence.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_DocumentProductEquivalence

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocumentProductEquivalence_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDocumentProductEquivalence
    __del__ = lambda self: None
RWStepBasic_RWDocumentProductEquivalence_swigregister = _RWStepBasic.RWStepBasic_RWDocumentProductEquivalence_swigregister
RWStepBasic_RWDocumentProductEquivalence_swigregister(RWStepBasic_RWDocumentProductEquivalence)

class RWStepBasic_RWDocumentRelationship(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWDocumentRelationship, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWDocumentRelationship, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWDocumentRelationship(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_DocumentRelationship

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocumentRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_DocumentRelationship
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocumentRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_DocumentRelationship

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocumentRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDocumentRelationship
    __del__ = lambda self: None
RWStepBasic_RWDocumentRelationship_swigregister = _RWStepBasic.RWStepBasic_RWDocumentRelationship_swigregister
RWStepBasic_RWDocumentRelationship_swigregister(RWStepBasic_RWDocumentRelationship)

class RWStepBasic_RWDocumentRepresentationType(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWDocumentRepresentationType, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWDocumentRepresentationType, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWDocumentRepresentationType(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads documentrepresentationtype.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_DocumentRepresentationType

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocumentRepresentationType_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_DocumentRepresentationType
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocumentRepresentationType_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes documentrepresentationtype.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_DocumentRepresentationType

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocumentRepresentationType_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDocumentRepresentationType
    __del__ = lambda self: None
RWStepBasic_RWDocumentRepresentationType_swigregister = _RWStepBasic.RWStepBasic_RWDocumentRepresentationType_swigregister
RWStepBasic_RWDocumentRepresentationType_swigregister(RWStepBasic_RWDocumentRepresentationType)

class RWStepBasic_RWDocumentType(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWDocumentType, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWDocumentType, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWDocumentType(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_DocumentType

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocumentType_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_DocumentType
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocumentType_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_DocumentType

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocumentType_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDocumentType
    __del__ = lambda self: None
RWStepBasic_RWDocumentType_swigregister = _RWStepBasic.RWStepBasic_RWDocumentType_swigregister
RWStepBasic_RWDocumentType_swigregister(RWStepBasic_RWDocumentType)

class RWStepBasic_RWDocumentUsageConstraint(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWDocumentUsageConstraint, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWDocumentUsageConstraint, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWDocumentUsageConstraint(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_DocumentUsageConstraint

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocumentUsageConstraint_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_DocumentUsageConstraint
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocumentUsageConstraint_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_DocumentUsageConstraint

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWDocumentUsageConstraint_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWDocumentUsageConstraint
    __del__ = lambda self: None
RWStepBasic_RWDocumentUsageConstraint_swigregister = _RWStepBasic.RWStepBasic_RWDocumentUsageConstraint_swigregister
RWStepBasic_RWDocumentUsageConstraint_swigregister(RWStepBasic_RWDocumentUsageConstraint)

class RWStepBasic_RWEffectivity(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWEffectivity, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWEffectivity, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWEffectivity(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_Effectivity

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWEffectivity_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_Effectivity
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWEffectivity_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_Effectivity

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWEffectivity_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWEffectivity
    __del__ = lambda self: None
RWStepBasic_RWEffectivity_swigregister = _RWStepBasic.RWStepBasic_RWEffectivity_swigregister
RWStepBasic_RWEffectivity_swigregister(RWStepBasic_RWEffectivity)

class RWStepBasic_RWEffectivityAssignment(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWEffectivityAssignment, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWEffectivityAssignment, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWEffectivityAssignment(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads effectivityassignment.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_EffectivityAssignment

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWEffectivityAssignment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_EffectivityAssignment
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWEffectivityAssignment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes effectivityassignment.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_EffectivityAssignment

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWEffectivityAssignment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWEffectivityAssignment
    __del__ = lambda self: None
RWStepBasic_RWEffectivityAssignment_swigregister = _RWStepBasic.RWStepBasic_RWEffectivityAssignment_swigregister
RWStepBasic_RWEffectivityAssignment_swigregister(RWStepBasic_RWEffectivityAssignment)

class RWStepBasic_RWEulerAngles(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWEulerAngles, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWEulerAngles, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWEulerAngles(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads eulerangles.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_EulerAngles

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWEulerAngles_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_EulerAngles
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWEulerAngles_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes eulerangles.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_EulerAngles

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWEulerAngles_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWEulerAngles
    __del__ = lambda self: None
RWStepBasic_RWEulerAngles_swigregister = _RWStepBasic.RWStepBasic_RWEulerAngles_swigregister
RWStepBasic_RWEulerAngles_swigregister(RWStepBasic_RWEulerAngles)

class RWStepBasic_RWExternalIdentificationAssignment(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWExternalIdentificationAssignment, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWExternalIdentificationAssignment, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWExternalIdentificationAssignment(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads externalidentificationassignment.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ExternalIdentificationAssignment

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWExternalIdentificationAssignment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_ExternalIdentificationAssignment
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWExternalIdentificationAssignment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes externalidentificationassignment.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ExternalIdentificationAssignment

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWExternalIdentificationAssignment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWExternalIdentificationAssignment
    __del__ = lambda self: None
RWStepBasic_RWExternalIdentificationAssignment_swigregister = _RWStepBasic.RWStepBasic_RWExternalIdentificationAssignment_swigregister
RWStepBasic_RWExternalIdentificationAssignment_swigregister(RWStepBasic_RWExternalIdentificationAssignment)

class RWStepBasic_RWExternalSource(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWExternalSource, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWExternalSource, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWExternalSource(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads externalsource.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ExternalSource

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWExternalSource_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_ExternalSource
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWExternalSource_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes externalsource.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ExternalSource

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWExternalSource_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWExternalSource
    __del__ = lambda self: None
RWStepBasic_RWExternalSource_swigregister = _RWStepBasic.RWStepBasic_RWExternalSource_swigregister
RWStepBasic_RWExternalSource_swigregister(RWStepBasic_RWExternalSource)

class RWStepBasic_RWExternallyDefinedItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWExternallyDefinedItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWExternallyDefinedItem, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWExternallyDefinedItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads externallydefineditem.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ExternallyDefinedItem

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWExternallyDefinedItem_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_ExternallyDefinedItem
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWExternallyDefinedItem_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes externallydefineditem.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ExternallyDefinedItem

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWExternallyDefinedItem_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWExternallyDefinedItem
    __del__ = lambda self: None
RWStepBasic_RWExternallyDefinedItem_swigregister = _RWStepBasic.RWStepBasic_RWExternallyDefinedItem_swigregister
RWStepBasic_RWExternallyDefinedItem_swigregister(RWStepBasic_RWExternallyDefinedItem)

class RWStepBasic_RWGeneralProperty(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWGeneralProperty, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWGeneralProperty, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWGeneralProperty(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads generalproperty.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_GeneralProperty

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWGeneralProperty_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_GeneralProperty
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWGeneralProperty_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes generalproperty.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_GeneralProperty

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWGeneralProperty_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWGeneralProperty
    __del__ = lambda self: None
RWStepBasic_RWGeneralProperty_swigregister = _RWStepBasic.RWStepBasic_RWGeneralProperty_swigregister
RWStepBasic_RWGeneralProperty_swigregister(RWStepBasic_RWGeneralProperty)

class RWStepBasic_RWGroup(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWGroup, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWGroup, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWGroup(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads group.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_Group

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWGroup_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_Group
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWGroup_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes group.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_Group

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWGroup_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWGroup
    __del__ = lambda self: None
RWStepBasic_RWGroup_swigregister = _RWStepBasic.RWStepBasic_RWGroup_swigregister
RWStepBasic_RWGroup_swigregister(RWStepBasic_RWGroup)

class RWStepBasic_RWGroupAssignment(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWGroupAssignment, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWGroupAssignment, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWGroupAssignment(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads groupassignment.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_GroupAssignment

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWGroupAssignment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_GroupAssignment
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWGroupAssignment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes groupassignment.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_GroupAssignment

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWGroupAssignment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWGroupAssignment
    __del__ = lambda self: None
RWStepBasic_RWGroupAssignment_swigregister = _RWStepBasic.RWStepBasic_RWGroupAssignment_swigregister
RWStepBasic_RWGroupAssignment_swigregister(RWStepBasic_RWGroupAssignment)

class RWStepBasic_RWGroupRelationship(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWGroupRelationship, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWGroupRelationship, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWGroupRelationship(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads grouprelationship.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_GroupRelationship

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWGroupRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_GroupRelationship
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWGroupRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes grouprelationship.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_GroupRelationship

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWGroupRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWGroupRelationship
    __del__ = lambda self: None
RWStepBasic_RWGroupRelationship_swigregister = _RWStepBasic.RWStepBasic_RWGroupRelationship_swigregister
RWStepBasic_RWGroupRelationship_swigregister(RWStepBasic_RWGroupRelationship)

class RWStepBasic_RWIdentificationAssignment(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWIdentificationAssignment, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWIdentificationAssignment, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWIdentificationAssignment(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads identificationassignment.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_IdentificationAssignment

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWIdentificationAssignment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_IdentificationAssignment
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWIdentificationAssignment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes identificationassignment.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_IdentificationAssignment

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWIdentificationAssignment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWIdentificationAssignment
    __del__ = lambda self: None
RWStepBasic_RWIdentificationAssignment_swigregister = _RWStepBasic.RWStepBasic_RWIdentificationAssignment_swigregister
RWStepBasic_RWIdentificationAssignment_swigregister(RWStepBasic_RWIdentificationAssignment)

class RWStepBasic_RWIdentificationRole(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWIdentificationRole, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWIdentificationRole, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWIdentificationRole(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads identificationrole.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_IdentificationRole

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWIdentificationRole_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_IdentificationRole
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWIdentificationRole_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes identificationrole.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_IdentificationRole

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWIdentificationRole_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWIdentificationRole
    __del__ = lambda self: None
RWStepBasic_RWIdentificationRole_swigregister = _RWStepBasic.RWStepBasic_RWIdentificationRole_swigregister
RWStepBasic_RWIdentificationRole_swigregister(RWStepBasic_RWIdentificationRole)

class RWStepBasic_RWLengthMeasureWithUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWLengthMeasureWithUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWLengthMeasureWithUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWLengthMeasureWithUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_LengthMeasureWithUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWLengthMeasureWithUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_LengthMeasureWithUnit
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWLengthMeasureWithUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_LengthMeasureWithUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWLengthMeasureWithUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWLengthMeasureWithUnit
    __del__ = lambda self: None
RWStepBasic_RWLengthMeasureWithUnit_swigregister = _RWStepBasic.RWStepBasic_RWLengthMeasureWithUnit_swigregister
RWStepBasic_RWLengthMeasureWithUnit_swigregister(RWStepBasic_RWLengthMeasureWithUnit)

class RWStepBasic_RWLengthUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWLengthUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWLengthUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWLengthUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_LengthUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWLengthUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_LengthUnit
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWLengthUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_LengthUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWLengthUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWLengthUnit
    __del__ = lambda self: None
RWStepBasic_RWLengthUnit_swigregister = _RWStepBasic.RWStepBasic_RWLengthUnit_swigregister
RWStepBasic_RWLengthUnit_swigregister(RWStepBasic_RWLengthUnit)

class RWStepBasic_RWLocalTime(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWLocalTime, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWLocalTime, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWLocalTime(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_LocalTime

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWLocalTime_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_LocalTime
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWLocalTime_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_LocalTime

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWLocalTime_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWLocalTime
    __del__ = lambda self: None
RWStepBasic_RWLocalTime_swigregister = _RWStepBasic.RWStepBasic_RWLocalTime_swigregister
RWStepBasic_RWLocalTime_swigregister(RWStepBasic_RWLocalTime)

class RWStepBasic_RWMassMeasureWithUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWMassMeasureWithUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWMassMeasureWithUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWMassMeasureWithUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_MassMeasureWithUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWMassMeasureWithUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_MassMeasureWithUnit
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWMassMeasureWithUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_MassMeasureWithUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWMassMeasureWithUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWMassMeasureWithUnit
    __del__ = lambda self: None
RWStepBasic_RWMassMeasureWithUnit_swigregister = _RWStepBasic.RWStepBasic_RWMassMeasureWithUnit_swigregister
RWStepBasic_RWMassMeasureWithUnit_swigregister(RWStepBasic_RWMassMeasureWithUnit)

class RWStepBasic_RWMassUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWMassUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWMassUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWMassUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads massunit.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_MassUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWMassUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_MassUnit
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWMassUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes massunit.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_MassUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWMassUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWMassUnit
    __del__ = lambda self: None
RWStepBasic_RWMassUnit_swigregister = _RWStepBasic.RWStepBasic_RWMassUnit_swigregister
RWStepBasic_RWMassUnit_swigregister(RWStepBasic_RWMassUnit)

class RWStepBasic_RWMeasureWithUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWMeasureWithUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWMeasureWithUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWMeasureWithUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_MeasureWithUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWMeasureWithUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_MeasureWithUnit
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWMeasureWithUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_MeasureWithUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWMeasureWithUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWMeasureWithUnit
    __del__ = lambda self: None
RWStepBasic_RWMeasureWithUnit_swigregister = _RWStepBasic.RWStepBasic_RWMeasureWithUnit_swigregister
RWStepBasic_RWMeasureWithUnit_swigregister(RWStepBasic_RWMeasureWithUnit)

class RWStepBasic_RWMechanicalContext(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWMechanicalContext, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWMechanicalContext, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWMechanicalContext(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_MechanicalContext

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWMechanicalContext_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_MechanicalContext
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWMechanicalContext_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_MechanicalContext

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWMechanicalContext_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWMechanicalContext
    __del__ = lambda self: None
RWStepBasic_RWMechanicalContext_swigregister = _RWStepBasic.RWStepBasic_RWMechanicalContext_swigregister
RWStepBasic_RWMechanicalContext_swigregister(RWStepBasic_RWMechanicalContext)

class RWStepBasic_RWNameAssignment(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWNameAssignment, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWNameAssignment, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWNameAssignment(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads nameassignment.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_NameAssignment

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWNameAssignment_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_NameAssignment
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWNameAssignment_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes nameassignment.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_NameAssignment

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWNameAssignment_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWNameAssignment
    __del__ = lambda self: None
RWStepBasic_RWNameAssignment_swigregister = _RWStepBasic.RWStepBasic_RWNameAssignment_swigregister
RWStepBasic_RWNameAssignment_swigregister(RWStepBasic_RWNameAssignment)

class RWStepBasic_RWNamedUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWNamedUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWNamedUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWNamedUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_NamedUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWNamedUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_NamedUnit
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWNamedUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_NamedUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWNamedUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWNamedUnit
    __del__ = lambda self: None
RWStepBasic_RWNamedUnit_swigregister = _RWStepBasic.RWStepBasic_RWNamedUnit_swigregister
RWStepBasic_RWNamedUnit_swigregister(RWStepBasic_RWNamedUnit)

class RWStepBasic_RWObjectRole(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWObjectRole, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWObjectRole, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWObjectRole(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads objectrole.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ObjectRole

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWObjectRole_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_ObjectRole
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWObjectRole_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes objectrole.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ObjectRole

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWObjectRole_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWObjectRole
    __del__ = lambda self: None
RWStepBasic_RWObjectRole_swigregister = _RWStepBasic.RWStepBasic_RWObjectRole_swigregister
RWStepBasic_RWObjectRole_swigregister(RWStepBasic_RWObjectRole)

class RWStepBasic_RWOrdinalDate(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWOrdinalDate, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWOrdinalDate, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWOrdinalDate(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_OrdinalDate

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWOrdinalDate_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_OrdinalDate

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWOrdinalDate_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWOrdinalDate
    __del__ = lambda self: None
RWStepBasic_RWOrdinalDate_swigregister = _RWStepBasic.RWStepBasic_RWOrdinalDate_swigregister
RWStepBasic_RWOrdinalDate_swigregister(RWStepBasic_RWOrdinalDate)

class RWStepBasic_RWOrganization(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWOrganization, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWOrganization, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWOrganization(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_Organization

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWOrganization_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_Organization

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWOrganization_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWOrganization
    __del__ = lambda self: None
RWStepBasic_RWOrganization_swigregister = _RWStepBasic.RWStepBasic_RWOrganization_swigregister
RWStepBasic_RWOrganization_swigregister(RWStepBasic_RWOrganization)

class RWStepBasic_RWOrganizationRole(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWOrganizationRole, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWOrganizationRole, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWOrganizationRole(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_OrganizationRole

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWOrganizationRole_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_OrganizationRole

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWOrganizationRole_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWOrganizationRole
    __del__ = lambda self: None
RWStepBasic_RWOrganizationRole_swigregister = _RWStepBasic.RWStepBasic_RWOrganizationRole_swigregister
RWStepBasic_RWOrganizationRole_swigregister(RWStepBasic_RWOrganizationRole)

class RWStepBasic_RWOrganizationalAddress(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWOrganizationalAddress, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWOrganizationalAddress, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWOrganizationalAddress(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_OrganizationalAddress

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWOrganizationalAddress_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_OrganizationalAddress
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWOrganizationalAddress_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_OrganizationalAddress

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWOrganizationalAddress_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWOrganizationalAddress
    __del__ = lambda self: None
RWStepBasic_RWOrganizationalAddress_swigregister = _RWStepBasic.RWStepBasic_RWOrganizationalAddress_swigregister
RWStepBasic_RWOrganizationalAddress_swigregister(RWStepBasic_RWOrganizationalAddress)

class RWStepBasic_RWPerson(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWPerson, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWPerson, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWPerson(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_Person

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWPerson_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_Person

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWPerson_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWPerson
    __del__ = lambda self: None
RWStepBasic_RWPerson_swigregister = _RWStepBasic.RWStepBasic_RWPerson_swigregister
RWStepBasic_RWPerson_swigregister(RWStepBasic_RWPerson)

class RWStepBasic_RWPersonAndOrganization(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWPersonAndOrganization, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWPersonAndOrganization, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWPersonAndOrganization(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_PersonAndOrganization

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWPersonAndOrganization_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_PersonAndOrganization
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWPersonAndOrganization_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_PersonAndOrganization

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWPersonAndOrganization_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWPersonAndOrganization
    __del__ = lambda self: None
RWStepBasic_RWPersonAndOrganization_swigregister = _RWStepBasic.RWStepBasic_RWPersonAndOrganization_swigregister
RWStepBasic_RWPersonAndOrganization_swigregister(RWStepBasic_RWPersonAndOrganization)

class RWStepBasic_RWPersonAndOrganizationRole(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWPersonAndOrganizationRole, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWPersonAndOrganizationRole, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWPersonAndOrganizationRole(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_PersonAndOrganizationRole

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWPersonAndOrganizationRole_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_PersonAndOrganizationRole

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWPersonAndOrganizationRole_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWPersonAndOrganizationRole
    __del__ = lambda self: None
RWStepBasic_RWPersonAndOrganizationRole_swigregister = _RWStepBasic.RWStepBasic_RWPersonAndOrganizationRole_swigregister
RWStepBasic_RWPersonAndOrganizationRole_swigregister(RWStepBasic_RWPersonAndOrganizationRole)

class RWStepBasic_RWPersonalAddress(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWPersonalAddress, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWPersonalAddress, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWPersonalAddress(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_PersonalAddress

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWPersonalAddress_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_PersonalAddress
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWPersonalAddress_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_PersonalAddress

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWPersonalAddress_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWPersonalAddress
    __del__ = lambda self: None
RWStepBasic_RWPersonalAddress_swigregister = _RWStepBasic.RWStepBasic_RWPersonalAddress_swigregister
RWStepBasic_RWPersonalAddress_swigregister(RWStepBasic_RWPersonalAddress)

class RWStepBasic_RWPlaneAngleMeasureWithUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWPlaneAngleMeasureWithUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWPlaneAngleMeasureWithUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWPlaneAngleMeasureWithUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_PlaneAngleMeasureWithUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWPlaneAngleMeasureWithUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_PlaneAngleMeasureWithUnit
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWPlaneAngleMeasureWithUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_PlaneAngleMeasureWithUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWPlaneAngleMeasureWithUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWPlaneAngleMeasureWithUnit
    __del__ = lambda self: None
RWStepBasic_RWPlaneAngleMeasureWithUnit_swigregister = _RWStepBasic.RWStepBasic_RWPlaneAngleMeasureWithUnit_swigregister
RWStepBasic_RWPlaneAngleMeasureWithUnit_swigregister(RWStepBasic_RWPlaneAngleMeasureWithUnit)

class RWStepBasic_RWPlaneAngleUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWPlaneAngleUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWPlaneAngleUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWPlaneAngleUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_PlaneAngleUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWPlaneAngleUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_PlaneAngleUnit
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWPlaneAngleUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_PlaneAngleUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWPlaneAngleUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWPlaneAngleUnit
    __del__ = lambda self: None
RWStepBasic_RWPlaneAngleUnit_swigregister = _RWStepBasic.RWStepBasic_RWPlaneAngleUnit_swigregister
RWStepBasic_RWPlaneAngleUnit_swigregister(RWStepBasic_RWPlaneAngleUnit)

class RWStepBasic_RWProduct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWProduct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWProduct, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWProduct(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_Product

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProduct_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_Product
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProduct_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_Product

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProduct_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProduct
    __del__ = lambda self: None
RWStepBasic_RWProduct_swigregister = _RWStepBasic.RWStepBasic_RWProduct_swigregister
RWStepBasic_RWProduct_swigregister(RWStepBasic_RWProduct)

class RWStepBasic_RWProductCategory(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWProductCategory, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWProductCategory, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWProductCategory(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ProductCategory

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductCategory_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ProductCategory

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductCategory_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductCategory
    __del__ = lambda self: None
RWStepBasic_RWProductCategory_swigregister = _RWStepBasic.RWStepBasic_RWProductCategory_swigregister
RWStepBasic_RWProductCategory_swigregister(RWStepBasic_RWProductCategory)

class RWStepBasic_RWProductCategoryRelationship(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWProductCategoryRelationship, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWProductCategoryRelationship, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWProductCategoryRelationship(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads productcategoryrelationship.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ProductCategoryRelationship

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductCategoryRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_ProductCategoryRelationship
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductCategoryRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes productcategoryrelationship.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ProductCategoryRelationship

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductCategoryRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductCategoryRelationship
    __del__ = lambda self: None
RWStepBasic_RWProductCategoryRelationship_swigregister = _RWStepBasic.RWStepBasic_RWProductCategoryRelationship_swigregister
RWStepBasic_RWProductCategoryRelationship_swigregister(RWStepBasic_RWProductCategoryRelationship)

class RWStepBasic_RWProductConceptContext(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWProductConceptContext, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWProductConceptContext, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWProductConceptContext(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads productconceptcontext.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ProductConceptContext

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductConceptContext_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_ProductConceptContext
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductConceptContext_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes productconceptcontext.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ProductConceptContext

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductConceptContext_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductConceptContext
    __del__ = lambda self: None
RWStepBasic_RWProductConceptContext_swigregister = _RWStepBasic.RWStepBasic_RWProductConceptContext_swigregister
RWStepBasic_RWProductConceptContext_swigregister(RWStepBasic_RWProductConceptContext)

class RWStepBasic_RWProductContext(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWProductContext, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWProductContext, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWProductContext(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ProductContext

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductContext_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ProductContext
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductContext_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ProductContext

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductContext_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductContext
    __del__ = lambda self: None
RWStepBasic_RWProductContext_swigregister = _RWStepBasic.RWStepBasic_RWProductContext_swigregister
RWStepBasic_RWProductContext_swigregister(RWStepBasic_RWProductContext)

class RWStepBasic_RWProductDefinition(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWProductDefinition, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWProductDefinition, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWProductDefinition(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ProductDefinition

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinition_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ProductDefinition
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinition_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ProductDefinition

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinition_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductDefinition
    __del__ = lambda self: None
RWStepBasic_RWProductDefinition_swigregister = _RWStepBasic.RWStepBasic_RWProductDefinition_swigregister
RWStepBasic_RWProductDefinition_swigregister(RWStepBasic_RWProductDefinition)

class RWStepBasic_RWProductDefinitionContext(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWProductDefinitionContext, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWProductDefinitionContext, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWProductDefinitionContext(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ProductDefinitionContext

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionContext_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ProductDefinitionContext
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionContext_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ProductDefinitionContext

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionContext_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductDefinitionContext
    __del__ = lambda self: None
RWStepBasic_RWProductDefinitionContext_swigregister = _RWStepBasic.RWStepBasic_RWProductDefinitionContext_swigregister
RWStepBasic_RWProductDefinitionContext_swigregister(RWStepBasic_RWProductDefinitionContext)

class RWStepBasic_RWProductDefinitionEffectivity(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWProductDefinitionEffectivity, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWProductDefinitionEffectivity, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWProductDefinitionEffectivity(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ProductDefinitionEffectivity

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionEffectivity_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ProductDefinitionEffectivity
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionEffectivity_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ProductDefinitionEffectivity

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionEffectivity_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductDefinitionEffectivity
    __del__ = lambda self: None
RWStepBasic_RWProductDefinitionEffectivity_swigregister = _RWStepBasic.RWStepBasic_RWProductDefinitionEffectivity_swigregister
RWStepBasic_RWProductDefinitionEffectivity_swigregister(RWStepBasic_RWProductDefinitionEffectivity)

class RWStepBasic_RWProductDefinitionFormation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWProductDefinitionFormation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWProductDefinitionFormation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWProductDefinitionFormation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ProductDefinitionFormation

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionFormation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ProductDefinitionFormation
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionFormation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ProductDefinitionFormation

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionFormation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductDefinitionFormation
    __del__ = lambda self: None
RWStepBasic_RWProductDefinitionFormation_swigregister = _RWStepBasic.RWStepBasic_RWProductDefinitionFormation_swigregister
RWStepBasic_RWProductDefinitionFormation_swigregister(RWStepBasic_RWProductDefinitionFormation)

class RWStepBasic_RWProductDefinitionFormationRelationship(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWProductDefinitionFormationRelationship, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWProductDefinitionFormationRelationship, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWProductDefinitionFormationRelationship(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads productdefinitionformationrelationship.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ProductDefinitionFormationRelationship

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionFormationRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_ProductDefinitionFormationRelationship
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionFormationRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes productdefinitionformationrelationship.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ProductDefinitionFormationRelationship

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionFormationRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductDefinitionFormationRelationship
    __del__ = lambda self: None
RWStepBasic_RWProductDefinitionFormationRelationship_swigregister = _RWStepBasic.RWStepBasic_RWProductDefinitionFormationRelationship_swigregister
RWStepBasic_RWProductDefinitionFormationRelationship_swigregister(RWStepBasic_RWProductDefinitionFormationRelationship)

class RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ProductDefinitionFormationWithSpecifiedSource

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ProductDefinitionFormationWithSpecifiedSource
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ProductDefinitionFormationWithSpecifiedSource

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource
    __del__ = lambda self: None
RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource_swigregister = _RWStepBasic.RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource_swigregister
RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource_swigregister(RWStepBasic_RWProductDefinitionFormationWithSpecifiedSource)

class RWStepBasic_RWProductDefinitionReference(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWProductDefinitionReference, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWProductDefinitionReference, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWProductDefinitionReference(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ProductDefinitionReference

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionReference_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ProductDefinitionReference
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionReference_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ProductDefinitionReference

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionReference_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductDefinitionReference
    __del__ = lambda self: None
RWStepBasic_RWProductDefinitionReference_swigregister = _RWStepBasic.RWStepBasic_RWProductDefinitionReference_swigregister
RWStepBasic_RWProductDefinitionReference_swigregister(RWStepBasic_RWProductDefinitionReference)

class RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ProductDefinitionReferenceWithLocalRepresentation

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ProductDefinitionReferenceWithLocalRepresentation
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ProductDefinitionReferenceWithLocalRepresentation

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation
    __del__ = lambda self: None
RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation_swigregister = _RWStepBasic.RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation_swigregister
RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation_swigregister(RWStepBasic_RWProductDefinitionReferenceWithLocalRepresentation)

class RWStepBasic_RWProductDefinitionRelationship(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWProductDefinitionRelationship, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWProductDefinitionRelationship, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWProductDefinitionRelationship(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads productdefinitionrelationship.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ProductDefinitionRelationship

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionRelationship_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_ProductDefinitionRelationship
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionRelationship_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes productdefinitionrelationship.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ProductDefinitionRelationship

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionRelationship_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductDefinitionRelationship
    __del__ = lambda self: None
RWStepBasic_RWProductDefinitionRelationship_swigregister = _RWStepBasic.RWStepBasic_RWProductDefinitionRelationship_swigregister
RWStepBasic_RWProductDefinitionRelationship_swigregister(RWStepBasic_RWProductDefinitionRelationship)

class RWStepBasic_RWProductDefinitionWithAssociatedDocuments(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWProductDefinitionWithAssociatedDocuments, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWProductDefinitionWithAssociatedDocuments, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWProductDefinitionWithAssociatedDocuments(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ProductDefinitionWithAssociatedDocuments

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionWithAssociatedDocuments_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ProductDefinitionWithAssociatedDocuments
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionWithAssociatedDocuments_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ProductDefinitionWithAssociatedDocuments

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductDefinitionWithAssociatedDocuments_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductDefinitionWithAssociatedDocuments
    __del__ = lambda self: None
RWStepBasic_RWProductDefinitionWithAssociatedDocuments_swigregister = _RWStepBasic.RWStepBasic_RWProductDefinitionWithAssociatedDocuments_swigregister
RWStepBasic_RWProductDefinitionWithAssociatedDocuments_swigregister(RWStepBasic_RWProductDefinitionWithAssociatedDocuments)

class RWStepBasic_RWProductRelatedProductCategory(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWProductRelatedProductCategory, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWProductRelatedProductCategory, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWProductRelatedProductCategory(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ProductRelatedProductCategory

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductRelatedProductCategory_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ProductRelatedProductCategory
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductRelatedProductCategory_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ProductRelatedProductCategory

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductRelatedProductCategory_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductRelatedProductCategory
    __del__ = lambda self: None
RWStepBasic_RWProductRelatedProductCategory_swigregister = _RWStepBasic.RWStepBasic_RWProductRelatedProductCategory_swigregister
RWStepBasic_RWProductRelatedProductCategory_swigregister(RWStepBasic_RWProductRelatedProductCategory)

class RWStepBasic_RWProductType(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWProductType, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWProductType, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWProductType(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ProductType

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductType_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_ProductType
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductType_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ProductType

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWProductType_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWProductType
    __del__ = lambda self: None
RWStepBasic_RWProductType_swigregister = _RWStepBasic.RWStepBasic_RWProductType_swigregister
RWStepBasic_RWProductType_swigregister(RWStepBasic_RWProductType)

class RWStepBasic_RWRatioMeasureWithUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWRatioMeasureWithUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWRatioMeasureWithUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWRatioMeasureWithUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_RatioMeasureWithUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWRatioMeasureWithUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_RatioMeasureWithUnit
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWRatioMeasureWithUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_RatioMeasureWithUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWRatioMeasureWithUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWRatioMeasureWithUnit
    __del__ = lambda self: None
RWStepBasic_RWRatioMeasureWithUnit_swigregister = _RWStepBasic.RWStepBasic_RWRatioMeasureWithUnit_swigregister
RWStepBasic_RWRatioMeasureWithUnit_swigregister(RWStepBasic_RWRatioMeasureWithUnit)

class RWStepBasic_RWRoleAssociation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWRoleAssociation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWRoleAssociation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWRoleAssociation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads roleassociation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_RoleAssociation

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWRoleAssociation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_RoleAssociation
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWRoleAssociation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes roleassociation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_RoleAssociation

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWRoleAssociation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWRoleAssociation
    __del__ = lambda self: None
RWStepBasic_RWRoleAssociation_swigregister = _RWStepBasic.RWStepBasic_RWRoleAssociation_swigregister
RWStepBasic_RWRoleAssociation_swigregister(RWStepBasic_RWRoleAssociation)

class RWStepBasic_RWSecurityClassification(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWSecurityClassification, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWSecurityClassification, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWSecurityClassification(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_SecurityClassification

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSecurityClassification_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_SecurityClassification
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSecurityClassification_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_SecurityClassification

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSecurityClassification_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSecurityClassification
    __del__ = lambda self: None
RWStepBasic_RWSecurityClassification_swigregister = _RWStepBasic.RWStepBasic_RWSecurityClassification_swigregister
RWStepBasic_RWSecurityClassification_swigregister(RWStepBasic_RWSecurityClassification)

class RWStepBasic_RWSecurityClassificationLevel(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWSecurityClassificationLevel, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWSecurityClassificationLevel, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWSecurityClassificationLevel(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_SecurityClassificationLevel

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSecurityClassificationLevel_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_SecurityClassificationLevel

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSecurityClassificationLevel_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSecurityClassificationLevel
    __del__ = lambda self: None
RWStepBasic_RWSecurityClassificationLevel_swigregister = _RWStepBasic.RWStepBasic_RWSecurityClassificationLevel_swigregister
RWStepBasic_RWSecurityClassificationLevel_swigregister(RWStepBasic_RWSecurityClassificationLevel)

class RWStepBasic_RWSiUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWSiUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWSiUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWSiUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def DecodeName(self, *args) -> "Standard_Boolean":
        """
        No available documentation.

        Parameters
        ----------
        aName: StepBasic_SiUnitName
        text: char *

        Returns
        -------
        bool

        """
        return _RWStepBasic.RWStepBasic_RWSiUnit_DecodeName(self, *args)


    def DecodePrefix(self, *args) -> "Standard_Boolean":
        """
        No available documentation.

        Parameters
        ----------
        aPrefix: StepBasic_SiPrefix
        text: char *

        Returns
        -------
        bool

        """
        return _RWStepBasic.RWStepBasic_RWSiUnit_DecodePrefix(self, *args)


    def EncodeName(self, *args) -> "TCollection_AsciiString":
        """
        No available documentation.

        Parameters
        ----------
        aName: StepBasic_SiUnitName

        Returns
        -------
        TCollection_AsciiString

        """
        return _RWStepBasic.RWStepBasic_RWSiUnit_EncodeName(self, *args)


    def EncodePrefix(self, *args) -> "TCollection_AsciiString":
        """
        No available documentation.

        Parameters
        ----------
        aPrefix: StepBasic_SiPrefix

        Returns
        -------
        TCollection_AsciiString

        """
        return _RWStepBasic.RWStepBasic_RWSiUnit_EncodePrefix(self, *args)


    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_SiUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSiUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_SiUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSiUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSiUnit
    __del__ = lambda self: None
RWStepBasic_RWSiUnit_swigregister = _RWStepBasic.RWStepBasic_RWSiUnit_swigregister
RWStepBasic_RWSiUnit_swigregister(RWStepBasic_RWSiUnit)

class RWStepBasic_RWSiUnitAndAreaUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWSiUnitAndAreaUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWSiUnitAndAreaUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWSiUnitAndAreaUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_SiUnitAndAreaUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndAreaUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_SiUnitAndAreaUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndAreaUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSiUnitAndAreaUnit
    __del__ = lambda self: None
RWStepBasic_RWSiUnitAndAreaUnit_swigregister = _RWStepBasic.RWStepBasic_RWSiUnitAndAreaUnit_swigregister
RWStepBasic_RWSiUnitAndAreaUnit_swigregister(RWStepBasic_RWSiUnitAndAreaUnit)

class RWStepBasic_RWSiUnitAndLengthUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWSiUnitAndLengthUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWSiUnitAndLengthUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWSiUnitAndLengthUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_SiUnitAndLengthUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndLengthUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_SiUnitAndLengthUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndLengthUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSiUnitAndLengthUnit
    __del__ = lambda self: None
RWStepBasic_RWSiUnitAndLengthUnit_swigregister = _RWStepBasic.RWStepBasic_RWSiUnitAndLengthUnit_swigregister
RWStepBasic_RWSiUnitAndLengthUnit_swigregister(RWStepBasic_RWSiUnitAndLengthUnit)

class RWStepBasic_RWSiUnitAndMassUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWSiUnitAndMassUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWSiUnitAndMassUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWSiUnitAndMassUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_SiUnitAndMassUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndMassUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_SiUnitAndMassUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndMassUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSiUnitAndMassUnit
    __del__ = lambda self: None
RWStepBasic_RWSiUnitAndMassUnit_swigregister = _RWStepBasic.RWStepBasic_RWSiUnitAndMassUnit_swigregister
RWStepBasic_RWSiUnitAndMassUnit_swigregister(RWStepBasic_RWSiUnitAndMassUnit)

class RWStepBasic_RWSiUnitAndPlaneAngleUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWSiUnitAndPlaneAngleUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWSiUnitAndPlaneAngleUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWSiUnitAndPlaneAngleUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_SiUnitAndPlaneAngleUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndPlaneAngleUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_SiUnitAndPlaneAngleUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndPlaneAngleUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSiUnitAndPlaneAngleUnit
    __del__ = lambda self: None
RWStepBasic_RWSiUnitAndPlaneAngleUnit_swigregister = _RWStepBasic.RWStepBasic_RWSiUnitAndPlaneAngleUnit_swigregister
RWStepBasic_RWSiUnitAndPlaneAngleUnit_swigregister(RWStepBasic_RWSiUnitAndPlaneAngleUnit)

class RWStepBasic_RWSiUnitAndRatioUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWSiUnitAndRatioUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWSiUnitAndRatioUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWSiUnitAndRatioUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_SiUnitAndRatioUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndRatioUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_SiUnitAndRatioUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndRatioUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSiUnitAndRatioUnit
    __del__ = lambda self: None
RWStepBasic_RWSiUnitAndRatioUnit_swigregister = _RWStepBasic.RWStepBasic_RWSiUnitAndRatioUnit_swigregister
RWStepBasic_RWSiUnitAndRatioUnit_swigregister(RWStepBasic_RWSiUnitAndRatioUnit)

class RWStepBasic_RWSiUnitAndSolidAngleUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWSiUnitAndSolidAngleUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWSiUnitAndSolidAngleUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWSiUnitAndSolidAngleUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_SiUnitAndSolidAngleUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndSolidAngleUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_SiUnitAndSolidAngleUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndSolidAngleUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSiUnitAndSolidAngleUnit
    __del__ = lambda self: None
RWStepBasic_RWSiUnitAndSolidAngleUnit_swigregister = _RWStepBasic.RWStepBasic_RWSiUnitAndSolidAngleUnit_swigregister
RWStepBasic_RWSiUnitAndSolidAngleUnit_swigregister(RWStepBasic_RWSiUnitAndSolidAngleUnit)

class RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_SiUnitAndThermodynamicTemperatureUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_SiUnitAndThermodynamicTemperatureUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit
    __del__ = lambda self: None
RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit_swigregister = _RWStepBasic.RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit_swigregister
RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit_swigregister(RWStepBasic_RWSiUnitAndThermodynamicTemperatureUnit)

class RWStepBasic_RWSiUnitAndTimeUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWSiUnitAndTimeUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWSiUnitAndTimeUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWSiUnitAndTimeUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_SiUnitAndTimeUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndTimeUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_SiUnitAndTimeUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndTimeUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSiUnitAndTimeUnit
    __del__ = lambda self: None
RWStepBasic_RWSiUnitAndTimeUnit_swigregister = _RWStepBasic.RWStepBasic_RWSiUnitAndTimeUnit_swigregister
RWStepBasic_RWSiUnitAndTimeUnit_swigregister(RWStepBasic_RWSiUnitAndTimeUnit)

class RWStepBasic_RWSiUnitAndVolumeUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWSiUnitAndVolumeUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWSiUnitAndVolumeUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWSiUnitAndVolumeUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_SiUnitAndVolumeUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndVolumeUnit_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_SiUnitAndVolumeUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSiUnitAndVolumeUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSiUnitAndVolumeUnit
    __del__ = lambda self: None
RWStepBasic_RWSiUnitAndVolumeUnit_swigregister = _RWStepBasic.RWStepBasic_RWSiUnitAndVolumeUnit_swigregister
RWStepBasic_RWSiUnitAndVolumeUnit_swigregister(RWStepBasic_RWSiUnitAndVolumeUnit)

class RWStepBasic_RWSolidAngleMeasureWithUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWSolidAngleMeasureWithUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWSolidAngleMeasureWithUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWSolidAngleMeasureWithUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_SolidAngleMeasureWithUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSolidAngleMeasureWithUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_SolidAngleMeasureWithUnit
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSolidAngleMeasureWithUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_SolidAngleMeasureWithUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSolidAngleMeasureWithUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSolidAngleMeasureWithUnit
    __del__ = lambda self: None
RWStepBasic_RWSolidAngleMeasureWithUnit_swigregister = _RWStepBasic.RWStepBasic_RWSolidAngleMeasureWithUnit_swigregister
RWStepBasic_RWSolidAngleMeasureWithUnit_swigregister(RWStepBasic_RWSolidAngleMeasureWithUnit)

class RWStepBasic_RWSolidAngleUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWSolidAngleUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWSolidAngleUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWSolidAngleUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_SolidAngleUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSolidAngleUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_SolidAngleUnit
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSolidAngleUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_SolidAngleUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWSolidAngleUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWSolidAngleUnit
    __del__ = lambda self: None
RWStepBasic_RWSolidAngleUnit_swigregister = _RWStepBasic.RWStepBasic_RWSolidAngleUnit_swigregister
RWStepBasic_RWSolidAngleUnit_swigregister(RWStepBasic_RWSolidAngleUnit)

class RWStepBasic_RWThermodynamicTemperatureUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWThermodynamicTemperatureUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWThermodynamicTemperatureUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWThermodynamicTemperatureUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads thermodynamictemperatureunit.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_ThermodynamicTemperatureUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWThermodynamicTemperatureUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_ThermodynamicTemperatureUnit
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWThermodynamicTemperatureUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes thermodynamictemperatureunit.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_ThermodynamicTemperatureUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWThermodynamicTemperatureUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWThermodynamicTemperatureUnit
    __del__ = lambda self: None
RWStepBasic_RWThermodynamicTemperatureUnit_swigregister = _RWStepBasic.RWStepBasic_RWThermodynamicTemperatureUnit_swigregister
RWStepBasic_RWThermodynamicTemperatureUnit_swigregister(RWStepBasic_RWThermodynamicTemperatureUnit)

class RWStepBasic_RWUncertaintyMeasureWithUnit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWUncertaintyMeasureWithUnit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWUncertaintyMeasureWithUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWUncertaintyMeasureWithUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_UncertaintyMeasureWithUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWUncertaintyMeasureWithUnit_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        ent: StepBasic_UncertaintyMeasureWithUnit
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWUncertaintyMeasureWithUnit_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_UncertaintyMeasureWithUnit

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWUncertaintyMeasureWithUnit_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWUncertaintyMeasureWithUnit
    __del__ = lambda self: None
RWStepBasic_RWUncertaintyMeasureWithUnit_swigregister = _RWStepBasic.RWStepBasic_RWUncertaintyMeasureWithUnit_swigregister
RWStepBasic_RWUncertaintyMeasureWithUnit_swigregister(RWStepBasic_RWUncertaintyMeasureWithUnit)

class RWStepBasic_RWVersionedActionRequest(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWVersionedActionRequest, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWVersionedActionRequest, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWVersionedActionRequest(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads versionedactionrequest.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_VersionedActionRequest

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWVersionedActionRequest_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepBasic_VersionedActionRequest
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWVersionedActionRequest_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes versionedactionrequest.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_VersionedActionRequest

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWVersionedActionRequest_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWVersionedActionRequest
    __del__ = lambda self: None
RWStepBasic_RWVersionedActionRequest_swigregister = _RWStepBasic.RWStepBasic_RWVersionedActionRequest_swigregister
RWStepBasic_RWVersionedActionRequest_swigregister(RWStepBasic_RWVersionedActionRequest)

class RWStepBasic_RWWeekOfYearAndDayDate(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepBasic_RWWeekOfYearAndDayDate, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepBasic_RWWeekOfYearAndDayDate, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _RWStepBasic.new_RWStepBasic_RWWeekOfYearAndDayDate(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepBasic_WeekOfYearAndDayDate

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWWeekOfYearAndDayDate_ReadStep(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepBasic_WeekOfYearAndDayDate

        Returns
        -------
        None

        """
        return _RWStepBasic.RWStepBasic_RWWeekOfYearAndDayDate_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepBasic.delete_RWStepBasic_RWWeekOfYearAndDayDate
    __del__ = lambda self: None
RWStepBasic_RWWeekOfYearAndDayDate_swigregister = _RWStepBasic.RWStepBasic_RWWeekOfYearAndDayDate_swigregister
RWStepBasic_RWWeekOfYearAndDayDate_swigregister(RWStepBasic_RWWeekOfYearAndDayDate)



# This file is compatible with both classic and new-style classes.


