# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
TopoDSToStep module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_topodstostep.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_TopoDSToStep')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_TopoDSToStep')
    _TopoDSToStep = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_TopoDSToStep', [dirname(__file__)])
        except ImportError:
            import _TopoDSToStep
            return _TopoDSToStep
        try:
            _mod = imp.load_module('_TopoDSToStep', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _TopoDSToStep = swig_import_helper()
    del swig_import_helper
else:
    import _TopoDSToStep
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

class SwigPyIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwigPyIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwigPyIterator, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _TopoDSToStep.delete_SwigPyIterator
    __del__ = lambda self: None

    def value(self) -> "PyObject *":
        return _TopoDSToStep.SwigPyIterator_value(self)

    def incr(self, n: 'size_t'=1) -> "swig::SwigPyIterator *":
        return _TopoDSToStep.SwigPyIterator_incr(self, n)

    def decr(self, n: 'size_t'=1) -> "swig::SwigPyIterator *":
        return _TopoDSToStep.SwigPyIterator_decr(self, n)

    def distance(self, x: 'SwigPyIterator') -> "ptrdiff_t":
        return _TopoDSToStep.SwigPyIterator_distance(self, x)

    def equal(self, x: 'SwigPyIterator') -> "bool":
        return _TopoDSToStep.SwigPyIterator_equal(self, x)

    def copy(self) -> "swig::SwigPyIterator *":
        return _TopoDSToStep.SwigPyIterator_copy(self)

    def next(self) -> "PyObject *":
        return _TopoDSToStep.SwigPyIterator_next(self)

    def __next__(self) -> "PyObject *":
        return _TopoDSToStep.SwigPyIterator___next__(self)

    def previous(self) -> "PyObject *":
        return _TopoDSToStep.SwigPyIterator_previous(self)

    def advance(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator *":
        return _TopoDSToStep.SwigPyIterator_advance(self, n)

    def __eq__(self, x: 'SwigPyIterator') -> "bool":
        return _TopoDSToStep.SwigPyIterator___eq__(self, x)

    def __ne__(self, x: 'SwigPyIterator') -> "bool":
        return _TopoDSToStep.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator &":
        return _TopoDSToStep.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator &":
        return _TopoDSToStep.SwigPyIterator___isub__(self, n)

    def __add__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator *":
        return _TopoDSToStep.SwigPyIterator___add__(self, n)

    def __sub__(self, *args) -> "ptrdiff_t":
        return _TopoDSToStep.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self
SwigPyIterator_swigregister = _TopoDSToStep.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _TopoDSToStep.process_exception(error, method_name, class_name)
process_exception = _TopoDSToStep.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.Transfer
import OCC.Core.Message
import OCC.Core.TCollection
import OCC.Core.OSD
import OCC.Core.TColStd
import OCC.Core.Interface
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.StepShape
import OCC.Core.StepGeom
import OCC.Core.StepData
import OCC.Core.Resource
import OCC.Core.StepRepr
import OCC.Core.StepBasic

from enum import IntEnum
from OCC.Core.Exception import *

TopoDSToStep_EdgeDone = _TopoDSToStep.TopoDSToStep_EdgeDone
TopoDSToStep_NonManifoldEdge = _TopoDSToStep.TopoDSToStep_NonManifoldEdge
TopoDSToStep_EdgeOther = _TopoDSToStep.TopoDSToStep_EdgeOther
TopoDSToStep_BuilderDone = _TopoDSToStep.TopoDSToStep_BuilderDone
TopoDSToStep_NoFaceMapped = _TopoDSToStep.TopoDSToStep_NoFaceMapped
TopoDSToStep_BuilderOther = _TopoDSToStep.TopoDSToStep_BuilderOther
TopoDSToStep_VertexDone = _TopoDSToStep.TopoDSToStep_VertexDone
TopoDSToStep_VertexOther = _TopoDSToStep.TopoDSToStep_VertexOther
TopoDSToStep_WireDone = _TopoDSToStep.TopoDSToStep_WireDone
TopoDSToStep_NonManifoldWire = _TopoDSToStep.TopoDSToStep_NonManifoldWire
TopoDSToStep_WireOther = _TopoDSToStep.TopoDSToStep_WireOther
TopoDSToStep_FaceDone = _TopoDSToStep.TopoDSToStep_FaceDone
TopoDSToStep_InfiniteFace = _TopoDSToStep.TopoDSToStep_InfiniteFace
TopoDSToStep_NonManifoldFace = _TopoDSToStep.TopoDSToStep_NonManifoldFace
TopoDSToStep_NoWireMapped = _TopoDSToStep.TopoDSToStep_NoWireMapped
TopoDSToStep_FaceOther = _TopoDSToStep.TopoDSToStep_FaceOther
TopoDSToStep_FacetedDone = _TopoDSToStep.TopoDSToStep_FacetedDone
TopoDSToStep_SurfaceNotPlane = _TopoDSToStep.TopoDSToStep_SurfaceNotPlane
TopoDSToStep_PCurveNotLinear = _TopoDSToStep.TopoDSToStep_PCurveNotLinear


class TopoDSToStep_MakeEdgeError(IntEnum):
	TopoDSToStep_EdgeDone = 0
	TopoDSToStep_NonManifoldEdge = 1
	TopoDSToStep_EdgeOther = 2
TopoDSToStep_EdgeDone = TopoDSToStep_MakeEdgeError.TopoDSToStep_EdgeDone
TopoDSToStep_NonManifoldEdge = TopoDSToStep_MakeEdgeError.TopoDSToStep_NonManifoldEdge
TopoDSToStep_EdgeOther = TopoDSToStep_MakeEdgeError.TopoDSToStep_EdgeOther

class TopoDSToStep_BuilderError(IntEnum):
	TopoDSToStep_BuilderDone = 0
	TopoDSToStep_NoFaceMapped = 1
	TopoDSToStep_BuilderOther = 2
TopoDSToStep_BuilderDone = TopoDSToStep_BuilderError.TopoDSToStep_BuilderDone
TopoDSToStep_NoFaceMapped = TopoDSToStep_BuilderError.TopoDSToStep_NoFaceMapped
TopoDSToStep_BuilderOther = TopoDSToStep_BuilderError.TopoDSToStep_BuilderOther

class TopoDSToStep_MakeVertexError(IntEnum):
	TopoDSToStep_VertexDone = 0
	TopoDSToStep_VertexOther = 1
TopoDSToStep_VertexDone = TopoDSToStep_MakeVertexError.TopoDSToStep_VertexDone
TopoDSToStep_VertexOther = TopoDSToStep_MakeVertexError.TopoDSToStep_VertexOther

class TopoDSToStep_MakeWireError(IntEnum):
	TopoDSToStep_WireDone = 0
	TopoDSToStep_NonManifoldWire = 1
	TopoDSToStep_WireOther = 2
TopoDSToStep_WireDone = TopoDSToStep_MakeWireError.TopoDSToStep_WireDone
TopoDSToStep_NonManifoldWire = TopoDSToStep_MakeWireError.TopoDSToStep_NonManifoldWire
TopoDSToStep_WireOther = TopoDSToStep_MakeWireError.TopoDSToStep_WireOther

class TopoDSToStep_MakeFaceError(IntEnum):
	TopoDSToStep_FaceDone = 0
	TopoDSToStep_InfiniteFace = 1
	TopoDSToStep_NonManifoldFace = 2
	TopoDSToStep_NoWireMapped = 3
	TopoDSToStep_FaceOther = 4
TopoDSToStep_FaceDone = TopoDSToStep_MakeFaceError.TopoDSToStep_FaceDone
TopoDSToStep_InfiniteFace = TopoDSToStep_MakeFaceError.TopoDSToStep_InfiniteFace
TopoDSToStep_NonManifoldFace = TopoDSToStep_MakeFaceError.TopoDSToStep_NonManifoldFace
TopoDSToStep_NoWireMapped = TopoDSToStep_MakeFaceError.TopoDSToStep_NoWireMapped
TopoDSToStep_FaceOther = TopoDSToStep_MakeFaceError.TopoDSToStep_FaceOther

class TopoDSToStep_FacetedError(IntEnum):
	TopoDSToStep_FacetedDone = 0
	TopoDSToStep_SurfaceNotPlane = 1
	TopoDSToStep_PCurveNotLinear = 2
TopoDSToStep_FacetedDone = TopoDSToStep_FacetedError.TopoDSToStep_FacetedDone
TopoDSToStep_SurfaceNotPlane = TopoDSToStep_FacetedError.TopoDSToStep_SurfaceNotPlane
TopoDSToStep_PCurveNotLinear = TopoDSToStep_FacetedError.TopoDSToStep_PCurveNotLinear

class topodstostep(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, topodstostep, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, topodstostep, name)
    __repr__ = _swig_repr

    def AddResult(*args) -> "void":
        """
        Adds an entity into the list of results (binders) for shape stored in finderprocess.

        Parameters
        ----------
        FP: Transfer_FinderProcess
        Shape: TopoDS_Shape
        entity: Standard_Transient

        Returns
        -------
        None

        Adds all entities recorded in tool into the map of results (binders) stored in finderprocess.

        Parameters
        ----------
        FP: Transfer_FinderProcess
        Tool: TopoDSToStep_Tool

        Returns
        -------
        None

        """
        return _TopoDSToStep.topodstostep_AddResult(*args)

    AddResult = staticmethod(AddResult)

    def DecodeBuilderError(*args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        No available documentation.

        Parameters
        ----------
        E: TopoDSToStep_BuilderError

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _TopoDSToStep.topodstostep_DecodeBuilderError(*args)

    DecodeBuilderError = staticmethod(DecodeBuilderError)

    def DecodeEdgeError(*args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        No available documentation.

        Parameters
        ----------
        E: TopoDSToStep_MakeEdgeError

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _TopoDSToStep.topodstostep_DecodeEdgeError(*args)

    DecodeEdgeError = staticmethod(DecodeEdgeError)

    def DecodeFaceError(*args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        No available documentation.

        Parameters
        ----------
        E: TopoDSToStep_MakeFaceError

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _TopoDSToStep.topodstostep_DecodeFaceError(*args)

    DecodeFaceError = staticmethod(DecodeFaceError)

    def DecodeVertexError(*args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        Returns a new shape without undirect surfaces.

        Parameters
        ----------
        E: TopoDSToStep_MakeVertexError

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _TopoDSToStep.topodstostep_DecodeVertexError(*args)

    DecodeVertexError = staticmethod(DecodeVertexError)

    def DecodeWireError(*args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        No available documentation.

        Parameters
        ----------
        E: TopoDSToStep_MakeWireError

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _TopoDSToStep.topodstostep_DecodeWireError(*args)

    DecodeWireError = staticmethod(DecodeWireError)

    __repr__ = _dumps_object


    def __init__(self):
        this = _TopoDSToStep.new_topodstostep()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _TopoDSToStep.delete_topodstostep
    __del__ = lambda self: None
topodstostep_swigregister = _TopoDSToStep.topodstostep_swigregister
topodstostep_swigregister(topodstostep)

def topodstostep_AddResult(*args) -> "void":
    """
    Adds an entity into the list of results (binders) for shape stored in finderprocess.

    Parameters
    ----------
    FP: Transfer_FinderProcess
    Shape: TopoDS_Shape
    entity: Standard_Transient

    Returns
    -------
    None

    Adds all entities recorded in tool into the map of results (binders) stored in finderprocess.

    Parameters
    ----------
    FP: Transfer_FinderProcess
    Tool: TopoDSToStep_Tool

    Returns
    -------
    None

    """
    return _TopoDSToStep.topodstostep_AddResult(*args)

def topodstostep_DecodeBuilderError(*args) -> "opencascade::handle< TCollection_HAsciiString >":
    """
    No available documentation.

    Parameters
    ----------
    E: TopoDSToStep_BuilderError

    Returns
    -------
    opencascade::handle<TCollection_HAsciiString>

    """
    return _TopoDSToStep.topodstostep_DecodeBuilderError(*args)

def topodstostep_DecodeEdgeError(*args) -> "opencascade::handle< TCollection_HAsciiString >":
    """
    No available documentation.

    Parameters
    ----------
    E: TopoDSToStep_MakeEdgeError

    Returns
    -------
    opencascade::handle<TCollection_HAsciiString>

    """
    return _TopoDSToStep.topodstostep_DecodeEdgeError(*args)

def topodstostep_DecodeFaceError(*args) -> "opencascade::handle< TCollection_HAsciiString >":
    """
    No available documentation.

    Parameters
    ----------
    E: TopoDSToStep_MakeFaceError

    Returns
    -------
    opencascade::handle<TCollection_HAsciiString>

    """
    return _TopoDSToStep.topodstostep_DecodeFaceError(*args)

def topodstostep_DecodeVertexError(*args) -> "opencascade::handle< TCollection_HAsciiString >":
    """
    Returns a new shape without undirect surfaces.

    Parameters
    ----------
    E: TopoDSToStep_MakeVertexError

    Returns
    -------
    opencascade::handle<TCollection_HAsciiString>

    """
    return _TopoDSToStep.topodstostep_DecodeVertexError(*args)

def topodstostep_DecodeWireError(*args) -> "opencascade::handle< TCollection_HAsciiString >":
    """
    No available documentation.

    Parameters
    ----------
    E: TopoDSToStep_MakeWireError

    Returns
    -------
    opencascade::handle<TCollection_HAsciiString>

    """
    return _TopoDSToStep.topodstostep_DecodeWireError(*args)

class TopoDSToStep_FacetedTool(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, TopoDSToStep_FacetedTool, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, TopoDSToStep_FacetedTool, name)
    __repr__ = _swig_repr

    def CheckTopoDSShape(*args) -> "TopoDSToStep_FacetedError":
        """
        No available documentation.

        Parameters
        ----------
        SH: TopoDS_Shape

        Returns
        -------
        TopoDSToStep_FacetedError

        """
        return _TopoDSToStep.TopoDSToStep_FacetedTool_CheckTopoDSShape(*args)

    CheckTopoDSShape = staticmethod(CheckTopoDSShape)

    __repr__ = _dumps_object


    def __init__(self):
        this = _TopoDSToStep.new_TopoDSToStep_FacetedTool()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _TopoDSToStep.delete_TopoDSToStep_FacetedTool
    __del__ = lambda self: None
TopoDSToStep_FacetedTool_swigregister = _TopoDSToStep.TopoDSToStep_FacetedTool_swigregister
TopoDSToStep_FacetedTool_swigregister(TopoDSToStep_FacetedTool)

def TopoDSToStep_FacetedTool_CheckTopoDSShape(*args) -> "TopoDSToStep_FacetedError":
    """
    No available documentation.

    Parameters
    ----------
    SH: TopoDS_Shape

    Returns
    -------
    TopoDSToStep_FacetedError

    """
    return _TopoDSToStep.TopoDSToStep_FacetedTool_CheckTopoDSShape(*args)

class TopoDSToStep_Root(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, TopoDSToStep_Root, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, TopoDSToStep_Root, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def IsDone(self, *args) -> "Standard_Boolean":
        """
        No available documentation.

        Returns
        -------
        bool

        """
        return _TopoDSToStep.TopoDSToStep_Root_IsDone(self, *args)


    def GetTolerance(self) -> "Standard_Real":
        """GetTolerance(TopoDSToStep_Root self) -> Standard_Real"""
        return _TopoDSToStep.TopoDSToStep_Root_GetTolerance(self)


    def SetTolerance(self, value: 'Standard_Real') -> "void":
        """SetTolerance(TopoDSToStep_Root self, Standard_Real value)"""
        return _TopoDSToStep.TopoDSToStep_Root_SetTolerance(self, value)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopoDSToStep.delete_TopoDSToStep_Root
    __del__ = lambda self: None
TopoDSToStep_Root_swigregister = _TopoDSToStep.TopoDSToStep_Root_swigregister
TopoDSToStep_Root_swigregister(TopoDSToStep_Root)

class TopoDSToStep_Tool(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, TopoDSToStep_Tool, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, TopoDSToStep_Tool, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        M: MoniTool_DataMapOfShapeTransient
        FacetedContext: bool

        Returns
        -------
        None

        """
        this = _TopoDSToStep.new_TopoDSToStep_Tool(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Bind(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        S: TopoDS_Shape
        T: StepShape_TopologicalRepresentationItem

        Returns
        -------
        None

        """
        return _TopoDSToStep.TopoDSToStep_Tool_Bind(self, *args)


    def CurrentEdge(self, *args) -> "TopoDS_Edge const":
        """
        No available documentation.

        Returns
        -------
        TopoDS_Edge

        """
        return _TopoDSToStep.TopoDSToStep_Tool_CurrentEdge(self, *args)


    def CurrentFace(self, *args) -> "TopoDS_Face const":
        """
        No available documentation.

        Returns
        -------
        TopoDS_Face

        """
        return _TopoDSToStep.TopoDSToStep_Tool_CurrentFace(self, *args)


    def CurrentShell(self, *args) -> "TopoDS_Shell const":
        """
        No available documentation.

        Returns
        -------
        TopoDS_Shell

        """
        return _TopoDSToStep.TopoDSToStep_Tool_CurrentShell(self, *args)


    def CurrentVertex(self, *args) -> "TopoDS_Vertex const":
        """
        No available documentation.

        Returns
        -------
        TopoDS_Vertex

        """
        return _TopoDSToStep.TopoDSToStep_Tool_CurrentVertex(self, *args)


    def CurrentWire(self, *args) -> "TopoDS_Wire const":
        """
        No available documentation.

        Returns
        -------
        TopoDS_Wire

        """
        return _TopoDSToStep.TopoDSToStep_Tool_CurrentWire(self, *args)


    def Faceted(self, *args) -> "Standard_Boolean":
        """
        No available documentation.

        Returns
        -------
        bool

        """
        return _TopoDSToStep.TopoDSToStep_Tool_Faceted(self, *args)


    def Find(self, *args) -> "opencascade::handle< StepShape_TopologicalRepresentationItem >":
        """
        No available documentation.

        Parameters
        ----------
        S: TopoDS_Shape

        Returns
        -------
        opencascade::handle<StepShape_TopologicalRepresentationItem>

        """
        return _TopoDSToStep.TopoDSToStep_Tool_Find(self, *args)


    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        M: MoniTool_DataMapOfShapeTransient
        FacetedContext: bool

        Returns
        -------
        None

        """
        return _TopoDSToStep.TopoDSToStep_Tool_Init(self, *args)


    def IsBound(self, *args) -> "Standard_Boolean":
        """
        No available documentation.

        Parameters
        ----------
        S: TopoDS_Shape

        Returns
        -------
        bool

        """
        return _TopoDSToStep.TopoDSToStep_Tool_IsBound(self, *args)


    def Lowest3DTolerance(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _TopoDSToStep.TopoDSToStep_Tool_Lowest3DTolerance(self, *args)


    def Map(self, *args) -> "MoniTool_DataMapOfShapeTransient const &":
        """
        No available documentation.

        Returns
        -------
        MoniTool_DataMapOfShapeTransient

        """
        return _TopoDSToStep.TopoDSToStep_Tool_Map(self, *args)


    def PCurveMode(self, *args) -> "Standard_Integer":
        """
        Returns mode for writing pcurves (initialized by parameter write.surfacecurve.mode).

        Returns
        -------
        int

        """
        return _TopoDSToStep.TopoDSToStep_Tool_PCurveMode(self, *args)


    def SetCurrentEdge(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        E: TopoDS_Edge

        Returns
        -------
        None

        """
        return _TopoDSToStep.TopoDSToStep_Tool_SetCurrentEdge(self, *args)


    def SetCurrentFace(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        F: TopoDS_Face

        Returns
        -------
        None

        """
        return _TopoDSToStep.TopoDSToStep_Tool_SetCurrentFace(self, *args)


    def SetCurrentShell(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        S: TopoDS_Shell

        Returns
        -------
        None

        """
        return _TopoDSToStep.TopoDSToStep_Tool_SetCurrentShell(self, *args)


    def SetCurrentVertex(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        V: TopoDS_Vertex

        Returns
        -------
        None

        """
        return _TopoDSToStep.TopoDSToStep_Tool_SetCurrentVertex(self, *args)


    def SetCurrentWire(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        W: TopoDS_Wire

        Returns
        -------
        None

        """
        return _TopoDSToStep.TopoDSToStep_Tool_SetCurrentWire(self, *args)


    def SetSurfaceReversed(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        B: bool

        Returns
        -------
        None

        """
        return _TopoDSToStep.TopoDSToStep_Tool_SetSurfaceReversed(self, *args)


    def SurfaceReversed(self, *args) -> "Standard_Boolean":
        """
        No available documentation.

        Returns
        -------
        bool

        """
        return _TopoDSToStep.TopoDSToStep_Tool_SurfaceReversed(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopoDSToStep.delete_TopoDSToStep_Tool
    __del__ = lambda self: None
TopoDSToStep_Tool_swigregister = _TopoDSToStep.TopoDSToStep_Tool_swigregister
TopoDSToStep_Tool_swigregister(TopoDSToStep_Tool)

class TopoDSToStep_Builder(TopoDSToStep_Root):
    __swig_setmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, TopoDSToStep_Builder, name, value)
    __swig_getmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, TopoDSToStep_Builder, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        S: TopoDS_Shape
        T: TopoDSToStep_Tool
        FP: Transfer_FinderProcess
        theProgress: Message_ProgressRange,optional
        	default value is Message_ProgressRange()

        Returns
        -------
        None

        """
        this = _TopoDSToStep.new_TopoDSToStep_Builder(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Error(self, *args) -> "TopoDSToStep_BuilderError":
        """
        No available documentation.

        Returns
        -------
        TopoDSToStep_BuilderError

        """
        return _TopoDSToStep.TopoDSToStep_Builder_Error(self, *args)


    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        S: TopoDS_Shape
        T: TopoDSToStep_Tool
        FP: Transfer_FinderProcess
        theProgress: Message_ProgressRange,optional
        	default value is Message_ProgressRange()

        Returns
        -------
        None

        """
        return _TopoDSToStep.TopoDSToStep_Builder_Init(self, *args)


    def Value(self, *args) -> "opencascade::handle< StepShape_TopologicalRepresentationItem > const &":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepShape_TopologicalRepresentationItem>

        """
        return _TopoDSToStep.TopoDSToStep_Builder_Value(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopoDSToStep.delete_TopoDSToStep_Builder
    __del__ = lambda self: None
TopoDSToStep_Builder_swigregister = _TopoDSToStep.TopoDSToStep_Builder_swigregister
TopoDSToStep_Builder_swigregister(TopoDSToStep_Builder)

class TopoDSToStep_MakeBrepWithVoids(TopoDSToStep_Root):
    __swig_setmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, TopoDSToStep_MakeBrepWithVoids, name, value)
    __swig_getmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, TopoDSToStep_MakeBrepWithVoids, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        S: TopoDS_Solid
        FP: Transfer_FinderProcess
        theProgress: Message_ProgressRange,optional
        	default value is Message_ProgressRange()

        Returns
        -------
        None

        """
        this = _TopoDSToStep.new_TopoDSToStep_MakeBrepWithVoids(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Value(self, *args) -> "opencascade::handle< StepShape_BrepWithVoids > const &":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepShape_BrepWithVoids>

        """
        return _TopoDSToStep.TopoDSToStep_MakeBrepWithVoids_Value(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopoDSToStep.delete_TopoDSToStep_MakeBrepWithVoids
    __del__ = lambda self: None
TopoDSToStep_MakeBrepWithVoids_swigregister = _TopoDSToStep.TopoDSToStep_MakeBrepWithVoids_swigregister
TopoDSToStep_MakeBrepWithVoids_swigregister(TopoDSToStep_MakeBrepWithVoids)

class TopoDSToStep_MakeFacetedBrep(TopoDSToStep_Root):
    __swig_setmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, TopoDSToStep_MakeFacetedBrep, name, value)
    __swig_getmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, TopoDSToStep_MakeFacetedBrep, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        S: TopoDS_Shell
        FP: Transfer_FinderProcess
        theProgress: Message_ProgressRange,optional
        	default value is Message_ProgressRange()

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        S: TopoDS_Solid
        FP: Transfer_FinderProcess
        theProgress: Message_ProgressRange,optional
        	default value is Message_ProgressRange()

        Returns
        -------
        None

        """
        this = _TopoDSToStep.new_TopoDSToStep_MakeFacetedBrep(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Value(self, *args) -> "opencascade::handle< StepShape_FacetedBrep > const &":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepShape_FacetedBrep>

        """
        return _TopoDSToStep.TopoDSToStep_MakeFacetedBrep_Value(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopoDSToStep.delete_TopoDSToStep_MakeFacetedBrep
    __del__ = lambda self: None
TopoDSToStep_MakeFacetedBrep_swigregister = _TopoDSToStep.TopoDSToStep_MakeFacetedBrep_swigregister
TopoDSToStep_MakeFacetedBrep_swigregister(TopoDSToStep_MakeFacetedBrep)

class TopoDSToStep_MakeFacetedBrepAndBrepWithVoids(TopoDSToStep_Root):
    __swig_setmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, TopoDSToStep_MakeFacetedBrepAndBrepWithVoids, name, value)
    __swig_getmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, TopoDSToStep_MakeFacetedBrepAndBrepWithVoids, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        S: TopoDS_Solid
        FP: Transfer_FinderProcess
        theProgress: Message_ProgressRange,optional
        	default value is Message_ProgressRange()

        Returns
        -------
        None

        """
        this = _TopoDSToStep.new_TopoDSToStep_MakeFacetedBrepAndBrepWithVoids(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Value(self, *args) -> "opencascade::handle< StepShape_FacetedBrepAndBrepWithVoids > const &":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepShape_FacetedBrepAndBrepWithVoids>

        """
        return _TopoDSToStep.TopoDSToStep_MakeFacetedBrepAndBrepWithVoids_Value(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopoDSToStep.delete_TopoDSToStep_MakeFacetedBrepAndBrepWithVoids
    __del__ = lambda self: None
TopoDSToStep_MakeFacetedBrepAndBrepWithVoids_swigregister = _TopoDSToStep.TopoDSToStep_MakeFacetedBrepAndBrepWithVoids_swigregister
TopoDSToStep_MakeFacetedBrepAndBrepWithVoids_swigregister(TopoDSToStep_MakeFacetedBrepAndBrepWithVoids)

class TopoDSToStep_MakeGeometricCurveSet(TopoDSToStep_Root):
    __swig_setmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, TopoDSToStep_MakeGeometricCurveSet, name, value)
    __swig_getmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, TopoDSToStep_MakeGeometricCurveSet, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        SH: TopoDS_Shape
        FP: Transfer_FinderProcess

        Returns
        -------
        None

        """
        this = _TopoDSToStep.new_TopoDSToStep_MakeGeometricCurveSet(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Value(self, *args) -> "opencascade::handle< StepShape_GeometricCurveSet > const &":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepShape_GeometricCurveSet>

        """
        return _TopoDSToStep.TopoDSToStep_MakeGeometricCurveSet_Value(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopoDSToStep.delete_TopoDSToStep_MakeGeometricCurveSet
    __del__ = lambda self: None
TopoDSToStep_MakeGeometricCurveSet_swigregister = _TopoDSToStep.TopoDSToStep_MakeGeometricCurveSet_swigregister
TopoDSToStep_MakeGeometricCurveSet_swigregister(TopoDSToStep_MakeGeometricCurveSet)

class TopoDSToStep_MakeManifoldSolidBrep(TopoDSToStep_Root):
    __swig_setmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, TopoDSToStep_MakeManifoldSolidBrep, name, value)
    __swig_getmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, TopoDSToStep_MakeManifoldSolidBrep, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        S: TopoDS_Shell
        FP: Transfer_FinderProcess
        theProgress: Message_ProgressRange,optional
        	default value is Message_ProgressRange()

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        S: TopoDS_Solid
        FP: Transfer_FinderProcess
        theProgress: Message_ProgressRange,optional
        	default value is Message_ProgressRange()

        Returns
        -------
        None

        """
        this = _TopoDSToStep.new_TopoDSToStep_MakeManifoldSolidBrep(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Value(self, *args) -> "opencascade::handle< StepShape_ManifoldSolidBrep > const &":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepShape_ManifoldSolidBrep>

        """
        return _TopoDSToStep.TopoDSToStep_MakeManifoldSolidBrep_Value(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopoDSToStep.delete_TopoDSToStep_MakeManifoldSolidBrep
    __del__ = lambda self: None
TopoDSToStep_MakeManifoldSolidBrep_swigregister = _TopoDSToStep.TopoDSToStep_MakeManifoldSolidBrep_swigregister
TopoDSToStep_MakeManifoldSolidBrep_swigregister(TopoDSToStep_MakeManifoldSolidBrep)

class TopoDSToStep_MakeShellBasedSurfaceModel(TopoDSToStep_Root):
    __swig_setmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, TopoDSToStep_MakeShellBasedSurfaceModel, name, value)
    __swig_getmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, TopoDSToStep_MakeShellBasedSurfaceModel, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        F: TopoDS_Face
        FP: Transfer_FinderProcess
        theProgress: Message_ProgressRange,optional
        	default value is Message_ProgressRange()

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        S: TopoDS_Shell
        FP: Transfer_FinderProcess
        theProgress: Message_ProgressRange,optional
        	default value is Message_ProgressRange()

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        S: TopoDS_Solid
        FP: Transfer_FinderProcess
        theProgress: Message_ProgressRange,optional
        	default value is Message_ProgressRange()

        Returns
        -------
        None

        """
        this = _TopoDSToStep.new_TopoDSToStep_MakeShellBasedSurfaceModel(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Value(self, *args) -> "opencascade::handle< StepShape_ShellBasedSurfaceModel > const &":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepShape_ShellBasedSurfaceModel>

        """
        return _TopoDSToStep.TopoDSToStep_MakeShellBasedSurfaceModel_Value(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopoDSToStep.delete_TopoDSToStep_MakeShellBasedSurfaceModel
    __del__ = lambda self: None
TopoDSToStep_MakeShellBasedSurfaceModel_swigregister = _TopoDSToStep.TopoDSToStep_MakeShellBasedSurfaceModel_swigregister
TopoDSToStep_MakeShellBasedSurfaceModel_swigregister(TopoDSToStep_MakeShellBasedSurfaceModel)

class TopoDSToStep_MakeStepEdge(TopoDSToStep_Root):
    __swig_setmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, TopoDSToStep_MakeStepEdge, name, value)
    __swig_getmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, TopoDSToStep_MakeStepEdge, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        E: TopoDS_Edge
        T: TopoDSToStep_Tool
        FP: Transfer_FinderProcess

        Returns
        -------
        None

        """
        this = _TopoDSToStep.new_TopoDSToStep_MakeStepEdge(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Error(self, *args) -> "TopoDSToStep_MakeEdgeError":
        """
        No available documentation.

        Returns
        -------
        TopoDSToStep_MakeEdgeError

        """
        return _TopoDSToStep.TopoDSToStep_MakeStepEdge_Error(self, *args)


    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        E: TopoDS_Edge
        T: TopoDSToStep_Tool
        FP: Transfer_FinderProcess

        Returns
        -------
        None

        """
        return _TopoDSToStep.TopoDSToStep_MakeStepEdge_Init(self, *args)


    def Value(self, *args) -> "opencascade::handle< StepShape_TopologicalRepresentationItem > const &":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepShape_TopologicalRepresentationItem>

        """
        return _TopoDSToStep.TopoDSToStep_MakeStepEdge_Value(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopoDSToStep.delete_TopoDSToStep_MakeStepEdge
    __del__ = lambda self: None
TopoDSToStep_MakeStepEdge_swigregister = _TopoDSToStep.TopoDSToStep_MakeStepEdge_swigregister
TopoDSToStep_MakeStepEdge_swigregister(TopoDSToStep_MakeStepEdge)

class TopoDSToStep_MakeStepFace(TopoDSToStep_Root):
    __swig_setmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, TopoDSToStep_MakeStepFace, name, value)
    __swig_getmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, TopoDSToStep_MakeStepFace, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        F: TopoDS_Face
        T: TopoDSToStep_Tool
        FP: Transfer_FinderProcess

        Returns
        -------
        None

        """
        this = _TopoDSToStep.new_TopoDSToStep_MakeStepFace(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Error(self, *args) -> "TopoDSToStep_MakeFaceError":
        """
        No available documentation.

        Returns
        -------
        TopoDSToStep_MakeFaceError

        """
        return _TopoDSToStep.TopoDSToStep_MakeStepFace_Error(self, *args)


    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        F: TopoDS_Face
        T: TopoDSToStep_Tool
        FP: Transfer_FinderProcess

        Returns
        -------
        None

        """
        return _TopoDSToStep.TopoDSToStep_MakeStepFace_Init(self, *args)


    def Value(self, *args) -> "opencascade::handle< StepShape_TopologicalRepresentationItem > const &":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepShape_TopologicalRepresentationItem>

        """
        return _TopoDSToStep.TopoDSToStep_MakeStepFace_Value(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopoDSToStep.delete_TopoDSToStep_MakeStepFace
    __del__ = lambda self: None
TopoDSToStep_MakeStepFace_swigregister = _TopoDSToStep.TopoDSToStep_MakeStepFace_swigregister
TopoDSToStep_MakeStepFace_swigregister(TopoDSToStep_MakeStepFace)

class TopoDSToStep_MakeStepVertex(TopoDSToStep_Root):
    __swig_setmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, TopoDSToStep_MakeStepVertex, name, value)
    __swig_getmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, TopoDSToStep_MakeStepVertex, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        V: TopoDS_Vertex
        T: TopoDSToStep_Tool
        FP: Transfer_FinderProcess

        Returns
        -------
        None

        """
        this = _TopoDSToStep.new_TopoDSToStep_MakeStepVertex(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Error(self, *args) -> "TopoDSToStep_MakeVertexError":
        """
        No available documentation.

        Returns
        -------
        TopoDSToStep_MakeVertexError

        """
        return _TopoDSToStep.TopoDSToStep_MakeStepVertex_Error(self, *args)


    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        V: TopoDS_Vertex
        T: TopoDSToStep_Tool
        FP: Transfer_FinderProcess

        Returns
        -------
        None

        """
        return _TopoDSToStep.TopoDSToStep_MakeStepVertex_Init(self, *args)


    def Value(self, *args) -> "opencascade::handle< StepShape_TopologicalRepresentationItem > const &":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepShape_TopologicalRepresentationItem>

        """
        return _TopoDSToStep.TopoDSToStep_MakeStepVertex_Value(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopoDSToStep.delete_TopoDSToStep_MakeStepVertex
    __del__ = lambda self: None
TopoDSToStep_MakeStepVertex_swigregister = _TopoDSToStep.TopoDSToStep_MakeStepVertex_swigregister
TopoDSToStep_MakeStepVertex_swigregister(TopoDSToStep_MakeStepVertex)

class TopoDSToStep_MakeStepWire(TopoDSToStep_Root):
    __swig_setmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, TopoDSToStep_MakeStepWire, name, value)
    __swig_getmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, TopoDSToStep_MakeStepWire, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        W: TopoDS_Wire
        T: TopoDSToStep_Tool
        FP: Transfer_FinderProcess

        Returns
        -------
        None

        """
        this = _TopoDSToStep.new_TopoDSToStep_MakeStepWire(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Error(self, *args) -> "TopoDSToStep_MakeWireError":
        """
        No available documentation.

        Returns
        -------
        TopoDSToStep_MakeWireError

        """
        return _TopoDSToStep.TopoDSToStep_MakeStepWire_Error(self, *args)


    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        W: TopoDS_Wire
        T: TopoDSToStep_Tool
        FP: Transfer_FinderProcess

        Returns
        -------
        None

        """
        return _TopoDSToStep.TopoDSToStep_MakeStepWire_Init(self, *args)


    def Value(self, *args) -> "opencascade::handle< StepShape_TopologicalRepresentationItem > const &":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepShape_TopologicalRepresentationItem>

        """
        return _TopoDSToStep.TopoDSToStep_MakeStepWire_Value(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopoDSToStep.delete_TopoDSToStep_MakeStepWire
    __del__ = lambda self: None
TopoDSToStep_MakeStepWire_swigregister = _TopoDSToStep.TopoDSToStep_MakeStepWire_swigregister
TopoDSToStep_MakeStepWire_swigregister(TopoDSToStep_MakeStepWire)

class TopoDSToStep_WireframeBuilder(TopoDSToStep_Root):
    __swig_setmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, TopoDSToStep_WireframeBuilder, name, value)
    __swig_getmethods__ = {}
    for _s in [TopoDSToStep_Root]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, TopoDSToStep_WireframeBuilder, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        S: TopoDS_Shape
        T: TopoDSToStep_Tool
        FP: Transfer_FinderProcess

        Returns
        -------
        None

        """
        this = _TopoDSToStep.new_TopoDSToStep_WireframeBuilder(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Error(self, *args) -> "TopoDSToStep_BuilderError":
        """
        No available documentation.

        Returns
        -------
        TopoDSToStep_BuilderError

        """
        return _TopoDSToStep.TopoDSToStep_WireframeBuilder_Error(self, *args)


    def GetTrimmedCurveFromEdge(self, *args) -> "Standard_Boolean":
        """
        Extraction of trimmed curves from topods_edge for the creation of a geometricallyboundedwireframerepresentation.

        Parameters
        ----------
        E: TopoDS_Edge
        F: TopoDS_Face
        M: MoniTool_DataMapOfShapeTransient
        L: TColStd_HSequenceOfTransient

        Returns
        -------
        bool

        """
        return _TopoDSToStep.TopoDSToStep_WireframeBuilder_GetTrimmedCurveFromEdge(self, *args)


    def GetTrimmedCurveFromFace(self, *args) -> "Standard_Boolean":
        """
        Extraction of trimmed curves from topods_face for the creation of a geometricallyboundedwireframerepresentation.

        Parameters
        ----------
        F: TopoDS_Face
        M: MoniTool_DataMapOfShapeTransient
        L: TColStd_HSequenceOfTransient

        Returns
        -------
        bool

        """
        return _TopoDSToStep.TopoDSToStep_WireframeBuilder_GetTrimmedCurveFromFace(self, *args)


    def GetTrimmedCurveFromShape(self, *args) -> "Standard_Boolean":
        """
        Extraction of trimmed curves from any topods_shape for the creation of a geometricallyboundedwireframerepresentation.

        Parameters
        ----------
        S: TopoDS_Shape
        M: MoniTool_DataMapOfShapeTransient
        L: TColStd_HSequenceOfTransient

        Returns
        -------
        bool

        """
        return _TopoDSToStep.TopoDSToStep_WireframeBuilder_GetTrimmedCurveFromShape(self, *args)


    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        S: TopoDS_Shape
        T: TopoDSToStep_Tool
        FP: Transfer_FinderProcess

        Returns
        -------
        None

        """
        return _TopoDSToStep.TopoDSToStep_WireframeBuilder_Init(self, *args)


    def Value(self, *args) -> "opencascade::handle< TColStd_HSequenceOfTransient > const &":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TColStd_HSequenceOfTransient>

        """
        return _TopoDSToStep.TopoDSToStep_WireframeBuilder_Value(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopoDSToStep.delete_TopoDSToStep_WireframeBuilder
    __del__ = lambda self: None
TopoDSToStep_WireframeBuilder_swigregister = _TopoDSToStep.TopoDSToStep_WireframeBuilder_swigregister
TopoDSToStep_WireframeBuilder_swigregister(TopoDSToStep_WireframeBuilder)



# This file is compatible with both classic and new-style classes.


