# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

"""
HLRAlgo module, see official documentation at
https://www.opencascade.com/doc/occt-7.7.0/refman/html/package_hlralgo.html
"""

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _HLRAlgo
else:
    import _HLRAlgo

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _HLRAlgo.delete_SwigPyIterator

    def value(self):
        return _HLRAlgo.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _HLRAlgo.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _HLRAlgo.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _HLRAlgo.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _HLRAlgo.SwigPyIterator_equal(self, x)

    def copy(self):
        return _HLRAlgo.SwigPyIterator_copy(self)

    def next(self):
        return _HLRAlgo.SwigPyIterator_next(self)

    def __next__(self):
        return _HLRAlgo.SwigPyIterator___next__(self)

    def previous(self):
        return _HLRAlgo.SwigPyIterator_previous(self)

    def advance(self, n):
        return _HLRAlgo.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _HLRAlgo.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _HLRAlgo.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _HLRAlgo.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _HLRAlgo.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _HLRAlgo.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _HLRAlgo.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _HLRAlgo:
_HLRAlgo.SwigPyIterator_swigregister(SwigPyIterator)

def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error, method_name, class_name):
    return _HLRAlgo.process_exception(error, method_name, class_name)

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.TopAbs
import OCC.Core.TColgp
import OCC.Core.gp
import OCC.Core.TColStd
import OCC.Core.TCollection

from enum import IntEnum
from OCC.Core.Exception import *

HLRAlgo_PolyMask_EMskOutLin1 = _HLRAlgo.HLRAlgo_PolyMask_EMskOutLin1
HLRAlgo_PolyMask_EMskOutLin2 = _HLRAlgo.HLRAlgo_PolyMask_EMskOutLin2
HLRAlgo_PolyMask_EMskOutLin3 = _HLRAlgo.HLRAlgo_PolyMask_EMskOutLin3
HLRAlgo_PolyMask_EMskGrALin1 = _HLRAlgo.HLRAlgo_PolyMask_EMskGrALin1
HLRAlgo_PolyMask_EMskGrALin2 = _HLRAlgo.HLRAlgo_PolyMask_EMskGrALin2
HLRAlgo_PolyMask_EMskGrALin3 = _HLRAlgo.HLRAlgo_PolyMask_EMskGrALin3
HLRAlgo_PolyMask_FMskBack = _HLRAlgo.HLRAlgo_PolyMask_FMskBack
HLRAlgo_PolyMask_FMskSide = _HLRAlgo.HLRAlgo_PolyMask_FMskSide
HLRAlgo_PolyMask_FMskHiding = _HLRAlgo.HLRAlgo_PolyMask_FMskHiding
HLRAlgo_PolyMask_FMskFlat = _HLRAlgo.HLRAlgo_PolyMask_FMskFlat
HLRAlgo_PolyMask_FMskOnOutL = _HLRAlgo.HLRAlgo_PolyMask_FMskOnOutL
HLRAlgo_PolyMask_FMskOrBack = _HLRAlgo.HLRAlgo_PolyMask_FMskOrBack
HLRAlgo_PolyMask_FMskFrBack = _HLRAlgo.HLRAlgo_PolyMask_FMskFrBack


class HLRAlgo_PolyMask(IntEnum):
	HLRAlgo_PolyMask_EMskOutLin1 = 1
	HLRAlgo_PolyMask_EMskOutLin2 = 2
	HLRAlgo_PolyMask_EMskOutLin3 = 4
	HLRAlgo_PolyMask_EMskGrALin1 = 8
	HLRAlgo_PolyMask_EMskGrALin2 = 16
	HLRAlgo_PolyMask_EMskGrALin3 = 32
	HLRAlgo_PolyMask_FMskBack = 64
	HLRAlgo_PolyMask_FMskSide = 128
	HLRAlgo_PolyMask_FMskHiding = 256
	HLRAlgo_PolyMask_FMskFlat = 512
	HLRAlgo_PolyMask_FMskOnOutL = 1024
	HLRAlgo_PolyMask_FMskOrBack = 2048
	HLRAlgo_PolyMask_FMskFrBack = 4096
HLRAlgo_PolyMask_EMskOutLin1 = HLRAlgo_PolyMask.HLRAlgo_PolyMask_EMskOutLin1
HLRAlgo_PolyMask_EMskOutLin2 = HLRAlgo_PolyMask.HLRAlgo_PolyMask_EMskOutLin2
HLRAlgo_PolyMask_EMskOutLin3 = HLRAlgo_PolyMask.HLRAlgo_PolyMask_EMskOutLin3
HLRAlgo_PolyMask_EMskGrALin1 = HLRAlgo_PolyMask.HLRAlgo_PolyMask_EMskGrALin1
HLRAlgo_PolyMask_EMskGrALin2 = HLRAlgo_PolyMask.HLRAlgo_PolyMask_EMskGrALin2
HLRAlgo_PolyMask_EMskGrALin3 = HLRAlgo_PolyMask.HLRAlgo_PolyMask_EMskGrALin3
HLRAlgo_PolyMask_FMskBack = HLRAlgo_PolyMask.HLRAlgo_PolyMask_FMskBack
HLRAlgo_PolyMask_FMskSide = HLRAlgo_PolyMask.HLRAlgo_PolyMask_FMskSide
HLRAlgo_PolyMask_FMskHiding = HLRAlgo_PolyMask.HLRAlgo_PolyMask_FMskHiding
HLRAlgo_PolyMask_FMskFlat = HLRAlgo_PolyMask.HLRAlgo_PolyMask_FMskFlat
HLRAlgo_PolyMask_FMskOnOutL = HLRAlgo_PolyMask.HLRAlgo_PolyMask_FMskOnOutL
HLRAlgo_PolyMask_FMskOrBack = HLRAlgo_PolyMask.HLRAlgo_PolyMask_FMskOrBack
HLRAlgo_PolyMask_FMskFrBack = HLRAlgo_PolyMask.HLRAlgo_PolyMask_FMskFrBack


def Handle_HLRAlgo_EdgesBlock_Create():
    return _HLRAlgo.Handle_HLRAlgo_EdgesBlock_Create()

def Handle_HLRAlgo_EdgesBlock_DownCast(t):
    return _HLRAlgo.Handle_HLRAlgo_EdgesBlock_DownCast(t)

def Handle_HLRAlgo_EdgesBlock_IsNull(t):
    return _HLRAlgo.Handle_HLRAlgo_EdgesBlock_IsNull(t)

def Handle_HLRAlgo_PolyAlgo_Create():
    return _HLRAlgo.Handle_HLRAlgo_PolyAlgo_Create()

def Handle_HLRAlgo_PolyAlgo_DownCast(t):
    return _HLRAlgo.Handle_HLRAlgo_PolyAlgo_DownCast(t)

def Handle_HLRAlgo_PolyAlgo_IsNull(t):
    return _HLRAlgo.Handle_HLRAlgo_PolyAlgo_IsNull(t)

def Handle_HLRAlgo_PolyData_Create():
    return _HLRAlgo.Handle_HLRAlgo_PolyData_Create()

def Handle_HLRAlgo_PolyData_DownCast(t):
    return _HLRAlgo.Handle_HLRAlgo_PolyData_DownCast(t)

def Handle_HLRAlgo_PolyData_IsNull(t):
    return _HLRAlgo.Handle_HLRAlgo_PolyData_IsNull(t)

def Handle_HLRAlgo_PolyInternalData_Create():
    return _HLRAlgo.Handle_HLRAlgo_PolyInternalData_Create()

def Handle_HLRAlgo_PolyInternalData_DownCast(t):
    return _HLRAlgo.Handle_HLRAlgo_PolyInternalData_DownCast(t)

def Handle_HLRAlgo_PolyInternalData_IsNull(t):
    return _HLRAlgo.Handle_HLRAlgo_PolyInternalData_IsNull(t)

def Handle_HLRAlgo_PolyInternalNode_Create():
    return _HLRAlgo.Handle_HLRAlgo_PolyInternalNode_Create()

def Handle_HLRAlgo_PolyInternalNode_DownCast(t):
    return _HLRAlgo.Handle_HLRAlgo_PolyInternalNode_DownCast(t)

def Handle_HLRAlgo_PolyInternalNode_IsNull(t):
    return _HLRAlgo.Handle_HLRAlgo_PolyInternalNode_IsNull(t)

def Handle_HLRAlgo_PolyShellData_Create():
    return _HLRAlgo.Handle_HLRAlgo_PolyShellData_Create()

def Handle_HLRAlgo_PolyShellData_DownCast(t):
    return _HLRAlgo.Handle_HLRAlgo_PolyShellData_DownCast(t)

def Handle_HLRAlgo_PolyShellData_IsNull(t):
    return _HLRAlgo.Handle_HLRAlgo_PolyShellData_IsNull(t)

def Handle_HLRAlgo_WiresBlock_Create():
    return _HLRAlgo.Handle_HLRAlgo_WiresBlock_Create()

def Handle_HLRAlgo_WiresBlock_DownCast(t):
    return _HLRAlgo.Handle_HLRAlgo_WiresBlock_DownCast(t)

def Handle_HLRAlgo_WiresBlock_IsNull(t):
    return _HLRAlgo.Handle_HLRAlgo_WiresBlock_IsNull(t)

def Handle_HLRAlgo_HArray1OfPISeg_Create():
    return _HLRAlgo.Handle_HLRAlgo_HArray1OfPISeg_Create()

def Handle_HLRAlgo_HArray1OfPISeg_DownCast(t):
    return _HLRAlgo.Handle_HLRAlgo_HArray1OfPISeg_DownCast(t)

def Handle_HLRAlgo_HArray1OfPISeg_IsNull(t):
    return _HLRAlgo.Handle_HLRAlgo_HArray1OfPISeg_IsNull(t)

def Handle_HLRAlgo_HArray1OfPINod_Create():
    return _HLRAlgo.Handle_HLRAlgo_HArray1OfPINod_Create()

def Handle_HLRAlgo_HArray1OfPINod_DownCast(t):
    return _HLRAlgo.Handle_HLRAlgo_HArray1OfPINod_DownCast(t)

def Handle_HLRAlgo_HArray1OfPINod_IsNull(t):
    return _HLRAlgo.Handle_HLRAlgo_HArray1OfPINod_IsNull(t)

def Handle_HLRAlgo_HArray1OfPHDat_Create():
    return _HLRAlgo.Handle_HLRAlgo_HArray1OfPHDat_Create()

def Handle_HLRAlgo_HArray1OfPHDat_DownCast(t):
    return _HLRAlgo.Handle_HLRAlgo_HArray1OfPHDat_DownCast(t)

def Handle_HLRAlgo_HArray1OfPHDat_IsNull(t):
    return _HLRAlgo.Handle_HLRAlgo_HArray1OfPHDat_IsNull(t)

def Handle_HLRAlgo_HArray1OfTData_Create():
    return _HLRAlgo.Handle_HLRAlgo_HArray1OfTData_Create()

def Handle_HLRAlgo_HArray1OfTData_DownCast(t):
    return _HLRAlgo.Handle_HLRAlgo_HArray1OfTData_DownCast(t)

def Handle_HLRAlgo_HArray1OfTData_IsNull(t):
    return _HLRAlgo.Handle_HLRAlgo_HArray1OfTData_IsNull(t)
class HLRAlgo_Array1OfPHDat(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat_begin(self)

    def end(self):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat_end(self)

    def cbegin(self):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat_cbegin(self)

    def cend(self):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat_cend(self)

    def __init__(self, *args):
        _HLRAlgo.HLRAlgo_Array1OfPHDat_swiginit(self, _HLRAlgo.new_HLRAlgo_Array1OfPHDat(*args))

    def Init(self, theValue):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat_Init(self, theValue)

    def Size(self):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat_Size(self)

    def Length(self):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat_Length(self)

    def IsEmpty(self):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat_IsEmpty(self)

    def Lower(self):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat_Lower(self)

    def Upper(self):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat_Upper(self)

    def IsDeletable(self):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat_IsDeletable(self)

    def IsAllocated(self):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat_IsAllocated(self)

    def Assign(self, theOther):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat_Assign(self, theOther)

    def Move(self, theOther):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat_Move(self, theOther)

    def Set(self, *args):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat_Set(self, *args)

    def First(self):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat_First(self)

    def ChangeFirst(self):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat_ChangeFirst(self)

    def Last(self):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat_Last(self)

    def ChangeLast(self):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat_ChangeLast(self)

    def Value(self, theIndex):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat_Value(self, theIndex)

    def ChangeValue(self, theIndex):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat_ChangeValue(self, theIndex)

    def __call__(self, *args):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat___call__(self, *args)

    def SetValue(self, theIndex, theItem):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat_SetValue(self, theIndex, theItem)

    def Resize(self, theLower, theUpper, theToCopyData):
        return _HLRAlgo.HLRAlgo_Array1OfPHDat_Resize(self, theLower, theUpper, theToCopyData)
    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_Array1OfPHDat

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register HLRAlgo_Array1OfPHDat in _HLRAlgo:
_HLRAlgo.HLRAlgo_Array1OfPHDat_swigregister(HLRAlgo_Array1OfPHDat)
class HLRAlgo_Array1OfPINod(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _HLRAlgo.HLRAlgo_Array1OfPINod_begin(self)

    def end(self):
        return _HLRAlgo.HLRAlgo_Array1OfPINod_end(self)

    def cbegin(self):
        return _HLRAlgo.HLRAlgo_Array1OfPINod_cbegin(self)

    def cend(self):
        return _HLRAlgo.HLRAlgo_Array1OfPINod_cend(self)

    def __init__(self, *args):
        _HLRAlgo.HLRAlgo_Array1OfPINod_swiginit(self, _HLRAlgo.new_HLRAlgo_Array1OfPINod(*args))

    def Init(self, theValue):
        return _HLRAlgo.HLRAlgo_Array1OfPINod_Init(self, theValue)

    def Size(self):
        return _HLRAlgo.HLRAlgo_Array1OfPINod_Size(self)

    def Length(self):
        return _HLRAlgo.HLRAlgo_Array1OfPINod_Length(self)

    def IsEmpty(self):
        return _HLRAlgo.HLRAlgo_Array1OfPINod_IsEmpty(self)

    def Lower(self):
        return _HLRAlgo.HLRAlgo_Array1OfPINod_Lower(self)

    def Upper(self):
        return _HLRAlgo.HLRAlgo_Array1OfPINod_Upper(self)

    def IsDeletable(self):
        return _HLRAlgo.HLRAlgo_Array1OfPINod_IsDeletable(self)

    def IsAllocated(self):
        return _HLRAlgo.HLRAlgo_Array1OfPINod_IsAllocated(self)

    def Assign(self, theOther):
        return _HLRAlgo.HLRAlgo_Array1OfPINod_Assign(self, theOther)

    def Move(self, theOther):
        return _HLRAlgo.HLRAlgo_Array1OfPINod_Move(self, theOther)

    def Set(self, *args):
        return _HLRAlgo.HLRAlgo_Array1OfPINod_Set(self, *args)

    def First(self):
        return _HLRAlgo.HLRAlgo_Array1OfPINod_First(self)

    def ChangeFirst(self):
        return _HLRAlgo.HLRAlgo_Array1OfPINod_ChangeFirst(self)

    def Last(self):
        return _HLRAlgo.HLRAlgo_Array1OfPINod_Last(self)

    def ChangeLast(self):
        return _HLRAlgo.HLRAlgo_Array1OfPINod_ChangeLast(self)

    def Value(self, theIndex):
        return _HLRAlgo.HLRAlgo_Array1OfPINod_Value(self, theIndex)

    def ChangeValue(self, theIndex):
        return _HLRAlgo.HLRAlgo_Array1OfPINod_ChangeValue(self, theIndex)

    def __call__(self, *args):
        return _HLRAlgo.HLRAlgo_Array1OfPINod___call__(self, *args)

    def SetValue(self, theIndex, theItem):
        return _HLRAlgo.HLRAlgo_Array1OfPINod_SetValue(self, theIndex, theItem)

    def Resize(self, theLower, theUpper, theToCopyData):
        return _HLRAlgo.HLRAlgo_Array1OfPINod_Resize(self, theLower, theUpper, theToCopyData)
    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_Array1OfPINod

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register HLRAlgo_Array1OfPINod in _HLRAlgo:
_HLRAlgo.HLRAlgo_Array1OfPINod_swigregister(HLRAlgo_Array1OfPINod)
class HLRAlgo_Array1OfPISeg(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg_begin(self)

    def end(self):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg_end(self)

    def cbegin(self):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg_cbegin(self)

    def cend(self):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg_cend(self)

    def __init__(self, *args):
        _HLRAlgo.HLRAlgo_Array1OfPISeg_swiginit(self, _HLRAlgo.new_HLRAlgo_Array1OfPISeg(*args))

    def Init(self, theValue):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg_Init(self, theValue)

    def Size(self):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg_Size(self)

    def Length(self):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg_Length(self)

    def IsEmpty(self):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg_IsEmpty(self)

    def Lower(self):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg_Lower(self)

    def Upper(self):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg_Upper(self)

    def IsDeletable(self):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg_IsDeletable(self)

    def IsAllocated(self):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg_IsAllocated(self)

    def Assign(self, theOther):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg_Assign(self, theOther)

    def Move(self, theOther):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg_Move(self, theOther)

    def Set(self, *args):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg_Set(self, *args)

    def First(self):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg_First(self)

    def ChangeFirst(self):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg_ChangeFirst(self)

    def Last(self):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg_Last(self)

    def ChangeLast(self):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg_ChangeLast(self)

    def Value(self, theIndex):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg_Value(self, theIndex)

    def ChangeValue(self, theIndex):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg_ChangeValue(self, theIndex)

    def __call__(self, *args):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg___call__(self, *args)

    def SetValue(self, theIndex, theItem):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg_SetValue(self, theIndex, theItem)

    def Resize(self, theLower, theUpper, theToCopyData):
        return _HLRAlgo.HLRAlgo_Array1OfPISeg_Resize(self, theLower, theUpper, theToCopyData)
    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_Array1OfPISeg

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register HLRAlgo_Array1OfPISeg in _HLRAlgo:
_HLRAlgo.HLRAlgo_Array1OfPISeg_swigregister(HLRAlgo_Array1OfPISeg)
class HLRAlgo_Array1OfTData(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _HLRAlgo.HLRAlgo_Array1OfTData_begin(self)

    def end(self):
        return _HLRAlgo.HLRAlgo_Array1OfTData_end(self)

    def cbegin(self):
        return _HLRAlgo.HLRAlgo_Array1OfTData_cbegin(self)

    def cend(self):
        return _HLRAlgo.HLRAlgo_Array1OfTData_cend(self)

    def __init__(self, *args):
        _HLRAlgo.HLRAlgo_Array1OfTData_swiginit(self, _HLRAlgo.new_HLRAlgo_Array1OfTData(*args))

    def Init(self, theValue):
        return _HLRAlgo.HLRAlgo_Array1OfTData_Init(self, theValue)

    def Size(self):
        return _HLRAlgo.HLRAlgo_Array1OfTData_Size(self)

    def Length(self):
        return _HLRAlgo.HLRAlgo_Array1OfTData_Length(self)

    def IsEmpty(self):
        return _HLRAlgo.HLRAlgo_Array1OfTData_IsEmpty(self)

    def Lower(self):
        return _HLRAlgo.HLRAlgo_Array1OfTData_Lower(self)

    def Upper(self):
        return _HLRAlgo.HLRAlgo_Array1OfTData_Upper(self)

    def IsDeletable(self):
        return _HLRAlgo.HLRAlgo_Array1OfTData_IsDeletable(self)

    def IsAllocated(self):
        return _HLRAlgo.HLRAlgo_Array1OfTData_IsAllocated(self)

    def Assign(self, theOther):
        return _HLRAlgo.HLRAlgo_Array1OfTData_Assign(self, theOther)

    def Move(self, theOther):
        return _HLRAlgo.HLRAlgo_Array1OfTData_Move(self, theOther)

    def Set(self, *args):
        return _HLRAlgo.HLRAlgo_Array1OfTData_Set(self, *args)

    def First(self):
        return _HLRAlgo.HLRAlgo_Array1OfTData_First(self)

    def ChangeFirst(self):
        return _HLRAlgo.HLRAlgo_Array1OfTData_ChangeFirst(self)

    def Last(self):
        return _HLRAlgo.HLRAlgo_Array1OfTData_Last(self)

    def ChangeLast(self):
        return _HLRAlgo.HLRAlgo_Array1OfTData_ChangeLast(self)

    def Value(self, theIndex):
        return _HLRAlgo.HLRAlgo_Array1OfTData_Value(self, theIndex)

    def ChangeValue(self, theIndex):
        return _HLRAlgo.HLRAlgo_Array1OfTData_ChangeValue(self, theIndex)

    def __call__(self, *args):
        return _HLRAlgo.HLRAlgo_Array1OfTData___call__(self, *args)

    def SetValue(self, theIndex, theItem):
        return _HLRAlgo.HLRAlgo_Array1OfTData_SetValue(self, theIndex, theItem)

    def Resize(self, theLower, theUpper, theToCopyData):
        return _HLRAlgo.HLRAlgo_Array1OfTData_Resize(self, theLower, theUpper, theToCopyData)
    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_Array1OfTData

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register HLRAlgo_Array1OfTData in _HLRAlgo:
_HLRAlgo.HLRAlgo_Array1OfTData_swigregister(HLRAlgo_Array1OfTData)
class HLRAlgo_InterferenceList(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _HLRAlgo.HLRAlgo_InterferenceList_begin(self)

    def end(self):
        return _HLRAlgo.HLRAlgo_InterferenceList_end(self)

    def cbegin(self):
        return _HLRAlgo.HLRAlgo_InterferenceList_cbegin(self)

    def cend(self):
        return _HLRAlgo.HLRAlgo_InterferenceList_cend(self)

    def __init__(self, *args):
        _HLRAlgo.HLRAlgo_InterferenceList_swiginit(self, _HLRAlgo.new_HLRAlgo_InterferenceList(*args))

    def Size(self):
        return _HLRAlgo.HLRAlgo_InterferenceList_Size(self)

    def Assign(self, theOther):
        return _HLRAlgo.HLRAlgo_InterferenceList_Assign(self, theOther)

    def Set(self, theOther):
        return _HLRAlgo.HLRAlgo_InterferenceList_Set(self, theOther)

    def Clear(self, theAllocator=0):
        return _HLRAlgo.HLRAlgo_InterferenceList_Clear(self, theAllocator)

    def First(self):
        return _HLRAlgo.HLRAlgo_InterferenceList_First(self)

    def Last(self):
        return _HLRAlgo.HLRAlgo_InterferenceList_Last(self)

    def Append(self, *args):
        return _HLRAlgo.HLRAlgo_InterferenceList_Append(self, *args)

    def Prepend(self, *args):
        return _HLRAlgo.HLRAlgo_InterferenceList_Prepend(self, *args)

    def RemoveFirst(self):
        return _HLRAlgo.HLRAlgo_InterferenceList_RemoveFirst(self)

    def Remove(self, theIter):
        return _HLRAlgo.HLRAlgo_InterferenceList_Remove(self, theIter)

    def InsertBefore(self, *args):
        return _HLRAlgo.HLRAlgo_InterferenceList_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        return _HLRAlgo.HLRAlgo_InterferenceList_InsertAfter(self, *args)

    def Reverse(self):
        return _HLRAlgo.HLRAlgo_InterferenceList_Reverse(self)
    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_InterferenceList

    def __len__(self):
        return self.Size()


# Register HLRAlgo_InterferenceList in _HLRAlgo:
_HLRAlgo.HLRAlgo_InterferenceList_swigregister(HLRAlgo_InterferenceList)
class HLRAlgo_ListIteratorOfInterferenceList(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _HLRAlgo.HLRAlgo_ListIteratorOfInterferenceList_swiginit(self, _HLRAlgo.new_HLRAlgo_ListIteratorOfInterferenceList(*args))

    def More(self):
        return _HLRAlgo.HLRAlgo_ListIteratorOfInterferenceList_More(self)

    def Next(self):
        return _HLRAlgo.HLRAlgo_ListIteratorOfInterferenceList_Next(self)

    def Value(self):
        return _HLRAlgo.HLRAlgo_ListIteratorOfInterferenceList_Value(self)

    def ChangeValue(self):
        return _HLRAlgo.HLRAlgo_ListIteratorOfInterferenceList_ChangeValue(self)
    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_ListIteratorOfInterferenceList

# Register HLRAlgo_ListIteratorOfInterferenceList in _HLRAlgo:
_HLRAlgo.HLRAlgo_ListIteratorOfInterferenceList_swigregister(HLRAlgo_ListIteratorOfInterferenceList)
class HLRAlgo_ListIteratorOfListOfBPoint(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _HLRAlgo.HLRAlgo_ListIteratorOfListOfBPoint_swiginit(self, _HLRAlgo.new_HLRAlgo_ListIteratorOfListOfBPoint(*args))

    def More(self):
        return _HLRAlgo.HLRAlgo_ListIteratorOfListOfBPoint_More(self)

    def Next(self):
        return _HLRAlgo.HLRAlgo_ListIteratorOfListOfBPoint_Next(self)

    def Value(self):
        return _HLRAlgo.HLRAlgo_ListIteratorOfListOfBPoint_Value(self)

    def ChangeValue(self):
        return _HLRAlgo.HLRAlgo_ListIteratorOfListOfBPoint_ChangeValue(self)
    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_ListIteratorOfListOfBPoint

# Register HLRAlgo_ListIteratorOfListOfBPoint in _HLRAlgo:
_HLRAlgo.HLRAlgo_ListIteratorOfListOfBPoint_swigregister(HLRAlgo_ListIteratorOfListOfBPoint)
class HLRAlgo_ListOfBPoint(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _HLRAlgo.HLRAlgo_ListOfBPoint_begin(self)

    def end(self):
        return _HLRAlgo.HLRAlgo_ListOfBPoint_end(self)

    def cbegin(self):
        return _HLRAlgo.HLRAlgo_ListOfBPoint_cbegin(self)

    def cend(self):
        return _HLRAlgo.HLRAlgo_ListOfBPoint_cend(self)

    def __init__(self, *args):
        _HLRAlgo.HLRAlgo_ListOfBPoint_swiginit(self, _HLRAlgo.new_HLRAlgo_ListOfBPoint(*args))

    def Size(self):
        return _HLRAlgo.HLRAlgo_ListOfBPoint_Size(self)

    def Assign(self, theOther):
        return _HLRAlgo.HLRAlgo_ListOfBPoint_Assign(self, theOther)

    def Set(self, theOther):
        return _HLRAlgo.HLRAlgo_ListOfBPoint_Set(self, theOther)

    def Clear(self, theAllocator=0):
        return _HLRAlgo.HLRAlgo_ListOfBPoint_Clear(self, theAllocator)

    def First(self):
        return _HLRAlgo.HLRAlgo_ListOfBPoint_First(self)

    def Last(self):
        return _HLRAlgo.HLRAlgo_ListOfBPoint_Last(self)

    def Append(self, *args):
        return _HLRAlgo.HLRAlgo_ListOfBPoint_Append(self, *args)

    def Prepend(self, *args):
        return _HLRAlgo.HLRAlgo_ListOfBPoint_Prepend(self, *args)

    def RemoveFirst(self):
        return _HLRAlgo.HLRAlgo_ListOfBPoint_RemoveFirst(self)

    def Remove(self, theIter):
        return _HLRAlgo.HLRAlgo_ListOfBPoint_Remove(self, theIter)

    def InsertBefore(self, *args):
        return _HLRAlgo.HLRAlgo_ListOfBPoint_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        return _HLRAlgo.HLRAlgo_ListOfBPoint_InsertAfter(self, *args)

    def Reverse(self):
        return _HLRAlgo.HLRAlgo_ListOfBPoint_Reverse(self)
    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_ListOfBPoint

    def __len__(self):
        return self.Size()


# Register HLRAlgo_ListOfBPoint in _HLRAlgo:
_HLRAlgo.HLRAlgo_ListOfBPoint_swigregister(HLRAlgo_ListOfBPoint)
class hlralgo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def AddMinMax(*args):
        r"""

        Parameters
        ----------
        IMin: HLRAlgo_EdgesBlock::MinMaxIndices
        IMax: HLRAlgo_EdgesBlock::MinMaxIndices
        OMin: HLRAlgo_EdgesBlock::MinMaxIndices
        OMax: HLRAlgo_EdgesBlock::MinMaxIndices

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.hlralgo_AddMinMax(*args)

    @staticmethod
    def CopyMinMax(*args):
        r"""

        Parameters
        ----------
        IMin: HLRAlgo_EdgesBlock::MinMaxIndices
        IMax: HLRAlgo_EdgesBlock::MinMaxIndices
        OMin: HLRAlgo_EdgesBlock::MinMaxIndices
        OMax: HLRAlgo_EdgesBlock::MinMaxIndices

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.hlralgo_CopyMinMax(*args)

    @staticmethod
    def DecodeMinMax(*args):
        r"""

        Parameters
        ----------
        MinMax: HLRAlgo_EdgesBlock::MinMaxIndices
        Min: HLRAlgo_EdgesBlock::MinMaxIndices
        Max: HLRAlgo_EdgesBlock::MinMaxIndices

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.hlralgo_DecodeMinMax(*args)

    @staticmethod
    def EncodeMinMax(*args):
        r"""

        Parameters
        ----------
        Min: HLRAlgo_EdgesBlock::MinMaxIndices
        Max: HLRAlgo_EdgesBlock::MinMaxIndices
        MinMax: HLRAlgo_EdgesBlock::MinMaxIndices

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.hlralgo_EncodeMinMax(*args)

    @staticmethod
    def EnlargeMinMax(*args):
        r"""

        Parameters
        ----------
        tol: float
        Min: float
        Max: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.hlralgo_EnlargeMinMax(*args)

    @staticmethod
    def InitMinMax(*args):
        r"""

        Parameters
        ----------
        Big: float
        Min: float
        Max: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.hlralgo_InitMinMax(*args)

    @staticmethod
    def SizeBox(*args):
        r"""

        Parameters
        ----------
        Min: HLRAlgo_EdgesBlock::MinMaxIndices
        Max: HLRAlgo_EdgesBlock::MinMaxIndices

        Return
        -------
        float

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.hlralgo_SizeBox(*args)

    @staticmethod
    def UpdateMinMax(*args):
        r"""

        Parameters
        ----------
        x: float
        y: float
        z: float
        Min: float
        Max: float

        Return
        -------
        None

        Description
        -----------
        Iterator on the visible or hidden parts of an edgestatus.

        """
        return _HLRAlgo.hlralgo_UpdateMinMax(*args)

    __repr__ = _dumps_object


    def __init__(self):
        _HLRAlgo.hlralgo_swiginit(self, _HLRAlgo.new_hlralgo())
    __swig_destroy__ = _HLRAlgo.delete_hlralgo

# Register hlralgo in _HLRAlgo:
_HLRAlgo.hlralgo_swigregister(hlralgo)
class HLRAlgo_BiPoint(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        X1: float
        Y1: float
        Z1: float
        X2: float
        Y2: float
        Z2: float
        XT1: float
        YT1: float
        ZT1: float
        XT2: float
        YT2: float
        ZT2: float
        Index: int
        reg1: bool
        regn: bool
        outl: bool
        intl: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        X1: float
        Y1: float
        Z1: float
        X2: float
        Y2: float
        Z2: float
        XT1: float
        YT1: float
        ZT1: float
        XT2: float
        YT2: float
        ZT2: float
        Index: int
        flag: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        X1: float
        Y1: float
        Z1: float
        X2: float
        Y2: float
        Z2: float
        XT1: float
        YT1: float
        ZT1: float
        XT2: float
        YT2: float
        ZT2: float
        Index: int
        i1: int
        i1p1: int
        i1p2: int
        reg1: bool
        regn: bool
        outl: bool
        intl: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        X1: float
        Y1: float
        Z1: float
        X2: float
        Y2: float
        Z2: float
        XT1: float
        YT1: float
        ZT1: float
        XT2: float
        YT2: float
        ZT2: float
        Index: int
        i1: int
        i1p1: int
        i1p2: int
        flag: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        X1: float
        Y1: float
        Z1: float
        X2: float
        Y2: float
        Z2: float
        XT1: float
        YT1: float
        ZT1: float
        XT2: float
        YT2: float
        ZT2: float
        Index: int
        i1: int
        i1p1: int
        i1p2: int
        i2: int
        i2p1: int
        i2p2: int
        reg1: bool
        regn: bool
        outl: bool
        intl: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        X1: float
        Y1: float
        Z1: float
        X2: float
        Y2: float
        Z2: float
        XT1: float
        YT1: float
        ZT1: float
        XT2: float
        YT2: float
        ZT2: float
        Index: int
        i1: int
        i1p1: int
        i1p2: int
        i2: int
        i2p1: int
        i2p2: int
        flag: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _HLRAlgo.HLRAlgo_BiPoint_swiginit(self, _HLRAlgo.new_HLRAlgo_BiPoint(*args))

    def Hidden(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        B: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_BiPoint_Hidden(self, *args)

    def IntLine(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        B: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_BiPoint_IntLine(self, *args)

    def OutLine(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        B: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_BiPoint_OutLine(self, *args)

    def Rg1Line(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        B: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_BiPoint_Rg1Line(self, *args)

    def RgNLine(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        B: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_BiPoint_RgNLine(self, *args)

    __repr__ = _dumps_object

    @methodnotwrapped
    def Indices(self):
    	pass

    @methodnotwrapped
    def Points(self):
    	pass

    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_BiPoint

# Register HLRAlgo_BiPoint in _HLRAlgo:
_HLRAlgo.HLRAlgo_BiPoint_swigregister(HLRAlgo_BiPoint)
class HLRAlgo_Coincidence(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _HLRAlgo.HLRAlgo_Coincidence_swiginit(self, _HLRAlgo.new_HLRAlgo_Coincidence(*args))

    def Set2D(self, *args):
        r"""

        Parameters
        ----------
        FE: int
        Param: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_Coincidence_Set2D(self, *args)

    def SetState3D(self, *args):
        r"""

        Parameters
        ----------
        stbef: TopAbs_State
        staft: TopAbs_State

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_Coincidence_SetState3D(self, *args)

    def State3D(self, *args):
        r"""

        Parameters
        ----------

        Return
        -------
        stbef: TopAbs_State
        staft: TopAbs_State

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_Coincidence_State3D(self, *args)

    def Value2D(self, *args):
        r"""

        Parameters
        ----------

        Return
        -------
        FE: int
        Param: float

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_Coincidence_Value2D(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_Coincidence

# Register HLRAlgo_Coincidence in _HLRAlgo:
_HLRAlgo.HLRAlgo_Coincidence_swigregister(HLRAlgo_Coincidence)
class HLRAlgo_EdgeIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Iterator on the visible or hidden parts of an edge.

        """
        _HLRAlgo.HLRAlgo_EdgeIterator_swiginit(self, _HLRAlgo.new_HLRAlgo_EdgeIterator(*args))

    def Hidden(self, *args):
        r"""

        Parameters
        ----------

        Return
        -------
        Start: float
        TolStart: float
        End: float
        TolEnd: float

        Description
        -----------
        Returns the bounds and the tolerances of the current hidden interval.

        """
        return _HLRAlgo.HLRAlgo_EdgeIterator_Hidden(self, *args)

    def InitHidden(self, *args):
        r"""

        Parameters
        ----------
        status: HLRAlgo_EdgeStatus

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_EdgeIterator_InitHidden(self, *args)

    def InitVisible(self, *args):
        r"""

        Parameters
        ----------
        status: HLRAlgo_EdgeStatus

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_EdgeIterator_InitVisible(self, *args)

    def MoreHidden(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_EdgeIterator_MoreHidden(self, *args)

    def MoreVisible(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_EdgeIterator_MoreVisible(self, *args)

    def NextHidden(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_EdgeIterator_NextHidden(self, *args)

    def NextVisible(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_EdgeIterator_NextVisible(self, *args)

    def Visible(self, *args):
        r"""

        Parameters
        ----------

        Return
        -------
        Start: float
        TolStart: float
        End: float
        TolEnd: float

        Description
        -----------
        Returns the bounds and the tolerances of the current visible interval.

        """
        return _HLRAlgo.HLRAlgo_EdgeIterator_Visible(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_EdgeIterator

# Register HLRAlgo_EdgeIterator in _HLRAlgo:
_HLRAlgo.HLRAlgo_EdgeIterator_swigregister(HLRAlgo_EdgeIterator)
class HLRAlgo_EdgeStatus(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Start: float
        TolStart: float
        End: float
        TolEnd: float

        Return
        -------
        None

        Description
        -----------
        Creates a new edgestatus. default visible. the edge is bounded by the interval <start>, <end> with the tolerances <tolstart>, <tolend>.

        """
        _HLRAlgo.HLRAlgo_EdgeStatus_swiginit(self, _HLRAlgo.new_HLRAlgo_EdgeStatus(*args))

    def AllHidden(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        B: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_EdgeStatus_AllHidden(self, *args)

    def AllVisible(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        B: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_EdgeStatus_AllVisible(self, *args)

    def Bounds(self, *args):
        r"""

        Parameters
        ----------

        Return
        -------
        theStart: float
        theTolStart: float
        theEnd: float
        theTolEnd: float

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_EdgeStatus_Bounds(self, *args)

    def Hide(self, *args):
        r"""

        Parameters
        ----------
        Start: float
        TolStart: float
        End: float
        TolEnd: float
        OnFace: bool
        OnBoundary: bool

        Return
        -------
        None

        Description
        -----------
        Hides the interval <start>, <end> with the tolerances <tolstart>, <tolend>. this interval is subtracted from the visible parts. if the hidden part is on ( or under ) the face the flag <onface> is true ( or false ). if the hidden part is on ( or inside ) the boundary of the face the flag <onboundary> is true ( or false ).

        """
        return _HLRAlgo.HLRAlgo_EdgeStatus_Hide(self, *args)

    def HideAll(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Hide the whole edge.

        """
        return _HLRAlgo.HLRAlgo_EdgeStatus_HideAll(self, *args)

    def Initialize(self, *args):
        r"""

        Parameters
        ----------
        Start: float
        TolStart: float
        End: float
        TolEnd: float

        Return
        -------
        None

        Description
        -----------
        Initialize an edgestatus. default visible. the edge is bounded by the interval <start>, <end> with the tolerances <tolstart>, <tolend>.

        """
        return _HLRAlgo.HLRAlgo_EdgeStatus_Initialize(self, *args)

    def NbVisiblePart(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_EdgeStatus_NbVisiblePart(self, *args)

    def ShowAll(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Show the whole edge.

        """
        return _HLRAlgo.HLRAlgo_EdgeStatus_ShowAll(self, *args)

    def VisiblePart(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        Start: float
        TolStart: float
        End: float
        TolEnd: float

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_EdgeStatus_VisiblePart(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_EdgeStatus

# Register HLRAlgo_EdgeStatus in _HLRAlgo:
_HLRAlgo.HLRAlgo_EdgeStatus_swigregister(HLRAlgo_EdgeStatus)
class HLRAlgo_EdgesBlock(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        NbEdges: int

        Return
        -------
        None

        Description
        -----------
        Create a block of edges for a wire.

        """
        _HLRAlgo.HLRAlgo_EdgesBlock_swiginit(self, _HLRAlgo.new_HLRAlgo_EdgesBlock(*args))

    def Double(self, *args):
        r"""

        Parameters
        ----------
        I: int

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        I: int
        B: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_EdgesBlock_Double(self, *args)

    def Edge(self, *args):
        r"""

        Parameters
        ----------
        I: int
        EI: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        I: int

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_EdgesBlock_Edge(self, *args)

    def Internal(self, *args):
        r"""

        Parameters
        ----------
        I: int

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        I: int
        B: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_EdgesBlock_Internal(self, *args)

    def IsoLine(self, *args):
        r"""

        Parameters
        ----------
        I: int

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        I: int
        B: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_EdgesBlock_IsoLine(self, *args)

    def MinMax(self, *args):
        r"""
        Return
        -------
        HLRAlgo_EdgesBlock::MinMaxIndices

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_EdgesBlock_MinMax(self, *args)

    def NbEdges(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_EdgesBlock_NbEdges(self, *args)

    def Orientation(self, *args):
        r"""

        Parameters
        ----------
        I: int
        Or: TopAbs_Orientation

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        I: int

        Return
        -------
        TopAbs_Orientation

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_EdgesBlock_Orientation(self, *args)

    def OutLine(self, *args):
        r"""

        Parameters
        ----------
        I: int

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        I: int
        B: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_EdgesBlock_OutLine(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_HLRAlgo_EdgesBlock_DownCast(t)


    __repr__ = _dumps_object

    @methodnotwrapped
    def UpdateMinMax(self):
    	pass

    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_EdgesBlock

# Register HLRAlgo_EdgesBlock in _HLRAlgo:
_HLRAlgo.HLRAlgo_EdgesBlock_swigregister(HLRAlgo_EdgesBlock)
class HLRAlgo_Interference(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Inters: HLRAlgo_Intersection
        Bound: HLRAlgo_Coincidence
        Orient: TopAbs_Orientation
        Trans: TopAbs_Orientation
        BTrans: TopAbs_Orientation

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _HLRAlgo.HLRAlgo_Interference_swiginit(self, _HLRAlgo.new_HLRAlgo_Interference(*args))

    def Boundary(self, *args):
        r"""

        Parameters
        ----------
        B: HLRAlgo_Coincidence

        Return
        -------
        None

        Description
        -----------
        No available documentation.
        Return
        -------
        HLRAlgo_Coincidence

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_Interference_Boundary(self, *args)

    def BoundaryTransition(self, *args):
        r"""

        Parameters
        ----------
        BTr: TopAbs_Orientation

        Return
        -------
        None

        Description
        -----------
        No available documentation.
        Return
        -------
        TopAbs_Orientation

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_Interference_BoundaryTransition(self, *args)

    def ChangeBoundary(self, *args):
        r"""
        Return
        -------
        HLRAlgo_Coincidence

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_Interference_ChangeBoundary(self, *args)

    def ChangeIntersection(self, *args):
        r"""
        Return
        -------
        HLRAlgo_Intersection

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_Interference_ChangeIntersection(self, *args)

    def Intersection(self, *args):
        r"""

        Parameters
        ----------
        I: HLRAlgo_Intersection

        Return
        -------
        None

        Description
        -----------
        No available documentation.
        Return
        -------
        HLRAlgo_Intersection

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_Interference_Intersection(self, *args)

    def Orientation(self, *args):
        r"""

        Parameters
        ----------
        O: TopAbs_Orientation

        Return
        -------
        None

        Description
        -----------
        No available documentation.
        Return
        -------
        TopAbs_Orientation

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_Interference_Orientation(self, *args)

    def Transition(self, *args):
        r"""

        Parameters
        ----------
        Tr: TopAbs_Orientation

        Return
        -------
        None

        Description
        -----------
        No available documentation.
        Return
        -------
        TopAbs_Orientation

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_Interference_Transition(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_Interference

# Register HLRAlgo_Interference in _HLRAlgo:
_HLRAlgo.HLRAlgo_Interference_swigregister(HLRAlgo_Interference)
class HLRAlgo_Intersection(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Ori: TopAbs_Orientation
        Lev: int
        SegInd: int
        Ind: int
        P: float
        Tol: float
        S: TopAbs_State

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _HLRAlgo.HLRAlgo_Intersection_swiginit(self, _HLRAlgo.new_HLRAlgo_Intersection(*args))

    def Index(self, *args):
        r"""

        Parameters
        ----------
        Ind: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_Intersection_Index(self, *args)

    def Level(self, *args):
        r"""

        Parameters
        ----------
        Lev: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_Intersection_Level(self, *args)

    def Orientation(self, *args):
        r"""

        Parameters
        ----------
        Ori: TopAbs_Orientation

        Return
        -------
        None

        Description
        -----------
        No available documentation.
        Return
        -------
        TopAbs_Orientation

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_Intersection_Orientation(self, *args)

    def Parameter(self, *args):
        r"""

        Parameters
        ----------
        P: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.
        Return
        -------
        float

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_Intersection_Parameter(self, *args)

    def SegIndex(self, *args):
        r"""

        Parameters
        ----------
        SegInd: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_Intersection_SegIndex(self, *args)

    def State(self, *args):
        r"""

        Parameters
        ----------
        S: TopAbs_State

        Return
        -------
        None

        Description
        -----------
        No available documentation.
        Return
        -------
        TopAbs_State

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_Intersection_State(self, *args)

    def Tolerance(self, *args):
        r"""

        Parameters
        ----------
        T: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.
        Return
        -------
        float

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_Intersection_Tolerance(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_Intersection

# Register HLRAlgo_Intersection in _HLRAlgo:
_HLRAlgo.HLRAlgo_Intersection_swigregister(HLRAlgo_Intersection)
class HLRAlgo_PolyAlgo(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _HLRAlgo.HLRAlgo_PolyAlgo_swiginit(self, _HLRAlgo.new_HLRAlgo_PolyAlgo(*args))

    def ChangePolyShell(self, *args):
        r"""
        Return
        -------
        NCollection_Array1<opencascade::handle<HLRAlgo_PolyShellData>>

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyAlgo_ChangePolyShell(self, *args)

    def Clear(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyAlgo_Clear(self, *args)

    def Hide(self, *args):
        r"""

        Parameters
        ----------
        status: HLRAlgo_EdgeStatus

        Return
        -------
        Index: int
        reg1: bool
        regn: bool
        outl: bool
        intl: bool

        Description
        -----------
        Process hiding between <pt1> and <pt2>.

        """
        return _HLRAlgo.HLRAlgo_PolyAlgo_Hide(self, *args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        theNbShells: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyAlgo_Init(self, *args)

    def InitHide(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyAlgo_InitHide(self, *args)

    def InitShow(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyAlgo_InitShow(self, *args)

    def MoreHide(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyAlgo_MoreHide(self, *args)

    def MoreShow(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyAlgo_MoreShow(self, *args)

    def NextHide(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyAlgo_NextHide(self, *args)

    def NextShow(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyAlgo_NextShow(self, *args)

    def PolyShell(self, *args):
        r"""
        Return
        -------
        NCollection_Array1<opencascade::handle<HLRAlgo_PolyShellData>>

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyAlgo_PolyShell(self, *args)

    def Show(self, *args):
        r"""

        Parameters
        ----------

        Return
        -------
        Index: int
        reg1: bool
        regn: bool
        outl: bool
        intl: bool

        Description
        -----------
        Process hiding between <pt1> and <pt2>.

        """
        return _HLRAlgo.HLRAlgo_PolyAlgo_Show(self, *args)

    def Update(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Prepare all the data to process the algo.

        """
        return _HLRAlgo.HLRAlgo_PolyAlgo_Update(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_HLRAlgo_PolyAlgo_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_PolyAlgo

# Register HLRAlgo_PolyAlgo in _HLRAlgo:
_HLRAlgo.HLRAlgo_PolyAlgo_swigregister(HLRAlgo_PolyAlgo)
class HLRAlgo_PolyData(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _HLRAlgo.HLRAlgo_PolyData_swiginit(self, _HLRAlgo.new_HLRAlgo_PolyData(*args))

    def FaceIndex(self, *args):
        r"""

        Parameters
        ----------
        I: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyData_FaceIndex(self, *args)

    def HNodes(self, *args):
        r"""

        Parameters
        ----------
        HNodes: TColgp_HArray1OfXYZ

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyData_HNodes(self, *args)

    def HPHDat(self, *args):
        r"""

        Parameters
        ----------
        HPHDat: HLRAlgo_HArray1OfPHDat

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyData_HPHDat(self, *args)

    def HTData(self, *args):
        r"""

        Parameters
        ----------
        HTData: HLRAlgo_HArray1OfTData

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyData_HTData(self, *args)

    def Hiding(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyData_Hiding(self, *args)

    def Nodes(self, *args):
        r"""
        Return
        -------
        TColgp_Array1OfXYZ

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyData_Nodes(self, *args)

    def PHDat(self, *args):
        r"""
        Return
        -------
        HLRAlgo_Array1OfPHDat

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyData_PHDat(self, *args)

    def TData(self, *args):
        r"""
        Return
        -------
        HLRAlgo_Array1OfTData

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyData_TData(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_HLRAlgo_PolyData_DownCast(t)


    __repr__ = _dumps_object

    @methodnotwrapped
    def UpdateGlobalMinMax(self):
    	pass

    @methodnotwrapped
    def HideByPolyData(self):
    	pass

    @methodnotwrapped
    def Indices(self):
    	pass

    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_PolyData

# Register HLRAlgo_PolyData in _HLRAlgo:
_HLRAlgo.HLRAlgo_PolyData_swigregister(HLRAlgo_PolyData)
class HLRAlgo_PolyInternalData(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        nbNod: int
        nbTri: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _HLRAlgo.HLRAlgo_PolyInternalData_swiginit(self, _HLRAlgo.new_HLRAlgo_PolyInternalData(*args))

    def AddNode(self, *args):
        r"""

        Parameters
        ----------
        theNod1RValues: HLRAlgo_PolyInternalNode::NodeData
        theNod2RValues: HLRAlgo_PolyInternalNode::NodeData
        thePINod1: HLRAlgo_Array1OfPINod *
        thePINod2: HLRAlgo_Array1OfPINod *
        theCoef1: float
        theX3: float
        theY3: float
        theZ3: float

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyInternalData_AddNode(self, *args)

    def DecPINod(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyInternalData_DecPINod(self, *args)

    def DecPISeg(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyInternalData_DecPISeg(self, *args)

    def DecTData(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyInternalData_DecTData(self, *args)

    def Dump(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyInternalData_Dump(self, *args)

    def IncPINod(self, *args):
        r"""

        Parameters
        ----------
        thePINod1: HLRAlgo_Array1OfPINod *
        thePINod2: HLRAlgo_Array1OfPINod *

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyInternalData_IncPINod(self, *args)

    def IncPISeg(self, *args):
        r"""

        Parameters
        ----------
        PISeg1: HLRAlgo_Array1OfPISeg *
        PISeg2: HLRAlgo_Array1OfPISeg *

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyInternalData_IncPISeg(self, *args)

    def IncTData(self, *args):
        r"""

        Parameters
        ----------
        TData1: HLRAlgo_Array1OfTData *
        TData2: HLRAlgo_Array1OfTData *

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyInternalData_IncTData(self, *args)

    def IntOutL(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        B: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyInternalData_IntOutL(self, *args)

    def NbPINod(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyInternalData_NbPINod(self, *args)

    def NbPISeg(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyInternalData_NbPISeg(self, *args)

    def NbTData(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyInternalData_NbTData(self, *args)

    def PINod(self, *args):
        r"""
        Return
        -------
        HLRAlgo_Array1OfPINod

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyInternalData_PINod(self, *args)

    def PISeg(self, *args):
        r"""
        Return
        -------
        HLRAlgo_Array1OfPISeg

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyInternalData_PISeg(self, *args)

    def Planar(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        B: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyInternalData_Planar(self, *args)

    def TData(self, *args):
        r"""
        Return
        -------
        HLRAlgo_Array1OfTData

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyInternalData_TData(self, *args)

    def UpdateLinks(self, *args):
        r"""

        Parameters
        ----------
        theTData: HLRAlgo_Array1OfTData
        thePISeg: HLRAlgo_Array1OfPISeg
        thePINod: HLRAlgo_Array1OfPINod

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        theIp1: int
        theIp2: int
        theIp3: int
        theTData1: HLRAlgo_Array1OfTData *
        theTData2: HLRAlgo_Array1OfTData *
        thePISeg1: HLRAlgo_Array1OfPISeg *
        thePISeg2: HLRAlgo_Array1OfPISeg *
        thePINod1: HLRAlgo_Array1OfPINod *
        thePINod2: HLRAlgo_Array1OfPINod *

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyInternalData_UpdateLinks(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_HLRAlgo_PolyInternalData_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_PolyInternalData

# Register HLRAlgo_PolyInternalData in _HLRAlgo:
_HLRAlgo.HLRAlgo_PolyInternalData_swigregister(HLRAlgo_PolyInternalData)
class HLRAlgo_PolyInternalNode(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _HLRAlgo.HLRAlgo_PolyInternalNode_swiginit(self, _HLRAlgo.new_HLRAlgo_PolyInternalNode(*args))


    @staticmethod
    def DownCast(t):
      return Handle_HLRAlgo_PolyInternalNode_DownCast(t)


    __repr__ = _dumps_object

    @methodnotwrapped
    def Indices(self):
    	pass

    @methodnotwrapped
    def Data(self):
    	pass

    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_PolyInternalNode

# Register HLRAlgo_PolyInternalNode in _HLRAlgo:
_HLRAlgo.HLRAlgo_PolyInternalNode_swigregister(HLRAlgo_PolyInternalNode)
class HLRAlgo_PolyShellData(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        nbFace: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _HLRAlgo.HLRAlgo_PolyShellData_swiginit(self, _HLRAlgo.new_HLRAlgo_PolyShellData(*args))

    def Edges(self, *args):
        r"""
        Return
        -------
        HLRAlgo_ListOfBPoint

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyShellData_Edges(self, *args)

    def Hiding(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyShellData_Hiding(self, *args)

    def HidingPolyData(self, *args):
        r"""
        Return
        -------
        NCollection_Array1<opencascade::handle<HLRAlgo_PolyData>>

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyShellData_HidingPolyData(self, *args)

    def PolyData(self, *args):
        r"""
        Return
        -------
        NCollection_Array1<opencascade::handle<HLRAlgo_PolyData>>

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyShellData_PolyData(self, *args)

    def UpdateGlobalMinMax(self, *args):
        r"""

        Parameters
        ----------
        theBox: HLRAlgo_PolyData::Box

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyShellData_UpdateGlobalMinMax(self, *args)

    def UpdateHiding(self, *args):
        r"""

        Parameters
        ----------
        nbHiding: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_PolyShellData_UpdateHiding(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_HLRAlgo_PolyShellData_DownCast(t)


    __repr__ = _dumps_object

    @methodnotwrapped
    def Indices(self):
    	pass

    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_PolyShellData

# Register HLRAlgo_PolyShellData in _HLRAlgo:
_HLRAlgo.HLRAlgo_PolyShellData_swigregister(HLRAlgo_PolyShellData)
class HLRAlgo_Projector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        CS: gp_Ax2

        Return
        -------
        None

        Description
        -----------
        Creates an axonometric projector. <cs> is the viewing coordinate system.

        Parameters
        ----------
        CS: gp_Ax2
        Focus: float

        Return
        -------
        None

        Description
        -----------
        Creates a perspective projector. <cs> is the viewing coordinate system.

        Parameters
        ----------
        T: gp_Trsf
        Persp: bool
        Focus: float

        Return
        -------
        None

        Description
        -----------
        Build a projector with automatic minmax directions.

        Parameters
        ----------
        T: gp_Trsf
        Persp: bool
        Focus: float
        v1: gp_Vec2d
        v2: gp_Vec2d
        v3: gp_Vec2d

        Return
        -------
        None

        Description
        -----------
        Build a projector with given minmax directions.

        """
        _HLRAlgo.HLRAlgo_Projector_swiginit(self, _HLRAlgo.new_HLRAlgo_Projector(*args))

    def Directions(self, *args):
        r"""

        Parameters
        ----------
        D1: gp_Vec2d
        D2: gp_Vec2d
        D3: gp_Vec2d

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_Projector_Directions(self, *args)

    def Focus(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns the focal length.

        """
        return _HLRAlgo.HLRAlgo_Projector_Focus(self, *args)

    def FullTransformation(self, *args):
        r"""
        Return
        -------
        gp_Trsf

        Description
        -----------
        Returns the original transformation.

        """
        return _HLRAlgo.HLRAlgo_Projector_FullTransformation(self, *args)

    def InvertedTransformation(self, *args):
        r"""
        Return
        -------
        gp_Trsf

        Description
        -----------
        Returns the active inverted transformation.

        """
        return _HLRAlgo.HLRAlgo_Projector_InvertedTransformation(self, *args)

    def Perspective(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if there is a perspective transformation.

        """
        return _HLRAlgo.HLRAlgo_Projector_Perspective(self, *args)

    def Project(self, *args):
        r"""

        Parameters
        ----------
        P: gp_Pnt
        Pout: gp_Pnt2d

        Return
        -------
        None

        Description
        -----------
        Transform and apply perspective if needed.

        Parameters
        ----------
        P: gp_Pnt

        Return
        -------
        X: float
        Y: float
        Z: float

        Description
        -----------
        Transform and apply perspective if needed.

        Parameters
        ----------
        P: gp_Pnt
        D1: gp_Vec
        Pout: gp_Pnt2d
        D1out: gp_Vec2d

        Return
        -------
        None

        Description
        -----------
        Transform and apply perspective if needed.

        """
        return _HLRAlgo.HLRAlgo_Projector_Project(self, *args)

    def Scaled(self, *args):
        r"""

        Parameters
        ----------
        On: bool (optional, default to Standard_False)

        Return
        -------
        None

        Description
        -----------
        To compute with the given scale and translation.

        """
        return _HLRAlgo.HLRAlgo_Projector_Scaled(self, *args)

    def Set(self, *args):
        r"""

        Parameters
        ----------
        T: gp_Trsf
        Persp: bool
        Focus: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_Projector_Set(self, *args)

    def Shoot(self, *args):
        r"""

        Parameters
        ----------
        X: float
        Y: float

        Return
        -------
        gp_Lin

        Description
        -----------
        Return a line going through the eye towards the 2d point <x,y>.

        """
        return _HLRAlgo.HLRAlgo_Projector_Shoot(self, *args)

    def Transform(self, *args):
        r"""

        Parameters
        ----------
        D: gp_Vec

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Pnt: gp_Pnt

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_Projector_Transform(self, *args)

    def Transformation(self, *args):
        r"""
        Return
        -------
        gp_Trsf

        Description
        -----------
        Returns the active transformation.

        """
        return _HLRAlgo.HLRAlgo_Projector_Transformation(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_Projector

# Register HLRAlgo_Projector in _HLRAlgo:
_HLRAlgo.HLRAlgo_Projector_swigregister(HLRAlgo_Projector)
class HLRAlgo_WiresBlock(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        NbWires: int

        Return
        -------
        None

        Description
        -----------
        Create a block of blocks.

        """
        _HLRAlgo.HLRAlgo_WiresBlock_swiginit(self, _HLRAlgo.new_HLRAlgo_WiresBlock(*args))

    def MinMax(self, *args):
        r"""
        Return
        -------
        HLRAlgo_EdgesBlock::MinMaxIndices

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_WiresBlock_MinMax(self, *args)

    def NbWires(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_WiresBlock_NbWires(self, *args)

    def Set(self, *args):
        r"""

        Parameters
        ----------
        I: int
        W: HLRAlgo_EdgesBlock

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_WiresBlock_Set(self, *args)

    def UpdateMinMax(self, *args):
        r"""

        Parameters
        ----------
        theMinMaxes: HLRAlgo_EdgesBlock::MinMaxIndices

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_WiresBlock_UpdateMinMax(self, *args)

    def Wire(self, *args):
        r"""

        Parameters
        ----------
        I: int

        Return
        -------
        opencascade::handle<HLRAlgo_EdgesBlock>

        Description
        -----------
        No available documentation.

        """
        return _HLRAlgo.HLRAlgo_WiresBlock_Wire(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_HLRAlgo_WiresBlock_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_WiresBlock

# Register HLRAlgo_WiresBlock in _HLRAlgo:
_HLRAlgo.HLRAlgo_WiresBlock_swigregister(HLRAlgo_WiresBlock)

@classnotwrapped
class HLRAlgo_TriangleData:
	pass

@classnotwrapped
class HLRAlgo_PolyInternalSegment:
	pass

@classnotwrapped
class HLRAlgo_PolyHidingData:
	pass


class HLRAlgo_HArray1OfPISeg(HLRAlgo_Array1OfPISeg, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _HLRAlgo.HLRAlgo_HArray1OfPISeg_swiginit(self, _HLRAlgo.new_HLRAlgo_HArray1OfPISeg(*args))

    def Array1(self):
        return _HLRAlgo.HLRAlgo_HArray1OfPISeg_Array1(self)

    def ChangeArray1(self):
        return _HLRAlgo.HLRAlgo_HArray1OfPISeg_ChangeArray1(self)


    @staticmethod
    def DownCast(t):
      return Handle_HLRAlgo_HArray1OfPISeg_DownCast(t)

    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_HArray1OfPISeg

# Register HLRAlgo_HArray1OfPISeg in _HLRAlgo:
_HLRAlgo.HLRAlgo_HArray1OfPISeg_swigregister(HLRAlgo_HArray1OfPISeg)
class HLRAlgo_HArray1OfPINod(HLRAlgo_Array1OfPINod, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _HLRAlgo.HLRAlgo_HArray1OfPINod_swiginit(self, _HLRAlgo.new_HLRAlgo_HArray1OfPINod(*args))

    def Array1(self):
        return _HLRAlgo.HLRAlgo_HArray1OfPINod_Array1(self)

    def ChangeArray1(self):
        return _HLRAlgo.HLRAlgo_HArray1OfPINod_ChangeArray1(self)


    @staticmethod
    def DownCast(t):
      return Handle_HLRAlgo_HArray1OfPINod_DownCast(t)

    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_HArray1OfPINod

# Register HLRAlgo_HArray1OfPINod in _HLRAlgo:
_HLRAlgo.HLRAlgo_HArray1OfPINod_swigregister(HLRAlgo_HArray1OfPINod)
class HLRAlgo_HArray1OfPHDat(HLRAlgo_Array1OfPHDat, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _HLRAlgo.HLRAlgo_HArray1OfPHDat_swiginit(self, _HLRAlgo.new_HLRAlgo_HArray1OfPHDat(*args))

    def Array1(self):
        return _HLRAlgo.HLRAlgo_HArray1OfPHDat_Array1(self)

    def ChangeArray1(self):
        return _HLRAlgo.HLRAlgo_HArray1OfPHDat_ChangeArray1(self)


    @staticmethod
    def DownCast(t):
      return Handle_HLRAlgo_HArray1OfPHDat_DownCast(t)

    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_HArray1OfPHDat

# Register HLRAlgo_HArray1OfPHDat in _HLRAlgo:
_HLRAlgo.HLRAlgo_HArray1OfPHDat_swigregister(HLRAlgo_HArray1OfPHDat)
class HLRAlgo_HArray1OfTData(HLRAlgo_Array1OfTData, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _HLRAlgo.HLRAlgo_HArray1OfTData_swiginit(self, _HLRAlgo.new_HLRAlgo_HArray1OfTData(*args))

    def Array1(self):
        return _HLRAlgo.HLRAlgo_HArray1OfTData_Array1(self)

    def ChangeArray1(self):
        return _HLRAlgo.HLRAlgo_HArray1OfTData_ChangeArray1(self)


    @staticmethod
    def DownCast(t):
      return Handle_HLRAlgo_HArray1OfTData_DownCast(t)

    __swig_destroy__ = _HLRAlgo.delete_HLRAlgo_HArray1OfTData

# Register HLRAlgo_HArray1OfTData in _HLRAlgo:
_HLRAlgo.HLRAlgo_HArray1OfTData_swigregister(HLRAlgo_HArray1OfTData)



@deprecated
def hlralgo_AddMinMax(*args):
	return hlralgo.AddMinMax(*args)

@deprecated
def hlralgo_CopyMinMax(*args):
	return hlralgo.CopyMinMax(*args)

@deprecated
def hlralgo_DecodeMinMax(*args):
	return hlralgo.DecodeMinMax(*args)

@deprecated
def hlralgo_EncodeMinMax(*args):
	return hlralgo.EncodeMinMax(*args)

@deprecated
def hlralgo_EnlargeMinMax(*args):
	return hlralgo.EnlargeMinMax(*args)

@deprecated
def hlralgo_InitMinMax(*args):
	return hlralgo.InitMinMax(*args)

@deprecated
def hlralgo_SizeBox(*args):
	return hlralgo.SizeBox(*args)

@deprecated
def hlralgo_UpdateMinMax(*args):
	return hlralgo.UpdateMinMax(*args)



