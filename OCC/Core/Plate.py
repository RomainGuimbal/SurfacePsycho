# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

"""
Plate module, see official documentation at
https://www.opencascade.com/doc/occt-7.7.0/refman/html/package_plate.html
"""

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _Plate
else:
    import _Plate

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _Plate.delete_SwigPyIterator

    def value(self):
        return _Plate.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _Plate.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _Plate.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _Plate.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _Plate.SwigPyIterator_equal(self, x)

    def copy(self):
        return _Plate.SwigPyIterator_copy(self)

    def next(self):
        return _Plate.SwigPyIterator_next(self)

    def __next__(self):
        return _Plate.SwigPyIterator___next__(self)

    def previous(self):
        return _Plate.SwigPyIterator_previous(self)

    def advance(self, n):
        return _Plate.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _Plate.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _Plate.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _Plate.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _Plate.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _Plate.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _Plate.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _Plate:
_Plate.SwigPyIterator_swigregister(SwigPyIterator)

def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error, method_name, class_name):
    return _Plate.process_exception(error, method_name, class_name)

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.gp
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.TColgp
import OCC.Core.Message
import OCC.Core.OSD

from enum import IntEnum
from OCC.Core.Exception import *




def Handle_Plate_HArray1OfPinpointConstraint_Create():
    return _Plate.Handle_Plate_HArray1OfPinpointConstraint_Create()

def Handle_Plate_HArray1OfPinpointConstraint_DownCast(t):
    return _Plate.Handle_Plate_HArray1OfPinpointConstraint_DownCast(t)

def Handle_Plate_HArray1OfPinpointConstraint_IsNull(t):
    return _Plate.Handle_Plate_HArray1OfPinpointConstraint_IsNull(t)
class Plate_Array1OfPinpointConstraint(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _Plate.Plate_Array1OfPinpointConstraint_begin(self)

    def end(self):
        return _Plate.Plate_Array1OfPinpointConstraint_end(self)

    def cbegin(self):
        return _Plate.Plate_Array1OfPinpointConstraint_cbegin(self)

    def cend(self):
        return _Plate.Plate_Array1OfPinpointConstraint_cend(self)

    def __init__(self, *args):
        _Plate.Plate_Array1OfPinpointConstraint_swiginit(self, _Plate.new_Plate_Array1OfPinpointConstraint(*args))

    def Init(self, theValue):
        return _Plate.Plate_Array1OfPinpointConstraint_Init(self, theValue)

    def Size(self):
        return _Plate.Plate_Array1OfPinpointConstraint_Size(self)

    def Length(self):
        return _Plate.Plate_Array1OfPinpointConstraint_Length(self)

    def IsEmpty(self):
        return _Plate.Plate_Array1OfPinpointConstraint_IsEmpty(self)

    def Lower(self):
        return _Plate.Plate_Array1OfPinpointConstraint_Lower(self)

    def Upper(self):
        return _Plate.Plate_Array1OfPinpointConstraint_Upper(self)

    def IsDeletable(self):
        return _Plate.Plate_Array1OfPinpointConstraint_IsDeletable(self)

    def IsAllocated(self):
        return _Plate.Plate_Array1OfPinpointConstraint_IsAllocated(self)

    def Assign(self, theOther):
        return _Plate.Plate_Array1OfPinpointConstraint_Assign(self, theOther)

    def Move(self, theOther):
        return _Plate.Plate_Array1OfPinpointConstraint_Move(self, theOther)

    def Set(self, *args):
        return _Plate.Plate_Array1OfPinpointConstraint_Set(self, *args)

    def First(self):
        return _Plate.Plate_Array1OfPinpointConstraint_First(self)

    def ChangeFirst(self):
        return _Plate.Plate_Array1OfPinpointConstraint_ChangeFirst(self)

    def Last(self):
        return _Plate.Plate_Array1OfPinpointConstraint_Last(self)

    def ChangeLast(self):
        return _Plate.Plate_Array1OfPinpointConstraint_ChangeLast(self)

    def Value(self, theIndex):
        return _Plate.Plate_Array1OfPinpointConstraint_Value(self, theIndex)

    def ChangeValue(self, theIndex):
        return _Plate.Plate_Array1OfPinpointConstraint_ChangeValue(self, theIndex)

    def __call__(self, *args):
        return _Plate.Plate_Array1OfPinpointConstraint___call__(self, *args)

    def SetValue(self, theIndex, theItem):
        return _Plate.Plate_Array1OfPinpointConstraint_SetValue(self, theIndex, theItem)

    def Resize(self, theLower, theUpper, theToCopyData):
        return _Plate.Plate_Array1OfPinpointConstraint_Resize(self, theLower, theUpper, theToCopyData)
    __swig_destroy__ = _Plate.delete_Plate_Array1OfPinpointConstraint

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register Plate_Array1OfPinpointConstraint in _Plate:
_Plate.Plate_Array1OfPinpointConstraint_swigregister(Plate_Array1OfPinpointConstraint)
class Plate_SequenceOfLinearScalarConstraint(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_begin(self)

    def end(self):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_end(self)

    def cbegin(self):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_cbegin(self)

    def cend(self):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_cend(self)

    def __init__(self, *args):
        _Plate.Plate_SequenceOfLinearScalarConstraint_swiginit(self, _Plate.new_Plate_SequenceOfLinearScalarConstraint(*args))

    def Size(self):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_Size(self)

    def Length(self):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_Length(self)

    def Lower(self):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_Lower(self)

    def Upper(self):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_Upper(self)

    def IsEmpty(self):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_IsEmpty(self)

    def Reverse(self):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_Reverse(self)

    def Exchange(self, I, J):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_Exchange(self, I, J)

    @staticmethod
    def delNode(theNode, theAl):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_delNode(theNode, theAl)

    def Clear(self, theAllocator=0):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_Clear(self, theAllocator)

    def Assign(self, theOther):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_Assign(self, theOther)

    def Set(self, theOther):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_Set(self, theOther)

    def Remove(self, *args):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_Remove(self, *args)

    def Append(self, *args):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_Append(self, *args)

    def Prepend(self, *args):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_Prepend(self, *args)

    def InsertBefore(self, *args):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_InsertAfter(self, *args)

    def Split(self, theIndex, theSeq):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_Split(self, theIndex, theSeq)

    def First(self):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_First(self)

    def ChangeFirst(self):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_ChangeFirst(self)

    def Last(self):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_Last(self)

    def ChangeLast(self):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_ChangeLast(self)

    def Value(self, theIndex):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_Value(self, theIndex)

    def ChangeValue(self, theIndex):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_ChangeValue(self, theIndex)

    def __call__(self, *args):
        return _Plate.Plate_SequenceOfLinearScalarConstraint___call__(self, *args)

    def SetValue(self, theIndex, theItem):
        return _Plate.Plate_SequenceOfLinearScalarConstraint_SetValue(self, theIndex, theItem)
    __swig_destroy__ = _Plate.delete_Plate_SequenceOfLinearScalarConstraint

    def __len__(self):
        return self.Size()


# Register Plate_SequenceOfLinearScalarConstraint in _Plate:
_Plate.Plate_SequenceOfLinearScalarConstraint_swigregister(Plate_SequenceOfLinearScalarConstraint)
class Plate_SequenceOfLinearXYZConstraint(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_begin(self)

    def end(self):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_end(self)

    def cbegin(self):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_cbegin(self)

    def cend(self):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_cend(self)

    def __init__(self, *args):
        _Plate.Plate_SequenceOfLinearXYZConstraint_swiginit(self, _Plate.new_Plate_SequenceOfLinearXYZConstraint(*args))

    def Size(self):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_Size(self)

    def Length(self):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_Length(self)

    def Lower(self):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_Lower(self)

    def Upper(self):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_Upper(self)

    def IsEmpty(self):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_IsEmpty(self)

    def Reverse(self):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_Reverse(self)

    def Exchange(self, I, J):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_Exchange(self, I, J)

    @staticmethod
    def delNode(theNode, theAl):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_delNode(theNode, theAl)

    def Clear(self, theAllocator=0):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_Clear(self, theAllocator)

    def Assign(self, theOther):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_Assign(self, theOther)

    def Set(self, theOther):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_Set(self, theOther)

    def Remove(self, *args):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_Remove(self, *args)

    def Append(self, *args):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_Append(self, *args)

    def Prepend(self, *args):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_Prepend(self, *args)

    def InsertBefore(self, *args):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_InsertAfter(self, *args)

    def Split(self, theIndex, theSeq):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_Split(self, theIndex, theSeq)

    def First(self):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_First(self)

    def ChangeFirst(self):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_ChangeFirst(self)

    def Last(self):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_Last(self)

    def ChangeLast(self):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_ChangeLast(self)

    def Value(self, theIndex):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_Value(self, theIndex)

    def ChangeValue(self, theIndex):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_ChangeValue(self, theIndex)

    def __call__(self, *args):
        return _Plate.Plate_SequenceOfLinearXYZConstraint___call__(self, *args)

    def SetValue(self, theIndex, theItem):
        return _Plate.Plate_SequenceOfLinearXYZConstraint_SetValue(self, theIndex, theItem)
    __swig_destroy__ = _Plate.delete_Plate_SequenceOfLinearXYZConstraint

    def __len__(self):
        return self.Size()


# Register Plate_SequenceOfLinearXYZConstraint in _Plate:
_Plate.Plate_SequenceOfLinearXYZConstraint_swigregister(Plate_SequenceOfLinearXYZConstraint)
class Plate_SequenceOfPinpointConstraint(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _Plate.Plate_SequenceOfPinpointConstraint_begin(self)

    def end(self):
        return _Plate.Plate_SequenceOfPinpointConstraint_end(self)

    def cbegin(self):
        return _Plate.Plate_SequenceOfPinpointConstraint_cbegin(self)

    def cend(self):
        return _Plate.Plate_SequenceOfPinpointConstraint_cend(self)

    def __init__(self, *args):
        _Plate.Plate_SequenceOfPinpointConstraint_swiginit(self, _Plate.new_Plate_SequenceOfPinpointConstraint(*args))

    def Size(self):
        return _Plate.Plate_SequenceOfPinpointConstraint_Size(self)

    def Length(self):
        return _Plate.Plate_SequenceOfPinpointConstraint_Length(self)

    def Lower(self):
        return _Plate.Plate_SequenceOfPinpointConstraint_Lower(self)

    def Upper(self):
        return _Plate.Plate_SequenceOfPinpointConstraint_Upper(self)

    def IsEmpty(self):
        return _Plate.Plate_SequenceOfPinpointConstraint_IsEmpty(self)

    def Reverse(self):
        return _Plate.Plate_SequenceOfPinpointConstraint_Reverse(self)

    def Exchange(self, I, J):
        return _Plate.Plate_SequenceOfPinpointConstraint_Exchange(self, I, J)

    @staticmethod
    def delNode(theNode, theAl):
        return _Plate.Plate_SequenceOfPinpointConstraint_delNode(theNode, theAl)

    def Clear(self, theAllocator=0):
        return _Plate.Plate_SequenceOfPinpointConstraint_Clear(self, theAllocator)

    def Assign(self, theOther):
        return _Plate.Plate_SequenceOfPinpointConstraint_Assign(self, theOther)

    def Set(self, theOther):
        return _Plate.Plate_SequenceOfPinpointConstraint_Set(self, theOther)

    def Remove(self, *args):
        return _Plate.Plate_SequenceOfPinpointConstraint_Remove(self, *args)

    def Append(self, *args):
        return _Plate.Plate_SequenceOfPinpointConstraint_Append(self, *args)

    def Prepend(self, *args):
        return _Plate.Plate_SequenceOfPinpointConstraint_Prepend(self, *args)

    def InsertBefore(self, *args):
        return _Plate.Plate_SequenceOfPinpointConstraint_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        return _Plate.Plate_SequenceOfPinpointConstraint_InsertAfter(self, *args)

    def Split(self, theIndex, theSeq):
        return _Plate.Plate_SequenceOfPinpointConstraint_Split(self, theIndex, theSeq)

    def First(self):
        return _Plate.Plate_SequenceOfPinpointConstraint_First(self)

    def ChangeFirst(self):
        return _Plate.Plate_SequenceOfPinpointConstraint_ChangeFirst(self)

    def Last(self):
        return _Plate.Plate_SequenceOfPinpointConstraint_Last(self)

    def ChangeLast(self):
        return _Plate.Plate_SequenceOfPinpointConstraint_ChangeLast(self)

    def Value(self, theIndex):
        return _Plate.Plate_SequenceOfPinpointConstraint_Value(self, theIndex)

    def ChangeValue(self, theIndex):
        return _Plate.Plate_SequenceOfPinpointConstraint_ChangeValue(self, theIndex)

    def __call__(self, *args):
        return _Plate.Plate_SequenceOfPinpointConstraint___call__(self, *args)

    def SetValue(self, theIndex, theItem):
        return _Plate.Plate_SequenceOfPinpointConstraint_SetValue(self, theIndex, theItem)
    __swig_destroy__ = _Plate.delete_Plate_SequenceOfPinpointConstraint

    def __len__(self):
        return self.Size()


# Register Plate_SequenceOfPinpointConstraint in _Plate:
_Plate.Plate_SequenceOfPinpointConstraint_swigregister(Plate_SequenceOfPinpointConstraint)
class Plate_D1(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        du: gp_XYZ
        dv: gp_XYZ

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        ref: Plate_D1

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _Plate.Plate_D1_swiginit(self, _Plate.new_Plate_D1(*args))

    def DU(self, *args):
        r"""
        Return
        -------
        gp_XYZ

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_D1_DU(self, *args)

    def DV(self, *args):
        r"""
        Return
        -------
        gp_XYZ

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_D1_DV(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _Plate.delete_Plate_D1

# Register Plate_D1 in _Plate:
_Plate.Plate_D1_swigregister(Plate_D1)
class Plate_D2(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        duu: gp_XYZ
        duv: gp_XYZ
        dvv: gp_XYZ

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        ref: Plate_D2

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _Plate.Plate_D2_swiginit(self, _Plate.new_Plate_D2(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Plate.delete_Plate_D2

# Register Plate_D2 in _Plate:
_Plate.Plate_D2_swigregister(Plate_D2)
class Plate_D3(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        duuu: gp_XYZ
        duuv: gp_XYZ
        duvv: gp_XYZ
        dvvv: gp_XYZ

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        ref: Plate_D3

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _Plate.Plate_D3_swiginit(self, _Plate.new_Plate_D3(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _Plate.delete_Plate_D3

# Register Plate_D3 in _Plate:
_Plate.Plate_D3_swigregister(Plate_D3)
class Plate_FreeGtoCConstraint(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        point2d: gp_XY
        D1S: Plate_D1
        D1T: Plate_D1
        IncrementalLoad: float (optional, default to 1.0)
        orientation: int (optional, default to 0)

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        point2d: gp_XY
        D1S: Plate_D1
        D1T: Plate_D1
        D2S: Plate_D2
        D2T: Plate_D2
        IncrementalLoad: float (optional, default to 1.0)
        orientation: int (optional, default to 0)

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        point2d: gp_XY
        D1S: Plate_D1
        D1T: Plate_D1
        D2S: Plate_D2
        D2T: Plate_D2
        D3S: Plate_D3
        D3T: Plate_D3
        IncrementalLoad: float (optional, default to 1.0)
        orientation: int (optional, default to 0)

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _Plate.Plate_FreeGtoCConstraint_swiginit(self, _Plate.new_Plate_FreeGtoCConstraint(*args))

    def GetPPC(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        Plate_PinpointConstraint

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_FreeGtoCConstraint_GetPPC(self, *args)

    def LSC(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        Plate_LinearScalarConstraint

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_FreeGtoCConstraint_LSC(self, *args)

    def nb_LSC(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_FreeGtoCConstraint_nb_LSC(self, *args)

    def nb_PPC(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_FreeGtoCConstraint_nb_PPC(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _Plate.delete_Plate_FreeGtoCConstraint

# Register Plate_FreeGtoCConstraint in _Plate:
_Plate.Plate_FreeGtoCConstraint_swigregister(Plate_FreeGtoCConstraint)
class Plate_GlobalTranslationConstraint(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        SOfXY: TColgp_SequenceOfXY

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _Plate.Plate_GlobalTranslationConstraint_swiginit(self, _Plate.new_Plate_GlobalTranslationConstraint(*args))

    def LXYZC(self, *args):
        r"""
        Return
        -------
        Plate_LinearXYZConstraint

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_GlobalTranslationConstraint_LXYZC(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _Plate.delete_Plate_GlobalTranslationConstraint

# Register Plate_GlobalTranslationConstraint in _Plate:
_Plate.Plate_GlobalTranslationConstraint_swigregister(Plate_GlobalTranslationConstraint)
class Plate_GtoCConstraint(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        ref: Plate_GtoCConstraint

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        point2d: gp_XY
        D1S: Plate_D1
        D1T: Plate_D1

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        point2d: gp_XY
        D1S: Plate_D1
        D1T: Plate_D1
        nP: gp_XYZ

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        point2d: gp_XY
        D1S: Plate_D1
        D1T: Plate_D1
        D2S: Plate_D2
        D2T: Plate_D2

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        point2d: gp_XY
        D1S: Plate_D1
        D1T: Plate_D1
        D2S: Plate_D2
        D2T: Plate_D2
        nP: gp_XYZ

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        point2d: gp_XY
        D1S: Plate_D1
        D1T: Plate_D1
        D2S: Plate_D2
        D2T: Plate_D2
        D3S: Plate_D3
        D3T: Plate_D3

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        point2d: gp_XY
        D1S: Plate_D1
        D1T: Plate_D1
        D2S: Plate_D2
        D2T: Plate_D2
        D3S: Plate_D3
        D3T: Plate_D3
        nP: gp_XYZ

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _Plate.Plate_GtoCConstraint_swiginit(self, _Plate.new_Plate_GtoCConstraint(*args))

    def D1SurfInit(self, *args):
        r"""
        Return
        -------
        Plate_D1

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_GtoCConstraint_D1SurfInit(self, *args)

    def GetPPC(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        Plate_PinpointConstraint

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_GtoCConstraint_GetPPC(self, *args)

    def nb_PPC(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_GtoCConstraint_nb_PPC(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _Plate.delete_Plate_GtoCConstraint

# Register Plate_GtoCConstraint in _Plate:
_Plate.Plate_GtoCConstraint_swigregister(Plate_GtoCConstraint)
class Plate_LineConstraint(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        point2d: gp_XY
        lin: gp_Lin
        iu: int (optional, default to 0)
        iv: int (optional, default to 0)

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _Plate.Plate_LineConstraint_swiginit(self, _Plate.new_Plate_LineConstraint(*args))

    def LSC(self, *args):
        r"""
        Return
        -------
        Plate_LinearScalarConstraint

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_LineConstraint_LSC(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _Plate.delete_Plate_LineConstraint

# Register Plate_LineConstraint in _Plate:
_Plate.Plate_LineConstraint_swigregister(Plate_LineConstraint)
class Plate_LinearScalarConstraint(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        thePPC1: Plate_PinpointConstraint
        theCoeff: gp_XYZ

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        thePPC: Plate_Array1OfPinpointConstraint
        theCoeff: TColgp_Array1OfXYZ

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        thePPC: Plate_Array1OfPinpointConstraint
        theCoeff: TColgp_Array2OfXYZ

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        ColLen: int
        RowLen: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _Plate.Plate_LinearScalarConstraint_swiginit(self, _Plate.new_Plate_LinearScalarConstraint(*args))

    def Coeff(self, *args):
        r"""
        Return
        -------
        TColgp_Array2OfXYZ

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_LinearScalarConstraint_Coeff(self, *args)

    def GetPPC(self, *args):
        r"""
        Return
        -------
        Plate_Array1OfPinpointConstraint

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_LinearScalarConstraint_GetPPC(self, *args)

    def SetCoeff(self, *args):
        r"""

        Parameters
        ----------
        Row: int
        Col: int
        Value: gp_XYZ

        Return
        -------
        None

        Description
        -----------
        Sets the coeff of index (row,col) to value raise if row (respectively col) is greater than the row (respectively column) length of coeff.

        """
        return _Plate.Plate_LinearScalarConstraint_SetCoeff(self, *args)

    def SetPPC(self, *args):
        r"""

        Parameters
        ----------
        Index: int
        Value: Plate_PinpointConstraint

        Return
        -------
        None

        Description
        -----------
        Sets the pinpointconstraint of index index to value raise if index is greater than the length of ppc or the row length of coeff or lower than 1.

        """
        return _Plate.Plate_LinearScalarConstraint_SetPPC(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _Plate.delete_Plate_LinearScalarConstraint

# Register Plate_LinearScalarConstraint in _Plate:
_Plate.Plate_LinearScalarConstraint_swigregister(Plate_LinearScalarConstraint)
class Plate_LinearXYZConstraint(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        thePPC: Plate_Array1OfPinpointConstraint
        theCoeff: TColStd_Array1OfReal

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        thePPC: Plate_Array1OfPinpointConstraint
        theCoeff: TColStd_Array2OfReal

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        ColLen: int
        RowLen: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _Plate.Plate_LinearXYZConstraint_swiginit(self, _Plate.new_Plate_LinearXYZConstraint(*args))

    def Coeff(self, *args):
        r"""
        Return
        -------
        TColStd_Array2OfReal

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_LinearXYZConstraint_Coeff(self, *args)

    def GetPPC(self, *args):
        r"""
        Return
        -------
        Plate_Array1OfPinpointConstraint

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_LinearXYZConstraint_GetPPC(self, *args)

    def SetCoeff(self, *args):
        r"""

        Parameters
        ----------
        Row: int
        Col: int
        Value: float

        Return
        -------
        None

        Description
        -----------
        Sets the coeff of index (row,col) to value raise if row (respectively col) is greater than the row (respectively column) length of coeff.

        """
        return _Plate.Plate_LinearXYZConstraint_SetCoeff(self, *args)

    def SetPPC(self, *args):
        r"""

        Parameters
        ----------
        Index: int
        Value: Plate_PinpointConstraint

        Return
        -------
        None

        Description
        -----------
        Sets the pinpointconstraint of index index to value raise if index is greater than the length of ppc or the row length of coeff or lower than 1.

        """
        return _Plate.Plate_LinearXYZConstraint_SetPPC(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _Plate.delete_Plate_LinearXYZConstraint

# Register Plate_LinearXYZConstraint in _Plate:
_Plate.Plate_LinearXYZConstraint_swigregister(Plate_LinearXYZConstraint)
class Plate_PinpointConstraint(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        point2d: gp_XY
        ImposedValue: gp_XYZ
        iu: int (optional, default to 0)
        iv: int (optional, default to 0)

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _Plate.Plate_PinpointConstraint_swiginit(self, _Plate.new_Plate_PinpointConstraint(*args))

    def Idu(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_PinpointConstraint_Idu(self, *args)

    def Idv(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_PinpointConstraint_Idv(self, *args)

    def Pnt2d(self, *args):
        r"""
        Return
        -------
        gp_XY

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_PinpointConstraint_Pnt2d(self, *args)

    def Value(self, *args):
        r"""
        Return
        -------
        gp_XYZ

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_PinpointConstraint_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _Plate.delete_Plate_PinpointConstraint

# Register Plate_PinpointConstraint in _Plate:
_Plate.Plate_PinpointConstraint_swigregister(Plate_PinpointConstraint)
class Plate_PlaneConstraint(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        point2d: gp_XY
        pln: gp_Pln
        iu: int (optional, default to 0)
        iv: int (optional, default to 0)

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _Plate.Plate_PlaneConstraint_swiginit(self, _Plate.new_Plate_PlaneConstraint(*args))

    def LSC(self, *args):
        r"""
        Return
        -------
        Plate_LinearScalarConstraint

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_PlaneConstraint_LSC(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _Plate.delete_Plate_PlaneConstraint

# Register Plate_PlaneConstraint in _Plate:
_Plate.Plate_PlaneConstraint_swigregister(Plate_PlaneConstraint)
class Plate_Plate(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Ref: Plate_Plate

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _Plate.Plate_Plate_swiginit(self, _Plate.new_Plate_Plate(*args))

    def CoefPol(self, *args):
        r"""

        Parameters
        ----------
        Coefs: TColgp_HArray2OfXYZ

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_Plate_CoefPol(self, *args)

    def Continuity(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_Plate_Continuity(self, *args)

    def Copy(self, *args):
        r"""

        Parameters
        ----------
        Ref: Plate_Plate

        Return
        -------
        Plate_Plate

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_Plate_Copy(self, *args)

    def Evaluate(self, *args):
        r"""

        Parameters
        ----------
        point2d: gp_XY

        Return
        -------
        gp_XYZ

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_Plate_Evaluate(self, *args)

    def EvaluateDerivative(self, *args):
        r"""

        Parameters
        ----------
        point2d: gp_XY
        iu: int
        iv: int

        Return
        -------
        gp_XYZ

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_Plate_EvaluateDerivative(self, *args)

    def Init(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Reset the plate in the initial state ( same as after create()).

        """
        return _Plate.Plate_Plate_Init(self, *args)

    def IsDone(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if all has been correctly done.

        """
        return _Plate.Plate_Plate_IsDone(self, *args)

    def Load(self, *args):
        r"""

        Parameters
        ----------
        PConst: Plate_PinpointConstraint

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        LXYZConst: Plate_LinearXYZConstraint

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        LScalarConst: Plate_LinearScalarConstraint

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        GTConst: Plate_GlobalTranslationConstraint

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        LConst: Plate_LineConstraint

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        PConst: Plate_PlaneConstraint

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        SCConst: Plate_SampledCurveConstraint

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        GtoCConst: Plate_GtoCConstraint

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        FGtoCConst: Plate_FreeGtoCConstraint

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_Plate_Load(self, *args)

    def SetPolynomialPartOnly(self, *args):
        r"""

        Parameters
        ----------
        PPOnly: bool (optional, default to Standard_True)

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_Plate_SetPolynomialPartOnly(self, *args)

    def SolveTI(self, *args):
        r"""

        Parameters
        ----------
        ord: int (optional, default to 4)
        anisotropie: float (optional, default to 1.0)
        theProgress: Message_ProgressRange (optional, default to Message_ProgressRange())

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_Plate_SolveTI(self, *args)

    def UVBox(self, *args):
        r"""

        Parameters
        ----------

        Return
        -------
        UMin: float
        UMax: float
        VMin: float
        VMax: float

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_Plate_UVBox(self, *args)

    def UVConstraints(self, *args):
        r"""

        Parameters
        ----------
        Seq: TColgp_SequenceOfXY

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_Plate_UVConstraints(self, *args)

    def destroy(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_Plate_destroy(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _Plate.delete_Plate_Plate

# Register Plate_Plate in _Plate:
_Plate.Plate_Plate_swigregister(Plate_Plate)
class Plate_SampledCurveConstraint(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        SOPPC: Plate_SequenceOfPinpointConstraint
        n: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _Plate.Plate_SampledCurveConstraint_swiginit(self, _Plate.new_Plate_SampledCurveConstraint(*args))

    def LXYZC(self, *args):
        r"""
        Return
        -------
        Plate_LinearXYZConstraint

        Description
        -----------
        No available documentation.

        """
        return _Plate.Plate_SampledCurveConstraint_LXYZC(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _Plate.delete_Plate_SampledCurveConstraint

# Register Plate_SampledCurveConstraint in _Plate:
_Plate.Plate_SampledCurveConstraint_swigregister(Plate_SampledCurveConstraint)
class Plate_HArray1OfPinpointConstraint(Plate_Array1OfPinpointConstraint, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Plate.Plate_HArray1OfPinpointConstraint_swiginit(self, _Plate.new_Plate_HArray1OfPinpointConstraint(*args))

    def Array1(self):
        return _Plate.Plate_HArray1OfPinpointConstraint_Array1(self)

    def ChangeArray1(self):
        return _Plate.Plate_HArray1OfPinpointConstraint_ChangeArray1(self)


    @staticmethod
    def DownCast(t):
      return Handle_Plate_HArray1OfPinpointConstraint_DownCast(t)

    __swig_destroy__ = _Plate.delete_Plate_HArray1OfPinpointConstraint

# Register Plate_HArray1OfPinpointConstraint in _Plate:
_Plate.Plate_HArray1OfPinpointConstraint_swigregister(Plate_HArray1OfPinpointConstraint)



