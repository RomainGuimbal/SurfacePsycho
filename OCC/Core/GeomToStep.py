# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

"""
GeomToStep module, see official documentation at
https://www.opencascade.com/doc/occt-7.7.0/refman/html/package_geomtostep.html
"""

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _GeomToStep
else:
    import _GeomToStep

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _GeomToStep.delete_SwigPyIterator

    def value(self):
        return _GeomToStep.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _GeomToStep.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _GeomToStep.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _GeomToStep.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _GeomToStep.SwigPyIterator_equal(self, x)

    def copy(self):
        return _GeomToStep.SwigPyIterator_copy(self)

    def next(self):
        return _GeomToStep.SwigPyIterator_next(self)

    def __next__(self):
        return _GeomToStep.SwigPyIterator___next__(self)

    def previous(self):
        return _GeomToStep.SwigPyIterator_previous(self)

    def advance(self, n):
        return _GeomToStep.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _GeomToStep.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _GeomToStep.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _GeomToStep.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _GeomToStep.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _GeomToStep.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _GeomToStep.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _GeomToStep:
_GeomToStep.SwigPyIterator_swigregister(SwigPyIterator)

def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error, method_name, class_name):
    return _GeomToStep.process_exception(error, method_name, class_name)

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.gp
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.Geom
import OCC.Core.GeomAbs
import OCC.Core.TColgp
import OCC.Core.Geom2d
import OCC.Core.StepGeom
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.Message
import OCC.Core.OSD
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.Resource
import OCC.Core.StepRepr
import OCC.Core.StepBasic

from enum import IntEnum
from OCC.Core.Exception import *



class GeomToStep_Root(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def IsDone(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_Root_IsDone(self, *args)

    __repr__ = _dumps_object


    def __init__(self):
        _GeomToStep.GeomToStep_Root_swiginit(self, _GeomToStep.new_GeomToStep_Root())
    __swig_destroy__ = _GeomToStep.delete_GeomToStep_Root

# Register GeomToStep_Root in _GeomToStep:
_GeomToStep.GeomToStep_Root_swigregister(GeomToStep_Root)
class GeomToStep_MakeAxis1Placement(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        A: gp_Ax1

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        A: gp_Ax2d

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        A: Geom_Axis1Placement

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        A: Geom2d_AxisPlacement

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeAxis1Placement_swiginit(self, _GeomToStep.new_GeomToStep_MakeAxis1Placement(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Axis1Placement>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeAxis1Placement_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeAxis1Placement

# Register GeomToStep_MakeAxis1Placement in _GeomToStep:
_GeomToStep.GeomToStep_MakeAxis1Placement_swigregister(GeomToStep_MakeAxis1Placement)
class GeomToStep_MakeAxis2Placement2d(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        A: gp_Ax2

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        A: gp_Ax22d

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeAxis2Placement2d_swiginit(self, _GeomToStep.new_GeomToStep_MakeAxis2Placement2d(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Axis2Placement2d>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeAxis2Placement2d_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeAxis2Placement2d

# Register GeomToStep_MakeAxis2Placement2d in _GeomToStep:
_GeomToStep.GeomToStep_MakeAxis2Placement2d_swigregister(GeomToStep_MakeAxis2Placement2d)
class GeomToStep_MakeAxis2Placement3d(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        A: gp_Ax2

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        A: gp_Ax3

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        T: gp_Trsf

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        A: Geom_Axis2Placement

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeAxis2Placement3d_swiginit(self, _GeomToStep.new_GeomToStep_MakeAxis2Placement3d(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Axis2Placement3d>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeAxis2Placement3d_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeAxis2Placement3d

# Register GeomToStep_MakeAxis2Placement3d in _GeomToStep:
_GeomToStep.GeomToStep_MakeAxis2Placement3d_swigregister(GeomToStep_MakeAxis2Placement3d)
class GeomToStep_MakeBSplineCurveWithKnots(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        Bsplin: Geom_BSplineCurve

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Bsplin: Geom2d_BSplineCurve

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeBSplineCurveWithKnots_swiginit(self, _GeomToStep.new_GeomToStep_MakeBSplineCurveWithKnots(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_BSplineCurveWithKnots>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeBSplineCurveWithKnots_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeBSplineCurveWithKnots

# Register GeomToStep_MakeBSplineCurveWithKnots in _GeomToStep:
_GeomToStep.GeomToStep_MakeBSplineCurveWithKnots_swigregister(GeomToStep_MakeBSplineCurveWithKnots)
class GeomToStep_MakeBSplineCurveWithKnotsAndRationalBSplineCurve(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        Bsplin: Geom_BSplineCurve

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Bsplin: Geom2d_BSplineCurve

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeBSplineCurveWithKnotsAndRationalBSplineCurve_swiginit(self, _GeomToStep.new_GeomToStep_MakeBSplineCurveWithKnotsAndRationalBSplineCurve(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeBSplineCurveWithKnotsAndRationalBSplineCurve_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeBSplineCurveWithKnotsAndRationalBSplineCurve

# Register GeomToStep_MakeBSplineCurveWithKnotsAndRationalBSplineCurve in _GeomToStep:
_GeomToStep.GeomToStep_MakeBSplineCurveWithKnotsAndRationalBSplineCurve_swigregister(GeomToStep_MakeBSplineCurveWithKnotsAndRationalBSplineCurve)
class GeomToStep_MakeBSplineSurfaceWithKnots(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        Bsplin: Geom_BSplineSurface

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeBSplineSurfaceWithKnots_swiginit(self, _GeomToStep.new_GeomToStep_MakeBSplineSurfaceWithKnots(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_BSplineSurfaceWithKnots>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeBSplineSurfaceWithKnots_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeBSplineSurfaceWithKnots

# Register GeomToStep_MakeBSplineSurfaceWithKnots in _GeomToStep:
_GeomToStep.GeomToStep_MakeBSplineSurfaceWithKnots_swigregister(GeomToStep_MakeBSplineSurfaceWithKnots)
class GeomToStep_MakeBSplineSurfaceWithKnotsAndRationalBSplineSurface(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        Bsplin: Geom_BSplineSurface

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeBSplineSurfaceWithKnotsAndRationalBSplineSurface_swiginit(self, _GeomToStep.new_GeomToStep_MakeBSplineSurfaceWithKnotsAndRationalBSplineSurface(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_BSplineSurfaceWithKnotsAndRationalBSplineSurface>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeBSplineSurfaceWithKnotsAndRationalBSplineSurface_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeBSplineSurfaceWithKnotsAndRationalBSplineSurface

# Register GeomToStep_MakeBSplineSurfaceWithKnotsAndRationalBSplineSurface in _GeomToStep:
_GeomToStep.GeomToStep_MakeBSplineSurfaceWithKnotsAndRationalBSplineSurface_swigregister(GeomToStep_MakeBSplineSurfaceWithKnotsAndRationalBSplineSurface)
class GeomToStep_MakeBoundedCurve(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        C: Geom_BoundedCurve

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        C: Geom2d_BoundedCurve

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeBoundedCurve_swiginit(self, _GeomToStep.new_GeomToStep_MakeBoundedCurve(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_BoundedCurve>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeBoundedCurve_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeBoundedCurve

# Register GeomToStep_MakeBoundedCurve in _GeomToStep:
_GeomToStep.GeomToStep_MakeBoundedCurve_swigregister(GeomToStep_MakeBoundedCurve)
class GeomToStep_MakeBoundedSurface(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        C: Geom_BoundedSurface

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeBoundedSurface_swiginit(self, _GeomToStep.new_GeomToStep_MakeBoundedSurface(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_BoundedSurface>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeBoundedSurface_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeBoundedSurface

# Register GeomToStep_MakeBoundedSurface in _GeomToStep:
_GeomToStep.GeomToStep_MakeBoundedSurface_swigregister(GeomToStep_MakeBoundedSurface)
class GeomToStep_MakeCartesianPoint(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        P: gp_Pnt

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        P: gp_Pnt2d

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        P: Geom_CartesianPoint

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        P: Geom2d_CartesianPoint

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeCartesianPoint_swiginit(self, _GeomToStep.new_GeomToStep_MakeCartesianPoint(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_CartesianPoint>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeCartesianPoint_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeCartesianPoint

# Register GeomToStep_MakeCartesianPoint in _GeomToStep:
_GeomToStep.GeomToStep_MakeCartesianPoint_swigregister(GeomToStep_MakeCartesianPoint)
class GeomToStep_MakeCircle(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        C: gp_Circ

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        C: Geom_Circle

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        C: Geom2d_Circle

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeCircle_swiginit(self, _GeomToStep.new_GeomToStep_MakeCircle(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Circle>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeCircle_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeCircle

# Register GeomToStep_MakeCircle in _GeomToStep:
_GeomToStep.GeomToStep_MakeCircle_swigregister(GeomToStep_MakeCircle)
class GeomToStep_MakeConic(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        C: Geom_Conic

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        C: Geom2d_Conic

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeConic_swiginit(self, _GeomToStep.new_GeomToStep_MakeConic(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Conic>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeConic_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeConic

# Register GeomToStep_MakeConic in _GeomToStep:
_GeomToStep.GeomToStep_MakeConic_swigregister(GeomToStep_MakeConic)
class GeomToStep_MakeConicalSurface(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        CSurf: Geom_ConicalSurface

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeConicalSurface_swiginit(self, _GeomToStep.new_GeomToStep_MakeConicalSurface(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_ConicalSurface>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeConicalSurface_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeConicalSurface

# Register GeomToStep_MakeConicalSurface in _GeomToStep:
_GeomToStep.GeomToStep_MakeConicalSurface_swigregister(GeomToStep_MakeConicalSurface)
class GeomToStep_MakeCurve(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        C: Geom_Curve

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        C: Geom2d_Curve

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeCurve_swiginit(self, _GeomToStep.new_GeomToStep_MakeCurve(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Curve>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeCurve_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeCurve

# Register GeomToStep_MakeCurve in _GeomToStep:
_GeomToStep.GeomToStep_MakeCurve_swigregister(GeomToStep_MakeCurve)
class GeomToStep_MakeCylindricalSurface(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        CSurf: Geom_CylindricalSurface

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeCylindricalSurface_swiginit(self, _GeomToStep.new_GeomToStep_MakeCylindricalSurface(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_CylindricalSurface>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeCylindricalSurface_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeCylindricalSurface

# Register GeomToStep_MakeCylindricalSurface in _GeomToStep:
_GeomToStep.GeomToStep_MakeCylindricalSurface_swigregister(GeomToStep_MakeCylindricalSurface)
class GeomToStep_MakeDirection(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        D: gp_Dir

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        D: gp_Dir2d

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        D: Geom_Direction

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        D: Geom2d_Direction

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeDirection_swiginit(self, _GeomToStep.new_GeomToStep_MakeDirection(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Direction>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeDirection_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeDirection

# Register GeomToStep_MakeDirection in _GeomToStep:
_GeomToStep.GeomToStep_MakeDirection_swigregister(GeomToStep_MakeDirection)
class GeomToStep_MakeElementarySurface(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        S: Geom_ElementarySurface

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeElementarySurface_swiginit(self, _GeomToStep.new_GeomToStep_MakeElementarySurface(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_ElementarySurface>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeElementarySurface_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeElementarySurface

# Register GeomToStep_MakeElementarySurface in _GeomToStep:
_GeomToStep.GeomToStep_MakeElementarySurface_swigregister(GeomToStep_MakeElementarySurface)
class GeomToStep_MakeEllipse(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        C: gp_Elips

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        C: Geom_Ellipse

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        C: Geom2d_Ellipse

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeEllipse_swiginit(self, _GeomToStep.new_GeomToStep_MakeEllipse(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Ellipse>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeEllipse_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeEllipse

# Register GeomToStep_MakeEllipse in _GeomToStep:
_GeomToStep.GeomToStep_MakeEllipse_swigregister(GeomToStep_MakeEllipse)
class GeomToStep_MakeHyperbola(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        C: Geom2d_Hyperbola

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        C: Geom_Hyperbola

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeHyperbola_swiginit(self, _GeomToStep.new_GeomToStep_MakeHyperbola(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Hyperbola>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeHyperbola_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeHyperbola

# Register GeomToStep_MakeHyperbola in _GeomToStep:
_GeomToStep.GeomToStep_MakeHyperbola_swigregister(GeomToStep_MakeHyperbola)
class GeomToStep_MakeLine(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        L: gp_Lin

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        L: gp_Lin2d

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        C: Geom_Line

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        C: Geom2d_Line

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeLine_swiginit(self, _GeomToStep.new_GeomToStep_MakeLine(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Line>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeLine_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeLine

# Register GeomToStep_MakeLine in _GeomToStep:
_GeomToStep.GeomToStep_MakeLine_swigregister(GeomToStep_MakeLine)
class GeomToStep_MakeParabola(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        C: Geom2d_Parabola

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        C: Geom_Parabola

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeParabola_swiginit(self, _GeomToStep.new_GeomToStep_MakeParabola(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Parabola>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeParabola_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeParabola

# Register GeomToStep_MakeParabola in _GeomToStep:
_GeomToStep.GeomToStep_MakeParabola_swigregister(GeomToStep_MakeParabola)
class GeomToStep_MakePlane(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        P: gp_Pln

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        P: Geom_Plane

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakePlane_swiginit(self, _GeomToStep.new_GeomToStep_MakePlane(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Plane>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakePlane_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakePlane

# Register GeomToStep_MakePlane in _GeomToStep:
_GeomToStep.GeomToStep_MakePlane_swigregister(GeomToStep_MakePlane)
class GeomToStep_MakePolyline(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        P: TColgp_Array1OfPnt

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        P: TColgp_Array1OfPnt2d

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakePolyline_swiginit(self, _GeomToStep.new_GeomToStep_MakePolyline(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Polyline>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakePolyline_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakePolyline

# Register GeomToStep_MakePolyline in _GeomToStep:
_GeomToStep.GeomToStep_MakePolyline_swigregister(GeomToStep_MakePolyline)
class GeomToStep_MakeRectangularTrimmedSurface(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        RTSurf: Geom_RectangularTrimmedSurface

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeRectangularTrimmedSurface_swiginit(self, _GeomToStep.new_GeomToStep_MakeRectangularTrimmedSurface(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_RectangularTrimmedSurface>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeRectangularTrimmedSurface_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeRectangularTrimmedSurface

# Register GeomToStep_MakeRectangularTrimmedSurface in _GeomToStep:
_GeomToStep.GeomToStep_MakeRectangularTrimmedSurface_swigregister(GeomToStep_MakeRectangularTrimmedSurface)
class GeomToStep_MakeSphericalSurface(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        CSurf: Geom_SphericalSurface

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeSphericalSurface_swiginit(self, _GeomToStep.new_GeomToStep_MakeSphericalSurface(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_SphericalSurface>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeSphericalSurface_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeSphericalSurface

# Register GeomToStep_MakeSphericalSurface in _GeomToStep:
_GeomToStep.GeomToStep_MakeSphericalSurface_swigregister(GeomToStep_MakeSphericalSurface)
class GeomToStep_MakeSurface(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        C: Geom_Surface

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeSurface_swiginit(self, _GeomToStep.new_GeomToStep_MakeSurface(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Surface>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeSurface_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeSurface

# Register GeomToStep_MakeSurface in _GeomToStep:
_GeomToStep.GeomToStep_MakeSurface_swigregister(GeomToStep_MakeSurface)
class GeomToStep_MakeSurfaceOfLinearExtrusion(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        CSurf: Geom_SurfaceOfLinearExtrusion

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeSurfaceOfLinearExtrusion_swiginit(self, _GeomToStep.new_GeomToStep_MakeSurfaceOfLinearExtrusion(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_SurfaceOfLinearExtrusion>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeSurfaceOfLinearExtrusion_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeSurfaceOfLinearExtrusion

# Register GeomToStep_MakeSurfaceOfLinearExtrusion in _GeomToStep:
_GeomToStep.GeomToStep_MakeSurfaceOfLinearExtrusion_swigregister(GeomToStep_MakeSurfaceOfLinearExtrusion)
class GeomToStep_MakeSurfaceOfRevolution(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        RevSurf: Geom_SurfaceOfRevolution

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeSurfaceOfRevolution_swiginit(self, _GeomToStep.new_GeomToStep_MakeSurfaceOfRevolution(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_SurfaceOfRevolution>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeSurfaceOfRevolution_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeSurfaceOfRevolution

# Register GeomToStep_MakeSurfaceOfRevolution in _GeomToStep:
_GeomToStep.GeomToStep_MakeSurfaceOfRevolution_swigregister(GeomToStep_MakeSurfaceOfRevolution)
class GeomToStep_MakeSweptSurface(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        S: Geom_SweptSurface

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeSweptSurface_swiginit(self, _GeomToStep.new_GeomToStep_MakeSweptSurface(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_SweptSurface>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeSweptSurface_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeSweptSurface

# Register GeomToStep_MakeSweptSurface in _GeomToStep:
_GeomToStep.GeomToStep_MakeSweptSurface_swigregister(GeomToStep_MakeSweptSurface)
class GeomToStep_MakeToroidalSurface(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        TorSurf: Geom_ToroidalSurface

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeToroidalSurface_swiginit(self, _GeomToStep.new_GeomToStep_MakeToroidalSurface(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_ToroidalSurface>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeToroidalSurface_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeToroidalSurface

# Register GeomToStep_MakeToroidalSurface in _GeomToStep:
_GeomToStep.GeomToStep_MakeToroidalSurface_swigregister(GeomToStep_MakeToroidalSurface)
class GeomToStep_MakeVector(GeomToStep_Root):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        V: gp_Vec

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        V: gp_Vec2d

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        V: Geom_Vector

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        V: Geom2d_Vector

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _GeomToStep.GeomToStep_MakeVector_swiginit(self, _GeomToStep.new_GeomToStep_MakeVector(*args))

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<StepGeom_Vector>

        Description
        -----------
        No available documentation.

        """
        return _GeomToStep.GeomToStep_MakeVector_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _GeomToStep.delete_GeomToStep_MakeVector

# Register GeomToStep_MakeVector in _GeomToStep:
_GeomToStep.GeomToStep_MakeVector_swigregister(GeomToStep_MakeVector)



