# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
XmlMXCAFDoc module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_xmlmxcafdoc.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_XmlMXCAFDoc')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_XmlMXCAFDoc')
    _XmlMXCAFDoc = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_XmlMXCAFDoc', [dirname(__file__)])
        except ImportError:
            import _XmlMXCAFDoc
            return _XmlMXCAFDoc
        try:
            _mod = imp.load_module('_XmlMXCAFDoc', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _XmlMXCAFDoc = swig_import_helper()
    del swig_import_helper
else:
    import _XmlMXCAFDoc
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

class SwigPyIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwigPyIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwigPyIterator, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _XmlMXCAFDoc.delete_SwigPyIterator
    __del__ = lambda self: None

    def value(self) -> "PyObject *":
        return _XmlMXCAFDoc.SwigPyIterator_value(self)

    def incr(self, n: 'size_t'=1) -> "swig::SwigPyIterator *":
        return _XmlMXCAFDoc.SwigPyIterator_incr(self, n)

    def decr(self, n: 'size_t'=1) -> "swig::SwigPyIterator *":
        return _XmlMXCAFDoc.SwigPyIterator_decr(self, n)

    def distance(self, x: 'SwigPyIterator') -> "ptrdiff_t":
        return _XmlMXCAFDoc.SwigPyIterator_distance(self, x)

    def equal(self, x: 'SwigPyIterator') -> "bool":
        return _XmlMXCAFDoc.SwigPyIterator_equal(self, x)

    def copy(self) -> "swig::SwigPyIterator *":
        return _XmlMXCAFDoc.SwigPyIterator_copy(self)

    def next(self) -> "PyObject *":
        return _XmlMXCAFDoc.SwigPyIterator_next(self)

    def __next__(self) -> "PyObject *":
        return _XmlMXCAFDoc.SwigPyIterator___next__(self)

    def previous(self) -> "PyObject *":
        return _XmlMXCAFDoc.SwigPyIterator_previous(self)

    def advance(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator *":
        return _XmlMXCAFDoc.SwigPyIterator_advance(self, n)

    def __eq__(self, x: 'SwigPyIterator') -> "bool":
        return _XmlMXCAFDoc.SwigPyIterator___eq__(self, x)

    def __ne__(self, x: 'SwigPyIterator') -> "bool":
        return _XmlMXCAFDoc.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator &":
        return _XmlMXCAFDoc.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator &":
        return _XmlMXCAFDoc.SwigPyIterator___isub__(self, n)

    def __add__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator *":
        return _XmlMXCAFDoc.SwigPyIterator___add__(self, n)

    def __sub__(self, *args) -> "ptrdiff_t":
        return _XmlMXCAFDoc.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self
SwigPyIterator_swigregister = _XmlMXCAFDoc.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _XmlMXCAFDoc.process_exception(error, method_name, class_name)
process_exception = _XmlMXCAFDoc.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.XmlMDF
import OCC.Core.Message
import OCC.Core.TCollection
import OCC.Core.OSD
import OCC.Core.TColStd
import OCC.Core.TDF
import OCC.Core.XmlObjMgt
import OCC.Core.LDOM
import OCC.Core.gp
import OCC.Core.Storage
import OCC.Core.TopTools
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc

from enum import IntEnum
from OCC.Core.Exception import *




def Handle_XmlMXCAFDoc_AssemblyItemRefDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_AssemblyItemRefDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_AssemblyItemRefDriver_Create()
Handle_XmlMXCAFDoc_AssemblyItemRefDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_AssemblyItemRefDriver_Create

def Handle_XmlMXCAFDoc_AssemblyItemRefDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_AssemblyItemRefDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_AssemblyItemRefDriver_DownCast(t)
Handle_XmlMXCAFDoc_AssemblyItemRefDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_AssemblyItemRefDriver_DownCast

def Handle_XmlMXCAFDoc_AssemblyItemRefDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_AssemblyItemRefDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_AssemblyItemRefDriver_IsNull(t)
Handle_XmlMXCAFDoc_AssemblyItemRefDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_AssemblyItemRefDriver_IsNull

def Handle_XmlMXCAFDoc_CentroidDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_CentroidDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_CentroidDriver_Create()
Handle_XmlMXCAFDoc_CentroidDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_CentroidDriver_Create

def Handle_XmlMXCAFDoc_CentroidDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_CentroidDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_CentroidDriver_DownCast(t)
Handle_XmlMXCAFDoc_CentroidDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_CentroidDriver_DownCast

def Handle_XmlMXCAFDoc_CentroidDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_CentroidDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_CentroidDriver_IsNull(t)
Handle_XmlMXCAFDoc_CentroidDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_CentroidDriver_IsNull

def Handle_XmlMXCAFDoc_ColorDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_ColorDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ColorDriver_Create()
Handle_XmlMXCAFDoc_ColorDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ColorDriver_Create

def Handle_XmlMXCAFDoc_ColorDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_ColorDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ColorDriver_DownCast(t)
Handle_XmlMXCAFDoc_ColorDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ColorDriver_DownCast

def Handle_XmlMXCAFDoc_ColorDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_ColorDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ColorDriver_IsNull(t)
Handle_XmlMXCAFDoc_ColorDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_ColorDriver_IsNull

def Handle_XmlMXCAFDoc_DatumDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_DatumDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DatumDriver_Create()
Handle_XmlMXCAFDoc_DatumDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DatumDriver_Create

def Handle_XmlMXCAFDoc_DatumDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_DatumDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DatumDriver_DownCast(t)
Handle_XmlMXCAFDoc_DatumDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DatumDriver_DownCast

def Handle_XmlMXCAFDoc_DatumDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_DatumDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DatumDriver_IsNull(t)
Handle_XmlMXCAFDoc_DatumDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DatumDriver_IsNull

def Handle_XmlMXCAFDoc_DimTolDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_DimTolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DimTolDriver_Create()
Handle_XmlMXCAFDoc_DimTolDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DimTolDriver_Create

def Handle_XmlMXCAFDoc_DimTolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_DimTolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DimTolDriver_DownCast(t)
Handle_XmlMXCAFDoc_DimTolDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DimTolDriver_DownCast

def Handle_XmlMXCAFDoc_DimTolDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_DimTolDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DimTolDriver_IsNull(t)
Handle_XmlMXCAFDoc_DimTolDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_DimTolDriver_IsNull

def Handle_XmlMXCAFDoc_GraphNodeDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_GraphNodeDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_GraphNodeDriver_Create()
Handle_XmlMXCAFDoc_GraphNodeDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_GraphNodeDriver_Create

def Handle_XmlMXCAFDoc_GraphNodeDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_GraphNodeDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_GraphNodeDriver_DownCast(t)
Handle_XmlMXCAFDoc_GraphNodeDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_GraphNodeDriver_DownCast

def Handle_XmlMXCAFDoc_GraphNodeDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_GraphNodeDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_GraphNodeDriver_IsNull(t)
Handle_XmlMXCAFDoc_GraphNodeDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_GraphNodeDriver_IsNull

def Handle_XmlMXCAFDoc_LocationDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_LocationDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_LocationDriver_Create()
Handle_XmlMXCAFDoc_LocationDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_LocationDriver_Create

def Handle_XmlMXCAFDoc_LocationDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_LocationDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_LocationDriver_DownCast(t)
Handle_XmlMXCAFDoc_LocationDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_LocationDriver_DownCast

def Handle_XmlMXCAFDoc_LocationDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_LocationDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_LocationDriver_IsNull(t)
Handle_XmlMXCAFDoc_LocationDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_LocationDriver_IsNull

def Handle_XmlMXCAFDoc_MaterialDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_MaterialDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_MaterialDriver_Create()
Handle_XmlMXCAFDoc_MaterialDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_MaterialDriver_Create

def Handle_XmlMXCAFDoc_MaterialDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_MaterialDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_MaterialDriver_DownCast(t)
Handle_XmlMXCAFDoc_MaterialDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_MaterialDriver_DownCast

def Handle_XmlMXCAFDoc_MaterialDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_MaterialDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_MaterialDriver_IsNull(t)
Handle_XmlMXCAFDoc_MaterialDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_MaterialDriver_IsNull

def Handle_XmlMXCAFDoc_NoteDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_NoteDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteDriver_Create()
Handle_XmlMXCAFDoc_NoteDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteDriver_Create

def Handle_XmlMXCAFDoc_NoteDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_NoteDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteDriver_DownCast(t)
Handle_XmlMXCAFDoc_NoteDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteDriver_DownCast

def Handle_XmlMXCAFDoc_NoteDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_NoteDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteDriver_IsNull(t)
Handle_XmlMXCAFDoc_NoteDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteDriver_IsNull

def Handle_XmlMXCAFDoc_VisMaterialDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_VisMaterialDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_VisMaterialDriver_Create()
Handle_XmlMXCAFDoc_VisMaterialDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_VisMaterialDriver_Create

def Handle_XmlMXCAFDoc_VisMaterialDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_VisMaterialDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_VisMaterialDriver_DownCast(t)
Handle_XmlMXCAFDoc_VisMaterialDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_VisMaterialDriver_DownCast

def Handle_XmlMXCAFDoc_VisMaterialDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_VisMaterialDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_VisMaterialDriver_IsNull(t)
Handle_XmlMXCAFDoc_VisMaterialDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_VisMaterialDriver_IsNull

def Handle_XmlMXCAFDoc_VisMaterialToolDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_VisMaterialToolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_VisMaterialToolDriver_Create()
Handle_XmlMXCAFDoc_VisMaterialToolDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_VisMaterialToolDriver_Create

def Handle_XmlMXCAFDoc_VisMaterialToolDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_VisMaterialToolDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_VisMaterialToolDriver_DownCast(t)
Handle_XmlMXCAFDoc_VisMaterialToolDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_VisMaterialToolDriver_DownCast

def Handle_XmlMXCAFDoc_VisMaterialToolDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_VisMaterialToolDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_VisMaterialToolDriver_IsNull(t)
Handle_XmlMXCAFDoc_VisMaterialToolDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_VisMaterialToolDriver_IsNull

def Handle_XmlMXCAFDoc_NoteBinDataDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_NoteBinDataDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteBinDataDriver_Create()
Handle_XmlMXCAFDoc_NoteBinDataDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteBinDataDriver_Create

def Handle_XmlMXCAFDoc_NoteBinDataDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_NoteBinDataDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteBinDataDriver_DownCast(t)
Handle_XmlMXCAFDoc_NoteBinDataDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteBinDataDriver_DownCast

def Handle_XmlMXCAFDoc_NoteBinDataDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_NoteBinDataDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteBinDataDriver_IsNull(t)
Handle_XmlMXCAFDoc_NoteBinDataDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteBinDataDriver_IsNull

def Handle_XmlMXCAFDoc_NoteCommentDriver_Create() -> "opencascade::handle< XmlMXCAFDoc_NoteCommentDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteCommentDriver_Create()
Handle_XmlMXCAFDoc_NoteCommentDriver_Create = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteCommentDriver_Create

def Handle_XmlMXCAFDoc_NoteCommentDriver_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< XmlMXCAFDoc_NoteCommentDriver >":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteCommentDriver_DownCast(t)
Handle_XmlMXCAFDoc_NoteCommentDriver_DownCast = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteCommentDriver_DownCast

def Handle_XmlMXCAFDoc_NoteCommentDriver_IsNull(t: 'opencascade::handle< XmlMXCAFDoc_NoteCommentDriver > const &') -> "bool":
    return _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteCommentDriver_IsNull(t)
Handle_XmlMXCAFDoc_NoteCommentDriver_IsNull = _XmlMXCAFDoc.Handle_XmlMXCAFDoc_NoteCommentDriver_IsNull
class xmlmxcafdoc(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, xmlmxcafdoc, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, xmlmxcafdoc, name)
    __repr__ = _swig_repr

    def AddDrivers(*args) -> "void":
        """
        Adds the attribute drivers to <adrivertable>.

        Parameters
        ----------
        aDriverTable: XmlMDF_ADriverTable
        anMsgDrv: Message_Messenger

        Returns
        -------
        None

        """
        return _XmlMXCAFDoc.xmlmxcafdoc_AddDrivers(*args)

    AddDrivers = staticmethod(AddDrivers)

    __repr__ = _dumps_object


    def __init__(self):
        this = _XmlMXCAFDoc.new_xmlmxcafdoc()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _XmlMXCAFDoc.delete_xmlmxcafdoc
    __del__ = lambda self: None
xmlmxcafdoc_swigregister = _XmlMXCAFDoc.xmlmxcafdoc_swigregister
xmlmxcafdoc_swigregister(xmlmxcafdoc)

def xmlmxcafdoc_AddDrivers(*args) -> "void":
    """
    Adds the attribute drivers to <adrivertable>.

    Parameters
    ----------
    aDriverTable: XmlMDF_ADriverTable
    anMsgDrv: Message_Messenger

    Returns
    -------
    None

    """
    return _XmlMXCAFDoc.xmlmxcafdoc_AddDrivers(*args)

class XmlMXCAFDoc_AssemblyItemRefDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.XmlMDF.XmlMDF_ADriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XmlMXCAFDoc_AssemblyItemRefDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.XmlMDF.XmlMDF_ADriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, XmlMXCAFDoc_AssemblyItemRefDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        theMessageDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _XmlMXCAFDoc.new_XmlMXCAFDoc_AssemblyItemRefDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        theSource: XmlObjMgt_Persistent
        theTarget: TDF_Attribute
        theRelocTable: XmlObjMgt_RRelocationTable

        Returns
        -------
        bool

        No available documentation.

        Parameters
        ----------
        theSource: TDF_Attribute
        theTarget: XmlObjMgt_Persistent
        theRelocTable: XmlObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_AssemblyItemRefDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_AssemblyItemRefDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_AssemblyItemRefDriver
    __del__ = lambda self: None
XmlMXCAFDoc_AssemblyItemRefDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_AssemblyItemRefDriver_swigregister
XmlMXCAFDoc_AssemblyItemRefDriver_swigregister(XmlMXCAFDoc_AssemblyItemRefDriver)

class XmlMXCAFDoc_CentroidDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.XmlMDF.XmlMDF_ADriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XmlMXCAFDoc_CentroidDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.XmlMDF.XmlMDF_ADriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, XmlMXCAFDoc_CentroidDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        theMessageDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _XmlMXCAFDoc.new_XmlMXCAFDoc_CentroidDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        Source: XmlObjMgt_Persistent
        Target: TDF_Attribute
        RelocTable: XmlObjMgt_RRelocationTable

        Returns
        -------
        bool

        No available documentation.

        Parameters
        ----------
        Source: TDF_Attribute
        Target: XmlObjMgt_Persistent
        RelocTable: XmlObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_CentroidDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_CentroidDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_CentroidDriver
    __del__ = lambda self: None
XmlMXCAFDoc_CentroidDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_CentroidDriver_swigregister
XmlMXCAFDoc_CentroidDriver_swigregister(XmlMXCAFDoc_CentroidDriver)

class XmlMXCAFDoc_ColorDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.XmlMDF.XmlMDF_ADriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XmlMXCAFDoc_ColorDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.XmlMDF.XmlMDF_ADriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, XmlMXCAFDoc_ColorDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        theMessageDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _XmlMXCAFDoc.new_XmlMXCAFDoc_ColorDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        Source: XmlObjMgt_Persistent
        Target: TDF_Attribute
        RelocTable: XmlObjMgt_RRelocationTable

        Returns
        -------
        bool

        No available documentation.

        Parameters
        ----------
        Source: TDF_Attribute
        Target: XmlObjMgt_Persistent
        RelocTable: XmlObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_ColorDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_ColorDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_ColorDriver
    __del__ = lambda self: None
XmlMXCAFDoc_ColorDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_ColorDriver_swigregister
XmlMXCAFDoc_ColorDriver_swigregister(XmlMXCAFDoc_ColorDriver)

class XmlMXCAFDoc_DatumDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.XmlMDF.XmlMDF_ADriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XmlMXCAFDoc_DatumDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.XmlMDF.XmlMDF_ADriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, XmlMXCAFDoc_DatumDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        theMessageDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _XmlMXCAFDoc.new_XmlMXCAFDoc_DatumDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        Source: XmlObjMgt_Persistent
        Target: TDF_Attribute
        RelocTable: XmlObjMgt_RRelocationTable

        Returns
        -------
        bool

        No available documentation.

        Parameters
        ----------
        Source: TDF_Attribute
        Target: XmlObjMgt_Persistent
        RelocTable: XmlObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_DatumDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_DatumDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_DatumDriver
    __del__ = lambda self: None
XmlMXCAFDoc_DatumDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_DatumDriver_swigregister
XmlMXCAFDoc_DatumDriver_swigregister(XmlMXCAFDoc_DatumDriver)

class XmlMXCAFDoc_DimTolDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.XmlMDF.XmlMDF_ADriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XmlMXCAFDoc_DimTolDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.XmlMDF.XmlMDF_ADriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, XmlMXCAFDoc_DimTolDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        theMessageDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _XmlMXCAFDoc.new_XmlMXCAFDoc_DimTolDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        Source: XmlObjMgt_Persistent
        Target: TDF_Attribute
        RelocTable: XmlObjMgt_RRelocationTable

        Returns
        -------
        bool

        No available documentation.

        Parameters
        ----------
        Source: TDF_Attribute
        Target: XmlObjMgt_Persistent
        RelocTable: XmlObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_DimTolDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_DimTolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_DimTolDriver
    __del__ = lambda self: None
XmlMXCAFDoc_DimTolDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_DimTolDriver_swigregister
XmlMXCAFDoc_DimTolDriver_swigregister(XmlMXCAFDoc_DimTolDriver)

class XmlMXCAFDoc_GraphNodeDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.XmlMDF.XmlMDF_ADriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XmlMXCAFDoc_GraphNodeDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.XmlMDF.XmlMDF_ADriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, XmlMXCAFDoc_GraphNodeDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        theMessageDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _XmlMXCAFDoc.new_XmlMXCAFDoc_GraphNodeDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        Source: XmlObjMgt_Persistent
        Target: TDF_Attribute
        RelocTable: XmlObjMgt_RRelocationTable

        Returns
        -------
        bool

        No available documentation.

        Parameters
        ----------
        Source: TDF_Attribute
        Target: XmlObjMgt_Persistent
        RelocTable: XmlObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_GraphNodeDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_GraphNodeDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_GraphNodeDriver
    __del__ = lambda self: None
XmlMXCAFDoc_GraphNodeDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_GraphNodeDriver_swigregister
XmlMXCAFDoc_GraphNodeDriver_swigregister(XmlMXCAFDoc_GraphNodeDriver)

class XmlMXCAFDoc_LocationDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.XmlMDF.XmlMDF_ADriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XmlMXCAFDoc_LocationDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.XmlMDF.XmlMDF_ADriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, XmlMXCAFDoc_LocationDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        theMessageDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _XmlMXCAFDoc.new_XmlMXCAFDoc_LocationDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        Source: XmlObjMgt_Persistent
        Target: TDF_Attribute
        RelocTable: XmlObjMgt_RRelocationTable

        Returns
        -------
        bool

        No available documentation.

        Parameters
        ----------
        Source: TDF_Attribute
        Target: XmlObjMgt_Persistent
        RelocTable: XmlObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_LocationDriver_Paste(self, *args)


    def SetSharedLocations(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        theLocations: TopTools_LocationSetPtr

        Returns
        -------
        None

        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_LocationDriver_SetSharedLocations(self, *args)


    def Translate(self, *args) -> "Standard_Boolean":
        """
        Translate a non storable location to a storable location.

        Parameters
        ----------
        theLoc: TopLoc_Location
        theParent: XmlObjMgt_Element
        theMap: XmlObjMgt_SRelocationTable

        Returns
        -------
        None

        Translate a storable location to a non storable location.

        Parameters
        ----------
        theParent: XmlObjMgt_Element
        theLoc: TopLoc_Location
        theMap: XmlObjMgt_RRelocationTable

        Returns
        -------
        bool

        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_LocationDriver_Translate(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_LocationDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_LocationDriver
    __del__ = lambda self: None
XmlMXCAFDoc_LocationDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_LocationDriver_swigregister
XmlMXCAFDoc_LocationDriver_swigregister(XmlMXCAFDoc_LocationDriver)

class XmlMXCAFDoc_MaterialDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.XmlMDF.XmlMDF_ADriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XmlMXCAFDoc_MaterialDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.XmlMDF.XmlMDF_ADriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, XmlMXCAFDoc_MaterialDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        theMessageDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _XmlMXCAFDoc.new_XmlMXCAFDoc_MaterialDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        Source: XmlObjMgt_Persistent
        Target: TDF_Attribute
        RelocTable: XmlObjMgt_RRelocationTable

        Returns
        -------
        bool

        No available documentation.

        Parameters
        ----------
        Source: TDF_Attribute
        Target: XmlObjMgt_Persistent
        RelocTable: XmlObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_MaterialDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_MaterialDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_MaterialDriver
    __del__ = lambda self: None
XmlMXCAFDoc_MaterialDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_MaterialDriver_swigregister
XmlMXCAFDoc_MaterialDriver_swigregister(XmlMXCAFDoc_MaterialDriver)

class XmlMXCAFDoc_NoteDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.XmlMDF.XmlMDF_ADriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XmlMXCAFDoc_NoteDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.XmlMDF.XmlMDF_ADriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, XmlMXCAFDoc_NoteDriver, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def Paste(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        theSource: XmlObjMgt_Persistent
        theTarget: TDF_Attribute
        theRelocTable: XmlObjMgt_RRelocationTable

        Returns
        -------
        bool

        No available documentation.

        Parameters
        ----------
        theSource: TDF_Attribute
        theTarget: XmlObjMgt_Persistent
        theRelocTable: XmlObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_NoteDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_NoteDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_NoteDriver
    __del__ = lambda self: None
XmlMXCAFDoc_NoteDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_NoteDriver_swigregister
XmlMXCAFDoc_NoteDriver_swigregister(XmlMXCAFDoc_NoteDriver)

class XmlMXCAFDoc_VisMaterialDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.XmlMDF.XmlMDF_ADriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XmlMXCAFDoc_VisMaterialDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.XmlMDF.XmlMDF_ADriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, XmlMXCAFDoc_VisMaterialDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Main constructor.

        Parameters
        ----------
        theMessageDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _XmlMXCAFDoc.new_XmlMXCAFDoc_VisMaterialDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        Paste attribute from persistence into document.

        Parameters
        ----------
        theSource: XmlObjMgt_Persistent
        theTarget: TDF_Attribute
        theRelocTable: XmlObjMgt_RRelocationTable

        Returns
        -------
        bool

        Paste attribute from document into persistence.

        Parameters
        ----------
        theSource: TDF_Attribute
        theTarget: XmlObjMgt_Persistent
        theRelocTable: XmlObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_VisMaterialDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_VisMaterialDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_VisMaterialDriver
    __del__ = lambda self: None
XmlMXCAFDoc_VisMaterialDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_VisMaterialDriver_swigregister
XmlMXCAFDoc_VisMaterialDriver_swigregister(XmlMXCAFDoc_VisMaterialDriver)

class XmlMXCAFDoc_VisMaterialToolDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.XmlMDF.XmlMDF_ADriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XmlMXCAFDoc_VisMaterialToolDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.XmlMDF.XmlMDF_ADriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, XmlMXCAFDoc_VisMaterialToolDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Main constructor.

        Parameters
        ----------
        theMsgDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _XmlMXCAFDoc.new_XmlMXCAFDoc_VisMaterialToolDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        Paste attribute from persistence into document.

        Parameters
        ----------
        theSource: XmlObjMgt_Persistent
        theTarget: TDF_Attribute
        theRelocTable: XmlObjMgt_RRelocationTable

        Returns
        -------
        bool

        Paste attribute from document into persistence.

        Parameters
        ----------
        theSource: TDF_Attribute
        theTarget: XmlObjMgt_Persistent
        theRelocTable: XmlObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_VisMaterialToolDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_VisMaterialToolDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_VisMaterialToolDriver
    __del__ = lambda self: None
XmlMXCAFDoc_VisMaterialToolDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_VisMaterialToolDriver_swigregister
XmlMXCAFDoc_VisMaterialToolDriver_swigregister(XmlMXCAFDoc_VisMaterialToolDriver)

class XmlMXCAFDoc_NoteBinDataDriver(XmlMXCAFDoc_NoteDriver):
    __swig_setmethods__ = {}
    for _s in [XmlMXCAFDoc_NoteDriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XmlMXCAFDoc_NoteBinDataDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [XmlMXCAFDoc_NoteDriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, XmlMXCAFDoc_NoteBinDataDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        theMessageDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _XmlMXCAFDoc.new_XmlMXCAFDoc_NoteBinDataDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        theSource: XmlObjMgt_Persistent
        theTarget: TDF_Attribute
        theRelocTable: XmlObjMgt_RRelocationTable

        Returns
        -------
        bool

        No available documentation.

        Parameters
        ----------
        theSource: TDF_Attribute
        theTarget: XmlObjMgt_Persistent
        theRelocTable: XmlObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_NoteBinDataDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_NoteBinDataDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_NoteBinDataDriver
    __del__ = lambda self: None
XmlMXCAFDoc_NoteBinDataDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_NoteBinDataDriver_swigregister
XmlMXCAFDoc_NoteBinDataDriver_swigregister(XmlMXCAFDoc_NoteBinDataDriver)

class XmlMXCAFDoc_NoteCommentDriver(XmlMXCAFDoc_NoteDriver):
    __swig_setmethods__ = {}
    for _s in [XmlMXCAFDoc_NoteDriver]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XmlMXCAFDoc_NoteCommentDriver, name, value)
    __swig_getmethods__ = {}
    for _s in [XmlMXCAFDoc_NoteDriver]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, XmlMXCAFDoc_NoteCommentDriver, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        theMessageDriver: Message_Messenger

        Returns
        -------
        None

        """
        this = _XmlMXCAFDoc.new_XmlMXCAFDoc_NoteCommentDriver(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Paste(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        theSource: XmlObjMgt_Persistent
        theTarget: TDF_Attribute
        theRelocTable: XmlObjMgt_RRelocationTable

        Returns
        -------
        bool

        No available documentation.

        Parameters
        ----------
        theSource: TDF_Attribute
        theTarget: XmlObjMgt_Persistent
        theRelocTable: XmlObjMgt_SRelocationTable

        Returns
        -------
        None

        """
        return _XmlMXCAFDoc.XmlMXCAFDoc_NoteCommentDriver_Paste(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_XmlMXCAFDoc_NoteCommentDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMXCAFDoc.delete_XmlMXCAFDoc_NoteCommentDriver
    __del__ = lambda self: None
XmlMXCAFDoc_NoteCommentDriver_swigregister = _XmlMXCAFDoc.XmlMXCAFDoc_NoteCommentDriver_swigregister
XmlMXCAFDoc_NoteCommentDriver_swigregister(XmlMXCAFDoc_NoteCommentDriver)



# This file is compatible with both classic and new-style classes.


