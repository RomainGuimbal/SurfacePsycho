# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

"""
FilletSurf module, see official documentation at
https://www.opencascade.com/doc/occt-7.7.0/refman/html/package_filletsurf.html
"""

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _FilletSurf
else:
    import _FilletSurf

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _FilletSurf.delete_SwigPyIterator

    def value(self):
        return _FilletSurf.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _FilletSurf.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _FilletSurf.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _FilletSurf.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _FilletSurf.SwigPyIterator_equal(self, x)

    def copy(self):
        return _FilletSurf.SwigPyIterator_copy(self)

    def next(self):
        return _FilletSurf.SwigPyIterator_next(self)

    def __next__(self):
        return _FilletSurf.SwigPyIterator___next__(self)

    def previous(self):
        return _FilletSurf.SwigPyIterator_previous(self)

    def advance(self, n):
        return _FilletSurf.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _FilletSurf.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _FilletSurf.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _FilletSurf.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _FilletSurf.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _FilletSurf.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _FilletSurf.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _FilletSurf:
_FilletSurf.SwigPyIterator_swigregister(SwigPyIterator)

def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error, method_name, class_name):
    return _FilletSurf.process_exception(error, method_name, class_name)

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.TopoDS
import OCC.Core.Message
import OCC.Core.TCollection
import OCC.Core.OSD
import OCC.Core.TColStd
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.TopTools
import OCC.Core.Geom
import OCC.Core.GeomAbs
import OCC.Core.TColgp
import OCC.Core.Geom2d
import OCC.Core.ChFi3d
import OCC.Core.BRepAdaptor
import OCC.Core.Adaptor3d
import OCC.Core.Adaptor2d
import OCC.Core.math
import OCC.Core.GeomAdaptor
import OCC.Core.Geom2dAdaptor
import OCC.Core.ChFiDS
import OCC.Core.Law
import OCC.Core.TopOpeBRepBuild
import OCC.Core.TopOpeBRepDS
import OCC.Core.TopOpeBRepTool
import OCC.Core.BRepClass3d
import OCC.Core.IntCurveSurface
import OCC.Core.Intf
import OCC.Core.Bnd
import OCC.Core.BVH
import OCC.Core.IntSurf
import OCC.Core.IntCurvesFace
import OCC.Core.TopExp
import OCC.Core.Extrema
import OCC.Core.BRepBlend
import OCC.Core.BlendFunc
import OCC.Core.Convert
import OCC.Core.Blend
import OCC.Core.Approx
import OCC.Core.AppCont
import OCC.Core.AppParCurves
import OCC.Core.AppBlend
import OCC.Core.GeomFill
import OCC.Core.TColGeom

from enum import IntEnum
from OCC.Core.Exception import *

FilletSurf_EmptyList = _FilletSurf.FilletSurf_EmptyList
FilletSurf_EdgeNotG1 = _FilletSurf.FilletSurf_EdgeNotG1
FilletSurf_FacesNotG1 = _FilletSurf.FilletSurf_FacesNotG1
FilletSurf_EdgeNotOnShape = _FilletSurf.FilletSurf_EdgeNotOnShape
FilletSurf_NotSharpEdge = _FilletSurf.FilletSurf_NotSharpEdge
FilletSurf_PbFilletCompute = _FilletSurf.FilletSurf_PbFilletCompute
FilletSurf_IsOk = _FilletSurf.FilletSurf_IsOk
FilletSurf_IsNotOk = _FilletSurf.FilletSurf_IsNotOk
FilletSurf_IsPartial = _FilletSurf.FilletSurf_IsPartial
FilletSurf_TwoExtremityOnEdge = _FilletSurf.FilletSurf_TwoExtremityOnEdge
FilletSurf_OneExtremityOnEdge = _FilletSurf.FilletSurf_OneExtremityOnEdge
FilletSurf_NoExtremityOnEdge = _FilletSurf.FilletSurf_NoExtremityOnEdge


class FilletSurf_ErrorTypeStatus(IntEnum):
	FilletSurf_EmptyList = 0
	FilletSurf_EdgeNotG1 = 1
	FilletSurf_FacesNotG1 = 2
	FilletSurf_EdgeNotOnShape = 3
	FilletSurf_NotSharpEdge = 4
	FilletSurf_PbFilletCompute = 5
FilletSurf_EmptyList = FilletSurf_ErrorTypeStatus.FilletSurf_EmptyList
FilletSurf_EdgeNotG1 = FilletSurf_ErrorTypeStatus.FilletSurf_EdgeNotG1
FilletSurf_FacesNotG1 = FilletSurf_ErrorTypeStatus.FilletSurf_FacesNotG1
FilletSurf_EdgeNotOnShape = FilletSurf_ErrorTypeStatus.FilletSurf_EdgeNotOnShape
FilletSurf_NotSharpEdge = FilletSurf_ErrorTypeStatus.FilletSurf_NotSharpEdge
FilletSurf_PbFilletCompute = FilletSurf_ErrorTypeStatus.FilletSurf_PbFilletCompute

class FilletSurf_StatusDone(IntEnum):
	FilletSurf_IsOk = 0
	FilletSurf_IsNotOk = 1
	FilletSurf_IsPartial = 2
FilletSurf_IsOk = FilletSurf_StatusDone.FilletSurf_IsOk
FilletSurf_IsNotOk = FilletSurf_StatusDone.FilletSurf_IsNotOk
FilletSurf_IsPartial = FilletSurf_StatusDone.FilletSurf_IsPartial

class FilletSurf_StatusType(IntEnum):
	FilletSurf_TwoExtremityOnEdge = 0
	FilletSurf_OneExtremityOnEdge = 1
	FilletSurf_NoExtremityOnEdge = 2
FilletSurf_TwoExtremityOnEdge = FilletSurf_StatusType.FilletSurf_TwoExtremityOnEdge
FilletSurf_OneExtremityOnEdge = FilletSurf_StatusType.FilletSurf_OneExtremityOnEdge
FilletSurf_NoExtremityOnEdge = FilletSurf_StatusType.FilletSurf_NoExtremityOnEdge

class FilletSurf_Builder(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        S: TopoDS_Shape
        E: TopTools_ListOfShape
        R: float
        Ta: float (optional, default to 1.0e-2)
        Tapp3d: float (optional, default to 1.0e-4)
        Tapp2d: float (optional, default to 1.0e-5)

        Return
        -------
        None

        Description
        -----------
        Initialize of the information necessary for the computation of the fillet on the shape s from a list of edges e and a radius r. //! ta is the angular tolerance tapp3d is the 3d approximation tolerance tapp2d is the 2d approximation tolerance.

        """
        _FilletSurf.FilletSurf_Builder_swiginit(self, _FilletSurf.new_FilletSurf_Builder(*args))

    def CurveOnFace1(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        opencascade::handle<Geom_Curve>

        Description
        -----------
        Gives the 3d curve of surfacefillet(index) on supportface1(index).

        """
        return _FilletSurf.FilletSurf_Builder_CurveOnFace1(self, *args)

    def CurveOnFace2(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        opencascade::handle<Geom_Curve>

        Description
        -----------
        Gives the 3d curve of surfacefillet(index) on supportface2(index).

        """
        return _FilletSurf.FilletSurf_Builder_CurveOnFace2(self, *args)

    def EndSectionStatus(self, *args):
        r"""
        Return
        -------
        FilletSurf_StatusType

        Description
        -----------
        No available documentation.

        """
        return _FilletSurf.FilletSurf_Builder_EndSectionStatus(self, *args)

    def FirstParameter(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Gives the parameter of the fillet on the first edge.

        """
        return _FilletSurf.FilletSurf_Builder_FirstParameter(self, *args)

    def IsDone(self, *args):
        r"""
        Return
        -------
        FilletSurf_StatusDone

        Description
        -----------
        Gives the status about the computation of the fillet returns: isok :no problem during the computation isnotok: no result is produced ispartial: the result is partial.

        """
        return _FilletSurf.FilletSurf_Builder_IsDone(self, *args)

    def LastParameter(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Gives the parameter of the fillet on the last edge.

        """
        return _FilletSurf.FilletSurf_Builder_LastParameter(self, *args)

    def NbSection(self, *args):
        r"""

        Parameters
        ----------
        IndexSurf: int

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _FilletSurf.FilletSurf_Builder_NbSection(self, *args)

    def NbSurface(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Gives the number of nubs surfaces of the fillet.

        """
        return _FilletSurf.FilletSurf_Builder_NbSurface(self, *args)

    def PCurve1OnFillet(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        opencascade::handle<Geom2d_Curve>

        Description
        -----------
        Gives the pcurve associated to curveonface1(index) on the fillet.

        """
        return _FilletSurf.FilletSurf_Builder_PCurve1OnFillet(self, *args)

    def PCurve2OnFillet(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        opencascade::handle<Geom2d_Curve>

        Description
        -----------
        Gives the pcurve associated to curveonsup2(index) on the fillet.

        """
        return _FilletSurf.FilletSurf_Builder_PCurve2OnFillet(self, *args)

    def PCurveOnFace1(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        opencascade::handle<Geom2d_Curve>

        Description
        -----------
        Gives the pcurve associated to curvonsup1(index) on the support face.

        """
        return _FilletSurf.FilletSurf_Builder_PCurveOnFace1(self, *args)

    def PCurveOnFace2(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        opencascade::handle<Geom2d_Curve>

        Description
        -----------
        Gives the pcurve associated to curveonsup2(index) on the support face.

        """
        return _FilletSurf.FilletSurf_Builder_PCurveOnFace2(self, *args)

    def Perform(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        ---purpose computation of the fillet (list of nubs).

        """
        return _FilletSurf.FilletSurf_Builder_Perform(self, *args)

    def Section(self, *args):
        r"""

        Parameters
        ----------
        IndexSurf: int
        IndexSec: int
        Circ: Geom_TrimmedCurve

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _FilletSurf.FilletSurf_Builder_Section(self, *args)

    def Simulate(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _FilletSurf.FilletSurf_Builder_Simulate(self, *args)

    def StartSectionStatus(self, *args):
        r"""
        Return
        -------
        FilletSurf_StatusType

        Description
        -----------
        No available documentation.

        """
        return _FilletSurf.FilletSurf_Builder_StartSectionStatus(self, *args)

    def StatusError(self, *args):
        r"""
        Return
        -------
        FilletSurf_ErrorTypeStatus

        Description
        -----------
        Gives information about error status if isdone=isnotok returns edgenotg1: the edges are not g1 facesnotg1: two connected faces on a same support are not g1 edgenotonshape: the edge is not on shape notsharpedge: the edge is not sharp pbfilletcompute: problem during the computation of the fillet.

        """
        return _FilletSurf.FilletSurf_Builder_StatusError(self, *args)

    def SupportFace1(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        TopoDS_Face

        Description
        -----------
        Gives the first support face relative to surfacefillet(index);.

        """
        return _FilletSurf.FilletSurf_Builder_SupportFace1(self, *args)

    def SupportFace2(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        TopoDS_Face

        Description
        -----------
        Gives the second support face relative to surfacefillet(index);.

        """
        return _FilletSurf.FilletSurf_Builder_SupportFace2(self, *args)

    def SurfaceFillet(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        opencascade::handle<Geom_Surface>

        Description
        -----------
        Gives the nubs surface of index index.

        """
        return _FilletSurf.FilletSurf_Builder_SurfaceFillet(self, *args)

    def TolApp3d(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        float

        Description
        -----------
        Gives the 3d tolerance reached during approximation of surface of index index.

        """
        return _FilletSurf.FilletSurf_Builder_TolApp3d(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _FilletSurf.delete_FilletSurf_Builder

# Register FilletSurf_Builder in _FilletSurf:
_FilletSurf.FilletSurf_Builder_swigregister(FilletSurf_Builder)
class FilletSurf_InternalBuilder(OCC.Core.ChFi3d.ChFi3d_FilBuilder):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        S: TopoDS_Shape
        FShape: ChFi3d_FilletShape (optional, default to ChFi3d_Polynomial)
        Ta: float (optional, default to 1.0e-2)
        Tapp3d: float (optional, default to 1.0e-4)
        Tapp2d: float (optional, default to 1.0e-5)

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _FilletSurf.FilletSurf_InternalBuilder_swiginit(self, _FilletSurf.new_FilletSurf_InternalBuilder(*args))

    def Add(self, *args):
        r"""

        Parameters
        ----------
        E: TopTools_ListOfShape
        R: float

        Return
        -------
        int

        Description
        -----------
        Initializes the contour with a list of edges 0: no problem 1: empty list 2: the edges are not g1 3: two connected faces on a same support are not g1 4: the edge is not on shape 5: notsharpedge: the edge is not sharp.

        """
        return _FilletSurf.FilletSurf_InternalBuilder_Add(self, *args)

    def CurveOnFace1(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        opencascade::handle<Geom_Curve>

        Description
        -----------
        Gives the 3d curve of surfacefillet(index) on supportface1(index).

        """
        return _FilletSurf.FilletSurf_InternalBuilder_CurveOnFace1(self, *args)

    def CurveOnFace2(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        opencascade::handle<Geom_Curve>

        Description
        -----------
        Gives the 3d curve of surfacefillet(index) on supportface2(index).

        """
        return _FilletSurf.FilletSurf_InternalBuilder_CurveOnFace2(self, *args)

    def Done(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _FilletSurf.FilletSurf_InternalBuilder_Done(self, *args)

    def EndSectionStatus(self, *args):
        r"""
        Return
        -------
        FilletSurf_StatusType

        Description
        -----------
        No available documentation.

        """
        return _FilletSurf.FilletSurf_InternalBuilder_EndSectionStatus(self, *args)

    def FirstParameter(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Gives the parameter of the fillet on the first edge.

        """
        return _FilletSurf.FilletSurf_InternalBuilder_FirstParameter(self, *args)

    def LastParameter(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Gives the parameter of the fillet on the last edge.

        """
        return _FilletSurf.FilletSurf_InternalBuilder_LastParameter(self, *args)

    def NbSection(self, *args):
        r"""

        Parameters
        ----------
        IndexSurf: int

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _FilletSurf.FilletSurf_InternalBuilder_NbSection(self, *args)

    def NbSurface(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Gives the number of nubs surfaces of the fillet.

        """
        return _FilletSurf.FilletSurf_InternalBuilder_NbSurface(self, *args)

    def PCurve1OnFillet(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        opencascade::handle<Geom2d_Curve>

        Description
        -----------
        Gives the pcurve associated to curveonface1(index) on the fillet.

        """
        return _FilletSurf.FilletSurf_InternalBuilder_PCurve1OnFillet(self, *args)

    def PCurve2OnFillet(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        opencascade::handle<Geom2d_Curve>

        Description
        -----------
        Gives the pcurve associated to curveonsup2(index) on the fillet.

        """
        return _FilletSurf.FilletSurf_InternalBuilder_PCurve2OnFillet(self, *args)

    def PCurveOnFace1(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        opencascade::handle<Geom2d_Curve>

        Description
        -----------
        Gives the pcurve associated to curvonsup1(index) on the support face.

        """
        return _FilletSurf.FilletSurf_InternalBuilder_PCurveOnFace1(self, *args)

    def PCurveOnFace2(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        opencascade::handle<Geom2d_Curve>

        Description
        -----------
        Gives the pcurve associated to curveonsup2(index) on the support face.

        """
        return _FilletSurf.FilletSurf_InternalBuilder_PCurveOnFace2(self, *args)

    def Perform(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _FilletSurf.FilletSurf_InternalBuilder_Perform(self, *args)

    def Section(self, *args):
        r"""

        Parameters
        ----------
        IndexSurf: int
        IndexSec: int
        Circ: Geom_TrimmedCurve

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _FilletSurf.FilletSurf_InternalBuilder_Section(self, *args)

    def Simulate(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _FilletSurf.FilletSurf_InternalBuilder_Simulate(self, *args)

    def StartSectionStatus(self, *args):
        r"""
        Return
        -------
        FilletSurf_StatusType

        Description
        -----------
        No available documentation.

        """
        return _FilletSurf.FilletSurf_InternalBuilder_StartSectionStatus(self, *args)

    def SupportFace1(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        TopoDS_Face

        Description
        -----------
        Gives the first support face relative to surfacefillet(index);.

        """
        return _FilletSurf.FilletSurf_InternalBuilder_SupportFace1(self, *args)

    def SupportFace2(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        TopoDS_Face

        Description
        -----------
        Gives the second support face relative to surfacefillet(index);.

        """
        return _FilletSurf.FilletSurf_InternalBuilder_SupportFace2(self, *args)

    def SurfaceFillet(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        opencascade::handle<Geom_Surface>

        Description
        -----------
        Gives the nubs surface of index index.

        """
        return _FilletSurf.FilletSurf_InternalBuilder_SurfaceFillet(self, *args)

    def TolApp3d(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        float

        Description
        -----------
        Gives the 3d tolerance reached during approximation of the surface of index index.

        """
        return _FilletSurf.FilletSurf_InternalBuilder_TolApp3d(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _FilletSurf.delete_FilletSurf_InternalBuilder

# Register FilletSurf_InternalBuilder in _FilletSurf:
_FilletSurf.FilletSurf_InternalBuilder_swigregister(FilletSurf_InternalBuilder)



