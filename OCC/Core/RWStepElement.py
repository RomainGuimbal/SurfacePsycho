# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

"""
RWStepElement module, see official documentation at
https://www.opencascade.com/doc/occt-7.7.0/refman/html/package_rwstepelement.html
"""

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _RWStepElement
else:
    import _RWStepElement

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _RWStepElement.delete_SwigPyIterator

    def value(self):
        return _RWStepElement.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _RWStepElement.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _RWStepElement.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _RWStepElement.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _RWStepElement.SwigPyIterator_equal(self, x)

    def copy(self):
        return _RWStepElement.SwigPyIterator_copy(self)

    def next(self):
        return _RWStepElement.SwigPyIterator_next(self)

    def __next__(self):
        return _RWStepElement.SwigPyIterator___next__(self)

    def previous(self):
        return _RWStepElement.SwigPyIterator_previous(self)

    def advance(self, n):
        return _RWStepElement.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _RWStepElement.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _RWStepElement.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _RWStepElement.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _RWStepElement.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _RWStepElement.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _RWStepElement.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _RWStepElement:
_RWStepElement.SwigPyIterator_swigregister(SwigPyIterator)

def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error, method_name, class_name):
    return _RWStepElement.process_exception(error, method_name, class_name)

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.TCollection
import OCC.Core.Message
import OCC.Core.OSD
import OCC.Core.TColStd
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.Resource
import OCC.Core.StepElement
import OCC.Core.StepRepr
import OCC.Core.StepBasic

from enum import IntEnum
from OCC.Core.Exception import *



class RWStepElement_RWAnalysisItemWithinRepresentation(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepElement.RWStepElement_RWAnalysisItemWithinRepresentation_swiginit(self, _RWStepElement.new_RWStepElement_RWAnalysisItemWithinRepresentation(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_AnalysisItemWithinRepresentation

        Return
        -------
        None

        Description
        -----------
        Reads analysisitemwithinrepresentation.

        """
        return _RWStepElement.RWStepElement_RWAnalysisItemWithinRepresentation_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepElement_AnalysisItemWithinRepresentation
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepElement.RWStepElement_RWAnalysisItemWithinRepresentation_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_AnalysisItemWithinRepresentation

        Return
        -------
        None

        Description
        -----------
        Writes analysisitemwithinrepresentation.

        """
        return _RWStepElement.RWStepElement_RWAnalysisItemWithinRepresentation_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWAnalysisItemWithinRepresentation

# Register RWStepElement_RWAnalysisItemWithinRepresentation in _RWStepElement:
_RWStepElement.RWStepElement_RWAnalysisItemWithinRepresentation_swigregister(RWStepElement_RWAnalysisItemWithinRepresentation)
class RWStepElement_RWCurve3dElementDescriptor(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepElement.RWStepElement_RWCurve3dElementDescriptor_swiginit(self, _RWStepElement.new_RWStepElement_RWCurve3dElementDescriptor(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_Curve3dElementDescriptor

        Return
        -------
        None

        Description
        -----------
        Reads curve3delementdescriptor.

        """
        return _RWStepElement.RWStepElement_RWCurve3dElementDescriptor_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepElement_Curve3dElementDescriptor
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepElement.RWStepElement_RWCurve3dElementDescriptor_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_Curve3dElementDescriptor

        Return
        -------
        None

        Description
        -----------
        Writes curve3delementdescriptor.

        """
        return _RWStepElement.RWStepElement_RWCurve3dElementDescriptor_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWCurve3dElementDescriptor

# Register RWStepElement_RWCurve3dElementDescriptor in _RWStepElement:
_RWStepElement.RWStepElement_RWCurve3dElementDescriptor_swigregister(RWStepElement_RWCurve3dElementDescriptor)
class RWStepElement_RWCurveElementEndReleasePacket(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepElement.RWStepElement_RWCurveElementEndReleasePacket_swiginit(self, _RWStepElement.new_RWStepElement_RWCurveElementEndReleasePacket(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_CurveElementEndReleasePacket

        Return
        -------
        None

        Description
        -----------
        Reads curveelementendreleasepacket.

        """
        return _RWStepElement.RWStepElement_RWCurveElementEndReleasePacket_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepElement_CurveElementEndReleasePacket
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepElement.RWStepElement_RWCurveElementEndReleasePacket_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_CurveElementEndReleasePacket

        Return
        -------
        None

        Description
        -----------
        Writes curveelementendreleasepacket.

        """
        return _RWStepElement.RWStepElement_RWCurveElementEndReleasePacket_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWCurveElementEndReleasePacket

# Register RWStepElement_RWCurveElementEndReleasePacket in _RWStepElement:
_RWStepElement.RWStepElement_RWCurveElementEndReleasePacket_swigregister(RWStepElement_RWCurveElementEndReleasePacket)
class RWStepElement_RWCurveElementSectionDefinition(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepElement.RWStepElement_RWCurveElementSectionDefinition_swiginit(self, _RWStepElement.new_RWStepElement_RWCurveElementSectionDefinition(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_CurveElementSectionDefinition

        Return
        -------
        None

        Description
        -----------
        Reads curveelementsectiondefinition.

        """
        return _RWStepElement.RWStepElement_RWCurveElementSectionDefinition_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepElement_CurveElementSectionDefinition
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepElement.RWStepElement_RWCurveElementSectionDefinition_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_CurveElementSectionDefinition

        Return
        -------
        None

        Description
        -----------
        Writes curveelementsectiondefinition.

        """
        return _RWStepElement.RWStepElement_RWCurveElementSectionDefinition_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWCurveElementSectionDefinition

# Register RWStepElement_RWCurveElementSectionDefinition in _RWStepElement:
_RWStepElement.RWStepElement_RWCurveElementSectionDefinition_swigregister(RWStepElement_RWCurveElementSectionDefinition)
class RWStepElement_RWCurveElementSectionDerivedDefinitions(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepElement.RWStepElement_RWCurveElementSectionDerivedDefinitions_swiginit(self, _RWStepElement.new_RWStepElement_RWCurveElementSectionDerivedDefinitions(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_CurveElementSectionDerivedDefinitions

        Return
        -------
        None

        Description
        -----------
        Reads curveelementsectionderiveddefinitions.

        """
        return _RWStepElement.RWStepElement_RWCurveElementSectionDerivedDefinitions_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepElement_CurveElementSectionDerivedDefinitions
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepElement.RWStepElement_RWCurveElementSectionDerivedDefinitions_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_CurveElementSectionDerivedDefinitions

        Return
        -------
        None

        Description
        -----------
        Writes curveelementsectionderiveddefinitions.

        """
        return _RWStepElement.RWStepElement_RWCurveElementSectionDerivedDefinitions_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWCurveElementSectionDerivedDefinitions

# Register RWStepElement_RWCurveElementSectionDerivedDefinitions in _RWStepElement:
_RWStepElement.RWStepElement_RWCurveElementSectionDerivedDefinitions_swigregister(RWStepElement_RWCurveElementSectionDerivedDefinitions)
class RWStepElement_RWElementDescriptor(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepElement.RWStepElement_RWElementDescriptor_swiginit(self, _RWStepElement.new_RWStepElement_RWElementDescriptor(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_ElementDescriptor

        Return
        -------
        None

        Description
        -----------
        Reads elementdescriptor.

        """
        return _RWStepElement.RWStepElement_RWElementDescriptor_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepElement_ElementDescriptor
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepElement.RWStepElement_RWElementDescriptor_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_ElementDescriptor

        Return
        -------
        None

        Description
        -----------
        Writes elementdescriptor.

        """
        return _RWStepElement.RWStepElement_RWElementDescriptor_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWElementDescriptor

# Register RWStepElement_RWElementDescriptor in _RWStepElement:
_RWStepElement.RWStepElement_RWElementDescriptor_swigregister(RWStepElement_RWElementDescriptor)
class RWStepElement_RWElementMaterial(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepElement.RWStepElement_RWElementMaterial_swiginit(self, _RWStepElement.new_RWStepElement_RWElementMaterial(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_ElementMaterial

        Return
        -------
        None

        Description
        -----------
        Reads elementmaterial.

        """
        return _RWStepElement.RWStepElement_RWElementMaterial_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepElement_ElementMaterial
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepElement.RWStepElement_RWElementMaterial_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_ElementMaterial

        Return
        -------
        None

        Description
        -----------
        Writes elementmaterial.

        """
        return _RWStepElement.RWStepElement_RWElementMaterial_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWElementMaterial

# Register RWStepElement_RWElementMaterial in _RWStepElement:
_RWStepElement.RWStepElement_RWElementMaterial_swigregister(RWStepElement_RWElementMaterial)
class RWStepElement_RWSurface3dElementDescriptor(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepElement.RWStepElement_RWSurface3dElementDescriptor_swiginit(self, _RWStepElement.new_RWStepElement_RWSurface3dElementDescriptor(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_Surface3dElementDescriptor

        Return
        -------
        None

        Description
        -----------
        Reads surface3delementdescriptor.

        """
        return _RWStepElement.RWStepElement_RWSurface3dElementDescriptor_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepElement_Surface3dElementDescriptor
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepElement.RWStepElement_RWSurface3dElementDescriptor_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_Surface3dElementDescriptor

        Return
        -------
        None

        Description
        -----------
        Writes surface3delementdescriptor.

        """
        return _RWStepElement.RWStepElement_RWSurface3dElementDescriptor_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWSurface3dElementDescriptor

# Register RWStepElement_RWSurface3dElementDescriptor in _RWStepElement:
_RWStepElement.RWStepElement_RWSurface3dElementDescriptor_swigregister(RWStepElement_RWSurface3dElementDescriptor)
class RWStepElement_RWSurfaceElementProperty(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepElement.RWStepElement_RWSurfaceElementProperty_swiginit(self, _RWStepElement.new_RWStepElement_RWSurfaceElementProperty(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_SurfaceElementProperty

        Return
        -------
        None

        Description
        -----------
        Reads surfaceelementproperty.

        """
        return _RWStepElement.RWStepElement_RWSurfaceElementProperty_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepElement_SurfaceElementProperty
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepElement.RWStepElement_RWSurfaceElementProperty_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_SurfaceElementProperty

        Return
        -------
        None

        Description
        -----------
        Writes surfaceelementproperty.

        """
        return _RWStepElement.RWStepElement_RWSurfaceElementProperty_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWSurfaceElementProperty

# Register RWStepElement_RWSurfaceElementProperty in _RWStepElement:
_RWStepElement.RWStepElement_RWSurfaceElementProperty_swigregister(RWStepElement_RWSurfaceElementProperty)
class RWStepElement_RWSurfaceSection(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepElement.RWStepElement_RWSurfaceSection_swiginit(self, _RWStepElement.new_RWStepElement_RWSurfaceSection(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_SurfaceSection

        Return
        -------
        None

        Description
        -----------
        Reads surfacesection.

        """
        return _RWStepElement.RWStepElement_RWSurfaceSection_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepElement_SurfaceSection
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepElement.RWStepElement_RWSurfaceSection_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_SurfaceSection

        Return
        -------
        None

        Description
        -----------
        Writes surfacesection.

        """
        return _RWStepElement.RWStepElement_RWSurfaceSection_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWSurfaceSection

# Register RWStepElement_RWSurfaceSection in _RWStepElement:
_RWStepElement.RWStepElement_RWSurfaceSection_swigregister(RWStepElement_RWSurfaceSection)
class RWStepElement_RWSurfaceSectionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepElement.RWStepElement_RWSurfaceSectionField_swiginit(self, _RWStepElement.new_RWStepElement_RWSurfaceSectionField(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_SurfaceSectionField

        Return
        -------
        None

        Description
        -----------
        Reads surfacesectionfield.

        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionField_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepElement_SurfaceSectionField
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionField_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_SurfaceSectionField

        Return
        -------
        None

        Description
        -----------
        Writes surfacesectionfield.

        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionField_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWSurfaceSectionField

# Register RWStepElement_RWSurfaceSectionField in _RWStepElement:
_RWStepElement.RWStepElement_RWSurfaceSectionField_swigregister(RWStepElement_RWSurfaceSectionField)
class RWStepElement_RWSurfaceSectionFieldConstant(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepElement.RWStepElement_RWSurfaceSectionFieldConstant_swiginit(self, _RWStepElement.new_RWStepElement_RWSurfaceSectionFieldConstant(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_SurfaceSectionFieldConstant

        Return
        -------
        None

        Description
        -----------
        Reads surfacesectionfieldconstant.

        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionFieldConstant_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepElement_SurfaceSectionFieldConstant
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionFieldConstant_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_SurfaceSectionFieldConstant

        Return
        -------
        None

        Description
        -----------
        Writes surfacesectionfieldconstant.

        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionFieldConstant_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWSurfaceSectionFieldConstant

# Register RWStepElement_RWSurfaceSectionFieldConstant in _RWStepElement:
_RWStepElement.RWStepElement_RWSurfaceSectionFieldConstant_swigregister(RWStepElement_RWSurfaceSectionFieldConstant)
class RWStepElement_RWSurfaceSectionFieldVarying(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepElement.RWStepElement_RWSurfaceSectionFieldVarying_swiginit(self, _RWStepElement.new_RWStepElement_RWSurfaceSectionFieldVarying(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_SurfaceSectionFieldVarying

        Return
        -------
        None

        Description
        -----------
        Reads surfacesectionfieldvarying.

        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionFieldVarying_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepElement_SurfaceSectionFieldVarying
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionFieldVarying_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_SurfaceSectionFieldVarying

        Return
        -------
        None

        Description
        -----------
        Writes surfacesectionfieldvarying.

        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionFieldVarying_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWSurfaceSectionFieldVarying

# Register RWStepElement_RWSurfaceSectionFieldVarying in _RWStepElement:
_RWStepElement.RWStepElement_RWSurfaceSectionFieldVarying_swigregister(RWStepElement_RWSurfaceSectionFieldVarying)
class RWStepElement_RWUniformSurfaceSection(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepElement.RWStepElement_RWUniformSurfaceSection_swiginit(self, _RWStepElement.new_RWStepElement_RWUniformSurfaceSection(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_UniformSurfaceSection

        Return
        -------
        None

        Description
        -----------
        Reads uniformsurfacesection.

        """
        return _RWStepElement.RWStepElement_RWUniformSurfaceSection_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepElement_UniformSurfaceSection
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepElement.RWStepElement_RWUniformSurfaceSection_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_UniformSurfaceSection

        Return
        -------
        None

        Description
        -----------
        Writes uniformsurfacesection.

        """
        return _RWStepElement.RWStepElement_RWUniformSurfaceSection_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWUniformSurfaceSection

# Register RWStepElement_RWUniformSurfaceSection in _RWStepElement:
_RWStepElement.RWStepElement_RWUniformSurfaceSection_swigregister(RWStepElement_RWUniformSurfaceSection)
class RWStepElement_RWVolume3dElementDescriptor(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepElement.RWStepElement_RWVolume3dElementDescriptor_swiginit(self, _RWStepElement.new_RWStepElement_RWVolume3dElementDescriptor(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_Volume3dElementDescriptor

        Return
        -------
        None

        Description
        -----------
        Reads volume3delementdescriptor.

        """
        return _RWStepElement.RWStepElement_RWVolume3dElementDescriptor_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepElement_Volume3dElementDescriptor
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepElement.RWStepElement_RWVolume3dElementDescriptor_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_Volume3dElementDescriptor

        Return
        -------
        None

        Description
        -----------
        Writes volume3delementdescriptor.

        """
        return _RWStepElement.RWStepElement_RWVolume3dElementDescriptor_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWVolume3dElementDescriptor

# Register RWStepElement_RWVolume3dElementDescriptor in _RWStepElement:
_RWStepElement.RWStepElement_RWVolume3dElementDescriptor_swigregister(RWStepElement_RWVolume3dElementDescriptor)



