# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
RWStepElement module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_rwstepelement.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_RWStepElement')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_RWStepElement')
    _RWStepElement = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_RWStepElement', [dirname(__file__)])
        except ImportError:
            import _RWStepElement
            return _RWStepElement
        try:
            _mod = imp.load_module('_RWStepElement', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _RWStepElement = swig_import_helper()
    del swig_import_helper
else:
    import _RWStepElement
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

class SwigPyIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwigPyIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwigPyIterator, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _RWStepElement.delete_SwigPyIterator
    __del__ = lambda self: None

    def value(self) -> "PyObject *":
        return _RWStepElement.SwigPyIterator_value(self)

    def incr(self, n: 'size_t'=1) -> "swig::SwigPyIterator *":
        return _RWStepElement.SwigPyIterator_incr(self, n)

    def decr(self, n: 'size_t'=1) -> "swig::SwigPyIterator *":
        return _RWStepElement.SwigPyIterator_decr(self, n)

    def distance(self, x: 'SwigPyIterator') -> "ptrdiff_t":
        return _RWStepElement.SwigPyIterator_distance(self, x)

    def equal(self, x: 'SwigPyIterator') -> "bool":
        return _RWStepElement.SwigPyIterator_equal(self, x)

    def copy(self) -> "swig::SwigPyIterator *":
        return _RWStepElement.SwigPyIterator_copy(self)

    def next(self) -> "PyObject *":
        return _RWStepElement.SwigPyIterator_next(self)

    def __next__(self) -> "PyObject *":
        return _RWStepElement.SwigPyIterator___next__(self)

    def previous(self) -> "PyObject *":
        return _RWStepElement.SwigPyIterator_previous(self)

    def advance(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator *":
        return _RWStepElement.SwigPyIterator_advance(self, n)

    def __eq__(self, x: 'SwigPyIterator') -> "bool":
        return _RWStepElement.SwigPyIterator___eq__(self, x)

    def __ne__(self, x: 'SwigPyIterator') -> "bool":
        return _RWStepElement.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator &":
        return _RWStepElement.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator &":
        return _RWStepElement.SwigPyIterator___isub__(self, n)

    def __add__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator *":
        return _RWStepElement.SwigPyIterator___add__(self, n)

    def __sub__(self, *args) -> "ptrdiff_t":
        return _RWStepElement.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self
SwigPyIterator_swigregister = _RWStepElement.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _RWStepElement.process_exception(error, method_name, class_name)
process_exception = _RWStepElement.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.TCollection
import OCC.Core.Message
import OCC.Core.OSD
import OCC.Core.TColStd
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.Resource
import OCC.Core.StepElement
import OCC.Core.StepRepr
import OCC.Core.StepBasic

from enum import IntEnum
from OCC.Core.Exception import *



class RWStepElement_RWAnalysisItemWithinRepresentation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepElement_RWAnalysisItemWithinRepresentation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepElement_RWAnalysisItemWithinRepresentation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepElement.new_RWStepElement_RWAnalysisItemWithinRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads analysisitemwithinrepresentation.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_AnalysisItemWithinRepresentation

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWAnalysisItemWithinRepresentation_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepElement_AnalysisItemWithinRepresentation
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWAnalysisItemWithinRepresentation_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes analysisitemwithinrepresentation.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_AnalysisItemWithinRepresentation

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWAnalysisItemWithinRepresentation_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWAnalysisItemWithinRepresentation
    __del__ = lambda self: None
RWStepElement_RWAnalysisItemWithinRepresentation_swigregister = _RWStepElement.RWStepElement_RWAnalysisItemWithinRepresentation_swigregister
RWStepElement_RWAnalysisItemWithinRepresentation_swigregister(RWStepElement_RWAnalysisItemWithinRepresentation)

class RWStepElement_RWCurve3dElementDescriptor(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepElement_RWCurve3dElementDescriptor, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepElement_RWCurve3dElementDescriptor, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepElement.new_RWStepElement_RWCurve3dElementDescriptor(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads curve3delementdescriptor.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_Curve3dElementDescriptor

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWCurve3dElementDescriptor_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepElement_Curve3dElementDescriptor
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWCurve3dElementDescriptor_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes curve3delementdescriptor.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_Curve3dElementDescriptor

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWCurve3dElementDescriptor_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWCurve3dElementDescriptor
    __del__ = lambda self: None
RWStepElement_RWCurve3dElementDescriptor_swigregister = _RWStepElement.RWStepElement_RWCurve3dElementDescriptor_swigregister
RWStepElement_RWCurve3dElementDescriptor_swigregister(RWStepElement_RWCurve3dElementDescriptor)

class RWStepElement_RWCurveElementEndReleasePacket(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepElement_RWCurveElementEndReleasePacket, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepElement_RWCurveElementEndReleasePacket, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepElement.new_RWStepElement_RWCurveElementEndReleasePacket(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads curveelementendreleasepacket.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_CurveElementEndReleasePacket

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWCurveElementEndReleasePacket_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepElement_CurveElementEndReleasePacket
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWCurveElementEndReleasePacket_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes curveelementendreleasepacket.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_CurveElementEndReleasePacket

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWCurveElementEndReleasePacket_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWCurveElementEndReleasePacket
    __del__ = lambda self: None
RWStepElement_RWCurveElementEndReleasePacket_swigregister = _RWStepElement.RWStepElement_RWCurveElementEndReleasePacket_swigregister
RWStepElement_RWCurveElementEndReleasePacket_swigregister(RWStepElement_RWCurveElementEndReleasePacket)

class RWStepElement_RWCurveElementSectionDefinition(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepElement_RWCurveElementSectionDefinition, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepElement_RWCurveElementSectionDefinition, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepElement.new_RWStepElement_RWCurveElementSectionDefinition(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads curveelementsectiondefinition.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_CurveElementSectionDefinition

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWCurveElementSectionDefinition_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepElement_CurveElementSectionDefinition
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWCurveElementSectionDefinition_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes curveelementsectiondefinition.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_CurveElementSectionDefinition

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWCurveElementSectionDefinition_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWCurveElementSectionDefinition
    __del__ = lambda self: None
RWStepElement_RWCurveElementSectionDefinition_swigregister = _RWStepElement.RWStepElement_RWCurveElementSectionDefinition_swigregister
RWStepElement_RWCurveElementSectionDefinition_swigregister(RWStepElement_RWCurveElementSectionDefinition)

class RWStepElement_RWCurveElementSectionDerivedDefinitions(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepElement_RWCurveElementSectionDerivedDefinitions, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepElement_RWCurveElementSectionDerivedDefinitions, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepElement.new_RWStepElement_RWCurveElementSectionDerivedDefinitions(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads curveelementsectionderiveddefinitions.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_CurveElementSectionDerivedDefinitions

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWCurveElementSectionDerivedDefinitions_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepElement_CurveElementSectionDerivedDefinitions
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWCurveElementSectionDerivedDefinitions_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes curveelementsectionderiveddefinitions.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_CurveElementSectionDerivedDefinitions

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWCurveElementSectionDerivedDefinitions_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWCurveElementSectionDerivedDefinitions
    __del__ = lambda self: None
RWStepElement_RWCurveElementSectionDerivedDefinitions_swigregister = _RWStepElement.RWStepElement_RWCurveElementSectionDerivedDefinitions_swigregister
RWStepElement_RWCurveElementSectionDerivedDefinitions_swigregister(RWStepElement_RWCurveElementSectionDerivedDefinitions)

class RWStepElement_RWElementDescriptor(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepElement_RWElementDescriptor, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepElement_RWElementDescriptor, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepElement.new_RWStepElement_RWElementDescriptor(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads elementdescriptor.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_ElementDescriptor

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWElementDescriptor_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepElement_ElementDescriptor
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWElementDescriptor_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes elementdescriptor.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_ElementDescriptor

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWElementDescriptor_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWElementDescriptor
    __del__ = lambda self: None
RWStepElement_RWElementDescriptor_swigregister = _RWStepElement.RWStepElement_RWElementDescriptor_swigregister
RWStepElement_RWElementDescriptor_swigregister(RWStepElement_RWElementDescriptor)

class RWStepElement_RWElementMaterial(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepElement_RWElementMaterial, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepElement_RWElementMaterial, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepElement.new_RWStepElement_RWElementMaterial(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads elementmaterial.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_ElementMaterial

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWElementMaterial_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepElement_ElementMaterial
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWElementMaterial_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes elementmaterial.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_ElementMaterial

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWElementMaterial_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWElementMaterial
    __del__ = lambda self: None
RWStepElement_RWElementMaterial_swigregister = _RWStepElement.RWStepElement_RWElementMaterial_swigregister
RWStepElement_RWElementMaterial_swigregister(RWStepElement_RWElementMaterial)

class RWStepElement_RWSurface3dElementDescriptor(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepElement_RWSurface3dElementDescriptor, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepElement_RWSurface3dElementDescriptor, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepElement.new_RWStepElement_RWSurface3dElementDescriptor(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads surface3delementdescriptor.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_Surface3dElementDescriptor

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWSurface3dElementDescriptor_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepElement_Surface3dElementDescriptor
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWSurface3dElementDescriptor_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes surface3delementdescriptor.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_Surface3dElementDescriptor

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWSurface3dElementDescriptor_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWSurface3dElementDescriptor
    __del__ = lambda self: None
RWStepElement_RWSurface3dElementDescriptor_swigregister = _RWStepElement.RWStepElement_RWSurface3dElementDescriptor_swigregister
RWStepElement_RWSurface3dElementDescriptor_swigregister(RWStepElement_RWSurface3dElementDescriptor)

class RWStepElement_RWSurfaceElementProperty(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepElement_RWSurfaceElementProperty, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepElement_RWSurfaceElementProperty, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepElement.new_RWStepElement_RWSurfaceElementProperty(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads surfaceelementproperty.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_SurfaceElementProperty

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWSurfaceElementProperty_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepElement_SurfaceElementProperty
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWSurfaceElementProperty_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes surfaceelementproperty.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_SurfaceElementProperty

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWSurfaceElementProperty_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWSurfaceElementProperty
    __del__ = lambda self: None
RWStepElement_RWSurfaceElementProperty_swigregister = _RWStepElement.RWStepElement_RWSurfaceElementProperty_swigregister
RWStepElement_RWSurfaceElementProperty_swigregister(RWStepElement_RWSurfaceElementProperty)

class RWStepElement_RWSurfaceSection(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepElement_RWSurfaceSection, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepElement_RWSurfaceSection, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepElement.new_RWStepElement_RWSurfaceSection(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads surfacesection.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_SurfaceSection

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWSurfaceSection_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepElement_SurfaceSection
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWSurfaceSection_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes surfacesection.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_SurfaceSection

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWSurfaceSection_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWSurfaceSection
    __del__ = lambda self: None
RWStepElement_RWSurfaceSection_swigregister = _RWStepElement.RWStepElement_RWSurfaceSection_swigregister
RWStepElement_RWSurfaceSection_swigregister(RWStepElement_RWSurfaceSection)

class RWStepElement_RWSurfaceSectionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepElement_RWSurfaceSectionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepElement_RWSurfaceSectionField, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepElement.new_RWStepElement_RWSurfaceSectionField(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads surfacesectionfield.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_SurfaceSectionField

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionField_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepElement_SurfaceSectionField
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionField_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes surfacesectionfield.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_SurfaceSectionField

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionField_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWSurfaceSectionField
    __del__ = lambda self: None
RWStepElement_RWSurfaceSectionField_swigregister = _RWStepElement.RWStepElement_RWSurfaceSectionField_swigregister
RWStepElement_RWSurfaceSectionField_swigregister(RWStepElement_RWSurfaceSectionField)

class RWStepElement_RWSurfaceSectionFieldConstant(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepElement_RWSurfaceSectionFieldConstant, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepElement_RWSurfaceSectionFieldConstant, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepElement.new_RWStepElement_RWSurfaceSectionFieldConstant(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads surfacesectionfieldconstant.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_SurfaceSectionFieldConstant

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionFieldConstant_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepElement_SurfaceSectionFieldConstant
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionFieldConstant_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes surfacesectionfieldconstant.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_SurfaceSectionFieldConstant

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionFieldConstant_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWSurfaceSectionFieldConstant
    __del__ = lambda self: None
RWStepElement_RWSurfaceSectionFieldConstant_swigregister = _RWStepElement.RWStepElement_RWSurfaceSectionFieldConstant_swigregister
RWStepElement_RWSurfaceSectionFieldConstant_swigregister(RWStepElement_RWSurfaceSectionFieldConstant)

class RWStepElement_RWSurfaceSectionFieldVarying(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepElement_RWSurfaceSectionFieldVarying, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepElement_RWSurfaceSectionFieldVarying, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepElement.new_RWStepElement_RWSurfaceSectionFieldVarying(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads surfacesectionfieldvarying.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_SurfaceSectionFieldVarying

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionFieldVarying_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepElement_SurfaceSectionFieldVarying
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionFieldVarying_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes surfacesectionfieldvarying.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_SurfaceSectionFieldVarying

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWSurfaceSectionFieldVarying_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWSurfaceSectionFieldVarying
    __del__ = lambda self: None
RWStepElement_RWSurfaceSectionFieldVarying_swigregister = _RWStepElement.RWStepElement_RWSurfaceSectionFieldVarying_swigregister
RWStepElement_RWSurfaceSectionFieldVarying_swigregister(RWStepElement_RWSurfaceSectionFieldVarying)

class RWStepElement_RWUniformSurfaceSection(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepElement_RWUniformSurfaceSection, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepElement_RWUniformSurfaceSection, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepElement.new_RWStepElement_RWUniformSurfaceSection(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads uniformsurfacesection.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_UniformSurfaceSection

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWUniformSurfaceSection_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepElement_UniformSurfaceSection
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWUniformSurfaceSection_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes uniformsurfacesection.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_UniformSurfaceSection

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWUniformSurfaceSection_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWUniformSurfaceSection
    __del__ = lambda self: None
RWStepElement_RWUniformSurfaceSection_swigregister = _RWStepElement.RWStepElement_RWUniformSurfaceSection_swigregister
RWStepElement_RWUniformSurfaceSection_swigregister(RWStepElement_RWUniformSurfaceSection)

class RWStepElement_RWVolume3dElementDescriptor(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RWStepElement_RWVolume3dElementDescriptor, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RWStepElement_RWVolume3dElementDescriptor, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _RWStepElement.new_RWStepElement_RWVolume3dElementDescriptor(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args) -> "void":
        """
        Reads volume3delementdescriptor.

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepElement_Volume3dElementDescriptor

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWVolume3dElementDescriptor_ReadStep(self, *args)


    def Share(self, *args) -> "void":
        """
        Fills data for graph (shared items).

        Parameters
        ----------
        ent: StepElement_Volume3dElementDescriptor
        iter: Interface_EntityIterator

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWVolume3dElementDescriptor_Share(self, *args)


    def WriteStep(self, *args) -> "void":
        """
        Writes volume3delementdescriptor.

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepElement_Volume3dElementDescriptor

        Returns
        -------
        None

        """
        return _RWStepElement.RWStepElement_RWVolume3dElementDescriptor_WriteStep(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepElement.delete_RWStepElement_RWVolume3dElementDescriptor
    __del__ = lambda self: None
RWStepElement_RWVolume3dElementDescriptor_swigregister = _RWStepElement.RWStepElement_RWVolume3dElementDescriptor_swigregister
RWStepElement_RWVolume3dElementDescriptor_swigregister(RWStepElement_RWVolume3dElementDescriptor)



# This file is compatible with both classic and new-style classes.


