# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
Vrml module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_vrml.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_Vrml')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_Vrml')
    _Vrml = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_Vrml', [dirname(__file__)])
        except ImportError:
            import _Vrml
            return _Vrml
        try:
            _mod = imp.load_module('_Vrml', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _Vrml = swig_import_helper()
    del swig_import_helper
else:
    import _Vrml
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

class SwigPyIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwigPyIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwigPyIterator, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _Vrml.delete_SwigPyIterator
    __del__ = lambda self: None

    def value(self) -> "PyObject *":
        return _Vrml.SwigPyIterator_value(self)

    def incr(self, n: 'size_t'=1) -> "swig::SwigPyIterator *":
        return _Vrml.SwigPyIterator_incr(self, n)

    def decr(self, n: 'size_t'=1) -> "swig::SwigPyIterator *":
        return _Vrml.SwigPyIterator_decr(self, n)

    def distance(self, x: 'SwigPyIterator') -> "ptrdiff_t":
        return _Vrml.SwigPyIterator_distance(self, x)

    def equal(self, x: 'SwigPyIterator') -> "bool":
        return _Vrml.SwigPyIterator_equal(self, x)

    def copy(self) -> "swig::SwigPyIterator *":
        return _Vrml.SwigPyIterator_copy(self)

    def next(self) -> "PyObject *":
        return _Vrml.SwigPyIterator_next(self)

    def __next__(self) -> "PyObject *":
        return _Vrml.SwigPyIterator___next__(self)

    def previous(self) -> "PyObject *":
        return _Vrml.SwigPyIterator_previous(self)

    def advance(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator *":
        return _Vrml.SwigPyIterator_advance(self, n)

    def __eq__(self, x: 'SwigPyIterator') -> "bool":
        return _Vrml.SwigPyIterator___eq__(self, x)

    def __ne__(self, x: 'SwigPyIterator') -> "bool":
        return _Vrml.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator &":
        return _Vrml.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator &":
        return _Vrml.SwigPyIterator___isub__(self, n)

    def __add__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator *":
        return _Vrml.SwigPyIterator___add__(self, n)

    def __sub__(self, *args) -> "ptrdiff_t":
        return _Vrml.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self
SwigPyIterator_swigregister = _Vrml.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _Vrml.process_exception(error, method_name, class_name)
process_exception = _Vrml.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.TColgp
import OCC.Core.Quantity
import OCC.Core.gp

from enum import IntEnum
from OCC.Core.Exception import *

Vrml_UNKNOWN_ORDERING = _Vrml.Vrml_UNKNOWN_ORDERING
Vrml_CLOCKWISE = _Vrml.Vrml_CLOCKWISE
Vrml_COUNTERCLOCKWISE = _Vrml.Vrml_COUNTERCLOCKWISE
Vrml_SERIF = _Vrml.Vrml_SERIF
Vrml_SANS = _Vrml.Vrml_SANS
Vrml_TYPEWRITER = _Vrml.Vrml_TYPEWRITER
Vrml_OFF = _Vrml.Vrml_OFF
Vrml_ON = _Vrml.Vrml_ON
Vrml_AUTO = _Vrml.Vrml_AUTO
Vrml_REPEAT = _Vrml.Vrml_REPEAT
Vrml_CLAMP = _Vrml.Vrml_CLAMP
Vrml_UNKNOWN_FACE_TYPE = _Vrml.Vrml_UNKNOWN_FACE_TYPE
Vrml_CONVEX = _Vrml.Vrml_CONVEX
Vrml_LEFT = _Vrml.Vrml_LEFT
Vrml_CENTER = _Vrml.Vrml_CENTER
Vrml_RIGHT = _Vrml.Vrml_RIGHT
Vrml_ConeSIDES = _Vrml.Vrml_ConeSIDES
Vrml_ConeBOTTOM = _Vrml.Vrml_ConeBOTTOM
Vrml_ConeALL = _Vrml.Vrml_ConeALL
Vrml_NULL = _Vrml.Vrml_NULL
Vrml_ONE = _Vrml.Vrml_ONE
Vrml_TWO = _Vrml.Vrml_TWO
Vrml_THREE = _Vrml.Vrml_THREE
Vrml_FOUR = _Vrml.Vrml_FOUR
Vrml_DEFAULT = _Vrml.Vrml_DEFAULT
Vrml_OVERALL = _Vrml.Vrml_OVERALL
Vrml_PER_PART = _Vrml.Vrml_PER_PART
Vrml_PER_PART_INDEXED = _Vrml.Vrml_PER_PART_INDEXED
Vrml_PER_FACE = _Vrml.Vrml_PER_FACE
Vrml_PER_FACE_INDEXED = _Vrml.Vrml_PER_FACE_INDEXED
Vrml_PER_VERTEX = _Vrml.Vrml_PER_VERTEX
Vrml_PER_VERTEX_INDEXED = _Vrml.Vrml_PER_VERTEX_INDEXED
Vrml_UNKNOWN_SHAPE_TYPE = _Vrml.Vrml_UNKNOWN_SHAPE_TYPE
Vrml_SOLID = _Vrml.Vrml_SOLID
Vrml_MAP_NONE = _Vrml.Vrml_MAP_NONE
Vrml_POINT = _Vrml.Vrml_POINT
Vrml_CylinderSIDES = _Vrml.Vrml_CylinderSIDES
Vrml_CylinderTOP = _Vrml.Vrml_CylinderTOP
Vrml_CylinderBOTTOM = _Vrml.Vrml_CylinderBOTTOM
Vrml_CylinderALL = _Vrml.Vrml_CylinderALL
Vrml_NONE = _Vrml.Vrml_NONE
Vrml_BOLD = _Vrml.Vrml_BOLD
Vrml_ITALIC = _Vrml.Vrml_ITALIC


class Vrml_VertexOrdering(IntEnum):
	Vrml_UNKNOWN_ORDERING = 0
	Vrml_CLOCKWISE = 1
	Vrml_COUNTERCLOCKWISE = 2
Vrml_UNKNOWN_ORDERING = Vrml_VertexOrdering.Vrml_UNKNOWN_ORDERING
Vrml_CLOCKWISE = Vrml_VertexOrdering.Vrml_CLOCKWISE
Vrml_COUNTERCLOCKWISE = Vrml_VertexOrdering.Vrml_COUNTERCLOCKWISE

class Vrml_FontStyleFamily(IntEnum):
	Vrml_SERIF = 0
	Vrml_SANS = 1
	Vrml_TYPEWRITER = 2
Vrml_SERIF = Vrml_FontStyleFamily.Vrml_SERIF
Vrml_SANS = Vrml_FontStyleFamily.Vrml_SANS
Vrml_TYPEWRITER = Vrml_FontStyleFamily.Vrml_TYPEWRITER

class Vrml_SeparatorRenderCulling(IntEnum):
	Vrml_OFF = 0
	Vrml_ON = 1
	Vrml_AUTO = 2
Vrml_OFF = Vrml_SeparatorRenderCulling.Vrml_OFF
Vrml_ON = Vrml_SeparatorRenderCulling.Vrml_ON
Vrml_AUTO = Vrml_SeparatorRenderCulling.Vrml_AUTO

class Vrml_Texture2Wrap(IntEnum):
	Vrml_REPEAT = 0
	Vrml_CLAMP = 1
Vrml_REPEAT = Vrml_Texture2Wrap.Vrml_REPEAT
Vrml_CLAMP = Vrml_Texture2Wrap.Vrml_CLAMP

class Vrml_FaceType(IntEnum):
	Vrml_UNKNOWN_FACE_TYPE = 0
	Vrml_CONVEX = 1
Vrml_UNKNOWN_FACE_TYPE = Vrml_FaceType.Vrml_UNKNOWN_FACE_TYPE
Vrml_CONVEX = Vrml_FaceType.Vrml_CONVEX

class Vrml_AsciiTextJustification(IntEnum):
	Vrml_LEFT = 0
	Vrml_CENTER = 1
	Vrml_RIGHT = 2
Vrml_LEFT = Vrml_AsciiTextJustification.Vrml_LEFT
Vrml_CENTER = Vrml_AsciiTextJustification.Vrml_CENTER
Vrml_RIGHT = Vrml_AsciiTextJustification.Vrml_RIGHT

class Vrml_ConeParts(IntEnum):
	Vrml_ConeSIDES = 0
	Vrml_ConeBOTTOM = 1
	Vrml_ConeALL = 2
Vrml_ConeSIDES = Vrml_ConeParts.Vrml_ConeSIDES
Vrml_ConeBOTTOM = Vrml_ConeParts.Vrml_ConeBOTTOM
Vrml_ConeALL = Vrml_ConeParts.Vrml_ConeALL

class Vrml_SFImageNumber(IntEnum):
	Vrml_NULL = 0
	Vrml_ONE = 1
	Vrml_TWO = 2
	Vrml_THREE = 3
	Vrml_FOUR = 4
Vrml_NULL = Vrml_SFImageNumber.Vrml_NULL
Vrml_ONE = Vrml_SFImageNumber.Vrml_ONE
Vrml_TWO = Vrml_SFImageNumber.Vrml_TWO
Vrml_THREE = Vrml_SFImageNumber.Vrml_THREE
Vrml_FOUR = Vrml_SFImageNumber.Vrml_FOUR

class Vrml_MaterialBindingAndNormalBinding(IntEnum):
	Vrml_DEFAULT = 0
	Vrml_OVERALL = 1
	Vrml_PER_PART = 2
	Vrml_PER_PART_INDEXED = 3
	Vrml_PER_FACE = 4
	Vrml_PER_FACE_INDEXED = 5
	Vrml_PER_VERTEX = 6
	Vrml_PER_VERTEX_INDEXED = 7
Vrml_DEFAULT = Vrml_MaterialBindingAndNormalBinding.Vrml_DEFAULT
Vrml_OVERALL = Vrml_MaterialBindingAndNormalBinding.Vrml_OVERALL
Vrml_PER_PART = Vrml_MaterialBindingAndNormalBinding.Vrml_PER_PART
Vrml_PER_PART_INDEXED = Vrml_MaterialBindingAndNormalBinding.Vrml_PER_PART_INDEXED
Vrml_PER_FACE = Vrml_MaterialBindingAndNormalBinding.Vrml_PER_FACE
Vrml_PER_FACE_INDEXED = Vrml_MaterialBindingAndNormalBinding.Vrml_PER_FACE_INDEXED
Vrml_PER_VERTEX = Vrml_MaterialBindingAndNormalBinding.Vrml_PER_VERTEX
Vrml_PER_VERTEX_INDEXED = Vrml_MaterialBindingAndNormalBinding.Vrml_PER_VERTEX_INDEXED

class Vrml_ShapeType(IntEnum):
	Vrml_UNKNOWN_SHAPE_TYPE = 0
	Vrml_SOLID = 1
Vrml_UNKNOWN_SHAPE_TYPE = Vrml_ShapeType.Vrml_UNKNOWN_SHAPE_TYPE
Vrml_SOLID = Vrml_ShapeType.Vrml_SOLID

class Vrml_WWWAnchorMap(IntEnum):
	Vrml_MAP_NONE = 0
	Vrml_POINT = 1
Vrml_MAP_NONE = Vrml_WWWAnchorMap.Vrml_MAP_NONE
Vrml_POINT = Vrml_WWWAnchorMap.Vrml_POINT

class Vrml_CylinderParts(IntEnum):
	Vrml_CylinderSIDES = 0
	Vrml_CylinderTOP = 1
	Vrml_CylinderBOTTOM = 2
	Vrml_CylinderALL = 3
Vrml_CylinderSIDES = Vrml_CylinderParts.Vrml_CylinderSIDES
Vrml_CylinderTOP = Vrml_CylinderParts.Vrml_CylinderTOP
Vrml_CylinderBOTTOM = Vrml_CylinderParts.Vrml_CylinderBOTTOM
Vrml_CylinderALL = Vrml_CylinderParts.Vrml_CylinderALL

class Vrml_FontStyleStyle(IntEnum):
	Vrml_NONE = 0
	Vrml_BOLD = 1
	Vrml_ITALIC = 2
Vrml_NONE = Vrml_FontStyleStyle.Vrml_NONE
Vrml_BOLD = Vrml_FontStyleStyle.Vrml_BOLD
Vrml_ITALIC = Vrml_FontStyleStyle.Vrml_ITALIC


def Handle_Vrml_AsciiText_Create() -> "opencascade::handle< Vrml_AsciiText >":
    return _Vrml.Handle_Vrml_AsciiText_Create()
Handle_Vrml_AsciiText_Create = _Vrml.Handle_Vrml_AsciiText_Create

def Handle_Vrml_AsciiText_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< Vrml_AsciiText >":
    return _Vrml.Handle_Vrml_AsciiText_DownCast(t)
Handle_Vrml_AsciiText_DownCast = _Vrml.Handle_Vrml_AsciiText_DownCast

def Handle_Vrml_AsciiText_IsNull(t: 'opencascade::handle< Vrml_AsciiText > const &') -> "bool":
    return _Vrml.Handle_Vrml_AsciiText_IsNull(t)
Handle_Vrml_AsciiText_IsNull = _Vrml.Handle_Vrml_AsciiText_IsNull

def Handle_Vrml_Coordinate3_Create() -> "opencascade::handle< Vrml_Coordinate3 >":
    return _Vrml.Handle_Vrml_Coordinate3_Create()
Handle_Vrml_Coordinate3_Create = _Vrml.Handle_Vrml_Coordinate3_Create

def Handle_Vrml_Coordinate3_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< Vrml_Coordinate3 >":
    return _Vrml.Handle_Vrml_Coordinate3_DownCast(t)
Handle_Vrml_Coordinate3_DownCast = _Vrml.Handle_Vrml_Coordinate3_DownCast

def Handle_Vrml_Coordinate3_IsNull(t: 'opencascade::handle< Vrml_Coordinate3 > const &') -> "bool":
    return _Vrml.Handle_Vrml_Coordinate3_IsNull(t)
Handle_Vrml_Coordinate3_IsNull = _Vrml.Handle_Vrml_Coordinate3_IsNull

def Handle_Vrml_IndexedFaceSet_Create() -> "opencascade::handle< Vrml_IndexedFaceSet >":
    return _Vrml.Handle_Vrml_IndexedFaceSet_Create()
Handle_Vrml_IndexedFaceSet_Create = _Vrml.Handle_Vrml_IndexedFaceSet_Create

def Handle_Vrml_IndexedFaceSet_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< Vrml_IndexedFaceSet >":
    return _Vrml.Handle_Vrml_IndexedFaceSet_DownCast(t)
Handle_Vrml_IndexedFaceSet_DownCast = _Vrml.Handle_Vrml_IndexedFaceSet_DownCast

def Handle_Vrml_IndexedFaceSet_IsNull(t: 'opencascade::handle< Vrml_IndexedFaceSet > const &') -> "bool":
    return _Vrml.Handle_Vrml_IndexedFaceSet_IsNull(t)
Handle_Vrml_IndexedFaceSet_IsNull = _Vrml.Handle_Vrml_IndexedFaceSet_IsNull

def Handle_Vrml_IndexedLineSet_Create() -> "opencascade::handle< Vrml_IndexedLineSet >":
    return _Vrml.Handle_Vrml_IndexedLineSet_Create()
Handle_Vrml_IndexedLineSet_Create = _Vrml.Handle_Vrml_IndexedLineSet_Create

def Handle_Vrml_IndexedLineSet_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< Vrml_IndexedLineSet >":
    return _Vrml.Handle_Vrml_IndexedLineSet_DownCast(t)
Handle_Vrml_IndexedLineSet_DownCast = _Vrml.Handle_Vrml_IndexedLineSet_DownCast

def Handle_Vrml_IndexedLineSet_IsNull(t: 'opencascade::handle< Vrml_IndexedLineSet > const &') -> "bool":
    return _Vrml.Handle_Vrml_IndexedLineSet_IsNull(t)
Handle_Vrml_IndexedLineSet_IsNull = _Vrml.Handle_Vrml_IndexedLineSet_IsNull

def Handle_Vrml_LOD_Create() -> "opencascade::handle< Vrml_LOD >":
    return _Vrml.Handle_Vrml_LOD_Create()
Handle_Vrml_LOD_Create = _Vrml.Handle_Vrml_LOD_Create

def Handle_Vrml_LOD_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< Vrml_LOD >":
    return _Vrml.Handle_Vrml_LOD_DownCast(t)
Handle_Vrml_LOD_DownCast = _Vrml.Handle_Vrml_LOD_DownCast

def Handle_Vrml_LOD_IsNull(t: 'opencascade::handle< Vrml_LOD > const &') -> "bool":
    return _Vrml.Handle_Vrml_LOD_IsNull(t)
Handle_Vrml_LOD_IsNull = _Vrml.Handle_Vrml_LOD_IsNull

def Handle_Vrml_Material_Create() -> "opencascade::handle< Vrml_Material >":
    return _Vrml.Handle_Vrml_Material_Create()
Handle_Vrml_Material_Create = _Vrml.Handle_Vrml_Material_Create

def Handle_Vrml_Material_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< Vrml_Material >":
    return _Vrml.Handle_Vrml_Material_DownCast(t)
Handle_Vrml_Material_DownCast = _Vrml.Handle_Vrml_Material_DownCast

def Handle_Vrml_Material_IsNull(t: 'opencascade::handle< Vrml_Material > const &') -> "bool":
    return _Vrml.Handle_Vrml_Material_IsNull(t)
Handle_Vrml_Material_IsNull = _Vrml.Handle_Vrml_Material_IsNull

def Handle_Vrml_Normal_Create() -> "opencascade::handle< Vrml_Normal >":
    return _Vrml.Handle_Vrml_Normal_Create()
Handle_Vrml_Normal_Create = _Vrml.Handle_Vrml_Normal_Create

def Handle_Vrml_Normal_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< Vrml_Normal >":
    return _Vrml.Handle_Vrml_Normal_DownCast(t)
Handle_Vrml_Normal_DownCast = _Vrml.Handle_Vrml_Normal_DownCast

def Handle_Vrml_Normal_IsNull(t: 'opencascade::handle< Vrml_Normal > const &') -> "bool":
    return _Vrml.Handle_Vrml_Normal_IsNull(t)
Handle_Vrml_Normal_IsNull = _Vrml.Handle_Vrml_Normal_IsNull

def Handle_Vrml_SFImage_Create() -> "opencascade::handle< Vrml_SFImage >":
    return _Vrml.Handle_Vrml_SFImage_Create()
Handle_Vrml_SFImage_Create = _Vrml.Handle_Vrml_SFImage_Create

def Handle_Vrml_SFImage_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< Vrml_SFImage >":
    return _Vrml.Handle_Vrml_SFImage_DownCast(t)
Handle_Vrml_SFImage_DownCast = _Vrml.Handle_Vrml_SFImage_DownCast

def Handle_Vrml_SFImage_IsNull(t: 'opencascade::handle< Vrml_SFImage > const &') -> "bool":
    return _Vrml.Handle_Vrml_SFImage_IsNull(t)
Handle_Vrml_SFImage_IsNull = _Vrml.Handle_Vrml_SFImage_IsNull

def Handle_Vrml_TextureCoordinate2_Create() -> "opencascade::handle< Vrml_TextureCoordinate2 >":
    return _Vrml.Handle_Vrml_TextureCoordinate2_Create()
Handle_Vrml_TextureCoordinate2_Create = _Vrml.Handle_Vrml_TextureCoordinate2_Create

def Handle_Vrml_TextureCoordinate2_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< Vrml_TextureCoordinate2 >":
    return _Vrml.Handle_Vrml_TextureCoordinate2_DownCast(t)
Handle_Vrml_TextureCoordinate2_DownCast = _Vrml.Handle_Vrml_TextureCoordinate2_DownCast

def Handle_Vrml_TextureCoordinate2_IsNull(t: 'opencascade::handle< Vrml_TextureCoordinate2 > const &') -> "bool":
    return _Vrml.Handle_Vrml_TextureCoordinate2_IsNull(t)
Handle_Vrml_TextureCoordinate2_IsNull = _Vrml.Handle_Vrml_TextureCoordinate2_IsNull
class vrml(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, vrml, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, vrml, name)
    __repr__ = _swig_repr

    def VrmlHeaderWriterToString(self) -> "std::string":
        """VrmlHeaderWriterToString(vrml self) -> std::string"""
        return _Vrml.vrml_VrmlHeaderWriterToString(self)


    __repr__ = _dumps_object


    def __init__(self):
        """__init__(Vrml self) -> vrml"""
        this = _Vrml.new_vrml()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _Vrml.delete_vrml
    __del__ = lambda self: None
vrml_swigregister = _Vrml.vrml_swigregister
vrml_swigregister(vrml)

class Vrml_AsciiText(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_AsciiText, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_AsciiText, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        aString: TColStd_HArray1OfAsciiString
        aSpacing: float
        aJustification: Vrml_AsciiTextJustification
        aWidth: float

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_AsciiText(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Justification(self, *args) -> "Vrml_AsciiTextJustification":
        """
        No available documentation.

        Returns
        -------
        Vrml_AsciiTextJustification

        """
        return _Vrml.Vrml_AsciiText_Justification(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_AsciiText self) -> std::string"""
        return _Vrml.Vrml_AsciiText_PrintToString(self)


    def SetJustification(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aJustification: Vrml_AsciiTextJustification

        Returns
        -------
        None

        """
        return _Vrml.Vrml_AsciiText_SetJustification(self, *args)


    def SetSpacing(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aSpacing: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_AsciiText_SetSpacing(self, *args)


    def SetString(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aString: TColStd_HArray1OfAsciiString

        Returns
        -------
        None

        """
        return _Vrml.Vrml_AsciiText_SetString(self, *args)


    def SetWidth(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aWidth: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_AsciiText_SetWidth(self, *args)


    def Spacing(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_AsciiText_Spacing(self, *args)


    def String(self, *args) -> "opencascade::handle< TColStd_HArray1OfAsciiString >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TColStd_HArray1OfAsciiString>

        """
        return _Vrml.Vrml_AsciiText_String(self, *args)


    def Width(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_AsciiText_Width(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_Vrml_AsciiText_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_AsciiText
    __del__ = lambda self: None
Vrml_AsciiText_swigregister = _Vrml.Vrml_AsciiText_swigregister
Vrml_AsciiText_swigregister(Vrml_AsciiText)

class Vrml_Cone(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_Cone, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_Cone, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        aParts: Vrml_ConeParts,optional
        	default value is Vrml_ConeALL
        aBottomRadius: float,optional
        	default value is 1
        aHeight: float,optional
        	default value is 2

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_Cone(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def BottomRadius(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_Cone_BottomRadius(self, *args)


    def Height(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_Cone_Height(self, *args)


    def Parts(self, *args) -> "Vrml_ConeParts":
        """
        No available documentation.

        Returns
        -------
        Vrml_ConeParts

        """
        return _Vrml.Vrml_Cone_Parts(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Cone self) -> std::string"""
        return _Vrml.Vrml_Cone_PrintToString(self)


    def SetBottomRadius(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aBottomRadius: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Cone_SetBottomRadius(self, *args)


    def SetHeight(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aHeight: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Cone_SetHeight(self, *args)


    def SetParts(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aParts: Vrml_ConeParts

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Cone_SetParts(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Cone
    __del__ = lambda self: None
Vrml_Cone_swigregister = _Vrml.Vrml_Cone_swigregister
Vrml_Cone_swigregister(Vrml_Cone)

class Vrml_Coordinate3(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_Coordinate3, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_Coordinate3, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        aPoint: TColgp_HArray1OfVec

        Returns
        -------
        None

        No available documentation.

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_Coordinate3(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Point(self, *args) -> "opencascade::handle< TColgp_HArray1OfVec >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TColgp_HArray1OfVec>

        """
        return _Vrml.Vrml_Coordinate3_Point(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Coordinate3 self) -> std::string"""
        return _Vrml.Vrml_Coordinate3_PrintToString(self)


    def SetPoint(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aPoint: TColgp_HArray1OfVec

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Coordinate3_SetPoint(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_Vrml_Coordinate3_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Coordinate3
    __del__ = lambda self: None
Vrml_Coordinate3_swigregister = _Vrml.Vrml_Coordinate3_swigregister
Vrml_Coordinate3_swigregister(Vrml_Coordinate3)

class Vrml_Cube(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_Cube, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_Cube, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        aWidth: float,optional
        	default value is 2
        aHeight: float,optional
        	default value is 2
        aDepth: float,optional
        	default value is 2

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_Cube(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Depth(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_Cube_Depth(self, *args)


    def Height(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_Cube_Height(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Cube self) -> std::string"""
        return _Vrml.Vrml_Cube_PrintToString(self)


    def SetDepth(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aDepth: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Cube_SetDepth(self, *args)


    def SetHeight(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aHeight: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Cube_SetHeight(self, *args)


    def SetWidth(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aWidth: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Cube_SetWidth(self, *args)


    def Width(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_Cube_Width(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Cube
    __del__ = lambda self: None
Vrml_Cube_swigregister = _Vrml.Vrml_Cube_swigregister
Vrml_Cube_swigregister(Vrml_Cube)

class Vrml_Cylinder(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_Cylinder, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_Cylinder, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        aParts: Vrml_CylinderParts,optional
        	default value is Vrml_CylinderALL
        aRadius: float,optional
        	default value is 1
        aHeight: float,optional
        	default value is 2

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_Cylinder(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Height(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_Cylinder_Height(self, *args)


    def Parts(self, *args) -> "Vrml_CylinderParts":
        """
        No available documentation.

        Returns
        -------
        Vrml_CylinderParts

        """
        return _Vrml.Vrml_Cylinder_Parts(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Cylinder self) -> std::string"""
        return _Vrml.Vrml_Cylinder_PrintToString(self)


    def Radius(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_Cylinder_Radius(self, *args)


    def SetHeight(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aHeight: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Cylinder_SetHeight(self, *args)


    def SetParts(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aParts: Vrml_CylinderParts

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Cylinder_SetParts(self, *args)


    def SetRadius(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aRadius: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Cylinder_SetRadius(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Cylinder
    __del__ = lambda self: None
Vrml_Cylinder_swigregister = _Vrml.Vrml_Cylinder_swigregister
Vrml_Cylinder_swigregister(Vrml_Cylinder)

class Vrml_DirectionalLight(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_DirectionalLight, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_DirectionalLight, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        aOnOff: bool
        aIntensity: float
        aColor: Quantity_Color
        aDirection: gp_Vec

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_DirectionalLight(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Color(self, *args) -> "Quantity_Color":
        """
        No available documentation.

        Returns
        -------
        Quantity_Color

        """
        return _Vrml.Vrml_DirectionalLight_Color(self, *args)


    def Direction(self, *args) -> "gp_Vec":
        """
        No available documentation.

        Returns
        -------
        gp_Vec

        """
        return _Vrml.Vrml_DirectionalLight_Direction(self, *args)


    def Intensity(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_DirectionalLight_Intensity(self, *args)


    def OnOff(self, *args) -> "Standard_Boolean":
        """
        No available documentation.

        Returns
        -------
        bool

        """
        return _Vrml.Vrml_DirectionalLight_OnOff(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_DirectionalLight self) -> std::string"""
        return _Vrml.Vrml_DirectionalLight_PrintToString(self)


    def SetColor(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aColor: Quantity_Color

        Returns
        -------
        None

        """
        return _Vrml.Vrml_DirectionalLight_SetColor(self, *args)


    def SetDirection(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aDirection: gp_Vec

        Returns
        -------
        None

        """
        return _Vrml.Vrml_DirectionalLight_SetDirection(self, *args)


    def SetIntensity(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aIntensity: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_DirectionalLight_SetIntensity(self, *args)


    def SetOnOff(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aOnOff: bool

        Returns
        -------
        None

        """
        return _Vrml.Vrml_DirectionalLight_SetOnOff(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_DirectionalLight
    __del__ = lambda self: None
Vrml_DirectionalLight_swigregister = _Vrml.Vrml_DirectionalLight_swigregister
Vrml_DirectionalLight_swigregister(Vrml_DirectionalLight)

class Vrml_FontStyle(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_FontStyle, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_FontStyle, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        aSize: float,optional
        	default value is 10
        aFamily: Vrml_FontStyleFamily,optional
        	default value is Vrml_SERIF
        aStyle: Vrml_FontStyleStyle,optional
        	default value is Vrml_NONE

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_FontStyle(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Family(self, *args) -> "Vrml_FontStyleFamily":
        """
        No available documentation.

        Returns
        -------
        Vrml_FontStyleFamily

        """
        return _Vrml.Vrml_FontStyle_Family(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_FontStyle self) -> std::string"""
        return _Vrml.Vrml_FontStyle_PrintToString(self)


    def SetFamily(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aFamily: Vrml_FontStyleFamily

        Returns
        -------
        None

        """
        return _Vrml.Vrml_FontStyle_SetFamily(self, *args)


    def SetSize(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aSize: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_FontStyle_SetSize(self, *args)


    def SetStyle(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aStyle: Vrml_FontStyleStyle

        Returns
        -------
        None

        """
        return _Vrml.Vrml_FontStyle_SetStyle(self, *args)


    def Size(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_FontStyle_Size(self, *args)


    def Style(self, *args) -> "Vrml_FontStyleStyle":
        """
        No available documentation.

        Returns
        -------
        Vrml_FontStyleStyle

        """
        return _Vrml.Vrml_FontStyle_Style(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_FontStyle
    __del__ = lambda self: None
Vrml_FontStyle_swigregister = _Vrml.Vrml_FontStyle_swigregister
Vrml_FontStyle_swigregister(Vrml_FontStyle)

class Vrml_Group(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_Group, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_Group, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_Group(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Group self) -> std::string"""
        return _Vrml.Vrml_Group_PrintToString(self)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Group
    __del__ = lambda self: None
Vrml_Group_swigregister = _Vrml.Vrml_Group_swigregister
Vrml_Group_swigregister(Vrml_Group)

class Vrml_IndexedFaceSet(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_IndexedFaceSet, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_IndexedFaceSet, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        aCoordIndex: TColStd_HArray1OfInteger
        aMaterialIndex: TColStd_HArray1OfInteger
        aNormalIndex: TColStd_HArray1OfInteger
        aTextureCoordIndex: TColStd_HArray1OfInteger

        Returns
        -------
        None

        No available documentation.

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_IndexedFaceSet(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def CoordIndex(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TColStd_HArray1OfInteger>

        """
        return _Vrml.Vrml_IndexedFaceSet_CoordIndex(self, *args)


    def MaterialIndex(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TColStd_HArray1OfInteger>

        """
        return _Vrml.Vrml_IndexedFaceSet_MaterialIndex(self, *args)


    def NormalIndex(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TColStd_HArray1OfInteger>

        """
        return _Vrml.Vrml_IndexedFaceSet_NormalIndex(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_IndexedFaceSet self) -> std::string"""
        return _Vrml.Vrml_IndexedFaceSet_PrintToString(self)


    def SetCoordIndex(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aCoordIndex: TColStd_HArray1OfInteger

        Returns
        -------
        None

        """
        return _Vrml.Vrml_IndexedFaceSet_SetCoordIndex(self, *args)


    def SetMaterialIndex(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aMaterialIndex: TColStd_HArray1OfInteger

        Returns
        -------
        None

        """
        return _Vrml.Vrml_IndexedFaceSet_SetMaterialIndex(self, *args)


    def SetNormalIndex(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aNormalIndex: TColStd_HArray1OfInteger

        Returns
        -------
        None

        """
        return _Vrml.Vrml_IndexedFaceSet_SetNormalIndex(self, *args)


    def SetTextureCoordIndex(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aTextureCoordIndex: TColStd_HArray1OfInteger

        Returns
        -------
        None

        """
        return _Vrml.Vrml_IndexedFaceSet_SetTextureCoordIndex(self, *args)


    def TextureCoordIndex(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TColStd_HArray1OfInteger>

        """
        return _Vrml.Vrml_IndexedFaceSet_TextureCoordIndex(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_Vrml_IndexedFaceSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_IndexedFaceSet
    __del__ = lambda self: None
Vrml_IndexedFaceSet_swigregister = _Vrml.Vrml_IndexedFaceSet_swigregister
Vrml_IndexedFaceSet_swigregister(Vrml_IndexedFaceSet)

class Vrml_IndexedLineSet(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_IndexedLineSet, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_IndexedLineSet, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        aCoordIndex: TColStd_HArray1OfInteger
        aMaterialIndex: TColStd_HArray1OfInteger
        aNormalIndex: TColStd_HArray1OfInteger
        aTextureCoordIndex: TColStd_HArray1OfInteger

        Returns
        -------
        None

        No available documentation.

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_IndexedLineSet(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def CoordIndex(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TColStd_HArray1OfInteger>

        """
        return _Vrml.Vrml_IndexedLineSet_CoordIndex(self, *args)


    def MaterialIndex(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TColStd_HArray1OfInteger>

        """
        return _Vrml.Vrml_IndexedLineSet_MaterialIndex(self, *args)


    def NormalIndex(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TColStd_HArray1OfInteger>

        """
        return _Vrml.Vrml_IndexedLineSet_NormalIndex(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_IndexedLineSet self) -> std::string"""
        return _Vrml.Vrml_IndexedLineSet_PrintToString(self)


    def SetCoordIndex(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aCoordIndex: TColStd_HArray1OfInteger

        Returns
        -------
        None

        """
        return _Vrml.Vrml_IndexedLineSet_SetCoordIndex(self, *args)


    def SetMaterialIndex(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aMaterialIndex: TColStd_HArray1OfInteger

        Returns
        -------
        None

        """
        return _Vrml.Vrml_IndexedLineSet_SetMaterialIndex(self, *args)


    def SetNormalIndex(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aNormalIndex: TColStd_HArray1OfInteger

        Returns
        -------
        None

        """
        return _Vrml.Vrml_IndexedLineSet_SetNormalIndex(self, *args)


    def SetTextureCoordIndex(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aTextureCoordIndex: TColStd_HArray1OfInteger

        Returns
        -------
        None

        """
        return _Vrml.Vrml_IndexedLineSet_SetTextureCoordIndex(self, *args)


    def TextureCoordIndex(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TColStd_HArray1OfInteger>

        """
        return _Vrml.Vrml_IndexedLineSet_TextureCoordIndex(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_Vrml_IndexedLineSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_IndexedLineSet
    __del__ = lambda self: None
Vrml_IndexedLineSet_swigregister = _Vrml.Vrml_IndexedLineSet_swigregister
Vrml_IndexedLineSet_swigregister(Vrml_IndexedLineSet)

class Vrml_Info(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_Info, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_Info, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        aString: TCollection_AsciiString,optional
        	default value is '<Undefinedinfo>'

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_Info(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Info self) -> std::string"""
        return _Vrml.Vrml_Info_PrintToString(self)


    def SetString(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aString: TCollection_AsciiString

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Info_SetString(self, *args)


    def String(self, *args) -> "TCollection_AsciiString":
        """
        No available documentation.

        Returns
        -------
        TCollection_AsciiString

        """
        return _Vrml.Vrml_Info_String(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Info
    __del__ = lambda self: None
Vrml_Info_swigregister = _Vrml.Vrml_Info_swigregister
Vrml_Info_swigregister(Vrml_Info)

class Vrml_Instancing(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_Instancing, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_Instancing, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Adds 'def <myname>' in anostream (vrml file).

        Parameters
        ----------
        aString: TCollection_AsciiString

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_Instancing(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def DEFToString(self) -> "std::string":
        """DEFToString(Vrml_Instancing self) -> std::string"""
        return _Vrml.Vrml_Instancing_DEFToString(self)


    def USEToString(self) -> "std::string":
        """USEToString(Vrml_Instancing self) -> std::string"""
        return _Vrml.Vrml_Instancing_USEToString(self)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Instancing
    __del__ = lambda self: None
Vrml_Instancing_swigregister = _Vrml.Vrml_Instancing_swigregister
Vrml_Instancing_swigregister(Vrml_Instancing)

class Vrml_LOD(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_LOD, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_LOD, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        aRange: TColStd_HArray1OfReal
        aCenter: gp_Vec

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_LOD(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Center(self, *args) -> "gp_Vec":
        """
        No available documentation.

        Returns
        -------
        gp_Vec

        """
        return _Vrml.Vrml_LOD_Center(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_LOD self) -> std::string"""
        return _Vrml.Vrml_LOD_PrintToString(self)


    def Range(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TColStd_HArray1OfReal>

        """
        return _Vrml.Vrml_LOD_Range(self, *args)


    def SetCenter(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aCenter: gp_Vec

        Returns
        -------
        None

        """
        return _Vrml.Vrml_LOD_SetCenter(self, *args)


    def SetRange(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aRange: TColStd_HArray1OfReal

        Returns
        -------
        None

        """
        return _Vrml.Vrml_LOD_SetRange(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_Vrml_LOD_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_LOD
    __del__ = lambda self: None
Vrml_LOD_swigregister = _Vrml.Vrml_LOD_swigregister
Vrml_LOD_swigregister(Vrml_LOD)

class Vrml_Material(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_Material, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_Material, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        aAmbientColor: Quantity_HArray1OfColor
        aDiffuseColor: Quantity_HArray1OfColor
        aSpecularColor: Quantity_HArray1OfColor
        aEmissiveColor: Quantity_HArray1OfColor
        aShininess: TColStd_HArray1OfReal
        aTransparency: TColStd_HArray1OfReal

        Returns
        -------
        None

        No available documentation.

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_Material(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def AmbientColor(self, *args) -> "opencascade::handle< Quantity_HArray1OfColor >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<Quantity_HArray1OfColor>

        """
        return _Vrml.Vrml_Material_AmbientColor(self, *args)


    def DiffuseColor(self, *args) -> "opencascade::handle< Quantity_HArray1OfColor >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<Quantity_HArray1OfColor>

        """
        return _Vrml.Vrml_Material_DiffuseColor(self, *args)


    def EmissiveColor(self, *args) -> "opencascade::handle< Quantity_HArray1OfColor >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<Quantity_HArray1OfColor>

        """
        return _Vrml.Vrml_Material_EmissiveColor(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Material self) -> std::string"""
        return _Vrml.Vrml_Material_PrintToString(self)


    def SetAmbientColor(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aAmbientColor: Quantity_HArray1OfColor

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Material_SetAmbientColor(self, *args)


    def SetDiffuseColor(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aDiffuseColor: Quantity_HArray1OfColor

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Material_SetDiffuseColor(self, *args)


    def SetEmissiveColor(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aEmissiveColor: Quantity_HArray1OfColor

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Material_SetEmissiveColor(self, *args)


    def SetShininess(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aShininess: TColStd_HArray1OfReal

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Material_SetShininess(self, *args)


    def SetSpecularColor(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aSpecularColor: Quantity_HArray1OfColor

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Material_SetSpecularColor(self, *args)


    def SetTransparency(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aTransparency: TColStd_HArray1OfReal

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Material_SetTransparency(self, *args)


    def Shininess(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TColStd_HArray1OfReal>

        """
        return _Vrml.Vrml_Material_Shininess(self, *args)


    def SpecularColor(self, *args) -> "opencascade::handle< Quantity_HArray1OfColor >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<Quantity_HArray1OfColor>

        """
        return _Vrml.Vrml_Material_SpecularColor(self, *args)


    def Transparency(self, *args) -> "opencascade::handle< TColStd_HArray1OfReal >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TColStd_HArray1OfReal>

        """
        return _Vrml.Vrml_Material_Transparency(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_Vrml_Material_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Material
    __del__ = lambda self: None
Vrml_Material_swigregister = _Vrml.Vrml_Material_swigregister
Vrml_Material_swigregister(Vrml_Material)

class Vrml_MaterialBinding(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_MaterialBinding, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_MaterialBinding, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        aValue: Vrml_MaterialBindingAndNormalBinding

        Returns
        -------
        None

        No available documentation.

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_MaterialBinding(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_MaterialBinding self) -> std::string"""
        return _Vrml.Vrml_MaterialBinding_PrintToString(self)


    def SetValue(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aValue: Vrml_MaterialBindingAndNormalBinding

        Returns
        -------
        None

        """
        return _Vrml.Vrml_MaterialBinding_SetValue(self, *args)


    def Value(self, *args) -> "Vrml_MaterialBindingAndNormalBinding":
        """
        No available documentation.

        Returns
        -------
        Vrml_MaterialBindingAndNormalBinding

        """
        return _Vrml.Vrml_MaterialBinding_Value(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_MaterialBinding
    __del__ = lambda self: None
Vrml_MaterialBinding_swigregister = _Vrml.Vrml_MaterialBinding_swigregister
Vrml_MaterialBinding_swigregister(Vrml_MaterialBinding)

class Vrml_MatrixTransform(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_MatrixTransform, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_MatrixTransform, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        aMatrix: gp_Trsf

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_MatrixTransform(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Matrix(self, *args) -> "gp_Trsf":
        """
        No available documentation.

        Returns
        -------
        gp_Trsf

        """
        return _Vrml.Vrml_MatrixTransform_Matrix(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_MatrixTransform self) -> std::string"""
        return _Vrml.Vrml_MatrixTransform_PrintToString(self)


    def SetMatrix(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aMatrix: gp_Trsf

        Returns
        -------
        None

        """
        return _Vrml.Vrml_MatrixTransform_SetMatrix(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_MatrixTransform
    __del__ = lambda self: None
Vrml_MatrixTransform_swigregister = _Vrml.Vrml_MatrixTransform_swigregister
Vrml_MatrixTransform_swigregister(Vrml_MatrixTransform)

class Vrml_Normal(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_Normal, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_Normal, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        aVector: TColgp_HArray1OfVec

        Returns
        -------
        None

        No available documentation.

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_Normal(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Normal self) -> std::string"""
        return _Vrml.Vrml_Normal_PrintToString(self)


    def SetVector(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aVector: TColgp_HArray1OfVec

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Normal_SetVector(self, *args)


    def Vector(self, *args) -> "opencascade::handle< TColgp_HArray1OfVec >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TColgp_HArray1OfVec>

        """
        return _Vrml.Vrml_Normal_Vector(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_Vrml_Normal_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Normal
    __del__ = lambda self: None
Vrml_Normal_swigregister = _Vrml.Vrml_Normal_swigregister
Vrml_Normal_swigregister(Vrml_Normal)

class Vrml_NormalBinding(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_NormalBinding, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_NormalBinding, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        aValue: Vrml_MaterialBindingAndNormalBinding

        Returns
        -------
        None

        No available documentation.

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_NormalBinding(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_NormalBinding self) -> std::string"""
        return _Vrml.Vrml_NormalBinding_PrintToString(self)


    def SetValue(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aValue: Vrml_MaterialBindingAndNormalBinding

        Returns
        -------
        None

        """
        return _Vrml.Vrml_NormalBinding_SetValue(self, *args)


    def Value(self, *args) -> "Vrml_MaterialBindingAndNormalBinding":
        """
        No available documentation.

        Returns
        -------
        Vrml_MaterialBindingAndNormalBinding

        """
        return _Vrml.Vrml_NormalBinding_Value(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_NormalBinding
    __del__ = lambda self: None
Vrml_NormalBinding_swigregister = _Vrml.Vrml_NormalBinding_swigregister
Vrml_NormalBinding_swigregister(Vrml_NormalBinding)

class Vrml_OrthographicCamera(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_OrthographicCamera, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_OrthographicCamera, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        aPosition: gp_Vec
        aOrientation: Vrml_SFRotation
        aFocalDistance: float
        aHeight: float

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_OrthographicCamera(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def FocalDistance(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_OrthographicCamera_FocalDistance(self, *args)


    def Height(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_OrthographicCamera_Height(self, *args)


    def Orientation(self, *args) -> "Vrml_SFRotation":
        """
        No available documentation.

        Returns
        -------
        Vrml_SFRotation

        """
        return _Vrml.Vrml_OrthographicCamera_Orientation(self, *args)


    def Position(self, *args) -> "gp_Vec":
        """
        No available documentation.

        Returns
        -------
        gp_Vec

        """
        return _Vrml.Vrml_OrthographicCamera_Position(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_OrthographicCamera self) -> std::string"""
        return _Vrml.Vrml_OrthographicCamera_PrintToString(self)


    def SetFocalDistance(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aFocalDistance: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_OrthographicCamera_SetFocalDistance(self, *args)


    def SetHeight(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aHeight: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_OrthographicCamera_SetHeight(self, *args)


    def SetOrientation(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aOrientation: Vrml_SFRotation

        Returns
        -------
        None

        """
        return _Vrml.Vrml_OrthographicCamera_SetOrientation(self, *args)


    def SetPosition(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aPosition: gp_Vec

        Returns
        -------
        None

        """
        return _Vrml.Vrml_OrthographicCamera_SetPosition(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_OrthographicCamera
    __del__ = lambda self: None
Vrml_OrthographicCamera_swigregister = _Vrml.Vrml_OrthographicCamera_swigregister
Vrml_OrthographicCamera_swigregister(Vrml_OrthographicCamera)

class Vrml_PerspectiveCamera(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_PerspectiveCamera, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_PerspectiveCamera, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        aPosition: gp_Vec
        aOrientation: Vrml_SFRotation
        aFocalDistance: float
        aHeightAngle: float

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_PerspectiveCamera(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Angle(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_PerspectiveCamera_Angle(self, *args)


    def FocalDistance(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_PerspectiveCamera_FocalDistance(self, *args)


    def Orientation(self, *args) -> "Vrml_SFRotation":
        """
        No available documentation.

        Returns
        -------
        Vrml_SFRotation

        """
        return _Vrml.Vrml_PerspectiveCamera_Orientation(self, *args)


    def Position(self, *args) -> "gp_Vec":
        """
        No available documentation.

        Returns
        -------
        gp_Vec

        """
        return _Vrml.Vrml_PerspectiveCamera_Position(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_PerspectiveCamera self) -> std::string"""
        return _Vrml.Vrml_PerspectiveCamera_PrintToString(self)


    def SetAngle(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aHeightAngle: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_PerspectiveCamera_SetAngle(self, *args)


    def SetFocalDistance(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aFocalDistance: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_PerspectiveCamera_SetFocalDistance(self, *args)


    def SetOrientation(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aOrientation: Vrml_SFRotation

        Returns
        -------
        None

        """
        return _Vrml.Vrml_PerspectiveCamera_SetOrientation(self, *args)


    def SetPosition(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aPosition: gp_Vec

        Returns
        -------
        None

        """
        return _Vrml.Vrml_PerspectiveCamera_SetPosition(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_PerspectiveCamera
    __del__ = lambda self: None
Vrml_PerspectiveCamera_swigregister = _Vrml.Vrml_PerspectiveCamera_swigregister
Vrml_PerspectiveCamera_swigregister(Vrml_PerspectiveCamera)

class Vrml_PointLight(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_PointLight, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_PointLight, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        aOnOff: bool
        aIntensity: float
        aColor: Quantity_Color
        aLocation: gp_Vec

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_PointLight(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Color(self, *args) -> "Quantity_Color":
        """
        No available documentation.

        Returns
        -------
        Quantity_Color

        """
        return _Vrml.Vrml_PointLight_Color(self, *args)


    def Intensity(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_PointLight_Intensity(self, *args)


    def Location(self, *args) -> "gp_Vec":
        """
        No available documentation.

        Returns
        -------
        gp_Vec

        """
        return _Vrml.Vrml_PointLight_Location(self, *args)


    def OnOff(self, *args) -> "Standard_Boolean":
        """
        No available documentation.

        Returns
        -------
        bool

        """
        return _Vrml.Vrml_PointLight_OnOff(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_PointLight self) -> std::string"""
        return _Vrml.Vrml_PointLight_PrintToString(self)


    def SetColor(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aColor: Quantity_Color

        Returns
        -------
        None

        """
        return _Vrml.Vrml_PointLight_SetColor(self, *args)


    def SetIntensity(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aIntensity: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_PointLight_SetIntensity(self, *args)


    def SetLocation(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aLocation: gp_Vec

        Returns
        -------
        None

        """
        return _Vrml.Vrml_PointLight_SetLocation(self, *args)


    def SetOnOff(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aOnOff: bool

        Returns
        -------
        None

        """
        return _Vrml.Vrml_PointLight_SetOnOff(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_PointLight
    __del__ = lambda self: None
Vrml_PointLight_swigregister = _Vrml.Vrml_PointLight_swigregister
Vrml_PointLight_swigregister(Vrml_PointLight)

class Vrml_PointSet(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_PointSet, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_PointSet, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        aStartIndex: int,optional
        	default value is 0
        aNumPoints: int,optional
        	default value is -1

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_PointSet(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def NumPoints(self, *args) -> "Standard_Integer":
        """
        No available documentation.

        Returns
        -------
        int

        """
        return _Vrml.Vrml_PointSet_NumPoints(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_PointSet self) -> std::string"""
        return _Vrml.Vrml_PointSet_PrintToString(self)


    def SetNumPoints(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aNumPoints: int

        Returns
        -------
        None

        """
        return _Vrml.Vrml_PointSet_SetNumPoints(self, *args)


    def SetStartIndex(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aStartIndex: int

        Returns
        -------
        None

        """
        return _Vrml.Vrml_PointSet_SetStartIndex(self, *args)


    def StartIndex(self, *args) -> "Standard_Integer":
        """
        No available documentation.

        Returns
        -------
        int

        """
        return _Vrml.Vrml_PointSet_StartIndex(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_PointSet
    __del__ = lambda self: None
Vrml_PointSet_swigregister = _Vrml.Vrml_PointSet_swigregister
Vrml_PointSet_swigregister(Vrml_PointSet)

class Vrml_Rotation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_Rotation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_Rotation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        aRotation: Vrml_SFRotation

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_Rotation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Rotation self) -> std::string"""
        return _Vrml.Vrml_Rotation_PrintToString(self)


    def Rotation(self, *args) -> "Vrml_SFRotation":
        """
        No available documentation.

        Returns
        -------
        Vrml_SFRotation

        """
        return _Vrml.Vrml_Rotation_Rotation(self, *args)


    def SetRotation(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aRotation: Vrml_SFRotation

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Rotation_SetRotation(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Rotation
    __del__ = lambda self: None
Vrml_Rotation_swigregister = _Vrml.Vrml_Rotation_swigregister
Vrml_Rotation_swigregister(Vrml_Rotation)

class Vrml_SFImage(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_SFImage, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_SFImage, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        aWidth: int
        aHeight: int
        aNumber: Vrml_SFImageNumber
        anArray: TColStd_HArray1OfInteger

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_SFImage(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Array(self, *args) -> "opencascade::handle< TColStd_HArray1OfInteger >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TColStd_HArray1OfInteger>

        """
        return _Vrml.Vrml_SFImage_Array(self, *args)


    def ArrayFlag(self, *args) -> "Standard_Boolean":
        """
        No available documentation.

        Returns
        -------
        bool

        """
        return _Vrml.Vrml_SFImage_ArrayFlag(self, *args)


    def Height(self, *args) -> "Standard_Integer":
        """
        No available documentation.

        Returns
        -------
        int

        """
        return _Vrml.Vrml_SFImage_Height(self, *args)


    def Number(self, *args) -> "Vrml_SFImageNumber":
        """
        No available documentation.

        Returns
        -------
        Vrml_SFImageNumber

        """
        return _Vrml.Vrml_SFImage_Number(self, *args)


    def SetArray(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        anArray: TColStd_HArray1OfInteger

        Returns
        -------
        None

        """
        return _Vrml.Vrml_SFImage_SetArray(self, *args)


    def SetHeight(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aHeight: int

        Returns
        -------
        None

        """
        return _Vrml.Vrml_SFImage_SetHeight(self, *args)


    def SetNumber(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aNumber: Vrml_SFImageNumber

        Returns
        -------
        None

        """
        return _Vrml.Vrml_SFImage_SetNumber(self, *args)


    def SetWidth(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aWidth: int

        Returns
        -------
        None

        """
        return _Vrml.Vrml_SFImage_SetWidth(self, *args)


    def Width(self, *args) -> "Standard_Integer":
        """
        No available documentation.

        Returns
        -------
        int

        """
        return _Vrml.Vrml_SFImage_Width(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_Vrml_SFImage_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_SFImage
    __del__ = lambda self: None
Vrml_SFImage_swigregister = _Vrml.Vrml_SFImage_swigregister
Vrml_SFImage_swigregister(Vrml_SFImage)

class Vrml_SFRotation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_SFRotation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_SFRotation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        aRotationX: float
        aRotationY: float
        aRotationZ: float
        anAngle: float

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_SFRotation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Angle(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_SFRotation_Angle(self, *args)


    def RotationX(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_SFRotation_RotationX(self, *args)


    def RotationY(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_SFRotation_RotationY(self, *args)


    def RotationZ(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_SFRotation_RotationZ(self, *args)


    def SetAngle(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        anAngle: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_SFRotation_SetAngle(self, *args)


    def SetRotationX(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aRotationX: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_SFRotation_SetRotationX(self, *args)


    def SetRotationY(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aRotationY: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_SFRotation_SetRotationY(self, *args)


    def SetRotationZ(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aRotationZ: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_SFRotation_SetRotationZ(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_SFRotation
    __del__ = lambda self: None
Vrml_SFRotation_swigregister = _Vrml.Vrml_SFRotation_swigregister
Vrml_SFRotation_swigregister(Vrml_SFRotation)

class Vrml_Scale(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_Scale, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_Scale, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        aScaleFactor: gp_Vec

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_Scale(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Scale self) -> std::string"""
        return _Vrml.Vrml_Scale_PrintToString(self)


    def ScaleFactor(self, *args) -> "gp_Vec":
        """
        No available documentation.

        Returns
        -------
        gp_Vec

        """
        return _Vrml.Vrml_Scale_ScaleFactor(self, *args)


    def SetScaleFactor(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aScaleFactor: gp_Vec

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Scale_SetScaleFactor(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Scale
    __del__ = lambda self: None
Vrml_Scale_swigregister = _Vrml.Vrml_Scale_swigregister
Vrml_Scale_swigregister(Vrml_Scale)

class Vrml_Separator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_Separator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_Separator, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        aRenderCulling: Vrml_SeparatorRenderCulling

        Returns
        -------
        None

        No available documentation.

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_Separator(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Separator self) -> std::string"""
        return _Vrml.Vrml_Separator_PrintToString(self)


    def RenderCulling(self, *args) -> "Vrml_SeparatorRenderCulling":
        """
        No available documentation.

        Returns
        -------
        Vrml_SeparatorRenderCulling

        """
        return _Vrml.Vrml_Separator_RenderCulling(self, *args)


    def SetRenderCulling(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aRenderCulling: Vrml_SeparatorRenderCulling

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Separator_SetRenderCulling(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Separator
    __del__ = lambda self: None
Vrml_Separator_swigregister = _Vrml.Vrml_Separator_swigregister
Vrml_Separator_swigregister(Vrml_Separator)

class Vrml_ShapeHints(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_ShapeHints, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_ShapeHints, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        aVertexOrdering: Vrml_VertexOrdering,optional
        	default value is Vrml_UNKNOWN_ORDERING
        aShapeType: Vrml_ShapeType,optional
        	default value is Vrml_UNKNOWN_SHAPE_TYPE
        aFaceType: Vrml_FaceType,optional
        	default value is Vrml_CONVEX
        aAngle: float,optional
        	default value is 0.5

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_ShapeHints(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Angle(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_ShapeHints_Angle(self, *args)


    def FaceType(self, *args) -> "Vrml_FaceType":
        """
        No available documentation.

        Returns
        -------
        Vrml_FaceType

        """
        return _Vrml.Vrml_ShapeHints_FaceType(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_ShapeHints self) -> std::string"""
        return _Vrml.Vrml_ShapeHints_PrintToString(self)


    def SetAngle(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aAngle: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_ShapeHints_SetAngle(self, *args)


    def SetFaceType(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aFaceType: Vrml_FaceType

        Returns
        -------
        None

        """
        return _Vrml.Vrml_ShapeHints_SetFaceType(self, *args)


    def SetShapeType(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aShapeType: Vrml_ShapeType

        Returns
        -------
        None

        """
        return _Vrml.Vrml_ShapeHints_SetShapeType(self, *args)


    def SetVertexOrdering(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aVertexOrdering: Vrml_VertexOrdering

        Returns
        -------
        None

        """
        return _Vrml.Vrml_ShapeHints_SetVertexOrdering(self, *args)


    def ShapeType(self, *args) -> "Vrml_ShapeType":
        """
        No available documentation.

        Returns
        -------
        Vrml_ShapeType

        """
        return _Vrml.Vrml_ShapeHints_ShapeType(self, *args)


    def VertexOrdering(self, *args) -> "Vrml_VertexOrdering":
        """
        No available documentation.

        Returns
        -------
        Vrml_VertexOrdering

        """
        return _Vrml.Vrml_ShapeHints_VertexOrdering(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_ShapeHints
    __del__ = lambda self: None
Vrml_ShapeHints_swigregister = _Vrml.Vrml_ShapeHints_swigregister
Vrml_ShapeHints_swigregister(Vrml_ShapeHints)

class Vrml_Sphere(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_Sphere, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_Sphere, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        aRadius: float,optional
        	default value is 1

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_Sphere(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Sphere self) -> std::string"""
        return _Vrml.Vrml_Sphere_PrintToString(self)


    def Radius(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_Sphere_Radius(self, *args)


    def SetRadius(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aRadius: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Sphere_SetRadius(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Sphere
    __del__ = lambda self: None
Vrml_Sphere_swigregister = _Vrml.Vrml_Sphere_swigregister
Vrml_Sphere_swigregister(Vrml_Sphere)

class Vrml_SpotLight(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_SpotLight, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_SpotLight, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        aOnOff: bool
        aIntensity: float
        aColor: Quantity_Color
        aLocation: gp_Vec
        aDirection: gp_Vec
        aDropOffRate: float
        aCutOffAngle: float

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_SpotLight(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Color(self, *args) -> "Quantity_Color":
        """
        No available documentation.

        Returns
        -------
        Quantity_Color

        """
        return _Vrml.Vrml_SpotLight_Color(self, *args)


    def CutOffAngle(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_SpotLight_CutOffAngle(self, *args)


    def Direction(self, *args) -> "gp_Vec":
        """
        No available documentation.

        Returns
        -------
        gp_Vec

        """
        return _Vrml.Vrml_SpotLight_Direction(self, *args)


    def DropOffRate(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_SpotLight_DropOffRate(self, *args)


    def Intensity(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_SpotLight_Intensity(self, *args)


    def Location(self, *args) -> "gp_Vec":
        """
        No available documentation.

        Returns
        -------
        gp_Vec

        """
        return _Vrml.Vrml_SpotLight_Location(self, *args)


    def OnOff(self, *args) -> "Standard_Boolean":
        """
        No available documentation.

        Returns
        -------
        bool

        """
        return _Vrml.Vrml_SpotLight_OnOff(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_SpotLight self) -> std::string"""
        return _Vrml.Vrml_SpotLight_PrintToString(self)


    def SetColor(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aColor: Quantity_Color

        Returns
        -------
        None

        """
        return _Vrml.Vrml_SpotLight_SetColor(self, *args)


    def SetCutOffAngle(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aCutOffAngle: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_SpotLight_SetCutOffAngle(self, *args)


    def SetDirection(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aDirection: gp_Vec

        Returns
        -------
        None

        """
        return _Vrml.Vrml_SpotLight_SetDirection(self, *args)


    def SetDropOffRate(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aDropOffRate: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_SpotLight_SetDropOffRate(self, *args)


    def SetIntensity(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aIntensity: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_SpotLight_SetIntensity(self, *args)


    def SetLocation(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aLocation: gp_Vec

        Returns
        -------
        None

        """
        return _Vrml.Vrml_SpotLight_SetLocation(self, *args)


    def SetOnOff(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        anOnOff: bool

        Returns
        -------
        None

        """
        return _Vrml.Vrml_SpotLight_SetOnOff(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_SpotLight
    __del__ = lambda self: None
Vrml_SpotLight_swigregister = _Vrml.Vrml_SpotLight_swigregister
Vrml_SpotLight_swigregister(Vrml_SpotLight)

class Vrml_Switch(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_Switch, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_Switch, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        aWhichChild: int,optional
        	default value is -1

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_Switch(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Switch self) -> std::string"""
        return _Vrml.Vrml_Switch_PrintToString(self)


    def SetWhichChild(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aWhichChild: int

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Switch_SetWhichChild(self, *args)


    def WhichChild(self, *args) -> "Standard_Integer":
        """
        No available documentation.

        Returns
        -------
        int

        """
        return _Vrml.Vrml_Switch_WhichChild(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Switch
    __del__ = lambda self: None
Vrml_Switch_swigregister = _Vrml.Vrml_Switch_swigregister
Vrml_Switch_swigregister(Vrml_Switch)

class Vrml_Texture2(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_Texture2, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_Texture2, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        aFilename: TCollection_AsciiString
        aImage: Vrml_SFImage
        aWrapS: Vrml_Texture2Wrap
        aWrapT: Vrml_Texture2Wrap

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_Texture2(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Filename(self, *args) -> "TCollection_AsciiString":
        """
        No available documentation.

        Returns
        -------
        TCollection_AsciiString

        """
        return _Vrml.Vrml_Texture2_Filename(self, *args)


    def Image(self, *args) -> "opencascade::handle< Vrml_SFImage >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<Vrml_SFImage>

        """
        return _Vrml.Vrml_Texture2_Image(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Texture2 self) -> std::string"""
        return _Vrml.Vrml_Texture2_PrintToString(self)


    def SetFilename(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aFilename: TCollection_AsciiString

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Texture2_SetFilename(self, *args)


    def SetImage(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aImage: Vrml_SFImage

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Texture2_SetImage(self, *args)


    def SetWrapS(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aWrapS: Vrml_Texture2Wrap

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Texture2_SetWrapS(self, *args)


    def SetWrapT(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aWrapT: Vrml_Texture2Wrap

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Texture2_SetWrapT(self, *args)


    def WrapS(self, *args) -> "Vrml_Texture2Wrap":
        """
        No available documentation.

        Returns
        -------
        Vrml_Texture2Wrap

        """
        return _Vrml.Vrml_Texture2_WrapS(self, *args)


    def WrapT(self, *args) -> "Vrml_Texture2Wrap":
        """
        No available documentation.

        Returns
        -------
        Vrml_Texture2Wrap

        """
        return _Vrml.Vrml_Texture2_WrapT(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Texture2
    __del__ = lambda self: None
Vrml_Texture2_swigregister = _Vrml.Vrml_Texture2_swigregister
Vrml_Texture2_swigregister(Vrml_Texture2)

class Vrml_Texture2Transform(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_Texture2Transform, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_Texture2Transform, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        aTranslation: gp_Vec2d
        aRotation: float
        aScaleFactor: gp_Vec2d
        aCenter: gp_Vec2d

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_Texture2Transform(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Center(self, *args) -> "gp_Vec2d":
        """
        No available documentation.

        Returns
        -------
        gp_Vec2d

        """
        return _Vrml.Vrml_Texture2Transform_Center(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Texture2Transform self) -> std::string"""
        return _Vrml.Vrml_Texture2Transform_PrintToString(self)


    def Rotation(self, *args) -> "Standard_Real":
        """
        No available documentation.

        Returns
        -------
        float

        """
        return _Vrml.Vrml_Texture2Transform_Rotation(self, *args)


    def ScaleFactor(self, *args) -> "gp_Vec2d":
        """
        No available documentation.

        Returns
        -------
        gp_Vec2d

        """
        return _Vrml.Vrml_Texture2Transform_ScaleFactor(self, *args)


    def SetCenter(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aCenter: gp_Vec2d

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Texture2Transform_SetCenter(self, *args)


    def SetRotation(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aRotation: float

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Texture2Transform_SetRotation(self, *args)


    def SetScaleFactor(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aScaleFactor: gp_Vec2d

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Texture2Transform_SetScaleFactor(self, *args)


    def SetTranslation(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aTranslation: gp_Vec2d

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Texture2Transform_SetTranslation(self, *args)


    def Translation(self, *args) -> "gp_Vec2d":
        """
        No available documentation.

        Returns
        -------
        gp_Vec2d

        """
        return _Vrml.Vrml_Texture2Transform_Translation(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Texture2Transform
    __del__ = lambda self: None
Vrml_Texture2Transform_swigregister = _Vrml.Vrml_Texture2Transform_swigregister
Vrml_Texture2Transform_swigregister(Vrml_Texture2Transform)

class Vrml_TextureCoordinate2(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_TextureCoordinate2, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_TextureCoordinate2, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        aPoint: TColgp_HArray1OfVec2d

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_TextureCoordinate2(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Point(self, *args) -> "opencascade::handle< TColgp_HArray1OfVec2d >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TColgp_HArray1OfVec2d>

        """
        return _Vrml.Vrml_TextureCoordinate2_Point(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_TextureCoordinate2 self) -> std::string"""
        return _Vrml.Vrml_TextureCoordinate2_PrintToString(self)


    def SetPoint(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aPoint: TColgp_HArray1OfVec2d

        Returns
        -------
        None

        """
        return _Vrml.Vrml_TextureCoordinate2_SetPoint(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_Vrml_TextureCoordinate2_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_TextureCoordinate2
    __del__ = lambda self: None
Vrml_TextureCoordinate2_swigregister = _Vrml.Vrml_TextureCoordinate2_swigregister
Vrml_TextureCoordinate2_swigregister(Vrml_TextureCoordinate2)

class Vrml_Transform(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_Transform, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_Transform, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        aTranslation: gp_Vec
        aRotation: Vrml_SFRotation
        aScaleFactor: gp_Vec
        aScaleOrientation: Vrml_SFRotation
        aCenter: gp_Vec

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_Transform(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Center(self, *args) -> "gp_Vec":
        """
        No available documentation.

        Returns
        -------
        gp_Vec

        """
        return _Vrml.Vrml_Transform_Center(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Transform self) -> std::string"""
        return _Vrml.Vrml_Transform_PrintToString(self)


    def Rotation(self, *args) -> "Vrml_SFRotation":
        """
        No available documentation.

        Returns
        -------
        Vrml_SFRotation

        """
        return _Vrml.Vrml_Transform_Rotation(self, *args)


    def ScaleFactor(self, *args) -> "gp_Vec":
        """
        No available documentation.

        Returns
        -------
        gp_Vec

        """
        return _Vrml.Vrml_Transform_ScaleFactor(self, *args)


    def ScaleOrientation(self, *args) -> "Vrml_SFRotation":
        """
        No available documentation.

        Returns
        -------
        Vrml_SFRotation

        """
        return _Vrml.Vrml_Transform_ScaleOrientation(self, *args)


    def SetCenter(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aCenter: gp_Vec

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Transform_SetCenter(self, *args)


    def SetRotation(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aRotation: Vrml_SFRotation

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Transform_SetRotation(self, *args)


    def SetScaleFactor(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aScaleFactor: gp_Vec

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Transform_SetScaleFactor(self, *args)


    def SetScaleOrientation(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aScaleOrientation: Vrml_SFRotation

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Transform_SetScaleOrientation(self, *args)


    def SetTranslation(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aTranslation: gp_Vec

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Transform_SetTranslation(self, *args)


    def Translation(self, *args) -> "gp_Vec":
        """
        No available documentation.

        Returns
        -------
        gp_Vec

        """
        return _Vrml.Vrml_Transform_Translation(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Transform
    __del__ = lambda self: None
Vrml_Transform_swigregister = _Vrml.Vrml_Transform_swigregister
Vrml_Transform_swigregister(Vrml_Transform)

class Vrml_TransformSeparator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_TransformSeparator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_TransformSeparator, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_TransformSeparator(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_TransformSeparator self) -> std::string"""
        return _Vrml.Vrml_TransformSeparator_PrintToString(self)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_TransformSeparator
    __del__ = lambda self: None
Vrml_TransformSeparator_swigregister = _Vrml.Vrml_TransformSeparator_swigregister
Vrml_TransformSeparator_swigregister(Vrml_TransformSeparator)

class Vrml_Translation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_Translation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_Translation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        aTranslation: gp_Vec

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_Translation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_Translation self) -> std::string"""
        return _Vrml.Vrml_Translation_PrintToString(self)


    def SetTranslation(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aTranslation: gp_Vec

        Returns
        -------
        None

        """
        return _Vrml.Vrml_Translation_SetTranslation(self, *args)


    def Translation(self, *args) -> "gp_Vec":
        """
        No available documentation.

        Returns
        -------
        gp_Vec

        """
        return _Vrml.Vrml_Translation_Translation(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_Translation
    __del__ = lambda self: None
Vrml_Translation_swigregister = _Vrml.Vrml_Translation_swigregister
Vrml_Translation_swigregister(Vrml_Translation)

class Vrml_WWWAnchor(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_WWWAnchor, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_WWWAnchor, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Parameters
        ----------
        aName: TCollection_AsciiString,optional
        	default value is 
        aDescription: TCollection_AsciiString,optional
        	default value is 
        aMap: Vrml_WWWAnchorMap,optional
        	default value is Vrml_MAP_NONE

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_WWWAnchor(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Description(self, *args) -> "TCollection_AsciiString":
        """
        No available documentation.

        Returns
        -------
        TCollection_AsciiString

        """
        return _Vrml.Vrml_WWWAnchor_Description(self, *args)


    def Map(self, *args) -> "Vrml_WWWAnchorMap":
        """
        No available documentation.

        Returns
        -------
        Vrml_WWWAnchorMap

        """
        return _Vrml.Vrml_WWWAnchor_Map(self, *args)


    def Name(self, *args) -> "TCollection_AsciiString":
        """
        No available documentation.

        Returns
        -------
        TCollection_AsciiString

        """
        return _Vrml.Vrml_WWWAnchor_Name(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_WWWAnchor self) -> std::string"""
        return _Vrml.Vrml_WWWAnchor_PrintToString(self)


    def SetDescription(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aDescription: TCollection_AsciiString

        Returns
        -------
        None

        """
        return _Vrml.Vrml_WWWAnchor_SetDescription(self, *args)


    def SetMap(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aMap: Vrml_WWWAnchorMap

        Returns
        -------
        None

        """
        return _Vrml.Vrml_WWWAnchor_SetMap(self, *args)


    def SetName(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aName: TCollection_AsciiString

        Returns
        -------
        None

        """
        return _Vrml.Vrml_WWWAnchor_SetName(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_WWWAnchor
    __del__ = lambda self: None
Vrml_WWWAnchor_swigregister = _Vrml.Vrml_WWWAnchor_swigregister
Vrml_WWWAnchor_swigregister(Vrml_WWWAnchor)

class Vrml_WWWInline(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vrml_WWWInline, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Vrml_WWWInline, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        No available documentation.

        Parameters
        ----------
        aName: TCollection_AsciiString
        aBboxSize: gp_Vec
        aBboxCenter: gp_Vec

        Returns
        -------
        None

        """
        this = _Vrml.new_Vrml_WWWInline(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def BboxCenter(self, *args) -> "gp_Vec":
        """
        No available documentation.

        Returns
        -------
        gp_Vec

        """
        return _Vrml.Vrml_WWWInline_BboxCenter(self, *args)


    def BboxSize(self, *args) -> "gp_Vec":
        """
        No available documentation.

        Returns
        -------
        gp_Vec

        """
        return _Vrml.Vrml_WWWInline_BboxSize(self, *args)


    def Name(self, *args) -> "TCollection_AsciiString":
        """
        No available documentation.

        Returns
        -------
        TCollection_AsciiString

        """
        return _Vrml.Vrml_WWWInline_Name(self, *args)


    def PrintToString(self) -> "std::string":
        """PrintToString(Vrml_WWWInline self) -> std::string"""
        return _Vrml.Vrml_WWWInline_PrintToString(self)


    def SetBboxCenter(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aBboxCenter: gp_Vec

        Returns
        -------
        None

        """
        return _Vrml.Vrml_WWWInline_SetBboxCenter(self, *args)


    def SetBboxSize(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aBboxSize: gp_Vec

        Returns
        -------
        None

        """
        return _Vrml.Vrml_WWWInline_SetBboxSize(self, *args)


    def SetName(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aName: TCollection_AsciiString

        Returns
        -------
        None

        """
        return _Vrml.Vrml_WWWInline_SetName(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _Vrml.delete_Vrml_WWWInline
    __del__ = lambda self: None
Vrml_WWWInline_swigregister = _Vrml.Vrml_WWWInline_swigregister
Vrml_WWWInline_swigregister(Vrml_WWWInline)



# This file is compatible with both classic and new-style classes.


