# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.2.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

"""
XmlMDataXtd module, see official documentation at
https://dev.opencascade.org/doc/occt-7.7.0/refman/html/package_xmlmdataxtd.html
"""

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _XmlMDataXtd
else:
    import _XmlMDataXtd

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _XmlMDataXtd.delete_SwigPyIterator

    def value(self):
        return _XmlMDataXtd.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _XmlMDataXtd.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _XmlMDataXtd.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _XmlMDataXtd.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _XmlMDataXtd.SwigPyIterator_equal(self, x)

    def copy(self):
        return _XmlMDataXtd.SwigPyIterator_copy(self)

    def next(self):
        return _XmlMDataXtd.SwigPyIterator_next(self)

    def __next__(self):
        return _XmlMDataXtd.SwigPyIterator___next__(self)

    def previous(self):
        return _XmlMDataXtd.SwigPyIterator_previous(self)

    def advance(self, n):
        return _XmlMDataXtd.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _XmlMDataXtd.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _XmlMDataXtd.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _XmlMDataXtd.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _XmlMDataXtd.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _XmlMDataXtd.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _XmlMDataXtd.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _XmlMDataXtd:
_XmlMDataXtd.SwigPyIterator_swigregister(SwigPyIterator)

def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error, method_name, class_name):
    return _XmlMDataXtd.process_exception(error, method_name, class_name)

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

class ios_base(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    erase_event = _XmlMDataXtd.ios_base_erase_event
    imbue_event = _XmlMDataXtd.ios_base_imbue_event
    copyfmt_event = _XmlMDataXtd.ios_base_copyfmt_event

    def register_callback(self, __fn, __index):
        return _XmlMDataXtd.ios_base_register_callback(self, __fn, __index)

    def flags(self, *args):
        return _XmlMDataXtd.ios_base_flags(self, *args)

    def setf(self, *args):
        return _XmlMDataXtd.ios_base_setf(self, *args)

    def unsetf(self, __mask):
        return _XmlMDataXtd.ios_base_unsetf(self, __mask)

    def precision(self, *args):
        return _XmlMDataXtd.ios_base_precision(self, *args)

    def width(self, *args):
        return _XmlMDataXtd.ios_base_width(self, *args)

    @staticmethod
    def sync_with_stdio(__sync=True):
        return _XmlMDataXtd.ios_base_sync_with_stdio(__sync)

    def imbue(self, __loc):
        return _XmlMDataXtd.ios_base_imbue(self, __loc)

    def getloc(self):
        return _XmlMDataXtd.ios_base_getloc(self)

    @staticmethod
    def xalloc():
        return _XmlMDataXtd.ios_base_xalloc()

    def iword(self, __ix):
        return _XmlMDataXtd.ios_base_iword(self, __ix)

    def pword(self, __ix):
        return _XmlMDataXtd.ios_base_pword(self, __ix)
    __swig_destroy__ = _XmlMDataXtd.delete_ios_base

# Register ios_base in _XmlMDataXtd:
_XmlMDataXtd.ios_base_swigregister(ios_base)
cvar = _XmlMDataXtd.cvar
ios_base.boolalpha = _XmlMDataXtd.cvar.ios_base_boolalpha
ios_base.dec = _XmlMDataXtd.cvar.ios_base_dec
ios_base.fixed = _XmlMDataXtd.cvar.ios_base_fixed
ios_base.hex = _XmlMDataXtd.cvar.ios_base_hex
ios_base.internal = _XmlMDataXtd.cvar.ios_base_internal
ios_base.left = _XmlMDataXtd.cvar.ios_base_left
ios_base.oct = _XmlMDataXtd.cvar.ios_base_oct
ios_base.right = _XmlMDataXtd.cvar.ios_base_right
ios_base.scientific = _XmlMDataXtd.cvar.ios_base_scientific
ios_base.showbase = _XmlMDataXtd.cvar.ios_base_showbase
ios_base.showpoint = _XmlMDataXtd.cvar.ios_base_showpoint
ios_base.showpos = _XmlMDataXtd.cvar.ios_base_showpos
ios_base.skipws = _XmlMDataXtd.cvar.ios_base_skipws
ios_base.unitbuf = _XmlMDataXtd.cvar.ios_base_unitbuf
ios_base.uppercase = _XmlMDataXtd.cvar.ios_base_uppercase
ios_base.adjustfield = _XmlMDataXtd.cvar.ios_base_adjustfield
ios_base.basefield = _XmlMDataXtd.cvar.ios_base_basefield
ios_base.floatfield = _XmlMDataXtd.cvar.ios_base_floatfield
ios_base.badbit = _XmlMDataXtd.cvar.ios_base_badbit
ios_base.eofbit = _XmlMDataXtd.cvar.ios_base_eofbit
ios_base.failbit = _XmlMDataXtd.cvar.ios_base_failbit
ios_base.goodbit = _XmlMDataXtd.cvar.ios_base_goodbit
ios_base.app = _XmlMDataXtd.cvar.ios_base_app
ios_base.ate = _XmlMDataXtd.cvar.ios_base_ate
ios_base.binary = _XmlMDataXtd.cvar.ios_base_binary
ios_base.ios_base_in = _XmlMDataXtd.cvar.ios_base_ios_base_in
ios_base.out = _XmlMDataXtd.cvar.ios_base_out
ios_base.trunc = _XmlMDataXtd.cvar.ios_base_trunc
ios_base.beg = _XmlMDataXtd.cvar.ios_base_beg
ios_base.cur = _XmlMDataXtd.cvar.ios_base_cur
ios_base.end = _XmlMDataXtd.cvar.ios_base_end

class ios(ios_base):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def rdstate(self):
        return _XmlMDataXtd.ios_rdstate(self)

    def clear(self, *args):
        return _XmlMDataXtd.ios_clear(self, *args)

    def setstate(self, __state):
        return _XmlMDataXtd.ios_setstate(self, __state)

    def good(self):
        return _XmlMDataXtd.ios_good(self)

    def eof(self):
        return _XmlMDataXtd.ios_eof(self)

    def fail(self):
        return _XmlMDataXtd.ios_fail(self)

    def bad(self):
        return _XmlMDataXtd.ios_bad(self)

    def exceptions(self, *args):
        return _XmlMDataXtd.ios_exceptions(self, *args)

    def __init__(self, __sb):
        _XmlMDataXtd.ios_swiginit(self, _XmlMDataXtd.new_ios(__sb))
    __swig_destroy__ = _XmlMDataXtd.delete_ios

    def tie(self, *args):
        return _XmlMDataXtd.ios_tie(self, *args)

    def rdbuf(self, *args):
        return _XmlMDataXtd.ios_rdbuf(self, *args)

    def copyfmt(self, __rhs):
        return _XmlMDataXtd.ios_copyfmt(self, __rhs)

    def fill(self, *args):
        return _XmlMDataXtd.ios_fill(self, *args)

    def imbue(self, __loc):
        return _XmlMDataXtd.ios_imbue(self, __loc)

    def narrow(self, __c, __dfault):
        return _XmlMDataXtd.ios_narrow(self, __c, __dfault)

    def widen(self, __c):
        return _XmlMDataXtd.ios_widen(self, __c)

# Register ios in _XmlMDataXtd:
_XmlMDataXtd.ios_swigregister(ios)
class ostream(ios):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, __sb):
        _XmlMDataXtd.ostream_swiginit(self, _XmlMDataXtd.new_ostream(__sb))
    __swig_destroy__ = _XmlMDataXtd.delete_ostream

    def __lshift__(self, *args):
        return _XmlMDataXtd.ostream___lshift__(self, *args)

    def put(self, __c):
        return _XmlMDataXtd.ostream_put(self, __c)

    def write(self, __s, __n):
        return _XmlMDataXtd.ostream_write(self, __s, __n)

    def flush(self):
        return _XmlMDataXtd.ostream_flush(self)

    def tellp(self):
        return _XmlMDataXtd.ostream_tellp(self)

    def seekp(self, *args):
        return _XmlMDataXtd.ostream_seekp(self, *args)

# Register ostream in _XmlMDataXtd:
_XmlMDataXtd.ostream_swigregister(ostream)
class istream(ios):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, __sb):
        _XmlMDataXtd.istream_swiginit(self, _XmlMDataXtd.new_istream(__sb))
    __swig_destroy__ = _XmlMDataXtd.delete_istream

    def __rshift__(self, *args):
        return _XmlMDataXtd.istream___rshift__(self, *args)

    def gcount(self):
        return _XmlMDataXtd.istream_gcount(self)

    def get(self, *args):
        return _XmlMDataXtd.istream_get(self, *args)

    def getline(self, *args):
        return _XmlMDataXtd.istream_getline(self, *args)

    def ignore(self, *args):
        return _XmlMDataXtd.istream_ignore(self, *args)

    def peek(self):
        return _XmlMDataXtd.istream_peek(self)

    def read(self, __s, __n):
        return _XmlMDataXtd.istream_read(self, __s, __n)

    def readsome(self, __s, __n):
        return _XmlMDataXtd.istream_readsome(self, __s, __n)

    def putback(self, __c):
        return _XmlMDataXtd.istream_putback(self, __c)

    def unget(self):
        return _XmlMDataXtd.istream_unget(self)

    def sync(self):
        return _XmlMDataXtd.istream_sync(self)

    def tellg(self):
        return _XmlMDataXtd.istream_tellg(self)

    def seekg(self, *args):
        return _XmlMDataXtd.istream_seekg(self, *args)

# Register istream in _XmlMDataXtd:
_XmlMDataXtd.istream_swigregister(istream)
class iostream(istream, ostream):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, __sb):
        _XmlMDataXtd.iostream_swiginit(self, _XmlMDataXtd.new_iostream(__sb))
    __swig_destroy__ = _XmlMDataXtd.delete_iostream

# Register iostream in _XmlMDataXtd:
_XmlMDataXtd.iostream_swigregister(iostream)
cin = cvar.cin
cout = cvar.cout
cerr = cvar.cerr
clog = cvar.clog

endl_cb_ptr = _XmlMDataXtd.endl_cb_ptr
endl = _XmlMDataXtd.endl
ends_cb_ptr = _XmlMDataXtd.ends_cb_ptr
ends = _XmlMDataXtd.ends
flush_cb_ptr = _XmlMDataXtd.flush_cb_ptr
flush = _XmlMDataXtd.flush
import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.XmlMDF
import OCC.Core.Message
import OCC.Core.TCollection
import OCC.Core.OSD
import OCC.Core.TColStd
import OCC.Core.TDF
import OCC.Core.XmlObjMgt
import OCC.Core.LDOM
import OCC.Core.gp
import OCC.Core.Storage

from enum import IntEnum
from OCC.Core.Exception import *




def Handle_XmlMDataXtd_ConstraintDriver_Create():
    return _XmlMDataXtd.Handle_XmlMDataXtd_ConstraintDriver_Create()

def Handle_XmlMDataXtd_ConstraintDriver_DownCast(t):
    return _XmlMDataXtd.Handle_XmlMDataXtd_ConstraintDriver_DownCast(t)

def Handle_XmlMDataXtd_ConstraintDriver_IsNull(t):
    return _XmlMDataXtd.Handle_XmlMDataXtd_ConstraintDriver_IsNull(t)

def Handle_XmlMDataXtd_GeometryDriver_Create():
    return _XmlMDataXtd.Handle_XmlMDataXtd_GeometryDriver_Create()

def Handle_XmlMDataXtd_GeometryDriver_DownCast(t):
    return _XmlMDataXtd.Handle_XmlMDataXtd_GeometryDriver_DownCast(t)

def Handle_XmlMDataXtd_GeometryDriver_IsNull(t):
    return _XmlMDataXtd.Handle_XmlMDataXtd_GeometryDriver_IsNull(t)

def Handle_XmlMDataXtd_PatternStdDriver_Create():
    return _XmlMDataXtd.Handle_XmlMDataXtd_PatternStdDriver_Create()

def Handle_XmlMDataXtd_PatternStdDriver_DownCast(t):
    return _XmlMDataXtd.Handle_XmlMDataXtd_PatternStdDriver_DownCast(t)

def Handle_XmlMDataXtd_PatternStdDriver_IsNull(t):
    return _XmlMDataXtd.Handle_XmlMDataXtd_PatternStdDriver_IsNull(t)

def Handle_XmlMDataXtd_PositionDriver_Create():
    return _XmlMDataXtd.Handle_XmlMDataXtd_PositionDriver_Create()

def Handle_XmlMDataXtd_PositionDriver_DownCast(t):
    return _XmlMDataXtd.Handle_XmlMDataXtd_PositionDriver_DownCast(t)

def Handle_XmlMDataXtd_PositionDriver_IsNull(t):
    return _XmlMDataXtd.Handle_XmlMDataXtd_PositionDriver_IsNull(t)

def Handle_XmlMDataXtd_PresentationDriver_Create():
    return _XmlMDataXtd.Handle_XmlMDataXtd_PresentationDriver_Create()

def Handle_XmlMDataXtd_PresentationDriver_DownCast(t):
    return _XmlMDataXtd.Handle_XmlMDataXtd_PresentationDriver_DownCast(t)

def Handle_XmlMDataXtd_PresentationDriver_IsNull(t):
    return _XmlMDataXtd.Handle_XmlMDataXtd_PresentationDriver_IsNull(t)

def Handle_XmlMDataXtd_TriangulationDriver_Create():
    return _XmlMDataXtd.Handle_XmlMDataXtd_TriangulationDriver_Create()

def Handle_XmlMDataXtd_TriangulationDriver_DownCast(t):
    return _XmlMDataXtd.Handle_XmlMDataXtd_TriangulationDriver_DownCast(t)

def Handle_XmlMDataXtd_TriangulationDriver_IsNull(t):
    return _XmlMDataXtd.Handle_XmlMDataXtd_TriangulationDriver_IsNull(t)
class xmlmdataxtd(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def AddDrivers(*args):
        r"""

        Parameters
        ----------
        aDriverTable: XmlMDF_ADriverTable
        anMsgDrv: Message_Messenger

        Return
        -------
        None

        Description
        -----------
        Adds the attribute drivers to <adrivertable>.

        """
        return _XmlMDataXtd.xmlmdataxtd_AddDrivers(*args)

    @staticmethod
    def DocumentVersion(*args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _XmlMDataXtd.xmlmdataxtd_DocumentVersion(*args)

    @staticmethod
    def SetDocumentVersion(*args):
        r"""

        Parameters
        ----------
        DocVersion: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _XmlMDataXtd.xmlmdataxtd_SetDocumentVersion(*args)

    __repr__ = _dumps_object


    def __init__(self):
        _XmlMDataXtd.xmlmdataxtd_swiginit(self, _XmlMDataXtd.new_xmlmdataxtd())
    __swig_destroy__ = _XmlMDataXtd.delete_xmlmdataxtd

# Register xmlmdataxtd in _XmlMDataXtd:
_XmlMDataXtd.xmlmdataxtd_swigregister(xmlmdataxtd)
class XmlMDataXtd_ConstraintDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        theMessageDriver: Message_Messenger

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _XmlMDataXtd.XmlMDataXtd_ConstraintDriver_swiginit(self, _XmlMDataXtd.new_XmlMDataXtd_ConstraintDriver(*args))

    def Paste(self, *args):
        r"""

        Parameters
        ----------
        Source: XmlObjMgt_Persistent
        Target: TDF_Attribute
        RelocTable: XmlObjMgt_RRelocationTable

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Source: TDF_Attribute
        Target: XmlObjMgt_Persistent
        RelocTable: XmlObjMgt_SRelocationTable

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _XmlMDataXtd.XmlMDataXtd_ConstraintDriver_Paste(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_XmlMDataXtd_ConstraintDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMDataXtd.delete_XmlMDataXtd_ConstraintDriver

# Register XmlMDataXtd_ConstraintDriver in _XmlMDataXtd:
_XmlMDataXtd.XmlMDataXtd_ConstraintDriver_swigregister(XmlMDataXtd_ConstraintDriver)
class XmlMDataXtd_GeometryDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        theMessageDriver: Message_Messenger

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _XmlMDataXtd.XmlMDataXtd_GeometryDriver_swiginit(self, _XmlMDataXtd.new_XmlMDataXtd_GeometryDriver(*args))

    def Paste(self, *args):
        r"""

        Parameters
        ----------
        Source: XmlObjMgt_Persistent
        Target: TDF_Attribute
        RelocTable: XmlObjMgt_RRelocationTable

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Source: TDF_Attribute
        Target: XmlObjMgt_Persistent
        RelocTable: XmlObjMgt_SRelocationTable

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _XmlMDataXtd.XmlMDataXtd_GeometryDriver_Paste(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_XmlMDataXtd_GeometryDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMDataXtd.delete_XmlMDataXtd_GeometryDriver

# Register XmlMDataXtd_GeometryDriver in _XmlMDataXtd:
_XmlMDataXtd.XmlMDataXtd_GeometryDriver_swigregister(XmlMDataXtd_GeometryDriver)
class XmlMDataXtd_PatternStdDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        theMessageDriver: Message_Messenger

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _XmlMDataXtd.XmlMDataXtd_PatternStdDriver_swiginit(self, _XmlMDataXtd.new_XmlMDataXtd_PatternStdDriver(*args))

    def Paste(self, *args):
        r"""

        Parameters
        ----------
        Source: XmlObjMgt_Persistent
        Target: TDF_Attribute
        RelocTable: XmlObjMgt_RRelocationTable

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Source: TDF_Attribute
        Target: XmlObjMgt_Persistent
        RelocTable: XmlObjMgt_SRelocationTable

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _XmlMDataXtd.XmlMDataXtd_PatternStdDriver_Paste(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_XmlMDataXtd_PatternStdDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMDataXtd.delete_XmlMDataXtd_PatternStdDriver

# Register XmlMDataXtd_PatternStdDriver in _XmlMDataXtd:
_XmlMDataXtd.XmlMDataXtd_PatternStdDriver_swigregister(XmlMDataXtd_PatternStdDriver)
class XmlMDataXtd_PositionDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        theMessageDriver: Message_Messenger

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _XmlMDataXtd.XmlMDataXtd_PositionDriver_swiginit(self, _XmlMDataXtd.new_XmlMDataXtd_PositionDriver(*args))

    def Paste(self, *args):
        r"""

        Parameters
        ----------
        Source: XmlObjMgt_Persistent
        Target: TDF_Attribute
        RelocTable: XmlObjMgt_RRelocationTable

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Source: TDF_Attribute
        Target: XmlObjMgt_Persistent
        RelocTable: XmlObjMgt_SRelocationTable

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _XmlMDataXtd.XmlMDataXtd_PositionDriver_Paste(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_XmlMDataXtd_PositionDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMDataXtd.delete_XmlMDataXtd_PositionDriver

# Register XmlMDataXtd_PositionDriver in _XmlMDataXtd:
_XmlMDataXtd.XmlMDataXtd_PositionDriver_swigregister(XmlMDataXtd_PositionDriver)
class XmlMDataXtd_PresentationDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        theMessageDriver: Message_Messenger

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _XmlMDataXtd.XmlMDataXtd_PresentationDriver_swiginit(self, _XmlMDataXtd.new_XmlMDataXtd_PresentationDriver(*args))

    def Paste(self, *args):
        r"""

        Parameters
        ----------
        Source: XmlObjMgt_Persistent
        Target: TDF_Attribute
        RelocTable: XmlObjMgt_RRelocationTable

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Source: TDF_Attribute
        Target: XmlObjMgt_Persistent
        RelocTable: XmlObjMgt_SRelocationTable

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _XmlMDataXtd.XmlMDataXtd_PresentationDriver_Paste(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_XmlMDataXtd_PresentationDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMDataXtd.delete_XmlMDataXtd_PresentationDriver

# Register XmlMDataXtd_PresentationDriver in _XmlMDataXtd:
_XmlMDataXtd.XmlMDataXtd_PresentationDriver_swigregister(XmlMDataXtd_PresentationDriver)
class XmlMDataXtd_TriangulationDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        theMessageDriver: Message_Messenger

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _XmlMDataXtd.XmlMDataXtd_TriangulationDriver_swiginit(self, _XmlMDataXtd.new_XmlMDataXtd_TriangulationDriver(*args))

    def Paste(self, *args):
        r"""

        Parameters
        ----------
        Source: XmlObjMgt_Persistent
        Target: TDF_Attribute
        RelocTable: XmlObjMgt_RRelocationTable

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Source: TDF_Attribute
        Target: XmlObjMgt_Persistent
        RelocTable: XmlObjMgt_SRelocationTable

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _XmlMDataXtd.XmlMDataXtd_TriangulationDriver_Paste(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_XmlMDataXtd_TriangulationDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMDataXtd.delete_XmlMDataXtd_TriangulationDriver

# Register XmlMDataXtd_TriangulationDriver in _XmlMDataXtd:
_XmlMDataXtd.XmlMDataXtd_TriangulationDriver_swigregister(XmlMDataXtd_TriangulationDriver)



@deprecated
def xmlmdataxtd_AddDrivers(*args):
	return xmlmdataxtd.AddDrivers(*args)

@deprecated
def xmlmdataxtd_DocumentVersion(*args):
	return xmlmdataxtd.DocumentVersion(*args)

@deprecated
def xmlmdataxtd_SetDocumentVersion(*args):
	return xmlmdataxtd.SetDocumentVersion(*args)



