# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.2.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

"""
BinTObjDrivers module, see official documentation at
https://dev.opencascade.org/doc/occt-7.7.0/refman/html/package_bintobjdrivers.html
"""

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _BinTObjDrivers
else:
    import _BinTObjDrivers

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _BinTObjDrivers.delete_SwigPyIterator

    def value(self):
        return _BinTObjDrivers.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _BinTObjDrivers.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _BinTObjDrivers.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _BinTObjDrivers.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _BinTObjDrivers.SwigPyIterator_equal(self, x)

    def copy(self):
        return _BinTObjDrivers.SwigPyIterator_copy(self)

    def next(self):
        return _BinTObjDrivers.SwigPyIterator_next(self)

    def __next__(self):
        return _BinTObjDrivers.SwigPyIterator___next__(self)

    def previous(self):
        return _BinTObjDrivers.SwigPyIterator_previous(self)

    def advance(self, n):
        return _BinTObjDrivers.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _BinTObjDrivers.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _BinTObjDrivers.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _BinTObjDrivers.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _BinTObjDrivers.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _BinTObjDrivers.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _BinTObjDrivers.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _BinTObjDrivers:
_BinTObjDrivers.SwigPyIterator_swigregister(SwigPyIterator)

def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error, method_name, class_name):
    return _BinTObjDrivers.process_exception(error, method_name, class_name)

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

class ios_base(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    erase_event = _BinTObjDrivers.ios_base_erase_event
    imbue_event = _BinTObjDrivers.ios_base_imbue_event
    copyfmt_event = _BinTObjDrivers.ios_base_copyfmt_event

    def register_callback(self, __fn, __index):
        return _BinTObjDrivers.ios_base_register_callback(self, __fn, __index)

    def flags(self, *args):
        return _BinTObjDrivers.ios_base_flags(self, *args)

    def setf(self, *args):
        return _BinTObjDrivers.ios_base_setf(self, *args)

    def unsetf(self, __mask):
        return _BinTObjDrivers.ios_base_unsetf(self, __mask)

    def precision(self, *args):
        return _BinTObjDrivers.ios_base_precision(self, *args)

    def width(self, *args):
        return _BinTObjDrivers.ios_base_width(self, *args)

    @staticmethod
    def sync_with_stdio(__sync=True):
        return _BinTObjDrivers.ios_base_sync_with_stdio(__sync)

    def imbue(self, __loc):
        return _BinTObjDrivers.ios_base_imbue(self, __loc)

    def getloc(self):
        return _BinTObjDrivers.ios_base_getloc(self)

    @staticmethod
    def xalloc():
        return _BinTObjDrivers.ios_base_xalloc()

    def iword(self, __ix):
        return _BinTObjDrivers.ios_base_iword(self, __ix)

    def pword(self, __ix):
        return _BinTObjDrivers.ios_base_pword(self, __ix)
    __swig_destroy__ = _BinTObjDrivers.delete_ios_base

# Register ios_base in _BinTObjDrivers:
_BinTObjDrivers.ios_base_swigregister(ios_base)
cvar = _BinTObjDrivers.cvar
ios_base.boolalpha = _BinTObjDrivers.cvar.ios_base_boolalpha
ios_base.dec = _BinTObjDrivers.cvar.ios_base_dec
ios_base.fixed = _BinTObjDrivers.cvar.ios_base_fixed
ios_base.hex = _BinTObjDrivers.cvar.ios_base_hex
ios_base.internal = _BinTObjDrivers.cvar.ios_base_internal
ios_base.left = _BinTObjDrivers.cvar.ios_base_left
ios_base.oct = _BinTObjDrivers.cvar.ios_base_oct
ios_base.right = _BinTObjDrivers.cvar.ios_base_right
ios_base.scientific = _BinTObjDrivers.cvar.ios_base_scientific
ios_base.showbase = _BinTObjDrivers.cvar.ios_base_showbase
ios_base.showpoint = _BinTObjDrivers.cvar.ios_base_showpoint
ios_base.showpos = _BinTObjDrivers.cvar.ios_base_showpos
ios_base.skipws = _BinTObjDrivers.cvar.ios_base_skipws
ios_base.unitbuf = _BinTObjDrivers.cvar.ios_base_unitbuf
ios_base.uppercase = _BinTObjDrivers.cvar.ios_base_uppercase
ios_base.adjustfield = _BinTObjDrivers.cvar.ios_base_adjustfield
ios_base.basefield = _BinTObjDrivers.cvar.ios_base_basefield
ios_base.floatfield = _BinTObjDrivers.cvar.ios_base_floatfield
ios_base.badbit = _BinTObjDrivers.cvar.ios_base_badbit
ios_base.eofbit = _BinTObjDrivers.cvar.ios_base_eofbit
ios_base.failbit = _BinTObjDrivers.cvar.ios_base_failbit
ios_base.goodbit = _BinTObjDrivers.cvar.ios_base_goodbit
ios_base.app = _BinTObjDrivers.cvar.ios_base_app
ios_base.ate = _BinTObjDrivers.cvar.ios_base_ate
ios_base.binary = _BinTObjDrivers.cvar.ios_base_binary
ios_base.ios_base_in = _BinTObjDrivers.cvar.ios_base_ios_base_in
ios_base.out = _BinTObjDrivers.cvar.ios_base_out
ios_base.trunc = _BinTObjDrivers.cvar.ios_base_trunc
ios_base.beg = _BinTObjDrivers.cvar.ios_base_beg
ios_base.cur = _BinTObjDrivers.cvar.ios_base_cur
ios_base.end = _BinTObjDrivers.cvar.ios_base_end

class ios(ios_base):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def rdstate(self):
        return _BinTObjDrivers.ios_rdstate(self)

    def clear(self, *args):
        return _BinTObjDrivers.ios_clear(self, *args)

    def setstate(self, __state):
        return _BinTObjDrivers.ios_setstate(self, __state)

    def good(self):
        return _BinTObjDrivers.ios_good(self)

    def eof(self):
        return _BinTObjDrivers.ios_eof(self)

    def fail(self):
        return _BinTObjDrivers.ios_fail(self)

    def bad(self):
        return _BinTObjDrivers.ios_bad(self)

    def exceptions(self, *args):
        return _BinTObjDrivers.ios_exceptions(self, *args)

    def __init__(self, __sb):
        _BinTObjDrivers.ios_swiginit(self, _BinTObjDrivers.new_ios(__sb))
    __swig_destroy__ = _BinTObjDrivers.delete_ios

    def tie(self, *args):
        return _BinTObjDrivers.ios_tie(self, *args)

    def rdbuf(self, *args):
        return _BinTObjDrivers.ios_rdbuf(self, *args)

    def copyfmt(self, __rhs):
        return _BinTObjDrivers.ios_copyfmt(self, __rhs)

    def fill(self, *args):
        return _BinTObjDrivers.ios_fill(self, *args)

    def imbue(self, __loc):
        return _BinTObjDrivers.ios_imbue(self, __loc)

    def narrow(self, __c, __dfault):
        return _BinTObjDrivers.ios_narrow(self, __c, __dfault)

    def widen(self, __c):
        return _BinTObjDrivers.ios_widen(self, __c)

# Register ios in _BinTObjDrivers:
_BinTObjDrivers.ios_swigregister(ios)
class ostream(ios):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, __sb):
        _BinTObjDrivers.ostream_swiginit(self, _BinTObjDrivers.new_ostream(__sb))
    __swig_destroy__ = _BinTObjDrivers.delete_ostream

    def __lshift__(self, *args):
        return _BinTObjDrivers.ostream___lshift__(self, *args)

    def put(self, __c):
        return _BinTObjDrivers.ostream_put(self, __c)

    def write(self, __s, __n):
        return _BinTObjDrivers.ostream_write(self, __s, __n)

    def flush(self):
        return _BinTObjDrivers.ostream_flush(self)

    def tellp(self):
        return _BinTObjDrivers.ostream_tellp(self)

    def seekp(self, *args):
        return _BinTObjDrivers.ostream_seekp(self, *args)

# Register ostream in _BinTObjDrivers:
_BinTObjDrivers.ostream_swigregister(ostream)
class istream(ios):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, __sb):
        _BinTObjDrivers.istream_swiginit(self, _BinTObjDrivers.new_istream(__sb))
    __swig_destroy__ = _BinTObjDrivers.delete_istream

    def __rshift__(self, *args):
        return _BinTObjDrivers.istream___rshift__(self, *args)

    def gcount(self):
        return _BinTObjDrivers.istream_gcount(self)

    def get(self, *args):
        return _BinTObjDrivers.istream_get(self, *args)

    def getline(self, *args):
        return _BinTObjDrivers.istream_getline(self, *args)

    def ignore(self, *args):
        return _BinTObjDrivers.istream_ignore(self, *args)

    def peek(self):
        return _BinTObjDrivers.istream_peek(self)

    def read(self, __s, __n):
        return _BinTObjDrivers.istream_read(self, __s, __n)

    def readsome(self, __s, __n):
        return _BinTObjDrivers.istream_readsome(self, __s, __n)

    def putback(self, __c):
        return _BinTObjDrivers.istream_putback(self, __c)

    def unget(self):
        return _BinTObjDrivers.istream_unget(self)

    def sync(self):
        return _BinTObjDrivers.istream_sync(self)

    def tellg(self):
        return _BinTObjDrivers.istream_tellg(self)

    def seekg(self, *args):
        return _BinTObjDrivers.istream_seekg(self, *args)

# Register istream in _BinTObjDrivers:
_BinTObjDrivers.istream_swigregister(istream)
class iostream(istream, ostream):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, __sb):
        _BinTObjDrivers.iostream_swiginit(self, _BinTObjDrivers.new_iostream(__sb))
    __swig_destroy__ = _BinTObjDrivers.delete_iostream

# Register iostream in _BinTObjDrivers:
_BinTObjDrivers.iostream_swigregister(iostream)
cin = cvar.cin
cout = cvar.cout
cerr = cvar.cerr
clog = cvar.clog

endl_cb_ptr = _BinTObjDrivers.endl_cb_ptr
endl = _BinTObjDrivers.endl
ends_cb_ptr = _BinTObjDrivers.ends_cb_ptr
ends = _BinTObjDrivers.ends
flush_cb_ptr = _BinTObjDrivers.flush_cb_ptr
flush = _BinTObjDrivers.flush
import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.BinMDF
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.Message
import OCC.Core.OSD
import OCC.Core.TDF
import OCC.Core.BinObjMgt
import OCC.Core.Storage
import OCC.Core.TDocStd
import OCC.Core.CDF
import OCC.Core.CDM
import OCC.Core.Resource
import OCC.Core.PCDM
import OCC.Core.BinLDrivers

from enum import IntEnum
from OCC.Core.Exception import *




def Handle_BinTObjDrivers_DocumentRetrievalDriver_Create():
    return _BinTObjDrivers.Handle_BinTObjDrivers_DocumentRetrievalDriver_Create()

def Handle_BinTObjDrivers_DocumentRetrievalDriver_DownCast(t):
    return _BinTObjDrivers.Handle_BinTObjDrivers_DocumentRetrievalDriver_DownCast(t)

def Handle_BinTObjDrivers_DocumentRetrievalDriver_IsNull(t):
    return _BinTObjDrivers.Handle_BinTObjDrivers_DocumentRetrievalDriver_IsNull(t)

def Handle_BinTObjDrivers_DocumentStorageDriver_Create():
    return _BinTObjDrivers.Handle_BinTObjDrivers_DocumentStorageDriver_Create()

def Handle_BinTObjDrivers_DocumentStorageDriver_DownCast(t):
    return _BinTObjDrivers.Handle_BinTObjDrivers_DocumentStorageDriver_DownCast(t)

def Handle_BinTObjDrivers_DocumentStorageDriver_IsNull(t):
    return _BinTObjDrivers.Handle_BinTObjDrivers_DocumentStorageDriver_IsNull(t)

def Handle_BinTObjDrivers_IntSparseArrayDriver_Create():
    return _BinTObjDrivers.Handle_BinTObjDrivers_IntSparseArrayDriver_Create()

def Handle_BinTObjDrivers_IntSparseArrayDriver_DownCast(t):
    return _BinTObjDrivers.Handle_BinTObjDrivers_IntSparseArrayDriver_DownCast(t)

def Handle_BinTObjDrivers_IntSparseArrayDriver_IsNull(t):
    return _BinTObjDrivers.Handle_BinTObjDrivers_IntSparseArrayDriver_IsNull(t)

def Handle_BinTObjDrivers_ModelDriver_Create():
    return _BinTObjDrivers.Handle_BinTObjDrivers_ModelDriver_Create()

def Handle_BinTObjDrivers_ModelDriver_DownCast(t):
    return _BinTObjDrivers.Handle_BinTObjDrivers_ModelDriver_DownCast(t)

def Handle_BinTObjDrivers_ModelDriver_IsNull(t):
    return _BinTObjDrivers.Handle_BinTObjDrivers_ModelDriver_IsNull(t)

def Handle_BinTObjDrivers_ObjectDriver_Create():
    return _BinTObjDrivers.Handle_BinTObjDrivers_ObjectDriver_Create()

def Handle_BinTObjDrivers_ObjectDriver_DownCast(t):
    return _BinTObjDrivers.Handle_BinTObjDrivers_ObjectDriver_DownCast(t)

def Handle_BinTObjDrivers_ObjectDriver_IsNull(t):
    return _BinTObjDrivers.Handle_BinTObjDrivers_ObjectDriver_IsNull(t)

def Handle_BinTObjDrivers_ReferenceDriver_Create():
    return _BinTObjDrivers.Handle_BinTObjDrivers_ReferenceDriver_Create()

def Handle_BinTObjDrivers_ReferenceDriver_DownCast(t):
    return _BinTObjDrivers.Handle_BinTObjDrivers_ReferenceDriver_DownCast(t)

def Handle_BinTObjDrivers_ReferenceDriver_IsNull(t):
    return _BinTObjDrivers.Handle_BinTObjDrivers_ReferenceDriver_IsNull(t)

def Handle_BinTObjDrivers_XYZDriver_Create():
    return _BinTObjDrivers.Handle_BinTObjDrivers_XYZDriver_Create()

def Handle_BinTObjDrivers_XYZDriver_DownCast(t):
    return _BinTObjDrivers.Handle_BinTObjDrivers_XYZDriver_DownCast(t)

def Handle_BinTObjDrivers_XYZDriver_IsNull(t):
    return _BinTObjDrivers.Handle_BinTObjDrivers_XYZDriver_IsNull(t)
class bintobjdrivers(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def AddDrivers(*args):
        r"""

        Parameters
        ----------
        aDriverTable: BinMDF_ADriverTable
        aMsgDrv: Message_Messenger

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _BinTObjDrivers.bintobjdrivers_AddDrivers(*args)

    @staticmethod
    def DefineFormat(*args):
        r"""

        Parameters
        ----------
        theApp: TDocStd_Application

        Return
        -------
        None

        Description
        -----------
        Defines format 'tobjbin' and registers its read and write drivers in the specified application.

        """
        return _BinTObjDrivers.bintobjdrivers_DefineFormat(*args)

    @staticmethod
    def Factory(*args):
        r"""

        Parameters
        ----------
        aGUID: Standard_GUID

        Return
        -------
        opencascade::handle<Standard_Transient>

        Description
        -----------
        No available documentation.

        """
        return _BinTObjDrivers.bintobjdrivers_Factory(*args)

    __repr__ = _dumps_object


    def __init__(self):
        _BinTObjDrivers.bintobjdrivers_swiginit(self, _BinTObjDrivers.new_bintobjdrivers())
    __swig_destroy__ = _BinTObjDrivers.delete_bintobjdrivers

# Register bintobjdrivers in _BinTObjDrivers:
_BinTObjDrivers.bintobjdrivers_swigregister(bintobjdrivers)
class BinTObjDrivers_DocumentRetrievalDriver(OCC.Core.BinLDrivers.BinLDrivers_DocumentRetrievalDriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _BinTObjDrivers.BinTObjDrivers_DocumentRetrievalDriver_swiginit(self, _BinTObjDrivers.new_BinTObjDrivers_DocumentRetrievalDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_BinTObjDrivers_DocumentRetrievalDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinTObjDrivers.delete_BinTObjDrivers_DocumentRetrievalDriver

# Register BinTObjDrivers_DocumentRetrievalDriver in _BinTObjDrivers:
_BinTObjDrivers.BinTObjDrivers_DocumentRetrievalDriver_swigregister(BinTObjDrivers_DocumentRetrievalDriver)
class BinTObjDrivers_DocumentStorageDriver(OCC.Core.BinLDrivers.BinLDrivers_DocumentStorageDriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _BinTObjDrivers.BinTObjDrivers_DocumentStorageDriver_swiginit(self, _BinTObjDrivers.new_BinTObjDrivers_DocumentStorageDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_BinTObjDrivers_DocumentStorageDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinTObjDrivers.delete_BinTObjDrivers_DocumentStorageDriver

# Register BinTObjDrivers_DocumentStorageDriver in _BinTObjDrivers:
_BinTObjDrivers.BinTObjDrivers_DocumentStorageDriver_swigregister(BinTObjDrivers_DocumentStorageDriver)
class BinTObjDrivers_IntSparseArrayDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        theMessageDriver: Message_Messenger

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _BinTObjDrivers.BinTObjDrivers_IntSparseArrayDriver_swiginit(self, _BinTObjDrivers.new_BinTObjDrivers_IntSparseArrayDriver(*args))

    def Paste(self, *args):
        r"""

        Parameters
        ----------
        theSource: BinObjMgt_Persistent
        theTarget: TDF_Attribute
        theRelocTable: BinObjMgt_RRelocationTable

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        theSource: TDF_Attribute
        theTarget: BinObjMgt_Persistent
        theRelocTable: BinObjMgt_SRelocationTable

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _BinTObjDrivers.BinTObjDrivers_IntSparseArrayDriver_Paste(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_BinTObjDrivers_IntSparseArrayDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinTObjDrivers.delete_BinTObjDrivers_IntSparseArrayDriver

# Register BinTObjDrivers_IntSparseArrayDriver in _BinTObjDrivers:
_BinTObjDrivers.BinTObjDrivers_IntSparseArrayDriver_swigregister(BinTObjDrivers_IntSparseArrayDriver)
class BinTObjDrivers_ModelDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        theMessageDriver: Message_Messenger

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _BinTObjDrivers.BinTObjDrivers_ModelDriver_swiginit(self, _BinTObjDrivers.new_BinTObjDrivers_ModelDriver(*args))

    def Paste(self, *args):
        r"""

        Parameters
        ----------
        Source: BinObjMgt_Persistent
        Target: TDF_Attribute
        RelocTable: BinObjMgt_RRelocationTable

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Source: TDF_Attribute
        Target: BinObjMgt_Persistent
        RelocTable: BinObjMgt_SRelocationTable

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _BinTObjDrivers.BinTObjDrivers_ModelDriver_Paste(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_BinTObjDrivers_ModelDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinTObjDrivers.delete_BinTObjDrivers_ModelDriver

# Register BinTObjDrivers_ModelDriver in _BinTObjDrivers:
_BinTObjDrivers.BinTObjDrivers_ModelDriver_swigregister(BinTObjDrivers_ModelDriver)
class BinTObjDrivers_ObjectDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        theMessageDriver: Message_Messenger

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _BinTObjDrivers.BinTObjDrivers_ObjectDriver_swiginit(self, _BinTObjDrivers.new_BinTObjDrivers_ObjectDriver(*args))

    def Paste(self, *args):
        r"""

        Parameters
        ----------
        Source: BinObjMgt_Persistent
        Target: TDF_Attribute
        RelocTable: BinObjMgt_RRelocationTable

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Source: TDF_Attribute
        Target: BinObjMgt_Persistent
        RelocTable: BinObjMgt_SRelocationTable

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _BinTObjDrivers.BinTObjDrivers_ObjectDriver_Paste(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_BinTObjDrivers_ObjectDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinTObjDrivers.delete_BinTObjDrivers_ObjectDriver

# Register BinTObjDrivers_ObjectDriver in _BinTObjDrivers:
_BinTObjDrivers.BinTObjDrivers_ObjectDriver_swigregister(BinTObjDrivers_ObjectDriver)
class BinTObjDrivers_ReferenceDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        theMessageDriver: Message_Messenger

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _BinTObjDrivers.BinTObjDrivers_ReferenceDriver_swiginit(self, _BinTObjDrivers.new_BinTObjDrivers_ReferenceDriver(*args))

    def Paste(self, *args):
        r"""

        Parameters
        ----------
        Source: BinObjMgt_Persistent
        Target: TDF_Attribute
        RelocTable: BinObjMgt_RRelocationTable

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Source: TDF_Attribute
        Target: BinObjMgt_Persistent
        RelocTable: BinObjMgt_SRelocationTable

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _BinTObjDrivers.BinTObjDrivers_ReferenceDriver_Paste(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_BinTObjDrivers_ReferenceDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinTObjDrivers.delete_BinTObjDrivers_ReferenceDriver

# Register BinTObjDrivers_ReferenceDriver in _BinTObjDrivers:
_BinTObjDrivers.BinTObjDrivers_ReferenceDriver_swigregister(BinTObjDrivers_ReferenceDriver)
class BinTObjDrivers_XYZDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        theMessageDriver: Message_Messenger

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _BinTObjDrivers.BinTObjDrivers_XYZDriver_swiginit(self, _BinTObjDrivers.new_BinTObjDrivers_XYZDriver(*args))

    def Paste(self, *args):
        r"""

        Parameters
        ----------
        theSource: BinObjMgt_Persistent
        theTarget: TDF_Attribute
        theRelocTable: BinObjMgt_RRelocationTable

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        theSource: TDF_Attribute
        theTarget: BinObjMgt_Persistent
        theRelocTable: BinObjMgt_SRelocationTable

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _BinTObjDrivers.BinTObjDrivers_XYZDriver_Paste(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_BinTObjDrivers_XYZDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinTObjDrivers.delete_BinTObjDrivers_XYZDriver

# Register BinTObjDrivers_XYZDriver in _BinTObjDrivers:
_BinTObjDrivers.BinTObjDrivers_XYZDriver_swigregister(BinTObjDrivers_XYZDriver)



@deprecated
def bintobjdrivers_AddDrivers(*args):
	return bintobjdrivers.AddDrivers(*args)

@deprecated
def bintobjdrivers_DefineFormat(*args):
	return bintobjdrivers.DefineFormat(*args)

@deprecated
def bintobjdrivers_Factory(*args):
	return bintobjdrivers.Factory(*args)



