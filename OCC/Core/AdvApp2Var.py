# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

"""
AdvApp2Var module, see official documentation at
https://www.opencascade.com/doc/occt-7.7.0/refman/html/package_advapp2var.html
"""

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _AdvApp2Var
else:
    import _AdvApp2Var

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _AdvApp2Var.delete_SwigPyIterator

    def value(self):
        return _AdvApp2Var.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _AdvApp2Var.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _AdvApp2Var.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _AdvApp2Var.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _AdvApp2Var.SwigPyIterator_equal(self, x)

    def copy(self):
        return _AdvApp2Var.SwigPyIterator_copy(self)

    def next(self):
        return _AdvApp2Var.SwigPyIterator_next(self)

    def __next__(self):
        return _AdvApp2Var.SwigPyIterator___next__(self)

    def previous(self):
        return _AdvApp2Var.SwigPyIterator_previous(self)

    def advance(self, n):
        return _AdvApp2Var.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _AdvApp2Var.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _AdvApp2Var.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _AdvApp2Var.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _AdvApp2Var.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _AdvApp2Var.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _AdvApp2Var.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _AdvApp2Var:
_AdvApp2Var.SwigPyIterator_swigregister(SwigPyIterator)

def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error, method_name, class_name):
    return _AdvApp2Var.process_exception(error, method_name, class_name)

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.GeomAbs
import OCC.Core.AdvApprox
import OCC.Core.TColgp
import OCC.Core.PLib
import OCC.Core.math
import OCC.Core.Message
import OCC.Core.OSD
import OCC.Core.gp
import OCC.Core.Geom

from enum import IntEnum
from OCC.Core.Exception import *

AdvApp2Var_Regular = _AdvApp2Var.AdvApp2Var_Regular
AdvApp2Var_Incremental = _AdvApp2Var.AdvApp2Var_Incremental
AdvApp2Var_Absolute = _AdvApp2Var.AdvApp2Var_Absolute
AdvApp2Var_Relative = _AdvApp2Var.AdvApp2Var_Relative


class AdvApp2Var_CriterionRepartition(IntEnum):
	AdvApp2Var_Regular = 0
	AdvApp2Var_Incremental = 1
AdvApp2Var_Regular = AdvApp2Var_CriterionRepartition.AdvApp2Var_Regular
AdvApp2Var_Incremental = AdvApp2Var_CriterionRepartition.AdvApp2Var_Incremental

class AdvApp2Var_CriterionType(IntEnum):
	AdvApp2Var_Absolute = 0
	AdvApp2Var_Relative = 1
AdvApp2Var_Absolute = AdvApp2Var_CriterionType.AdvApp2Var_Absolute
AdvApp2Var_Relative = AdvApp2Var_CriterionType.AdvApp2Var_Relative


def Handle_AdvApp2Var_Node_Create():
    return _AdvApp2Var.Handle_AdvApp2Var_Node_Create()

def Handle_AdvApp2Var_Node_DownCast(t):
    return _AdvApp2Var.Handle_AdvApp2Var_Node_DownCast(t)

def Handle_AdvApp2Var_Node_IsNull(t):
    return _AdvApp2Var.Handle_AdvApp2Var_Node_IsNull(t)

def Handle_AdvApp2Var_Patch_Create():
    return _AdvApp2Var.Handle_AdvApp2Var_Patch_Create()

def Handle_AdvApp2Var_Patch_DownCast(t):
    return _AdvApp2Var.Handle_AdvApp2Var_Patch_DownCast(t)

def Handle_AdvApp2Var_Patch_IsNull(t):
    return _AdvApp2Var.Handle_AdvApp2Var_Patch_IsNull(t)
class AdvApp2Var_SequenceOfNode(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_begin(self)

    def end(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_end(self)

    def cbegin(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_cbegin(self)

    def cend(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_cend(self)

    def __init__(self, *args):
        _AdvApp2Var.AdvApp2Var_SequenceOfNode_swiginit(self, _AdvApp2Var.new_AdvApp2Var_SequenceOfNode(*args))

    def Size(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_Size(self)

    def Length(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_Length(self)

    def Lower(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_Lower(self)

    def Upper(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_Upper(self)

    def IsEmpty(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_IsEmpty(self)

    def Reverse(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_Reverse(self)

    def Exchange(self, I, J):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_Exchange(self, I, J)

    @staticmethod
    def delNode(theNode, theAl):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_delNode(theNode, theAl)

    def Clear(self, theAllocator=0):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_Clear(self, theAllocator)

    def Assign(self, theOther):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_Assign(self, theOther)

    def Set(self, theOther):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_Set(self, theOther)

    def Remove(self, *args):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_Remove(self, *args)

    def Append(self, *args):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_Append(self, *args)

    def Prepend(self, *args):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_Prepend(self, *args)

    def InsertBefore(self, *args):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_InsertAfter(self, *args)

    def Split(self, theIndex, theSeq):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_Split(self, theIndex, theSeq)

    def First(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_First(self)

    def ChangeFirst(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_ChangeFirst(self)

    def Last(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_Last(self)

    def ChangeLast(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_ChangeLast(self)

    def Value(self, theIndex):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_Value(self, theIndex)

    def ChangeValue(self, theIndex):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_ChangeValue(self, theIndex)

    def __call__(self, *args):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode___call__(self, *args)

    def SetValue(self, theIndex, theItem):
        return _AdvApp2Var.AdvApp2Var_SequenceOfNode_SetValue(self, theIndex, theItem)
    __swig_destroy__ = _AdvApp2Var.delete_AdvApp2Var_SequenceOfNode

    def __len__(self):
        return self.Size()


# Register AdvApp2Var_SequenceOfNode in _AdvApp2Var:
_AdvApp2Var.AdvApp2Var_SequenceOfNode_swigregister(AdvApp2Var_SequenceOfNode)
class AdvApp2Var_SequenceOfPatch(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_begin(self)

    def end(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_end(self)

    def cbegin(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_cbegin(self)

    def cend(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_cend(self)

    def __init__(self, *args):
        _AdvApp2Var.AdvApp2Var_SequenceOfPatch_swiginit(self, _AdvApp2Var.new_AdvApp2Var_SequenceOfPatch(*args))

    def Size(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_Size(self)

    def Length(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_Length(self)

    def Lower(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_Lower(self)

    def Upper(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_Upper(self)

    def IsEmpty(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_IsEmpty(self)

    def Reverse(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_Reverse(self)

    def Exchange(self, I, J):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_Exchange(self, I, J)

    @staticmethod
    def delNode(theNode, theAl):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_delNode(theNode, theAl)

    def Clear(self, theAllocator=0):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_Clear(self, theAllocator)

    def Assign(self, theOther):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_Assign(self, theOther)

    def Set(self, theOther):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_Set(self, theOther)

    def Remove(self, *args):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_Remove(self, *args)

    def Append(self, *args):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_Append(self, *args)

    def Prepend(self, *args):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_Prepend(self, *args)

    def InsertBefore(self, *args):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_InsertAfter(self, *args)

    def Split(self, theIndex, theSeq):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_Split(self, theIndex, theSeq)

    def First(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_First(self)

    def ChangeFirst(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_ChangeFirst(self)

    def Last(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_Last(self)

    def ChangeLast(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_ChangeLast(self)

    def Value(self, theIndex):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_Value(self, theIndex)

    def ChangeValue(self, theIndex):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_ChangeValue(self, theIndex)

    def __call__(self, *args):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch___call__(self, *args)

    def SetValue(self, theIndex, theItem):
        return _AdvApp2Var.AdvApp2Var_SequenceOfPatch_SetValue(self, theIndex, theItem)
    __swig_destroy__ = _AdvApp2Var.delete_AdvApp2Var_SequenceOfPatch

    def __len__(self):
        return self.Size()


# Register AdvApp2Var_SequenceOfPatch in _AdvApp2Var:
_AdvApp2Var.AdvApp2Var_SequenceOfPatch_swigregister(AdvApp2Var_SequenceOfPatch)
class AdvApp2Var_SequenceOfStrip(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_begin(self)

    def end(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_end(self)

    def cbegin(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_cbegin(self)

    def cend(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_cend(self)

    def __init__(self, *args):
        _AdvApp2Var.AdvApp2Var_SequenceOfStrip_swiginit(self, _AdvApp2Var.new_AdvApp2Var_SequenceOfStrip(*args))

    def Size(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_Size(self)

    def Length(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_Length(self)

    def Lower(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_Lower(self)

    def Upper(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_Upper(self)

    def IsEmpty(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_IsEmpty(self)

    def Reverse(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_Reverse(self)

    def Exchange(self, I, J):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_Exchange(self, I, J)

    @staticmethod
    def delNode(theNode, theAl):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_delNode(theNode, theAl)

    def Clear(self, theAllocator=0):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_Clear(self, theAllocator)

    def Assign(self, theOther):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_Assign(self, theOther)

    def Set(self, theOther):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_Set(self, theOther)

    def Remove(self, *args):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_Remove(self, *args)

    def Append(self, *args):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_Append(self, *args)

    def Prepend(self, *args):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_Prepend(self, *args)

    def InsertBefore(self, *args):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_InsertAfter(self, *args)

    def Split(self, theIndex, theSeq):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_Split(self, theIndex, theSeq)

    def First(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_First(self)

    def ChangeFirst(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_ChangeFirst(self)

    def Last(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_Last(self)

    def ChangeLast(self):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_ChangeLast(self)

    def Value(self, theIndex):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_Value(self, theIndex)

    def ChangeValue(self, theIndex):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_ChangeValue(self, theIndex)

    def __call__(self, *args):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip___call__(self, *args)

    def SetValue(self, theIndex, theItem):
        return _AdvApp2Var.AdvApp2Var_SequenceOfStrip_SetValue(self, theIndex, theItem)
    __swig_destroy__ = _AdvApp2Var.delete_AdvApp2Var_SequenceOfStrip

    def __len__(self):
        return self.Size()


# Register AdvApp2Var_SequenceOfStrip in _AdvApp2Var:
_AdvApp2Var.AdvApp2Var_SequenceOfStrip_swigregister(AdvApp2Var_SequenceOfStrip)
class AdvApp2Var_Strip(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _AdvApp2Var.AdvApp2Var_Strip_begin(self)

    def end(self):
        return _AdvApp2Var.AdvApp2Var_Strip_end(self)

    def cbegin(self):
        return _AdvApp2Var.AdvApp2Var_Strip_cbegin(self)

    def cend(self):
        return _AdvApp2Var.AdvApp2Var_Strip_cend(self)

    def __init__(self, *args):
        _AdvApp2Var.AdvApp2Var_Strip_swiginit(self, _AdvApp2Var.new_AdvApp2Var_Strip(*args))

    def Size(self):
        return _AdvApp2Var.AdvApp2Var_Strip_Size(self)

    def Length(self):
        return _AdvApp2Var.AdvApp2Var_Strip_Length(self)

    def Lower(self):
        return _AdvApp2Var.AdvApp2Var_Strip_Lower(self)

    def Upper(self):
        return _AdvApp2Var.AdvApp2Var_Strip_Upper(self)

    def IsEmpty(self):
        return _AdvApp2Var.AdvApp2Var_Strip_IsEmpty(self)

    def Reverse(self):
        return _AdvApp2Var.AdvApp2Var_Strip_Reverse(self)

    def Exchange(self, I, J):
        return _AdvApp2Var.AdvApp2Var_Strip_Exchange(self, I, J)

    @staticmethod
    def delNode(theNode, theAl):
        return _AdvApp2Var.AdvApp2Var_Strip_delNode(theNode, theAl)

    def Clear(self, theAllocator=0):
        return _AdvApp2Var.AdvApp2Var_Strip_Clear(self, theAllocator)

    def Assign(self, theOther):
        return _AdvApp2Var.AdvApp2Var_Strip_Assign(self, theOther)

    def Set(self, theOther):
        return _AdvApp2Var.AdvApp2Var_Strip_Set(self, theOther)

    def Remove(self, *args):
        return _AdvApp2Var.AdvApp2Var_Strip_Remove(self, *args)

    def Append(self, *args):
        return _AdvApp2Var.AdvApp2Var_Strip_Append(self, *args)

    def Prepend(self, *args):
        return _AdvApp2Var.AdvApp2Var_Strip_Prepend(self, *args)

    def InsertBefore(self, *args):
        return _AdvApp2Var.AdvApp2Var_Strip_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        return _AdvApp2Var.AdvApp2Var_Strip_InsertAfter(self, *args)

    def Split(self, theIndex, theSeq):
        return _AdvApp2Var.AdvApp2Var_Strip_Split(self, theIndex, theSeq)

    def First(self):
        return _AdvApp2Var.AdvApp2Var_Strip_First(self)

    def ChangeFirst(self):
        return _AdvApp2Var.AdvApp2Var_Strip_ChangeFirst(self)

    def Last(self):
        return _AdvApp2Var.AdvApp2Var_Strip_Last(self)

    def ChangeLast(self):
        return _AdvApp2Var.AdvApp2Var_Strip_ChangeLast(self)

    def Value(self, theIndex):
        return _AdvApp2Var.AdvApp2Var_Strip_Value(self, theIndex)

    def ChangeValue(self, theIndex):
        return _AdvApp2Var.AdvApp2Var_Strip_ChangeValue(self, theIndex)

    def __call__(self, *args):
        return _AdvApp2Var.AdvApp2Var_Strip___call__(self, *args)

    def SetValue(self, theIndex, theItem):
        return _AdvApp2Var.AdvApp2Var_Strip_SetValue(self, theIndex, theItem)
    __swig_destroy__ = _AdvApp2Var.delete_AdvApp2Var_Strip

    def __len__(self):
        return self.Size()


# Register AdvApp2Var_Strip in _AdvApp2Var:
_AdvApp2Var.AdvApp2Var_Strip_swigregister(AdvApp2Var_Strip)
class AdvApp2Var_ApproxAFunc2Var(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        Num1DSS: int
        Num2DSS: int
        Num3DSS: int
        OneDTol: TColStd_HArray1OfReal
        TwoDTol: TColStd_HArray1OfReal
        ThreeDTol: TColStd_HArray1OfReal
        OneDTolFr: TColStd_HArray2OfReal
        TwoDTolFr: TColStd_HArray2OfReal
        ThreeDTolFr: TColStd_HArray2OfReal
        FirstInU: float
        LastInU: float
        FirstInV: float
        LastInV: float
        FavorIso: GeomAbs_IsoType
        ContInU: GeomAbs_Shape
        ContInV: GeomAbs_Shape
        PrecisCode: int
        MaxDegInU: int
        MaxDegInV: int
        MaxPatch: int
        Func: AdvApp2Var_EvaluatorFunc2Var
        UChoice: AdvApprox_Cutting
        VChoice: AdvApprox_Cutting

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Num1DSS: int
        Num2DSS: int
        Num3DSS: int
        OneDTol: TColStd_HArray1OfReal
        TwoDTol: TColStd_HArray1OfReal
        ThreeDTol: TColStd_HArray1OfReal
        OneDTolFr: TColStd_HArray2OfReal
        TwoDTolFr: TColStd_HArray2OfReal
        ThreeDTolFr: TColStd_HArray2OfReal
        FirstInU: float
        LastInU: float
        FirstInV: float
        LastInV: float
        FavorIso: GeomAbs_IsoType
        ContInU: GeomAbs_Shape
        ContInV: GeomAbs_Shape
        PrecisCode: int
        MaxDegInU: int
        MaxDegInV: int
        MaxPatch: int
        Func: AdvApp2Var_EvaluatorFunc2Var
        Crit: AdvApp2Var_Criterion
        UChoice: AdvApprox_Cutting
        VChoice: AdvApprox_Cutting

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _AdvApp2Var.AdvApp2Var_ApproxAFunc2Var_swiginit(self, _AdvApp2Var.new_AdvApp2Var_ApproxAFunc2Var(*args))

    def AverageError(self, *args):
        r"""

        Parameters
        ----------
        Dimension: int

        Return
        -------
        opencascade::handle<TColStd_HArray1OfReal>

        Description
        -----------
        Returns the average errors.

        Parameters
        ----------
        Dimension: int
        Index: int

        Return
        -------
        float

        Description
        -----------
        Returns the average error of the bsplinesurface of range index.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxAFunc2Var_AverageError(self, *args)

    def CritError(self, *args):
        r"""

        Parameters
        ----------
        Dimension: int
        Index: int

        Return
        -------
        float

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxAFunc2Var_CritError(self, *args)

    def DumpToString(self):
        r"""DumpToString(AdvApp2Var_ApproxAFunc2Var self) -> std::string"""
        return _AdvApp2Var.AdvApp2Var_ApproxAFunc2Var_DumpToString(self)

    def HasResult(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        True if the approximation did come out with a result that is not necessarely within the required tolerance or a result that is not recognized with the wished continuities.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxAFunc2Var_HasResult(self, *args)

    def IsDone(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        True if the approximation succeeded within the imposed tolerances and the wished continuities.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxAFunc2Var_IsDone(self, *args)

    def MaxError(self, *args):
        r"""

        Parameters
        ----------
        Dimension: int

        Return
        -------
        opencascade::handle<TColStd_HArray1OfReal>

        Description
        -----------
        Returns the errors max.

        Parameters
        ----------
        Dimension: int
        Index: int

        Return
        -------
        float

        Description
        -----------
        Returns the error max of the bsplinesurface of range index.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxAFunc2Var_MaxError(self, *args)

    def NumSubSpaces(self, *args):
        r"""

        Parameters
        ----------
        Dimension: int

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxAFunc2Var_NumSubSpaces(self, *args)

    def Surface(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        opencascade::handle<Geom_BSplineSurface>

        Description
        -----------
        Returns the bsplinesurface of range index.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxAFunc2Var_Surface(self, *args)

    def UDegree(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxAFunc2Var_UDegree(self, *args)

    def UFrontError(self, *args):
        r"""

        Parameters
        ----------
        Dimension: int

        Return
        -------
        opencascade::handle<TColStd_HArray1OfReal>

        Description
        -----------
        Returns the errors max on ufrontiers warning: dimension must be equal to 3.

        Parameters
        ----------
        Dimension: int
        Index: int

        Return
        -------
        float

        Description
        -----------
        Returns the error max of the bsplinesurface of range index on a ufrontier.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxAFunc2Var_UFrontError(self, *args)

    def VDegree(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxAFunc2Var_VDegree(self, *args)

    def VFrontError(self, *args):
        r"""

        Parameters
        ----------
        Dimension: int

        Return
        -------
        opencascade::handle<TColStd_HArray1OfReal>

        Description
        -----------
        Returns the errors max on vfrontiers warning: dimension must be equal to 3.

        Parameters
        ----------
        Dimension: int
        Index: int

        Return
        -------
        float

        Description
        -----------
        Returns the error max of the bsplinesurface of range index on a vfrontier.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxAFunc2Var_VFrontError(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _AdvApp2Var.delete_AdvApp2Var_ApproxAFunc2Var

# Register AdvApp2Var_ApproxAFunc2Var in _AdvApp2Var:
_AdvApp2Var.AdvApp2Var_ApproxAFunc2Var_swigregister(AdvApp2Var_ApproxAFunc2Var)
class AdvApp2Var_ApproxF2var(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def mma1her_(*args):
        r"""

        Parameters
        ----------
        : integer *
        : doublereal *
        : integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxF2var_mma1her_(*args)

    @staticmethod
    def mma2ac1_(*args):
        r"""

        Parameters
        ----------
        : integer *
        : integer *
        : integer *
        : integer *
        : integer *
        : doublereal *
        : doublereal *
        : doublereal *
        : doublereal *
        : doublereal *
        : doublereal *
        : doublereal *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxF2var_mma2ac1_(*args)

    @staticmethod
    def mma2ac2_(*args):
        r"""

        Parameters
        ----------
        : integer *
        : integer *
        : integer *
        : integer *
        : integer *
        : integer *
        : doublereal *
        : integer *
        : doublereal *
        : doublereal *
        : doublereal *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxF2var_mma2ac2_(*args)

    @staticmethod
    def mma2ac3_(*args):
        r"""

        Parameters
        ----------
        : integer *
        : integer *
        : integer *
        : integer *
        : integer *
        : integer *
        : doublereal *
        : integer *
        : doublereal *
        : doublereal *
        : doublereal *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxF2var_mma2ac3_(*args)

    @staticmethod
    def mma2can_(*args):
        r"""

        Parameters
        ----------
        : integer *
        : integer *
        : integer *
        : integer *
        : integer *
        : integer *
        : integer *
        : doublereal *
        : doublereal *
        : doublereal *
        : integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxF2var_mma2can_(*args)

    @staticmethod
    def mma2cdi_(*args):
        r"""

        Parameters
        ----------
        ndimen: integer *
        nbpntu: integer *
        urootl: doublereal *
        nbpntv: integer *
        vrootl: doublereal *
        iordru: integer *
        iordrv: integer *
        contr1: doublereal *
        contr2: doublereal *
        contr3: doublereal *
        contr4: doublereal *
        sotbu1: doublereal *
        sotbu2: doublereal *
        ditbu1: doublereal *
        ditbu2: doublereal *
        sotbv1: doublereal *
        sotbv2: doublereal *
        ditbv1: doublereal *
        ditbv2: doublereal *
        sosotb: doublereal *
        soditb: doublereal *
        disotb: doublereal *
        diditb: doublereal *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxF2var_mma2cdi_(*args)

    @staticmethod
    def mma2ce1_(*args):
        r"""

        Parameters
        ----------
        numdec: integer *
        ndimen: integer *
        nbsesp: integer *
        ndimse: integer *
        ndminu: integer *
        ndminv: integer *
        ndguli: integer *
        ndgvli: integer *
        ndjacu: integer *
        ndjacv: integer *
        iordru: integer *
        iordrv: integer *
        nbpntu: integer *
        nbpntv: integer *
        epsapr: doublereal *
        sosotb: doublereal *
        disotb: doublereal *
        soditb: doublereal *
        diditb: doublereal *
        patjac: doublereal *
        errmax: doublereal *
        errmoy: doublereal *
        ndegpu: integer *
        ndegpv: integer *
        itydec: integer *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxF2var_mma2ce1_(*args)

    @staticmethod
    def mma2ds1_(*args):
        r"""

        Parameters
        ----------
        ndimen: integer *
        uintfn: doublereal *
        vintfn: doublereal *
        foncnp: AdvApp2Var_EvaluatorFunc2Var
        nbpntu: integer *
        nbpntv: integer *
        urootb: doublereal *
        vrootb: doublereal *
        isofav: integer *
        sosotb: doublereal *
        disotb: doublereal *
        soditb: doublereal *
        diditb: doublereal *
        fpntab: doublereal *
        ttable: doublereal *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxF2var_mma2ds1_(*args)

    @staticmethod
    def mma2fnc_(*args):
        r"""

        Parameters
        ----------
        ndimen: integer *
        nbsesp: integer *
        ndimse: integer *
        uvfonc: doublereal *
        foncnp: AdvApp2Var_EvaluatorFunc2Var
        tconst: doublereal *
        isofav: integer *
        nbroot: integer *
        rootlg: doublereal *
        iordre: integer *
        ideriv: integer *
        ndgjac: integer *
        nbcrmx: integer *
        ncflim: integer *
        epsapr: doublereal *
        ncoeff: integer *
        courbe: doublereal *
        nbcrbe: integer *
        somtab: doublereal *
        diftab: doublereal *
        contr1: doublereal *
        contr2: doublereal *
        tabdec: doublereal *
        errmax: doublereal *
        errmoy: doublereal *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxF2var_mma2fnc_(*args)

    @staticmethod
    def mma2fx6_(*args):
        r"""

        Parameters
        ----------
        ncfmxu: integer *
        ncfmxv: integer *
        ndimen: integer *
        nbsesp: integer *
        ndimse: integer *
        nbupat: integer *
        nbvpat: integer *
        iordru: integer *
        iordrv: integer *
        epsapr: doublereal *
        epsfro: doublereal *
        patcan: doublereal *
        errmax: doublereal *
        ncoefu: integer *
        ncoefv: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxF2var_mma2fx6_(*args)

    @staticmethod
    def mma2jmx_(*args):
        r"""

        Parameters
        ----------
        ndgjac: integer *
        iordre: integer *
        xjacmx: doublereal *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxF2var_mma2jmx_(*args)

    @staticmethod
    def mma2roo_(*args):
        r"""

        Parameters
        ----------
        nbpntu: integer *
        nbpntv: integer *
        urootl: doublereal *
        vrootl: doublereal *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxF2var_mma2roo_(*args)

    @staticmethod
    def mmapptt_(*args):
        r"""

        Parameters
        ----------
        : integer *
        : integer *
        : integer *
        : doublereal *
        : integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_ApproxF2var_mmapptt_(*args)

    __repr__ = _dumps_object


    def __init__(self):
        _AdvApp2Var.AdvApp2Var_ApproxF2var_swiginit(self, _AdvApp2Var.new_AdvApp2Var_ApproxF2var())
    __swig_destroy__ = _AdvApp2Var.delete_AdvApp2Var_ApproxF2var

# Register AdvApp2Var_ApproxF2var in _AdvApp2Var:
_AdvApp2Var.AdvApp2Var_ApproxF2var_swigregister(AdvApp2Var_ApproxF2var)
class AdvApp2Var_Context(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        ifav: int
        iu: int
        iv: int
        nlimu: int
        nlimv: int
        iprecis: int
        nb1Dss: int
        nb2Dss: int
        nb3Dss: int
        tol1D: TColStd_HArray1OfReal
        tol2D: TColStd_HArray1OfReal
        tol3D: TColStd_HArray1OfReal
        tof1D: TColStd_HArray2OfReal
        tof2D: TColStd_HArray2OfReal
        tof3D: TColStd_HArray2OfReal

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _AdvApp2Var.AdvApp2Var_Context_swiginit(self, _AdvApp2Var.new_AdvApp2Var_Context(*args))

    def CToler(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TColStd_HArray2OfReal>

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Context_CToler(self, *args)

    def FToler(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TColStd_HArray2OfReal>

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Context_FToler(self, *args)

    def FavorIso(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Context_FavorIso(self, *args)

    def IToler(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TColStd_HArray1OfReal>

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Context_IToler(self, *args)

    def TotalDimension(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Context_TotalDimension(self, *args)

    def TotalNumberSSP(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Context_TotalNumberSSP(self, *args)

    def UGauss(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TColStd_HArray1OfReal>

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Context_UGauss(self, *args)

    def UJacDeg(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Context_UJacDeg(self, *args)

    def UJacMax(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TColStd_HArray1OfReal>

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Context_UJacMax(self, *args)

    def ULimit(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Context_ULimit(self, *args)

    def UOrder(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Context_UOrder(self, *args)

    def URoots(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TColStd_HArray1OfReal>

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Context_URoots(self, *args)

    def VGauss(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TColStd_HArray1OfReal>

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Context_VGauss(self, *args)

    def VJacDeg(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Context_VJacDeg(self, *args)

    def VJacMax(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TColStd_HArray1OfReal>

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Context_VJacMax(self, *args)

    def VLimit(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Context_VLimit(self, *args)

    def VOrder(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Context_VOrder(self, *args)

    def VRoots(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TColStd_HArray1OfReal>

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Context_VRoots(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _AdvApp2Var.delete_AdvApp2Var_Context

# Register AdvApp2Var_Context in _AdvApp2Var:
_AdvApp2Var.AdvApp2Var_Context_swigregister(AdvApp2Var_Context)
class AdvApp2Var_Criterion(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def IsSatisfied(self, *args):
        r"""

        Parameters
        ----------
        P: AdvApp2Var_Patch

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Criterion_IsSatisfied(self, *args)

    def MaxValue(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Criterion_MaxValue(self, *args)

    def Repartition(self, *args):
        r"""
        Return
        -------
        AdvApp2Var_CriterionRepartition

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Criterion_Repartition(self, *args)

    def Type(self, *args):
        r"""
        Return
        -------
        AdvApp2Var_CriterionType

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Criterion_Type(self, *args)

    def Value(self, *args):
        r"""

        Parameters
        ----------
        P: AdvApp2Var_Patch
        C: AdvApp2Var_Context

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Criterion_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _AdvApp2Var.delete_AdvApp2Var_Criterion

# Register AdvApp2Var_Criterion in _AdvApp2Var:
_AdvApp2Var.AdvApp2Var_Criterion_swigregister(AdvApp2Var_Criterion)
class AdvApp2Var_Data(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def Getmaovpar(*args):
        r"""
        Return
        -------
        maovpar_1_

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Data_Getmaovpar(*args)

    @staticmethod
    def Getmaovpch(*args):
        r"""
        Return
        -------
        maovpch_1_

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Data_Getmaovpch(*args)

    @staticmethod
    def Getmdnombr(*args):
        r"""
        Return
        -------
        mdnombr_1_

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Data_Getmdnombr(*args)

    @staticmethod
    def Getminombr(*args):
        r"""
        Return
        -------
        minombr_1_

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Data_Getminombr(*args)

    @staticmethod
    def Getmlgdrtl(*args):
        r"""
        Return
        -------
        mlgdrtl_1_

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Data_Getmlgdrtl(*args)

    @staticmethod
    def Getmmapgs0(*args):
        r"""
        Return
        -------
        mmapgs0_1_

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Data_Getmmapgs0(*args)

    @staticmethod
    def Getmmapgs1(*args):
        r"""
        Return
        -------
        mmapgs1_1_

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Data_Getmmapgs1(*args)

    @staticmethod
    def Getmmapgs2(*args):
        r"""
        Return
        -------
        mmapgs2_1_

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Data_Getmmapgs2(*args)

    @staticmethod
    def Getmmapgss(*args):
        r"""
        Return
        -------
        mmapgss_1_

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Data_Getmmapgss(*args)

    @staticmethod
    def Getmmcmcnp(*args):
        r"""
        Return
        -------
        mmcmcnp_1_

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Data_Getmmcmcnp(*args)

    @staticmethod
    def Getmmjcobi(*args):
        r"""
        Return
        -------
        mmjcobi_1_

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Data_Getmmjcobi(*args)

    __repr__ = _dumps_object


    def __init__(self):
        _AdvApp2Var.AdvApp2Var_Data_swiginit(self, _AdvApp2Var.new_AdvApp2Var_Data())
    __swig_destroy__ = _AdvApp2Var.delete_AdvApp2Var_Data

# Register AdvApp2Var_Data in _AdvApp2Var:
_AdvApp2Var.AdvApp2Var_Data_swigregister(AdvApp2Var_Data)
class AdvApp2Var_Framework(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Frame: AdvApp2Var_SequenceOfNode
        UFrontier: AdvApp2Var_SequenceOfStrip
        VFrontier: AdvApp2Var_SequenceOfStrip

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _AdvApp2Var.AdvApp2Var_Framework_swiginit(self, _AdvApp2Var.new_AdvApp2Var_Framework(*args))

    def ChangeIso(self, *args):
        r"""

        Parameters
        ----------
        IndexIso: int
        IndexStrip: int
        anIso: AdvApp2Var_Iso

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Framework_ChangeIso(self, *args)

    def FirstNode(self, *args):
        r"""

        Parameters
        ----------
        Type: GeomAbs_IsoType
        IndexIso: int
        IndexStrip: int

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Framework_FirstNode(self, *args)

    def FirstNotApprox(self, *args):
        r"""

        Parameters
        ----------

        Return
        -------
        IndexIso: int
        IndexStrip: int

        Description
        -----------
        Search the index of the first iso not approximated, if all isos are approximated null is returned.

        """
        return _AdvApp2Var.AdvApp2Var_Framework_FirstNotApprox(self, *args)

    def IsoU(self, *args):
        r"""

        Parameters
        ----------
        U: float
        V0: float
        V1: float

        Return
        -------
        AdvApp2Var_Iso

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Framework_IsoU(self, *args)

    def IsoV(self, *args):
        r"""

        Parameters
        ----------
        U0: float
        U1: float
        V: float

        Return
        -------
        AdvApp2Var_Iso

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Framework_IsoV(self, *args)

    def LastNode(self, *args):
        r"""

        Parameters
        ----------
        Type: GeomAbs_IsoType
        IndexIso: int
        IndexStrip: int

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Framework_LastNode(self, *args)

    def Node(self, *args):
        r"""

        Parameters
        ----------
        IndexNode: int

        Return
        -------
        opencascade::handle<AdvApp2Var_Node>

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        U: float
        V: float

        Return
        -------
        opencascade::handle<AdvApp2Var_Node>

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Framework_Node(self, *args)

    def UEquation(self, *args):
        r"""

        Parameters
        ----------
        IndexIso: int
        IndexStrip: int

        Return
        -------
        opencascade::handle<TColStd_HArray1OfReal>

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Framework_UEquation(self, *args)

    def UpdateInU(self, *args):
        r"""

        Parameters
        ----------
        CuttingValue: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Framework_UpdateInU(self, *args)

    def UpdateInV(self, *args):
        r"""

        Parameters
        ----------
        CuttingValue: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Framework_UpdateInV(self, *args)

    def VEquation(self, *args):
        r"""

        Parameters
        ----------
        IndexIso: int
        IndexStrip: int

        Return
        -------
        opencascade::handle<TColStd_HArray1OfReal>

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Framework_VEquation(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _AdvApp2Var.delete_AdvApp2Var_Framework

# Register AdvApp2Var_Framework in _AdvApp2Var:
_AdvApp2Var.AdvApp2Var_Framework_swigregister(AdvApp2Var_Framework)
class AdvApp2Var_MathBase(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def mdsptpt_(*args):
        r"""

        Parameters
        ----------
        ndimen: integer *
        point1: doublereal *
        point2: doublereal *
        distan: doublereal *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mdsptpt_(*args)

    @staticmethod
    def mmapcmp_(*args):
        r"""

        Parameters
        ----------
        : integer *
        : integer *
        : integer *
        : double *
        : double *

        Return
        -------
        int

        Description
        -----------
        ///.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmapcmp_(*args)

    @staticmethod
    def mmaperx_(*args):
        r"""

        Parameters
        ----------
        ncofmx: integer *
        ndimen: integer *
        ncoeff: integer *
        iordre: integer *
        crvjac: doublereal *
        ncfnew: integer *
        ycvmax: doublereal *
        errmax: doublereal *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmaperx_(*args)

    @staticmethod
    def mmarcin_(*args):
        r"""

        Parameters
        ----------
        ndimax: integer *
        ndim: integer *
        ncoeff: integer *
        crvold: doublereal *
        u0: doublereal *
        u1: doublereal *
        crvnew: doublereal *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmarcin_(*args)

    @staticmethod
    def mmbulld_(*args):
        r"""

        Parameters
        ----------
        nbcoln: integer *
        nblign: integer *
        dtabtr: doublereal *
        numcle: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmbulld_(*args)

    @staticmethod
    def mmcdriv_(*args):
        r"""

        Parameters
        ----------
        ndimen: integer *
        ncoeff: integer *
        courbe: doublereal *
        ideriv: integer *
        ncofdv: integer *
        crvdrv: doublereal *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmcdriv_(*args)

    @staticmethod
    def mmcglc1_(*args):
        r"""

        Parameters
        ----------
        ndimax: integer *
        ndimen: integer *
        ncoeff: integer *
        courbe: doublereal *
        tdebut: doublereal *
        tfinal: doublereal *
        epsiln: doublereal *
        xlongc: doublereal *
        erreur: doublereal *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        ///.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmcglc1_(*args)

    @staticmethod
    def mmcvctx_(*args):
        r"""

        Parameters
        ----------
        ndimen: integer *
        ncofmx: integer *
        nderiv: integer *
        ctrtes: doublereal *
        crvres: doublereal *
        tabaux: doublereal *
        xmatri: doublereal *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmcvctx_(*args)

    @staticmethod
    def mmcvinv_(*args):
        r"""

        Parameters
        ----------
        ndimax: integer *
        ncoef: integer *
        ndim: integer *
        curveo: doublereal *
        curve: doublereal *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmcvinv_(*args)

    @staticmethod
    def mmdrc11_(*args):
        r"""

        Parameters
        ----------
        : integer *
        : integer *
        : integer *
        : doublereal *
        : doublereal *
        : doublereal *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmdrc11_(*args)

    @staticmethod
    def mmdrvck_(*args):
        r"""

        Parameters
        ----------
        ncoeff: integer *
        ndimen: integer *
        courbe: doublereal *
        ideriv: integer *
        tparam: doublereal *
        pntcrb: doublereal *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmdrvck_(*args)

    @staticmethod
    def mmeps1_(*args):
        r"""

        Parameters
        ----------
        epsilo: doublereal *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmeps1_(*args)

    @staticmethod
    def mmfmca8_(*args):
        r"""

        Parameters
        ----------
        ndimen: integer *
        ncoefu: integer *
        ncoefv: integer *
        ndimax: integer *
        ncfumx: integer *
        ncfvmx: integer *
        tabini: doublereal *
        tabres: doublereal *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmfmca8_(*args)

    @staticmethod
    def mmfmca9_(*args):
        r"""

        Parameters
        ----------
        : integer *
        : integer *
        : integer *
        : integer *
        : integer *
        : integer *
        : doublereal *
        : doublereal *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmfmca9_(*args)

    @staticmethod
    def mmfmcar_(*args):
        r"""

        Parameters
        ----------
        ndimen: integer *
        ncofmx: integer *
        ncoefu: integer *
        ncoefv: integer *
        patold: doublereal *
        upara1: doublereal *
        upara2: doublereal *
        vpara1: doublereal *
        vpara2: doublereal *
        patnew: doublereal *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmfmcar_(*args)

    @staticmethod
    def mmfmcb5_(*args):
        r"""

        Parameters
        ----------
        : integer *
        : integer *
        : integer *
        : doublereal *
        : integer *
        : integer *
        : integer *
        : doublereal *
        : integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmfmcb5_(*args)

    @staticmethod
    def mmfmtb1_(*args):
        r"""

        Parameters
        ----------
        maxsz1: integer *
        table1: doublereal *
        isize1: integer *
        jsize1: integer *
        maxsz2: integer *
        table2: doublereal *
        isize2: integer *
        jsize2: integer *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmfmtb1_(*args)

    @staticmethod
    def mmhjcan_(*args):
        r"""

        Parameters
        ----------
        ndimen: integer *
        ncourb: integer *
        ncftab: integer *
        orcont: integer *
        ncflim: integer *
        tcbold: doublereal *
        tdecop: doublereal *
        tcbnew: doublereal *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmhjcan_(*args)

    @staticmethod
    def mminltt_(*args):
        r"""

        Parameters
        ----------
        ncolmx: integer *
        nlgnmx: integer *
        tabtri: doublereal *
        nbrcol: integer *
        nbrlgn: integer *
        ajoute: doublereal *
        epseg: doublereal *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mminltt_(*args)

    @staticmethod
    def mmjacan_(*args):
        r"""

        Parameters
        ----------
        ideriv: integer *
        ndeg: integer *
        poljac: doublereal *
        polcan: doublereal *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmjacan_(*args)

    @staticmethod
    def mmjaccv_(*args):
        r"""

        Parameters
        ----------
        ncoef: integer *
        ndim: integer *
        ider: integer *
        crvlgd: doublereal *
        polaux: doublereal *
        crvcan: doublereal *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmjaccv_(*args)

    @staticmethod
    def mmmpocur_(*args):
        r"""

        Parameters
        ----------
        ncofmx: integer *
        ndim: integer *
        ndeg: integer *
        courbe: doublereal *
        tparam: doublereal *
        tabval: doublereal *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmmpocur_(*args)

    @staticmethod
    def mmmrslwd_(*args):
        r"""

        Parameters
        ----------
        normax: integer *
        nordre: integer *
        ndim: integer *
        amat: doublereal *
        bmat: doublereal *
        epspiv: doublereal *
        aaux: doublereal *
        xmat: doublereal *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmmrslwd_(*args)

    @staticmethod
    def mmpobas_(*args):
        r"""

        Parameters
        ----------
        tparam: doublereal *
        iordre: integer *
        ncoeff: integer *
        nderiv: integer *
        valbas: doublereal *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmpobas_(*args)

    @staticmethod
    def mmpocrb_(*args):
        r"""

        Parameters
        ----------
        ndimax: integer *
        ncoeff: integer *
        courbe: doublereal *
        ndim: integer *
        tparam: doublereal *
        pntcrb: doublereal *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmpocrb_(*args)

    @staticmethod
    def mmposui_(*args):
        r"""

        Parameters
        ----------
        dimmat: integer *
        nistoc: integer *
        aposit: integer *
        posuiv: integer *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmposui_(*args)

    @staticmethod
    def mmresol_(*args):
        r"""

        Parameters
        ----------
        hdimen: integer *
        gdimen: integer *
        hnstoc: integer *
        gnstoc: integer *
        mnstoc: integer *
        matsyh: doublereal *
        matsyg: doublereal *
        vecsyh: doublereal *
        vecsyg: doublereal *
        hposit: integer *
        hposui: integer *
        gposit: integer *
        mmposui: integer *
        mposit: integer *
        vecsol: doublereal *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmresol_(*args)

    @staticmethod
    def mmrtptt_(*args):
        r"""

        Parameters
        ----------
        ndglgd: integer *
        rtlegd: doublereal *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmrtptt_(*args)

    @staticmethod
    def mmsrre2_(*args):
        r"""

        Parameters
        ----------
        tparam: doublereal *
        nbrval: integer *
        tablev: doublereal *
        epsil: doublereal *
        numint: integer *
        itypen: integer *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmsrre2_(*args)

    @staticmethod
    def mmtrpjj_(*args):
        r"""

        Parameters
        ----------
        ncofmx: integer *
        ndimen: integer *
        ncoeff: integer *
        epsi3d: doublereal *
        iordre: integer *
        crvlgd: doublereal *
        ycvmax: doublereal *
        errmax: doublereal *
        ncfnew: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmtrpjj_(*args)

    @staticmethod
    def mmunivt_(*args):
        r"""

        Parameters
        ----------
        ndimen: integer *
        vector: doublereal *
        vecnrm: doublereal *
        epsiln: doublereal *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmunivt_(*args)

    @staticmethod
    def mmveps3_(*args):
        r"""

        Parameters
        ----------
        eps03: doublereal *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmveps3_(*args)

    @staticmethod
    def mmvncol_(*args):
        r"""

        Parameters
        ----------
        ndimen: integer *
        vecin: doublereal *
        vecout: doublereal *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmvncol_(*args)

    @staticmethod
    def mmwprcs_(*args):
        r"""

        Parameters
        ----------
        : doublereal *
        : doublereal *
        : doublereal *
        : doublereal *
        : integer *
        : integer *

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mmwprcs_(*args)

    @staticmethod
    def msc_(*args):
        r"""

        Parameters
        ----------
        ndimen: integer *
        vecte1: doublereal *
        vecte2: doublereal *

        Return
        -------
        doublereal

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_msc_(*args)

    @staticmethod
    def mvsheld_(*args):
        r"""

        Parameters
        ----------
        n: integer *
        is: integer *
        dtab: doublereal *
        icle: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mvsheld_(*args)

    @staticmethod
    def mzsnorm_(*args):
        r"""

        Parameters
        ----------
        ndimen: integer *
        vecteu: doublereal *

        Return
        -------
        doublereal

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_mzsnorm_(*args)

    @staticmethod
    def pow__di(*args):
        r"""

        Parameters
        ----------
        x: doublereal *
        n: integer *

        Return
        -------
        doublereal

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_MathBase_pow__di(*args)

    __repr__ = _dumps_object

    @methodnotwrapped
    def mmgaus1_(self):
    	pass


    def __init__(self):
        _AdvApp2Var.AdvApp2Var_MathBase_swiginit(self, _AdvApp2Var.new_AdvApp2Var_MathBase())
    __swig_destroy__ = _AdvApp2Var.delete_AdvApp2Var_MathBase

# Register AdvApp2Var_MathBase in _AdvApp2Var:
_AdvApp2Var.AdvApp2Var_MathBase_swigregister(AdvApp2Var_MathBase)
class AdvApp2Var_Network(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Net: AdvApp2Var_SequenceOfPatch
        TheU: TColStd_SequenceOfReal
        TheV: TColStd_SequenceOfReal

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _AdvApp2Var.AdvApp2Var_Network_swiginit(self, _AdvApp2Var.new_AdvApp2Var_Network(*args))

    def ChangePatch(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        AdvApp2Var_Patch

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Network_ChangePatch(self, *args)

    def FirstNotApprox(self, *args):
        r"""

        Parameters
        ----------

        Return
        -------
        Index: int

        Description
        -----------
        Search the index of the first patch not approximated, if all patches are approximated standard_false is returned.

        """
        return _AdvApp2Var.AdvApp2Var_Network_FirstNotApprox(self, *args)

    def NbPatch(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Network_NbPatch(self, *args)

    def NbPatchInU(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Network_NbPatchInU(self, *args)

    def NbPatchInV(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Network_NbPatchInV(self, *args)

    def Patch(self, *args):
        r"""

        Parameters
        ----------
        UIndex: int
        VIndex: int

        Return
        -------
        AdvApp2Var_Patch

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Network_Patch(self, *args)

    def SameDegree(self, *args):
        r"""

        Parameters
        ----------
        iu: int
        iv: int

        Return
        -------
        ncfu: int
        ncfv: int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Network_SameDegree(self, *args)

    def UParameter(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        float

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Network_UParameter(self, *args)

    def UpdateInU(self, *args):
        r"""

        Parameters
        ----------
        CuttingValue: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Network_UpdateInU(self, *args)

    def UpdateInV(self, *args):
        r"""

        Parameters
        ----------
        CuttingValue: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Network_UpdateInV(self, *args)

    def VParameter(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        float

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Network_VParameter(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _AdvApp2Var.delete_AdvApp2Var_Network

# Register AdvApp2Var_Network in _AdvApp2Var:
_AdvApp2Var.AdvApp2Var_Network_swigregister(AdvApp2Var_Network)
class AdvApp2Var_Node(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        iu: int
        iv: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        UV: gp_XY
        iu: int
        iv: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _AdvApp2Var.AdvApp2Var_Node_swiginit(self, _AdvApp2Var.new_AdvApp2Var_Node(*args))

    def Coord(self, *args):
        r"""
        Return
        -------
        gp_XY

        Description
        -----------
        Returns the coordinates (u,v) of the node.

        """
        return _AdvApp2Var.AdvApp2Var_Node_Coord(self, *args)

    def Error(self, *args):
        r"""

        Parameters
        ----------
        iu: int
        iv: int

        Return
        -------
        float

        Description
        -----------
        Returns the error between f(u,v) and its approximation.

        """
        return _AdvApp2Var.AdvApp2Var_Node_Error(self, *args)

    def Point(self, *args):
        r"""

        Parameters
        ----------
        iu: int
        iv: int

        Return
        -------
        gp_Pnt

        Description
        -----------
        Returns the value f(u,v) or its derivates on the node (u,v).

        """
        return _AdvApp2Var.AdvApp2Var_Node_Point(self, *args)

    def SetCoord(self, *args):
        r"""

        Parameters
        ----------
        x1: float
        x2: float

        Return
        -------
        None

        Description
        -----------
        Changes the coordinates (u,v) to (x1,x2).

        """
        return _AdvApp2Var.AdvApp2Var_Node_SetCoord(self, *args)

    def SetError(self, *args):
        r"""

        Parameters
        ----------
        iu: int
        iv: int
        error: float

        Return
        -------
        None

        Description
        -----------
        Affects the error between f(u,v) and its approximation.

        """
        return _AdvApp2Var.AdvApp2Var_Node_SetError(self, *args)

    def SetPoint(self, *args):
        r"""

        Parameters
        ----------
        iu: int
        iv: int
        Pt: gp_Pnt

        Return
        -------
        None

        Description
        -----------
        Affects the value f(u,v) or its derivates on the node (u,v).

        """
        return _AdvApp2Var.AdvApp2Var_Node_SetPoint(self, *args)

    def UOrder(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the continuity order in u of the node.

        """
        return _AdvApp2Var.AdvApp2Var_Node_UOrder(self, *args)

    def VOrder(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the continuity order in v of the node.

        """
        return _AdvApp2Var.AdvApp2Var_Node_VOrder(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_AdvApp2Var_Node_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _AdvApp2Var.delete_AdvApp2Var_Node

# Register AdvApp2Var_Node in _AdvApp2Var:
_AdvApp2Var.AdvApp2Var_Node_swigregister(AdvApp2Var_Node)
class AdvApp2Var_Patch(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        U0: float
        U1: float
        V0: float
        V1: float
        iu: int
        iv: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _AdvApp2Var.AdvApp2Var_Patch_swiginit(self, _AdvApp2Var.new_AdvApp2Var_Patch(*args))

    def AddConstraints(self, *args):
        r"""

        Parameters
        ----------
        Conditions: AdvApp2Var_Context
        Constraints: AdvApp2Var_Framework

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_AddConstraints(self, *args)

    def AddErrors(self, *args):
        r"""

        Parameters
        ----------
        Constraints: AdvApp2Var_Framework

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_AddErrors(self, *args)

    def AverageErrors(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TColStd_HArray1OfReal>

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_AverageErrors(self, *args)

    def ChangeDomain(self, *args):
        r"""

        Parameters
        ----------
        a: float
        b: float
        c: float
        d: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_ChangeDomain(self, *args)

    def ChangeNbCoeff(self, *args):
        r"""

        Parameters
        ----------
        NbCoeffU: int
        NbCoeffV: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_ChangeNbCoeff(self, *args)

    def Coefficients(self, *args):
        r"""

        Parameters
        ----------
        SSPIndex: int
        Conditions: AdvApp2Var_Context

        Return
        -------
        opencascade::handle<TColStd_HArray1OfReal>

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_Coefficients(self, *args)

    def CritValue(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_CritValue(self, *args)

    def CutSense(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        Crit: AdvApp2Var_Criterion
        NumDec: int

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_CutSense(self, *args)

    def Discretise(self, *args):
        r"""

        Parameters
        ----------
        Conditions: AdvApp2Var_Context
        Constraints: AdvApp2Var_Framework
        func: AdvApp2Var_EvaluatorFunc2Var

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_Discretise(self, *args)

    def HasResult(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_HasResult(self, *args)

    def IsApproximated(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_IsApproximated(self, *args)

    def IsDiscretised(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_IsDiscretised(self, *args)

    def IsoErrors(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TColStd_HArray2OfReal>

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_IsoErrors(self, *args)

    def MakeApprox(self, *args):
        r"""

        Parameters
        ----------
        Conditions: AdvApp2Var_Context
        Constraints: AdvApp2Var_Framework
        NumDec: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_MakeApprox(self, *args)

    def MaxErrors(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TColStd_HArray1OfReal>

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_MaxErrors(self, *args)

    def NbCoeffInU(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_NbCoeffInU(self, *args)

    def NbCoeffInV(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_NbCoeffInV(self, *args)

    def OverwriteApprox(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_OverwriteApprox(self, *args)

    def Poles(self, *args):
        r"""

        Parameters
        ----------
        SSPIndex: int
        Conditions: AdvApp2Var_Context

        Return
        -------
        opencascade::handle<TColgp_HArray2OfPnt>

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_Poles(self, *args)

    def ResetApprox(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_ResetApprox(self, *args)

    def SetCritValue(self, *args):
        r"""

        Parameters
        ----------
        dist: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_SetCritValue(self, *args)

    def U0(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_U0(self, *args)

    def U1(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_U1(self, *args)

    def UOrder(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_UOrder(self, *args)

    def V0(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_V0(self, *args)

    def V1(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_V1(self, *args)

    def VOrder(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_Patch_VOrder(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_AdvApp2Var_Patch_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _AdvApp2Var.delete_AdvApp2Var_Patch

# Register AdvApp2Var_Patch in _AdvApp2Var:
_AdvApp2Var.AdvApp2Var_Patch_swigregister(AdvApp2Var_Patch)
class AdvApp2Var_SysBase(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _AdvApp2Var.AdvApp2Var_SysBase_swiginit(self, _AdvApp2Var.new_AdvApp2Var_SysBase(*args))

    @staticmethod
    def do__fio(*args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_SysBase_do__fio(*args)

    @staticmethod
    def do__lio(*args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_SysBase_do__lio(*args)

    @staticmethod
    def macinit_(*args):
        r"""

        Parameters
        ----------
        : int *
        : int *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_SysBase_macinit_(*args)

    def macrai4_(self, *args):
        r"""

        Parameters
        ----------
        nbelem: integer *
        maxelm: integer *
        itablo: integer *
        iofset: intptr_t *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_SysBase_macrai4_(self, *args)

    def macrar8_(self, *args):
        r"""

        Parameters
        ----------
        nbelem: integer *
        maxelm: integer *
        xtablo: doublereal *
        iofset: intptr_t *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_SysBase_macrar8_(self, *args)

    def macrdi4_(self, *args):
        r"""

        Parameters
        ----------
        nbelem: integer *
        maxelm: integer *
        itablo: integer *
        iofset: intptr_t *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_SysBase_macrdi4_(self, *args)

    def macrdr8_(self, *args):
        r"""

        Parameters
        ----------
        nbelem: integer *
        maxelm: integer *
        xtablo: doublereal *
        iofset: intptr_t *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_SysBase_macrdr8_(self, *args)

    @staticmethod
    def maermsg_(*args):
        r"""

        Parameters
        ----------
        cnompg: char *
        icoder: integer *
        cnompg_len: ftnlen

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_SysBase_maermsg_(*args)

    def mainial_(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_SysBase_mainial_(self, *args)

    @staticmethod
    def maitbr8_(*args):
        r"""

        Parameters
        ----------
        itaill: integer *
        xtab: doublereal *
        xval: doublereal *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_SysBase_maitbr8_(*args)

    @staticmethod
    def maovsr8_(*args):
        r"""

        Parameters
        ----------
        ivalcs: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_SysBase_maovsr8_(*args)

    def mcrdelt_(self, *args):
        r"""

        Parameters
        ----------
        iunit: integer *
        isize: integer *
        t: void *
        iofset: intptr_t *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_SysBase_mcrdelt_(self, *args)

    @staticmethod
    def mcrfill_(*args):
        r"""

        Parameters
        ----------
        size: integer *
        tin: void *
        tout: void *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_SysBase_mcrfill_(*args)

    def mcrrqst_(self, *args):
        r"""

        Parameters
        ----------
        iunit: integer *
        isize: integer *
        t: void *
        iofset: intptr_t *
        iercod: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_SysBase_mcrrqst_(self, *args)

    @staticmethod
    def mgenmsg_(*args):
        r"""

        Parameters
        ----------
        nomprg: char *
        nomprg_len: ftnlen

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_SysBase_mgenmsg_(*args)

    @staticmethod
    def mgsomsg_(*args):
        r"""

        Parameters
        ----------
        nomprg: char *
        nomprg_len: ftnlen

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_SysBase_mgsomsg_(*args)

    @staticmethod
    def miraz_(*args):
        r"""

        Parameters
        ----------
        taille: integer *
        adt: void *

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_SysBase_miraz_(*args)

    @staticmethod
    def mnfndeb_(*args):
        r"""
        Return
        -------
        integer

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_SysBase_mnfndeb_(*args)

    @staticmethod
    def msifill_(*args):
        r"""

        Parameters
        ----------
        nbintg: integer *
        ivecin: integer *
        ivecou: integer *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_SysBase_msifill_(*args)

    @staticmethod
    def msrfill_(*args):
        r"""

        Parameters
        ----------
        nbreel: integer *
        vecent: doublereal *
        vecsor: doublereal *

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_SysBase_msrfill_(*args)

    @staticmethod
    def mswrdbg_(*args):
        r"""

        Parameters
        ----------
        ctexte: char *
        ctexte_len: ftnlen

        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_SysBase_mswrdbg_(*args)

    @staticmethod
    def mvriraz_(*args):
        r"""

        Parameters
        ----------
        taille: integer *
        adt: void *

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _AdvApp2Var.AdvApp2Var_SysBase_mvriraz_(*args)

    __repr__ = _dumps_object

    __swig_destroy__ = _AdvApp2Var.delete_AdvApp2Var_SysBase

# Register AdvApp2Var_SysBase in _AdvApp2Var:
_AdvApp2Var.AdvApp2Var_SysBase_swigregister(AdvApp2Var_SysBase)

@classnotwrapped
class AdvApp2Var_EvaluatorFunc2Var:
	pass

@classnotwrapped
class AdvApp2Var_Iso:
	pass





@deprecated
def AdvApp2Var_Data_Getmaovpar(*args):
	return AdvApp2Var_Data.Getmaovpar(*args)

@deprecated
def AdvApp2Var_Data_Getmaovpch(*args):
	return AdvApp2Var_Data.Getmaovpch(*args)

@deprecated
def AdvApp2Var_Data_Getmdnombr(*args):
	return AdvApp2Var_Data.Getmdnombr(*args)

@deprecated
def AdvApp2Var_Data_Getminombr(*args):
	return AdvApp2Var_Data.Getminombr(*args)

@deprecated
def AdvApp2Var_Data_Getmlgdrtl(*args):
	return AdvApp2Var_Data.Getmlgdrtl(*args)

@deprecated
def AdvApp2Var_Data_Getmmapgs0(*args):
	return AdvApp2Var_Data.Getmmapgs0(*args)

@deprecated
def AdvApp2Var_Data_Getmmapgs1(*args):
	return AdvApp2Var_Data.Getmmapgs1(*args)

@deprecated
def AdvApp2Var_Data_Getmmapgs2(*args):
	return AdvApp2Var_Data.Getmmapgs2(*args)

@deprecated
def AdvApp2Var_Data_Getmmapgss(*args):
	return AdvApp2Var_Data.Getmmapgss(*args)

@deprecated
def AdvApp2Var_Data_Getmmcmcnp(*args):
	return AdvApp2Var_Data.Getmmcmcnp(*args)

@deprecated
def AdvApp2Var_Data_Getmmjcobi(*args):
	return AdvApp2Var_Data.Getmmjcobi(*args)



