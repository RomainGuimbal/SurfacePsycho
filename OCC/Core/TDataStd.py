# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

"""
TDataStd module, see official documentation at
https://www.opencascade.com/doc/occt-7.7.0/refman/html/package_tdatastd.html
"""

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _TDataStd
else:
    import _TDataStd

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _TDataStd.delete_SwigPyIterator

    def value(self):
        return _TDataStd.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _TDataStd.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _TDataStd.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _TDataStd.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _TDataStd.SwigPyIterator_equal(self, x)

    def copy(self):
        return _TDataStd.SwigPyIterator_copy(self)

    def next(self):
        return _TDataStd.SwigPyIterator_next(self)

    def __next__(self):
        return _TDataStd.SwigPyIterator___next__(self)

    def previous(self):
        return _TDataStd.SwigPyIterator_previous(self)

    def advance(self, n):
        return _TDataStd.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _TDataStd.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _TDataStd.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _TDataStd.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _TDataStd.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _TDataStd.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _TDataStd.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _TDataStd:
_TDataStd.SwigPyIterator_swigregister(SwigPyIterator)

def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error, method_name, class_name):
    return _TDataStd.process_exception(error, method_name, class_name)

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.TDF

from enum import IntEnum
from OCC.Core.Exception import *

TDataStd_SCALAR = _TDataStd.TDataStd_SCALAR
TDataStd_LENGTH = _TDataStd.TDataStd_LENGTH
TDataStd_ANGULAR = _TDataStd.TDataStd_ANGULAR


class TDataStd_RealEnum(IntEnum):
	TDataStd_SCALAR = 0
	TDataStd_LENGTH = 1
	TDataStd_ANGULAR = 2
TDataStd_SCALAR = TDataStd_RealEnum.TDataStd_SCALAR
TDataStd_LENGTH = TDataStd_RealEnum.TDataStd_LENGTH
TDataStd_ANGULAR = TDataStd_RealEnum.TDataStd_ANGULAR


def Handle_TDataStd_AsciiString_Create():
    return _TDataStd.Handle_TDataStd_AsciiString_Create()

def Handle_TDataStd_AsciiString_DownCast(t):
    return _TDataStd.Handle_TDataStd_AsciiString_DownCast(t)

def Handle_TDataStd_AsciiString_IsNull(t):
    return _TDataStd.Handle_TDataStd_AsciiString_IsNull(t)

def Handle_TDataStd_BooleanArray_Create():
    return _TDataStd.Handle_TDataStd_BooleanArray_Create()

def Handle_TDataStd_BooleanArray_DownCast(t):
    return _TDataStd.Handle_TDataStd_BooleanArray_DownCast(t)

def Handle_TDataStd_BooleanArray_IsNull(t):
    return _TDataStd.Handle_TDataStd_BooleanArray_IsNull(t)

def Handle_TDataStd_BooleanList_Create():
    return _TDataStd.Handle_TDataStd_BooleanList_Create()

def Handle_TDataStd_BooleanList_DownCast(t):
    return _TDataStd.Handle_TDataStd_BooleanList_DownCast(t)

def Handle_TDataStd_BooleanList_IsNull(t):
    return _TDataStd.Handle_TDataStd_BooleanList_IsNull(t)

def Handle_TDataStd_ByteArray_Create():
    return _TDataStd.Handle_TDataStd_ByteArray_Create()

def Handle_TDataStd_ByteArray_DownCast(t):
    return _TDataStd.Handle_TDataStd_ByteArray_DownCast(t)

def Handle_TDataStd_ByteArray_IsNull(t):
    return _TDataStd.Handle_TDataStd_ByteArray_IsNull(t)

def Handle_TDataStd_Current_Create():
    return _TDataStd.Handle_TDataStd_Current_Create()

def Handle_TDataStd_Current_DownCast(t):
    return _TDataStd.Handle_TDataStd_Current_DownCast(t)

def Handle_TDataStd_Current_IsNull(t):
    return _TDataStd.Handle_TDataStd_Current_IsNull(t)

def Handle_TDataStd_DeltaOnModificationOfByteArray_Create():
    return _TDataStd.Handle_TDataStd_DeltaOnModificationOfByteArray_Create()

def Handle_TDataStd_DeltaOnModificationOfByteArray_DownCast(t):
    return _TDataStd.Handle_TDataStd_DeltaOnModificationOfByteArray_DownCast(t)

def Handle_TDataStd_DeltaOnModificationOfByteArray_IsNull(t):
    return _TDataStd.Handle_TDataStd_DeltaOnModificationOfByteArray_IsNull(t)

def Handle_TDataStd_DeltaOnModificationOfExtStringArray_Create():
    return _TDataStd.Handle_TDataStd_DeltaOnModificationOfExtStringArray_Create()

def Handle_TDataStd_DeltaOnModificationOfExtStringArray_DownCast(t):
    return _TDataStd.Handle_TDataStd_DeltaOnModificationOfExtStringArray_DownCast(t)

def Handle_TDataStd_DeltaOnModificationOfExtStringArray_IsNull(t):
    return _TDataStd.Handle_TDataStd_DeltaOnModificationOfExtStringArray_IsNull(t)

def Handle_TDataStd_DeltaOnModificationOfIntArray_Create():
    return _TDataStd.Handle_TDataStd_DeltaOnModificationOfIntArray_Create()

def Handle_TDataStd_DeltaOnModificationOfIntArray_DownCast(t):
    return _TDataStd.Handle_TDataStd_DeltaOnModificationOfIntArray_DownCast(t)

def Handle_TDataStd_DeltaOnModificationOfIntArray_IsNull(t):
    return _TDataStd.Handle_TDataStd_DeltaOnModificationOfIntArray_IsNull(t)

def Handle_TDataStd_DeltaOnModificationOfIntPackedMap_Create():
    return _TDataStd.Handle_TDataStd_DeltaOnModificationOfIntPackedMap_Create()

def Handle_TDataStd_DeltaOnModificationOfIntPackedMap_DownCast(t):
    return _TDataStd.Handle_TDataStd_DeltaOnModificationOfIntPackedMap_DownCast(t)

def Handle_TDataStd_DeltaOnModificationOfIntPackedMap_IsNull(t):
    return _TDataStd.Handle_TDataStd_DeltaOnModificationOfIntPackedMap_IsNull(t)

def Handle_TDataStd_DeltaOnModificationOfRealArray_Create():
    return _TDataStd.Handle_TDataStd_DeltaOnModificationOfRealArray_Create()

def Handle_TDataStd_DeltaOnModificationOfRealArray_DownCast(t):
    return _TDataStd.Handle_TDataStd_DeltaOnModificationOfRealArray_DownCast(t)

def Handle_TDataStd_DeltaOnModificationOfRealArray_IsNull(t):
    return _TDataStd.Handle_TDataStd_DeltaOnModificationOfRealArray_IsNull(t)

def Handle_TDataStd_Expression_Create():
    return _TDataStd.Handle_TDataStd_Expression_Create()

def Handle_TDataStd_Expression_DownCast(t):
    return _TDataStd.Handle_TDataStd_Expression_DownCast(t)

def Handle_TDataStd_Expression_IsNull(t):
    return _TDataStd.Handle_TDataStd_Expression_IsNull(t)

def Handle_TDataStd_ExtStringArray_Create():
    return _TDataStd.Handle_TDataStd_ExtStringArray_Create()

def Handle_TDataStd_ExtStringArray_DownCast(t):
    return _TDataStd.Handle_TDataStd_ExtStringArray_DownCast(t)

def Handle_TDataStd_ExtStringArray_IsNull(t):
    return _TDataStd.Handle_TDataStd_ExtStringArray_IsNull(t)

def Handle_TDataStd_ExtStringList_Create():
    return _TDataStd.Handle_TDataStd_ExtStringList_Create()

def Handle_TDataStd_ExtStringList_DownCast(t):
    return _TDataStd.Handle_TDataStd_ExtStringList_DownCast(t)

def Handle_TDataStd_ExtStringList_IsNull(t):
    return _TDataStd.Handle_TDataStd_ExtStringList_IsNull(t)

def Handle_TDataStd_HDataMapOfStringByte_Create():
    return _TDataStd.Handle_TDataStd_HDataMapOfStringByte_Create()

def Handle_TDataStd_HDataMapOfStringByte_DownCast(t):
    return _TDataStd.Handle_TDataStd_HDataMapOfStringByte_DownCast(t)

def Handle_TDataStd_HDataMapOfStringByte_IsNull(t):
    return _TDataStd.Handle_TDataStd_HDataMapOfStringByte_IsNull(t)

def Handle_TDataStd_HDataMapOfStringHArray1OfInteger_Create():
    return _TDataStd.Handle_TDataStd_HDataMapOfStringHArray1OfInteger_Create()

def Handle_TDataStd_HDataMapOfStringHArray1OfInteger_DownCast(t):
    return _TDataStd.Handle_TDataStd_HDataMapOfStringHArray1OfInteger_DownCast(t)

def Handle_TDataStd_HDataMapOfStringHArray1OfInteger_IsNull(t):
    return _TDataStd.Handle_TDataStd_HDataMapOfStringHArray1OfInteger_IsNull(t)

def Handle_TDataStd_HDataMapOfStringHArray1OfReal_Create():
    return _TDataStd.Handle_TDataStd_HDataMapOfStringHArray1OfReal_Create()

def Handle_TDataStd_HDataMapOfStringHArray1OfReal_DownCast(t):
    return _TDataStd.Handle_TDataStd_HDataMapOfStringHArray1OfReal_DownCast(t)

def Handle_TDataStd_HDataMapOfStringHArray1OfReal_IsNull(t):
    return _TDataStd.Handle_TDataStd_HDataMapOfStringHArray1OfReal_IsNull(t)

def Handle_TDataStd_HDataMapOfStringInteger_Create():
    return _TDataStd.Handle_TDataStd_HDataMapOfStringInteger_Create()

def Handle_TDataStd_HDataMapOfStringInteger_DownCast(t):
    return _TDataStd.Handle_TDataStd_HDataMapOfStringInteger_DownCast(t)

def Handle_TDataStd_HDataMapOfStringInteger_IsNull(t):
    return _TDataStd.Handle_TDataStd_HDataMapOfStringInteger_IsNull(t)

def Handle_TDataStd_HDataMapOfStringReal_Create():
    return _TDataStd.Handle_TDataStd_HDataMapOfStringReal_Create()

def Handle_TDataStd_HDataMapOfStringReal_DownCast(t):
    return _TDataStd.Handle_TDataStd_HDataMapOfStringReal_DownCast(t)

def Handle_TDataStd_HDataMapOfStringReal_IsNull(t):
    return _TDataStd.Handle_TDataStd_HDataMapOfStringReal_IsNull(t)

def Handle_TDataStd_HDataMapOfStringString_Create():
    return _TDataStd.Handle_TDataStd_HDataMapOfStringString_Create()

def Handle_TDataStd_HDataMapOfStringString_DownCast(t):
    return _TDataStd.Handle_TDataStd_HDataMapOfStringString_DownCast(t)

def Handle_TDataStd_HDataMapOfStringString_IsNull(t):
    return _TDataStd.Handle_TDataStd_HDataMapOfStringString_IsNull(t)

def Handle_TDataStd_IntPackedMap_Create():
    return _TDataStd.Handle_TDataStd_IntPackedMap_Create()

def Handle_TDataStd_IntPackedMap_DownCast(t):
    return _TDataStd.Handle_TDataStd_IntPackedMap_DownCast(t)

def Handle_TDataStd_IntPackedMap_IsNull(t):
    return _TDataStd.Handle_TDataStd_IntPackedMap_IsNull(t)

def Handle_TDataStd_Integer_Create():
    return _TDataStd.Handle_TDataStd_Integer_Create()

def Handle_TDataStd_Integer_DownCast(t):
    return _TDataStd.Handle_TDataStd_Integer_DownCast(t)

def Handle_TDataStd_Integer_IsNull(t):
    return _TDataStd.Handle_TDataStd_Integer_IsNull(t)

def Handle_TDataStd_IntegerArray_Create():
    return _TDataStd.Handle_TDataStd_IntegerArray_Create()

def Handle_TDataStd_IntegerArray_DownCast(t):
    return _TDataStd.Handle_TDataStd_IntegerArray_DownCast(t)

def Handle_TDataStd_IntegerArray_IsNull(t):
    return _TDataStd.Handle_TDataStd_IntegerArray_IsNull(t)

def Handle_TDataStd_IntegerList_Create():
    return _TDataStd.Handle_TDataStd_IntegerList_Create()

def Handle_TDataStd_IntegerList_DownCast(t):
    return _TDataStd.Handle_TDataStd_IntegerList_DownCast(t)

def Handle_TDataStd_IntegerList_IsNull(t):
    return _TDataStd.Handle_TDataStd_IntegerList_IsNull(t)

def Handle_TDataStd_NamedData_Create():
    return _TDataStd.Handle_TDataStd_NamedData_Create()

def Handle_TDataStd_NamedData_DownCast(t):
    return _TDataStd.Handle_TDataStd_NamedData_DownCast(t)

def Handle_TDataStd_NamedData_IsNull(t):
    return _TDataStd.Handle_TDataStd_NamedData_IsNull(t)

def Handle_TDataStd_Real_Create():
    return _TDataStd.Handle_TDataStd_Real_Create()

def Handle_TDataStd_Real_DownCast(t):
    return _TDataStd.Handle_TDataStd_Real_DownCast(t)

def Handle_TDataStd_Real_IsNull(t):
    return _TDataStd.Handle_TDataStd_Real_IsNull(t)

def Handle_TDataStd_RealArray_Create():
    return _TDataStd.Handle_TDataStd_RealArray_Create()

def Handle_TDataStd_RealArray_DownCast(t):
    return _TDataStd.Handle_TDataStd_RealArray_DownCast(t)

def Handle_TDataStd_RealArray_IsNull(t):
    return _TDataStd.Handle_TDataStd_RealArray_IsNull(t)

def Handle_TDataStd_RealList_Create():
    return _TDataStd.Handle_TDataStd_RealList_Create()

def Handle_TDataStd_RealList_DownCast(t):
    return _TDataStd.Handle_TDataStd_RealList_DownCast(t)

def Handle_TDataStd_RealList_IsNull(t):
    return _TDataStd.Handle_TDataStd_RealList_IsNull(t)

def Handle_TDataStd_ReferenceArray_Create():
    return _TDataStd.Handle_TDataStd_ReferenceArray_Create()

def Handle_TDataStd_ReferenceArray_DownCast(t):
    return _TDataStd.Handle_TDataStd_ReferenceArray_DownCast(t)

def Handle_TDataStd_ReferenceArray_IsNull(t):
    return _TDataStd.Handle_TDataStd_ReferenceArray_IsNull(t)

def Handle_TDataStd_ReferenceList_Create():
    return _TDataStd.Handle_TDataStd_ReferenceList_Create()

def Handle_TDataStd_ReferenceList_DownCast(t):
    return _TDataStd.Handle_TDataStd_ReferenceList_DownCast(t)

def Handle_TDataStd_ReferenceList_IsNull(t):
    return _TDataStd.Handle_TDataStd_ReferenceList_IsNull(t)

def Handle_TDataStd_TreeNode_Create():
    return _TDataStd.Handle_TDataStd_TreeNode_Create()

def Handle_TDataStd_TreeNode_DownCast(t):
    return _TDataStd.Handle_TDataStd_TreeNode_DownCast(t)

def Handle_TDataStd_TreeNode_IsNull(t):
    return _TDataStd.Handle_TDataStd_TreeNode_IsNull(t)

def Handle_TDataStd_UAttribute_Create():
    return _TDataStd.Handle_TDataStd_UAttribute_Create()

def Handle_TDataStd_UAttribute_DownCast(t):
    return _TDataStd.Handle_TDataStd_UAttribute_DownCast(t)

def Handle_TDataStd_UAttribute_IsNull(t):
    return _TDataStd.Handle_TDataStd_UAttribute_IsNull(t)

def Handle_TDataStd_Variable_Create():
    return _TDataStd.Handle_TDataStd_Variable_Create()

def Handle_TDataStd_Variable_DownCast(t):
    return _TDataStd.Handle_TDataStd_Variable_DownCast(t)

def Handle_TDataStd_Variable_IsNull(t):
    return _TDataStd.Handle_TDataStd_Variable_IsNull(t)

def Handle_TDataStd_Comment_Create():
    return _TDataStd.Handle_TDataStd_Comment_Create()

def Handle_TDataStd_Comment_DownCast(t):
    return _TDataStd.Handle_TDataStd_Comment_DownCast(t)

def Handle_TDataStd_Comment_IsNull(t):
    return _TDataStd.Handle_TDataStd_Comment_IsNull(t)

def Handle_TDataStd_Directory_Create():
    return _TDataStd.Handle_TDataStd_Directory_Create()

def Handle_TDataStd_Directory_DownCast(t):
    return _TDataStd.Handle_TDataStd_Directory_DownCast(t)

def Handle_TDataStd_Directory_IsNull(t):
    return _TDataStd.Handle_TDataStd_Directory_IsNull(t)

def Handle_TDataStd_Name_Create():
    return _TDataStd.Handle_TDataStd_Name_Create()

def Handle_TDataStd_Name_DownCast(t):
    return _TDataStd.Handle_TDataStd_Name_DownCast(t)

def Handle_TDataStd_Name_IsNull(t):
    return _TDataStd.Handle_TDataStd_Name_IsNull(t)

def Handle_TDataStd_NoteBook_Create():
    return _TDataStd.Handle_TDataStd_NoteBook_Create()

def Handle_TDataStd_NoteBook_DownCast(t):
    return _TDataStd.Handle_TDataStd_NoteBook_DownCast(t)

def Handle_TDataStd_NoteBook_IsNull(t):
    return _TDataStd.Handle_TDataStd_NoteBook_IsNull(t)

def Handle_TDataStd_Relation_Create():
    return _TDataStd.Handle_TDataStd_Relation_Create()

def Handle_TDataStd_Relation_DownCast(t):
    return _TDataStd.Handle_TDataStd_Relation_DownCast(t)

def Handle_TDataStd_Relation_IsNull(t):
    return _TDataStd.Handle_TDataStd_Relation_IsNull(t)

def Handle_TDataStd_Tick_Create():
    return _TDataStd.Handle_TDataStd_Tick_Create()

def Handle_TDataStd_Tick_DownCast(t):
    return _TDataStd.Handle_TDataStd_Tick_DownCast(t)

def Handle_TDataStd_Tick_IsNull(t):
    return _TDataStd.Handle_TDataStd_Tick_IsNull(t)

def Handle_TDataStd_HLabelArray1_Create():
    return _TDataStd.Handle_TDataStd_HLabelArray1_Create()

def Handle_TDataStd_HLabelArray1_DownCast(t):
    return _TDataStd.Handle_TDataStd_HLabelArray1_DownCast(t)

def Handle_TDataStd_HLabelArray1_IsNull(t):
    return _TDataStd.Handle_TDataStd_HLabelArray1_IsNull(t)
class TDataStd_DataMapOfStringByte(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _TDataStd.TDataStd_DataMapOfStringByte_begin(self)

    def end(self):
        return _TDataStd.TDataStd_DataMapOfStringByte_end(self)

    def cbegin(self):
        return _TDataStd.TDataStd_DataMapOfStringByte_cbegin(self)

    def cend(self):
        return _TDataStd.TDataStd_DataMapOfStringByte_cend(self)

    def __init__(self, *args):
        _TDataStd.TDataStd_DataMapOfStringByte_swiginit(self, _TDataStd.new_TDataStd_DataMapOfStringByte(*args))

    def Exchange(self, theOther):
        return _TDataStd.TDataStd_DataMapOfStringByte_Exchange(self, theOther)

    def Assign(self, theOther):
        return _TDataStd.TDataStd_DataMapOfStringByte_Assign(self, theOther)

    def Set(self, theOther):
        return _TDataStd.TDataStd_DataMapOfStringByte_Set(self, theOther)

    def ReSize(self, N):
        return _TDataStd.TDataStd_DataMapOfStringByte_ReSize(self, N)

    def Bind(self, theKey, theItem):
        return _TDataStd.TDataStd_DataMapOfStringByte_Bind(self, theKey, theItem)

    def Bound(self, theKey, theItem):
        return _TDataStd.TDataStd_DataMapOfStringByte_Bound(self, theKey, theItem)

    def IsBound(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringByte_IsBound(self, theKey)

    def UnBind(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringByte_UnBind(self, theKey)

    def Seek(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringByte_Seek(self, theKey)

    def Find(self, *args):
        return _TDataStd.TDataStd_DataMapOfStringByte_Find(self, *args)

    def ChangeSeek(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringByte_ChangeSeek(self, theKey)

    def ChangeFind(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringByte_ChangeFind(self, theKey)

    def __call__(self, *args):
        return _TDataStd.TDataStd_DataMapOfStringByte___call__(self, *args)

    def Clear(self, *args):
        return _TDataStd.TDataStd_DataMapOfStringByte_Clear(self, *args)
    __swig_destroy__ = _TDataStd.delete_TDataStd_DataMapOfStringByte

    def Size(self):
        return _TDataStd.TDataStd_DataMapOfStringByte_Size(self)

# Register TDataStd_DataMapOfStringByte in _TDataStd:
_TDataStd.TDataStd_DataMapOfStringByte_swigregister(TDataStd_DataMapOfStringByte)
class TDataStd_DataMapOfStringHArray1OfInteger(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_begin(self)

    def end(self):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_end(self)

    def cbegin(self):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_cbegin(self)

    def cend(self):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_cend(self)

    def __init__(self, *args):
        _TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_swiginit(self, _TDataStd.new_TDataStd_DataMapOfStringHArray1OfInteger(*args))

    def Exchange(self, theOther):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_Exchange(self, theOther)

    def Assign(self, theOther):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_Assign(self, theOther)

    def Set(self, theOther):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_Set(self, theOther)

    def ReSize(self, N):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_ReSize(self, N)

    def Bind(self, theKey, theItem):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_Bind(self, theKey, theItem)

    def Bound(self, theKey, theItem):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_Bound(self, theKey, theItem)

    def IsBound(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_IsBound(self, theKey)

    def UnBind(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_UnBind(self, theKey)

    def Seek(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_Seek(self, theKey)

    def Find(self, *args):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_Find(self, *args)

    def ChangeSeek(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_ChangeSeek(self, theKey)

    def ChangeFind(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_ChangeFind(self, theKey)

    def __call__(self, *args):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfInteger___call__(self, *args)

    def Clear(self, *args):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_Clear(self, *args)
    __swig_destroy__ = _TDataStd.delete_TDataStd_DataMapOfStringHArray1OfInteger

    def Size(self):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_Size(self)

# Register TDataStd_DataMapOfStringHArray1OfInteger in _TDataStd:
_TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_swigregister(TDataStd_DataMapOfStringHArray1OfInteger)
class TDataStd_DataMapOfStringHArray1OfReal(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfReal_begin(self)

    def end(self):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfReal_end(self)

    def cbegin(self):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfReal_cbegin(self)

    def cend(self):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfReal_cend(self)

    def __init__(self, *args):
        _TDataStd.TDataStd_DataMapOfStringHArray1OfReal_swiginit(self, _TDataStd.new_TDataStd_DataMapOfStringHArray1OfReal(*args))

    def Exchange(self, theOther):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfReal_Exchange(self, theOther)

    def Assign(self, theOther):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfReal_Assign(self, theOther)

    def Set(self, theOther):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfReal_Set(self, theOther)

    def ReSize(self, N):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfReal_ReSize(self, N)

    def Bind(self, theKey, theItem):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfReal_Bind(self, theKey, theItem)

    def Bound(self, theKey, theItem):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfReal_Bound(self, theKey, theItem)

    def IsBound(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfReal_IsBound(self, theKey)

    def UnBind(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfReal_UnBind(self, theKey)

    def Seek(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfReal_Seek(self, theKey)

    def Find(self, *args):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfReal_Find(self, *args)

    def ChangeSeek(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfReal_ChangeSeek(self, theKey)

    def ChangeFind(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfReal_ChangeFind(self, theKey)

    def __call__(self, *args):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfReal___call__(self, *args)

    def Clear(self, *args):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfReal_Clear(self, *args)
    __swig_destroy__ = _TDataStd.delete_TDataStd_DataMapOfStringHArray1OfReal

    def Size(self):
        return _TDataStd.TDataStd_DataMapOfStringHArray1OfReal_Size(self)

# Register TDataStd_DataMapOfStringHArray1OfReal in _TDataStd:
_TDataStd.TDataStd_DataMapOfStringHArray1OfReal_swigregister(TDataStd_DataMapOfStringHArray1OfReal)
class TDataStd_DataMapOfStringReal(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _TDataStd.TDataStd_DataMapOfStringReal_begin(self)

    def end(self):
        return _TDataStd.TDataStd_DataMapOfStringReal_end(self)

    def cbegin(self):
        return _TDataStd.TDataStd_DataMapOfStringReal_cbegin(self)

    def cend(self):
        return _TDataStd.TDataStd_DataMapOfStringReal_cend(self)

    def __init__(self, *args):
        _TDataStd.TDataStd_DataMapOfStringReal_swiginit(self, _TDataStd.new_TDataStd_DataMapOfStringReal(*args))

    def Exchange(self, theOther):
        return _TDataStd.TDataStd_DataMapOfStringReal_Exchange(self, theOther)

    def Assign(self, theOther):
        return _TDataStd.TDataStd_DataMapOfStringReal_Assign(self, theOther)

    def Set(self, theOther):
        return _TDataStd.TDataStd_DataMapOfStringReal_Set(self, theOther)

    def ReSize(self, N):
        return _TDataStd.TDataStd_DataMapOfStringReal_ReSize(self, N)

    def Bind(self, theKey, theItem):
        return _TDataStd.TDataStd_DataMapOfStringReal_Bind(self, theKey, theItem)

    def Bound(self, theKey, theItem):
        return _TDataStd.TDataStd_DataMapOfStringReal_Bound(self, theKey, theItem)

    def IsBound(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringReal_IsBound(self, theKey)

    def UnBind(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringReal_UnBind(self, theKey)

    def Seek(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringReal_Seek(self, theKey)

    def Find(self, *args):
        return _TDataStd.TDataStd_DataMapOfStringReal_Find(self, *args)

    def ChangeSeek(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringReal_ChangeSeek(self, theKey)

    def ChangeFind(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringReal_ChangeFind(self, theKey)

    def __call__(self, *args):
        return _TDataStd.TDataStd_DataMapOfStringReal___call__(self, *args)

    def Clear(self, *args):
        return _TDataStd.TDataStd_DataMapOfStringReal_Clear(self, *args)
    __swig_destroy__ = _TDataStd.delete_TDataStd_DataMapOfStringReal

    def Size(self):
        return _TDataStd.TDataStd_DataMapOfStringReal_Size(self)

# Register TDataStd_DataMapOfStringReal in _TDataStd:
_TDataStd.TDataStd_DataMapOfStringReal_swigregister(TDataStd_DataMapOfStringReal)
class TDataStd_DataMapOfStringString(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _TDataStd.TDataStd_DataMapOfStringString_begin(self)

    def end(self):
        return _TDataStd.TDataStd_DataMapOfStringString_end(self)

    def cbegin(self):
        return _TDataStd.TDataStd_DataMapOfStringString_cbegin(self)

    def cend(self):
        return _TDataStd.TDataStd_DataMapOfStringString_cend(self)

    def __init__(self, *args):
        _TDataStd.TDataStd_DataMapOfStringString_swiginit(self, _TDataStd.new_TDataStd_DataMapOfStringString(*args))

    def Exchange(self, theOther):
        return _TDataStd.TDataStd_DataMapOfStringString_Exchange(self, theOther)

    def Assign(self, theOther):
        return _TDataStd.TDataStd_DataMapOfStringString_Assign(self, theOther)

    def Set(self, theOther):
        return _TDataStd.TDataStd_DataMapOfStringString_Set(self, theOther)

    def ReSize(self, N):
        return _TDataStd.TDataStd_DataMapOfStringString_ReSize(self, N)

    def Bind(self, theKey, theItem):
        return _TDataStd.TDataStd_DataMapOfStringString_Bind(self, theKey, theItem)

    def Bound(self, theKey, theItem):
        return _TDataStd.TDataStd_DataMapOfStringString_Bound(self, theKey, theItem)

    def IsBound(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringString_IsBound(self, theKey)

    def UnBind(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringString_UnBind(self, theKey)

    def Seek(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringString_Seek(self, theKey)

    def Find(self, *args):
        return _TDataStd.TDataStd_DataMapOfStringString_Find(self, *args)

    def ChangeSeek(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringString_ChangeSeek(self, theKey)

    def ChangeFind(self, theKey):
        return _TDataStd.TDataStd_DataMapOfStringString_ChangeFind(self, theKey)

    def __call__(self, *args):
        return _TDataStd.TDataStd_DataMapOfStringString___call__(self, *args)

    def Clear(self, *args):
        return _TDataStd.TDataStd_DataMapOfStringString_Clear(self, *args)
    __swig_destroy__ = _TDataStd.delete_TDataStd_DataMapOfStringString

    def Size(self):
        return _TDataStd.TDataStd_DataMapOfStringString_Size(self)

# Register TDataStd_DataMapOfStringString in _TDataStd:
_TDataStd.TDataStd_DataMapOfStringString_swigregister(TDataStd_DataMapOfStringString)
class TDataStd_LabelArray1(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _TDataStd.TDataStd_LabelArray1_begin(self)

    def end(self):
        return _TDataStd.TDataStd_LabelArray1_end(self)

    def cbegin(self):
        return _TDataStd.TDataStd_LabelArray1_cbegin(self)

    def cend(self):
        return _TDataStd.TDataStd_LabelArray1_cend(self)

    def __init__(self, *args):
        _TDataStd.TDataStd_LabelArray1_swiginit(self, _TDataStd.new_TDataStd_LabelArray1(*args))

    def Init(self, theValue):
        return _TDataStd.TDataStd_LabelArray1_Init(self, theValue)

    def Size(self):
        return _TDataStd.TDataStd_LabelArray1_Size(self)

    def Length(self):
        return _TDataStd.TDataStd_LabelArray1_Length(self)

    def IsEmpty(self):
        return _TDataStd.TDataStd_LabelArray1_IsEmpty(self)

    def Lower(self):
        return _TDataStd.TDataStd_LabelArray1_Lower(self)

    def Upper(self):
        return _TDataStd.TDataStd_LabelArray1_Upper(self)

    def IsDeletable(self):
        return _TDataStd.TDataStd_LabelArray1_IsDeletable(self)

    def IsAllocated(self):
        return _TDataStd.TDataStd_LabelArray1_IsAllocated(self)

    def Assign(self, theOther):
        return _TDataStd.TDataStd_LabelArray1_Assign(self, theOther)

    def Move(self, theOther):
        return _TDataStd.TDataStd_LabelArray1_Move(self, theOther)

    def Set(self, *args):
        return _TDataStd.TDataStd_LabelArray1_Set(self, *args)

    def First(self):
        return _TDataStd.TDataStd_LabelArray1_First(self)

    def ChangeFirst(self):
        return _TDataStd.TDataStd_LabelArray1_ChangeFirst(self)

    def Last(self):
        return _TDataStd.TDataStd_LabelArray1_Last(self)

    def ChangeLast(self):
        return _TDataStd.TDataStd_LabelArray1_ChangeLast(self)

    def Value(self, theIndex):
        return _TDataStd.TDataStd_LabelArray1_Value(self, theIndex)

    def ChangeValue(self, theIndex):
        return _TDataStd.TDataStd_LabelArray1_ChangeValue(self, theIndex)

    def __call__(self, *args):
        return _TDataStd.TDataStd_LabelArray1___call__(self, *args)

    def SetValue(self, theIndex, theItem):
        return _TDataStd.TDataStd_LabelArray1_SetValue(self, theIndex, theItem)

    def Resize(self, theLower, theUpper, theToCopyData):
        return _TDataStd.TDataStd_LabelArray1_Resize(self, theLower, theUpper, theToCopyData)
    __swig_destroy__ = _TDataStd.delete_TDataStd_LabelArray1

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TDataStd_LabelArray1 in _TDataStd:
_TDataStd.TDataStd_LabelArray1_swigregister(TDataStd_LabelArray1)
class TDataStd_ListIteratorOfListOfByte(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TDataStd.TDataStd_ListIteratorOfListOfByte_swiginit(self, _TDataStd.new_TDataStd_ListIteratorOfListOfByte(*args))

    def More(self):
        return _TDataStd.TDataStd_ListIteratorOfListOfByte_More(self)

    def Next(self):
        return _TDataStd.TDataStd_ListIteratorOfListOfByte_Next(self)

    def Value(self):
        return _TDataStd.TDataStd_ListIteratorOfListOfByte_Value(self)

    def ChangeValue(self):
        return _TDataStd.TDataStd_ListIteratorOfListOfByte_ChangeValue(self)
    __swig_destroy__ = _TDataStd.delete_TDataStd_ListIteratorOfListOfByte

# Register TDataStd_ListIteratorOfListOfByte in _TDataStd:
_TDataStd.TDataStd_ListIteratorOfListOfByte_swigregister(TDataStd_ListIteratorOfListOfByte)
class TDataStd_ListIteratorOfListOfExtendedString(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TDataStd.TDataStd_ListIteratorOfListOfExtendedString_swiginit(self, _TDataStd.new_TDataStd_ListIteratorOfListOfExtendedString(*args))

    def More(self):
        return _TDataStd.TDataStd_ListIteratorOfListOfExtendedString_More(self)

    def Next(self):
        return _TDataStd.TDataStd_ListIteratorOfListOfExtendedString_Next(self)

    def Value(self):
        return _TDataStd.TDataStd_ListIteratorOfListOfExtendedString_Value(self)

    def ChangeValue(self):
        return _TDataStd.TDataStd_ListIteratorOfListOfExtendedString_ChangeValue(self)
    __swig_destroy__ = _TDataStd.delete_TDataStd_ListIteratorOfListOfExtendedString

# Register TDataStd_ListIteratorOfListOfExtendedString in _TDataStd:
_TDataStd.TDataStd_ListIteratorOfListOfExtendedString_swigregister(TDataStd_ListIteratorOfListOfExtendedString)
class TDataStd_ListOfByte(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _TDataStd.TDataStd_ListOfByte_begin(self)

    def end(self):
        return _TDataStd.TDataStd_ListOfByte_end(self)

    def cbegin(self):
        return _TDataStd.TDataStd_ListOfByte_cbegin(self)

    def cend(self):
        return _TDataStd.TDataStd_ListOfByte_cend(self)

    def __init__(self, *args):
        _TDataStd.TDataStd_ListOfByte_swiginit(self, _TDataStd.new_TDataStd_ListOfByte(*args))

    def Size(self):
        return _TDataStd.TDataStd_ListOfByte_Size(self)

    def Assign(self, theOther):
        return _TDataStd.TDataStd_ListOfByte_Assign(self, theOther)

    def Set(self, theOther):
        return _TDataStd.TDataStd_ListOfByte_Set(self, theOther)

    def Clear(self, theAllocator=0):
        return _TDataStd.TDataStd_ListOfByte_Clear(self, theAllocator)

    def First(self):
        return _TDataStd.TDataStd_ListOfByte_First(self)

    def Last(self):
        return _TDataStd.TDataStd_ListOfByte_Last(self)

    def Append(self, *args):
        return _TDataStd.TDataStd_ListOfByte_Append(self, *args)

    def Prepend(self, *args):
        return _TDataStd.TDataStd_ListOfByte_Prepend(self, *args)

    def RemoveFirst(self):
        return _TDataStd.TDataStd_ListOfByte_RemoveFirst(self)

    def Remove(self, theIter):
        return _TDataStd.TDataStd_ListOfByte_Remove(self, theIter)

    def InsertBefore(self, *args):
        return _TDataStd.TDataStd_ListOfByte_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        return _TDataStd.TDataStd_ListOfByte_InsertAfter(self, *args)

    def Reverse(self):
        return _TDataStd.TDataStd_ListOfByte_Reverse(self)
    __swig_destroy__ = _TDataStd.delete_TDataStd_ListOfByte

    def __len__(self):
        return self.Size()


# Register TDataStd_ListOfByte in _TDataStd:
_TDataStd.TDataStd_ListOfByte_swigregister(TDataStd_ListOfByte)
class TDataStd_ListOfExtendedString(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def begin(self):
        return _TDataStd.TDataStd_ListOfExtendedString_begin(self)

    def end(self):
        return _TDataStd.TDataStd_ListOfExtendedString_end(self)

    def cbegin(self):
        return _TDataStd.TDataStd_ListOfExtendedString_cbegin(self)

    def cend(self):
        return _TDataStd.TDataStd_ListOfExtendedString_cend(self)

    def __init__(self, *args):
        _TDataStd.TDataStd_ListOfExtendedString_swiginit(self, _TDataStd.new_TDataStd_ListOfExtendedString(*args))

    def Size(self):
        return _TDataStd.TDataStd_ListOfExtendedString_Size(self)

    def Assign(self, theOther):
        return _TDataStd.TDataStd_ListOfExtendedString_Assign(self, theOther)

    def Set(self, theOther):
        return _TDataStd.TDataStd_ListOfExtendedString_Set(self, theOther)

    def Clear(self, theAllocator=0):
        return _TDataStd.TDataStd_ListOfExtendedString_Clear(self, theAllocator)

    def First(self):
        return _TDataStd.TDataStd_ListOfExtendedString_First(self)

    def Last(self):
        return _TDataStd.TDataStd_ListOfExtendedString_Last(self)

    def Append(self, *args):
        return _TDataStd.TDataStd_ListOfExtendedString_Append(self, *args)

    def Prepend(self, *args):
        return _TDataStd.TDataStd_ListOfExtendedString_Prepend(self, *args)

    def RemoveFirst(self):
        return _TDataStd.TDataStd_ListOfExtendedString_RemoveFirst(self)

    def Remove(self, theIter):
        return _TDataStd.TDataStd_ListOfExtendedString_Remove(self, theIter)

    def InsertBefore(self, *args):
        return _TDataStd.TDataStd_ListOfExtendedString_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        return _TDataStd.TDataStd_ListOfExtendedString_InsertAfter(self, *args)

    def Reverse(self):
        return _TDataStd.TDataStd_ListOfExtendedString_Reverse(self)
    __swig_destroy__ = _TDataStd.delete_TDataStd_ListOfExtendedString

    def __len__(self):
        return self.Size()


# Register TDataStd_ListOfExtendedString in _TDataStd:
_TDataStd.TDataStd_ListOfExtendedString_swigregister(TDataStd_ListOfExtendedString)
class tdatastd(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def IDList(*args):
        r"""

        Parameters
        ----------
        anIDList: TDF_IDList

        Return
        -------
        None

        Description
        -----------
        Appends to <anidlist> the list of the attributes ids of this package. caution: <anidlist> is not cleared before use.

        """
        return _TDataStd.tdatastd_IDList(*args)

    __repr__ = _dumps_object


    def __init__(self):
        _TDataStd.tdatastd_swiginit(self, _TDataStd.new_tdatastd())
    __swig_destroy__ = _TDataStd.delete_tdatastd

# Register tdatastd in _TDataStd:
_TDataStd.tdatastd_swigregister(tdatastd)
class TDataStd_AsciiString(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_AsciiString_swiginit(self, _TDataStd.new_TDataStd_AsciiString(*args))

    def DumpToString(self):
        r"""DumpToString(TDataStd_AsciiString self) -> std::string"""
        return _TDataStd.TDataStd_AsciiString_DumpToString(self)

    def DumpJsonToString(self, depth=-1):
        r"""Json string serializer.Json string serializer."""
        return _TDataStd.TDataStd_AsciiString_DumpJsonToString(self, depth)

    def Get(self, *args):
        r"""
        Return
        -------
        TCollection_AsciiString

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_AsciiString_Get(self, *args)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Class methods ============= returns the guid of the attribute.

        """
        return _TDataStd.TDataStd_AsciiString_GetID(*args)

    def IsEmpty(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_AsciiString_IsEmpty(self, *args)

    def Set(self, *args):
        r"""

        Parameters
        ----------
        label: TDF_Label
        string: str

        Return
        -------
        opencascade::handle<TDataStd_AsciiString>

        Description
        -----------
        Finds, or creates an asciistring attribute and sets the string. the asciistring attribute is returned. asciistring methods ===================.

        Parameters
        ----------
        label: TDF_Label
        guid: Standard_GUID
        string: str

        Return
        -------
        opencascade::handle<TDataStd_AsciiString>

        Description
        -----------
        Finds, or creates, an asciistring attribute with explicit user defined <guid> and sets <string>. the name attribute is returned. .

        Parameters
        ----------
        S: str

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_AsciiString_Set(self, *args)

    def SetID(self, *args):
        r"""

        Parameters
        ----------
        guid: Standard_GUID

        Return
        -------
        None

        Description
        -----------
        Sets the explicit user defined guid to the attribute.
        Return
        -------
        None

        Description
        -----------
        Sets default guid for the attribute.

        """
        return _TDataStd.TDataStd_AsciiString_SetID(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_AsciiString_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_AsciiString

# Register TDataStd_AsciiString in _TDataStd:
_TDataStd.TDataStd_AsciiString_swigregister(TDataStd_AsciiString)
class TDataStd_BooleanArray(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_BooleanArray_swiginit(self, _TDataStd.new_TDataStd_BooleanArray(*args))

    def DumpToString(self):
        r"""DumpToString(TDataStd_BooleanArray self) -> std::string"""
        return _TDataStd.TDataStd_BooleanArray_DumpToString(self)

    def DumpJsonToString(self, depth=-1):
        r"""Json string serializer.Json string serializer."""
        return _TDataStd.TDataStd_BooleanArray_DumpJsonToString(self, depth)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Static methods ============== returns an id for array.

        """
        return _TDataStd.TDataStd_BooleanArray_GetID(*args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        lower: int
        upper: int

        Return
        -------
        None

        Description
        -----------
        Initialize the inner array with bounds from <lower> to <upper>.

        """
        return _TDataStd.TDataStd_BooleanArray_Init(self, *args)

    def InternalArray(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TColStd_HArray1OfByte>

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_BooleanArray_InternalArray(self, *args)

    def Length(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the number of elements in the array.

        """
        return _TDataStd.TDataStd_BooleanArray_Length(self, *args)

    def Lower(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the lower boundary of the array.

        """
        return _TDataStd.TDataStd_BooleanArray_Lower(self, *args)

    @staticmethod
    def Set(*args):
        r"""

        Parameters
        ----------
        label: TDF_Label
        lower: int
        upper: int

        Return
        -------
        opencascade::handle<TDataStd_BooleanArray>

        Description
        -----------
        Finds or creates an attribute with internal boolean array.

        Parameters
        ----------
        label: TDF_Label
        theGuid: Standard_GUID
        lower: int
        upper: int

        Return
        -------
        opencascade::handle<TDataStd_BooleanArray>

        Description
        -----------
        Finds or creates an attribute with the array using explicit user defined <guid>.

        """
        return _TDataStd.TDataStd_BooleanArray_Set(*args)

    def SetID(self, *args):
        r"""

        Parameters
        ----------
        theGuid: Standard_GUID

        Return
        -------
        None

        Description
        -----------
        Sets the explicit guid (user defined) for the attribute.
        Return
        -------
        None

        Description
        -----------
        Sets default guid for the attribute.

        """
        return _TDataStd.TDataStd_BooleanArray_SetID(self, *args)

    def SetInternalArray(self, *args):
        r"""

        Parameters
        ----------
        values: TColStd_HArray1OfByte

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_BooleanArray_SetInternalArray(self, *args)

    def SetValue(self, *args):
        r"""

        Parameters
        ----------
        index: int
        value: bool

        Return
        -------
        None

        Description
        -----------
        Sets the <index>th element of the array to <value> outofrange exception is raised if <index> doesn't respect lower and upper bounds of the internal array.

        """
        return _TDataStd.TDataStd_BooleanArray_SetValue(self, *args)

    def Upper(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the upper boundary of the array.

        """
        return _TDataStd.TDataStd_BooleanArray_Upper(self, *args)

    def Value(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        bool

        Description
        -----------
        Return the value of the <index>th element of the array.

        """
        return _TDataStd.TDataStd_BooleanArray_Value(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_BooleanArray_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_BooleanArray

# Register TDataStd_BooleanArray in _TDataStd:
_TDataStd.TDataStd_BooleanArray_swigregister(TDataStd_BooleanArray)
class TDataStd_BooleanList(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_BooleanList_swiginit(self, _TDataStd.new_TDataStd_BooleanList(*args))

    def Append(self, *args):
        r"""

        Parameters
        ----------
        value: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_BooleanList_Append(self, *args)

    def Clear(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_BooleanList_Clear(self, *args)

    def DumpToString(self):
        r"""DumpToString(TDataStd_BooleanList self) -> std::string"""
        return _TDataStd.TDataStd_BooleanList_DumpToString(self)

    def DumpJsonToString(self, depth=-1):
        r"""Json string serializer.Json string serializer."""
        return _TDataStd.TDataStd_BooleanList_DumpJsonToString(self, depth)

    def Extent(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_BooleanList_Extent(self, *args)

    def First(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_BooleanList_First(self, *args)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Static methods ============== returns the id of the list of booleans attribute.

        """
        return _TDataStd.TDataStd_BooleanList_GetID(*args)

    def InsertAfter(self, *args):
        r"""

        Parameters
        ----------
        index: int
        after_value: bool

        Return
        -------
        bool

        Description
        -----------
        Inserts the <value> after the <index> position. the indices start with 1 .. extent().

        """
        return _TDataStd.TDataStd_BooleanList_InsertAfter(self, *args)

    def InsertBefore(self, *args):
        r"""

        Parameters
        ----------
        index: int
        before_value: bool

        Return
        -------
        bool

        Description
        -----------
        Inserts the <value> before the <index> position. the indices start with 1 .. extent().

        """
        return _TDataStd.TDataStd_BooleanList_InsertBefore(self, *args)

    def IsEmpty(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_BooleanList_IsEmpty(self, *args)

    def Last(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_BooleanList_Last(self, *args)

    def List(self, *args):
        r"""
        Return
        -------
        TDataStd_ListOfByte

        Description
        -----------
        1 - means true, 0 - means false.

        """
        return _TDataStd.TDataStd_BooleanList_List(self, *args)

    def Prepend(self, *args):
        r"""

        Parameters
        ----------
        value: bool

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_BooleanList_Prepend(self, *args)

    def Remove(self, *args):
        r"""

        Parameters
        ----------
        index: int

        Return
        -------
        bool

        Description
        -----------
        Removes a value at <index> position.

        """
        return _TDataStd.TDataStd_BooleanList_Remove(self, *args)

    @staticmethod
    def Set(*args):
        r"""

        Parameters
        ----------
        label: TDF_Label

        Return
        -------
        opencascade::handle<TDataStd_BooleanList>

        Description
        -----------
        Finds or creates a list of boolean values attribute.

        Parameters
        ----------
        label: TDF_Label
        theGuid: Standard_GUID

        Return
        -------
        opencascade::handle<TDataStd_BooleanList>

        Description
        -----------
        Finds or creates a list of boolean values attribute with explicit user defined <guid>.

        """
        return _TDataStd.TDataStd_BooleanList_Set(*args)

    def SetID(self, *args):
        r"""

        Parameters
        ----------
        theGuid: Standard_GUID

        Return
        -------
        None

        Description
        -----------
        Sets the explicit guid (user defined) for the attribute.
        Return
        -------
        None

        Description
        -----------
        Sets default guid for the attribute.

        """
        return _TDataStd.TDataStd_BooleanList_SetID(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_BooleanList_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_BooleanList

# Register TDataStd_BooleanList in _TDataStd:
_TDataStd.TDataStd_BooleanList_swigregister(TDataStd_BooleanList)
class TDataStd_ByteArray(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_ByteArray_swiginit(self, _TDataStd.new_TDataStd_ByteArray(*args))

    def ChangeArray(self, *args):
        r"""

        Parameters
        ----------
        newArray: TColStd_HArray1OfByte
        isCheckItems: bool (optional, default to Standard_True)

        Return
        -------
        None

        Description
        -----------
        Sets the inner array <myvalue> of the attribute to <newarray>. if value of <newarray> differs from <myvalue>, backup performed and myvalue refers to new instance of harray1ofinteger that holds <newarray> values. if <ischeckitems> equal true each item of <newarray> will be checked with each item of <myvalue> for coincidence (to avoid backup).

        """
        return _TDataStd.TDataStd_ByteArray_ChangeArray(self, *args)

    def DumpToString(self):
        r"""DumpToString(TDataStd_ByteArray self) -> std::string"""
        return _TDataStd.TDataStd_ByteArray_DumpToString(self)

    def DumpJsonToString(self, depth=-1):
        r"""Json string serializer.Json string serializer."""
        return _TDataStd.TDataStd_ByteArray_DumpJsonToString(self, depth)

    def GetDelta(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_ByteArray_GetDelta(self, *args)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Static methods ============== returns an id for array.

        """
        return _TDataStd.TDataStd_ByteArray_GetID(*args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        lower: int
        upper: int

        Return
        -------
        None

        Description
        -----------
        Initialize the inner array with bounds from <lower> to <upper>.

        """
        return _TDataStd.TDataStd_ByteArray_Init(self, *args)

    def InternalArray(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TColStd_HArray1OfByte>

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_ByteArray_InternalArray(self, *args)

    def Length(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the number of elements in the array.

        """
        return _TDataStd.TDataStd_ByteArray_Length(self, *args)

    def Lower(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the lower boundary of the array.

        """
        return _TDataStd.TDataStd_ByteArray_Lower(self, *args)

    @staticmethod
    def Set(*args):
        r"""

        Parameters
        ----------
        label: TDF_Label
        lower: int
        upper: int
        isDelta: bool (optional, default to Standard_False)

        Return
        -------
        opencascade::handle<TDataStd_ByteArray>

        Description
        -----------
        Finds or creates an attribute with the array on the specified label. if <isdelta> == false, defaultdeltaonmodification is used. if <isdelta> == true, deltaonmodification of the current attribute is used. if attribute is already set, all input parameters are refused and the found attribute is returned.

        Parameters
        ----------
        label: TDF_Label
        theGuid: Standard_GUID
        lower: int
        upper: int
        isDelta: bool (optional, default to Standard_False)

        Return
        -------
        opencascade::handle<TDataStd_ByteArray>

        Description
        -----------
        Finds or creates an attribute with byte array and explicit user defined <guid> on the specified label.

        """
        return _TDataStd.TDataStd_ByteArray_Set(*args)

    def SetDelta(self, *args):
        r"""

        Parameters
        ----------
        isDelta: bool

        Return
        -------
        None

        Description
        -----------
        For internal use only!.

        """
        return _TDataStd.TDataStd_ByteArray_SetDelta(self, *args)

    def SetID(self, *args):
        r"""

        Parameters
        ----------
        theGuid: Standard_GUID

        Return
        -------
        None

        Description
        -----------
        Sets the explicit guid (user defined) for the attribute.
        Return
        -------
        None

        Description
        -----------
        Sets default guid for the attribute.

        """
        return _TDataStd.TDataStd_ByteArray_SetID(self, *args)

    def SetValue(self, *args):
        r"""

        Parameters
        ----------
        index: int
        value: Standard_Byte

        Return
        -------
        None

        Description
        -----------
        Sets the <index>th element of the array to <value> outofrange exception is raised if <index> doesn't respect lower and upper bounds of the internal array.

        """
        return _TDataStd.TDataStd_ByteArray_SetValue(self, *args)

    def Upper(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the upper boundary of the array.

        """
        return _TDataStd.TDataStd_ByteArray_Upper(self, *args)

    def Value(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        Standard_Byte

        Description
        -----------
        Return the value of the <index>th element of the array.

        """
        return _TDataStd.TDataStd_ByteArray_Value(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_ByteArray_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_ByteArray

# Register TDataStd_ByteArray in _TDataStd:
_TDataStd.TDataStd_ByteArray_swigregister(TDataStd_ByteArray)
class TDataStd_ChildNodeIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Creates an empty iterator.

        Parameters
        ----------
        aTreeNode: TDataStd_TreeNode
        allLevels: bool (optional, default to Standard_False)

        Return
        -------
        None

        Description
        -----------
        Iterates on the childstepren of the given step. if <alllevels> option is set to true, it explores not only the first, but all the sub step levels.

        """
        _TDataStd.TDataStd_ChildNodeIterator_swiginit(self, _TDataStd.new_TDataStd_ChildNodeIterator(*args))

    def Initialize(self, *args):
        r"""

        Parameters
        ----------
        aTreeNode: TDataStd_TreeNode
        allLevels: bool (optional, default to Standard_False)

        Return
        -------
        None

        Description
        -----------
        Initializes the iteration on the children step of the given step. if <alllevels> option is set to true, it explores not only the first, but all the sub step levels.

        """
        return _TDataStd.TDataStd_ChildNodeIterator_Initialize(self, *args)

    def More(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if there is a current item in the iteration.

        """
        return _TDataStd.TDataStd_ChildNodeIterator_More(self, *args)

    def Next(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Move to the next item.

        """
        return _TDataStd.TDataStd_ChildNodeIterator_Next(self, *args)

    def NextBrother(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Move to the next brother. if there is none, go up etc. this method is interesting only with 'alllevels' behavior, because it avoids to explore the current step childstepren.

        """
        return _TDataStd.TDataStd_ChildNodeIterator_NextBrother(self, *args)

    def Value(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TDataStd_TreeNode>

        Description
        -----------
        Returns the current item; a null step if there is no one.

        """
        return _TDataStd.TDataStd_ChildNodeIterator_Value(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_ChildNodeIterator

# Register TDataStd_ChildNodeIterator in _TDataStd:
_TDataStd.TDataStd_ChildNodeIterator_swigregister(TDataStd_ChildNodeIterator)
class TDataStd_Current(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_Current_swiginit(self, _TDataStd.new_TDataStd_Current(*args))

    def DumpToString(self):
        r"""DumpToString(TDataStd_Current self) -> std::string"""
        return _TDataStd.TDataStd_Current_DumpToString(self)

    def DumpJsonToString(self, depth=-1):
        r"""Json string serializer.Json string serializer."""
        return _TDataStd.TDataStd_Current_DumpJsonToString(self, depth)

    @staticmethod
    def Get(*args):
        r"""

        Parameters
        ----------
        acces: TDF_Label

        Return
        -------
        TDF_Label

        Description
        -----------
        Returns current of <acces> framework. raise if (!has).

        """
        return _TDataStd.TDataStd_Current_Get(*args)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Class methods =============.

        """
        return _TDataStd.TDataStd_Current_GetID(*args)

    def GetLabel(self, *args):
        r"""
        Return
        -------
        TDF_Label

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_Current_GetLabel(self, *args)

    @staticmethod
    def Has(*args):
        r"""

        Parameters
        ----------
        acces: TDF_Label

        Return
        -------
        bool

        Description
        -----------
        Returns true if a current label is managed in <acces> framework. class methods =============.

        """
        return _TDataStd.TDataStd_Current_Has(*args)

    @staticmethod
    def Set(*args):
        r"""

        Parameters
        ----------
        L: TDF_Label

        Return
        -------
        None

        Description
        -----------
        Set <l> as current of <l> framework.

        """
        return _TDataStd.TDataStd_Current_Set(*args)

    def SetLabel(self, *args):
        r"""

        Parameters
        ----------
        current: TDF_Label

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_Current_SetLabel(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_Current_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_Current

# Register TDataStd_Current in _TDataStd:
_TDataStd.TDataStd_Current_swigregister(TDataStd_Current)
class TDataStd_DeltaOnModificationOfByteArray(OCC.Core.TDF.TDF_DeltaOnModification):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        Arr: TDataStd_ByteArray

        Return
        -------
        None

        Description
        -----------
        Initializes a tdf_deltaonmodification.

        """
        _TDataStd.TDataStd_DeltaOnModificationOfByteArray_swiginit(self, _TDataStd.new_TDataStd_DeltaOnModificationOfByteArray(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_DeltaOnModificationOfByteArray_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_DeltaOnModificationOfByteArray

# Register TDataStd_DeltaOnModificationOfByteArray in _TDataStd:
_TDataStd.TDataStd_DeltaOnModificationOfByteArray_swigregister(TDataStd_DeltaOnModificationOfByteArray)
class TDataStd_DeltaOnModificationOfExtStringArray(OCC.Core.TDF.TDF_DeltaOnModification):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        Arr: TDataStd_ExtStringArray

        Return
        -------
        None

        Description
        -----------
        Initializes a tdf_deltaonmodification.

        """
        _TDataStd.TDataStd_DeltaOnModificationOfExtStringArray_swiginit(self, _TDataStd.new_TDataStd_DeltaOnModificationOfExtStringArray(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_DeltaOnModificationOfExtStringArray_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_DeltaOnModificationOfExtStringArray

# Register TDataStd_DeltaOnModificationOfExtStringArray in _TDataStd:
_TDataStd.TDataStd_DeltaOnModificationOfExtStringArray_swigregister(TDataStd_DeltaOnModificationOfExtStringArray)
class TDataStd_DeltaOnModificationOfIntArray(OCC.Core.TDF.TDF_DeltaOnModification):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        Arr: TDataStd_IntegerArray

        Return
        -------
        None

        Description
        -----------
        Initializes a tdf_deltaonmodification.

        """
        _TDataStd.TDataStd_DeltaOnModificationOfIntArray_swiginit(self, _TDataStd.new_TDataStd_DeltaOnModificationOfIntArray(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_DeltaOnModificationOfIntArray_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_DeltaOnModificationOfIntArray

# Register TDataStd_DeltaOnModificationOfIntArray in _TDataStd:
_TDataStd.TDataStd_DeltaOnModificationOfIntArray_swigregister(TDataStd_DeltaOnModificationOfIntArray)
class TDataStd_DeltaOnModificationOfIntPackedMap(OCC.Core.TDF.TDF_DeltaOnModification):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        Arr: TDataStd_IntPackedMap

        Return
        -------
        None

        Description
        -----------
        Initializes a tdf_deltaonmodification.

        """
        _TDataStd.TDataStd_DeltaOnModificationOfIntPackedMap_swiginit(self, _TDataStd.new_TDataStd_DeltaOnModificationOfIntPackedMap(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_DeltaOnModificationOfIntPackedMap_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_DeltaOnModificationOfIntPackedMap

# Register TDataStd_DeltaOnModificationOfIntPackedMap in _TDataStd:
_TDataStd.TDataStd_DeltaOnModificationOfIntPackedMap_swigregister(TDataStd_DeltaOnModificationOfIntPackedMap)
class TDataStd_DeltaOnModificationOfRealArray(OCC.Core.TDF.TDF_DeltaOnModification):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        Arr: TDataStd_RealArray

        Return
        -------
        None

        Description
        -----------
        Initializes a tdf_deltaonmodification.

        """
        _TDataStd.TDataStd_DeltaOnModificationOfRealArray_swiginit(self, _TDataStd.new_TDataStd_DeltaOnModificationOfRealArray(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_DeltaOnModificationOfRealArray_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_DeltaOnModificationOfRealArray

# Register TDataStd_DeltaOnModificationOfRealArray in _TDataStd:
_TDataStd.TDataStd_DeltaOnModificationOfRealArray_swigregister(TDataStd_DeltaOnModificationOfRealArray)
class TDataStd_Expression(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_Expression_swiginit(self, _TDataStd.new_TDataStd_Expression(*args))

    def DumpToString(self):
        r"""DumpToString(TDataStd_Expression self) -> std::string"""
        return _TDataStd.TDataStd_Expression_DumpToString(self)

    def DumpJsonToString(self, depth=-1):
        r"""Json string serializer.Json string serializer."""
        return _TDataStd.TDataStd_Expression_DumpJsonToString(self, depth)

    def GetExpression(self, *args):
        r"""
        Return
        -------
        TCollection_ExtendedString

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_Expression_GetExpression(self, *args)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Class methods =============.

        """
        return _TDataStd.TDataStd_Expression_GetID(*args)

    def GetVariables(self, *args):
        r"""
        Return
        -------
        TDF_AttributeList

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_Expression_GetVariables(self, *args)

    def Name(self, *args):
        r"""
        Return
        -------
        TCollection_ExtendedString

        Description
        -----------
        Build and return the expression name.

        """
        return _TDataStd.TDataStd_Expression_Name(self, *args)

    @staticmethod
    def Set(*args):
        r"""

        Parameters
        ----------
        label: TDF_Label

        Return
        -------
        opencascade::handle<TDataStd_Expression>

        Description
        -----------
        Find, or create, an expression attribute. expressionmethods ============.

        """
        return _TDataStd.TDataStd_Expression_Set(*args)

    def SetExpression(self, *args):
        r"""

        Parameters
        ----------
        E: str

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_Expression_SetExpression(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_Expression_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_Expression

# Register TDataStd_Expression in _TDataStd:
_TDataStd.TDataStd_Expression_swigregister(TDataStd_Expression)
class TDataStd_ExtStringArray(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_ExtStringArray_swiginit(self, _TDataStd.new_TDataStd_ExtStringArray(*args))

    def Array(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TColStd_HArray1OfExtendedString>

        Description
        -----------
        Return the inner array of the extstringarray attribute.

        """
        return _TDataStd.TDataStd_ExtStringArray_Array(self, *args)

    def ChangeArray(self, *args):
        r"""

        Parameters
        ----------
        newArray: TColStd_HArray1OfExtendedString
        isCheckItems: bool (optional, default to Standard_True)

        Return
        -------
        None

        Description
        -----------
        Sets the inner array <myvalue> of the extstringarray attribute to <newarray>. if value of <newarray> differs from <myvalue>, backup performed and myvalue refers to new instance of harray1ofextendedstring that holds <newarray> values if <ischeckitems> equal true each item of <newarray> will be checked with each item of <myvalue> for coincidence (to avoid backup).

        """
        return _TDataStd.TDataStd_ExtStringArray_ChangeArray(self, *args)

    def DumpToString(self):
        r"""DumpToString(TDataStd_ExtStringArray self) -> std::string"""
        return _TDataStd.TDataStd_ExtStringArray_DumpToString(self)

    def DumpJsonToString(self, depth=-1):
        r"""Json string serializer.Json string serializer."""
        return _TDataStd.TDataStd_ExtStringArray_DumpJsonToString(self, depth)

    def GetDelta(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_ExtStringArray_GetDelta(self, *args)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Class methods ============= returns the guid for the attribute.

        """
        return _TDataStd.TDataStd_ExtStringArray_GetID(*args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        lower: int
        upper: int

        Return
        -------
        None

        Description
        -----------
        Initializes the inner array with bounds from <lower> to <upper>.

        """
        return _TDataStd.TDataStd_ExtStringArray_Init(self, *args)

    def Length(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Return the number of elements of <self>.

        """
        return _TDataStd.TDataStd_ExtStringArray_Length(self, *args)

    def Lower(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Return the lower bound.

        """
        return _TDataStd.TDataStd_ExtStringArray_Lower(self, *args)

    @staticmethod
    def Set(*args):
        r"""

        Parameters
        ----------
        label: TDF_Label
        lower: int
        upper: int
        isDelta: bool (optional, default to Standard_False)

        Return
        -------
        opencascade::handle<TDataStd_ExtStringArray>

        Description
        -----------
        Finds, or creates, an extstringarray attribute with <lower> and <upper> bounds on the specified label. if <isdelta> == false, defaultdeltaonmodification is used. if <isdelta> == true, deltaonmodification of the current attribute is used. if attribute is already set, all input parameters are refused and the found attribute is returned.

        Parameters
        ----------
        label: TDF_Label
        theGuid: Standard_GUID
        lower: int
        upper: int
        isDelta: bool (optional, default to Standard_False)

        Return
        -------
        opencascade::handle<TDataStd_ExtStringArray>

        Description
        -----------
        Finds, or creates, an extstringarray attribute with explicit user defined <guid>. the extstringarray attribute is returned.

        """
        return _TDataStd.TDataStd_ExtStringArray_Set(*args)

    def SetDelta(self, *args):
        r"""

        Parameters
        ----------
        isDelta: bool

        Return
        -------
        None

        Description
        -----------
        For internal use only!.

        """
        return _TDataStd.TDataStd_ExtStringArray_SetDelta(self, *args)

    def SetID(self, *args):
        r"""

        Parameters
        ----------
        theGuid: Standard_GUID

        Return
        -------
        None

        Description
        -----------
        Sets the explicit guid (user defined) for the attribute.
        Return
        -------
        None

        Description
        -----------
        Sets default guid for the attribute.

        """
        return _TDataStd.TDataStd_ExtStringArray_SetID(self, *args)

    def SetValue(self, *args):
        r"""

        Parameters
        ----------
        Index: int
        Value: str

        Return
        -------
        None

        Description
        -----------
        Sets the <index>th element of the array to <value> outofrange exception is raised if <index> doesn't respect lower and upper bounds of the internal array.

        """
        return _TDataStd.TDataStd_ExtStringArray_SetValue(self, *args)

    def Upper(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Return the upper bound.

        """
        return _TDataStd.TDataStd_ExtStringArray_Upper(self, *args)

    def Value(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        TCollection_ExtendedString

        Description
        -----------
        Returns the value of the <index>th element of the array.

        """
        return _TDataStd.TDataStd_ExtStringArray_Value(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_ExtStringArray_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_ExtStringArray

# Register TDataStd_ExtStringArray in _TDataStd:
_TDataStd.TDataStd_ExtStringArray_swigregister(TDataStd_ExtStringArray)
class TDataStd_ExtStringList(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_ExtStringList_swiginit(self, _TDataStd.new_TDataStd_ExtStringList(*args))

    def Append(self, *args):
        r"""

        Parameters
        ----------
        value: str

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_ExtStringList_Append(self, *args)

    def Clear(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_ExtStringList_Clear(self, *args)

    def DumpToString(self):
        r"""DumpToString(TDataStd_ExtStringList self) -> std::string"""
        return _TDataStd.TDataStd_ExtStringList_DumpToString(self)

    def DumpJsonToString(self, depth=-1):
        r"""Json string serializer.Json string serializer."""
        return _TDataStd.TDataStd_ExtStringList_DumpJsonToString(self, depth)

    def Extent(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_ExtStringList_Extent(self, *args)

    def First(self, *args):
        r"""
        Return
        -------
        TCollection_ExtendedString

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_ExtStringList_First(self, *args)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Static methods ============== returns the id of the list of strings attribute.

        """
        return _TDataStd.TDataStd_ExtStringList_GetID(*args)

    def InsertAfter(self, *args):
        r"""

        Parameters
        ----------
        value: str
        after_value: str

        Return
        -------
        bool

        Description
        -----------
        Inserts the <value> after the first meet of <after_value>.

        Parameters
        ----------
        index: int
        after_value: str

        Return
        -------
        bool

        Description
        -----------
        Inserts the <value> after the <index> position. the indices start with 1 .. extent().

        """
        return _TDataStd.TDataStd_ExtStringList_InsertAfter(self, *args)

    def InsertBefore(self, *args):
        r"""

        Parameters
        ----------
        value: str
        before_value: str

        Return
        -------
        bool

        Description
        -----------
        Inserts the <value> before the first meet of <before_value>.

        Parameters
        ----------
        index: int
        before_value: str

        Return
        -------
        bool

        Description
        -----------
        Inserts the <value> before the <index> position. the indices start with 1 .. extent().

        """
        return _TDataStd.TDataStd_ExtStringList_InsertBefore(self, *args)

    def IsEmpty(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_ExtStringList_IsEmpty(self, *args)

    def Last(self, *args):
        r"""
        Return
        -------
        TCollection_ExtendedString

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_ExtStringList_Last(self, *args)

    def List(self, *args):
        r"""
        Return
        -------
        TDataStd_ListOfExtendedString

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_ExtStringList_List(self, *args)

    def Prepend(self, *args):
        r"""

        Parameters
        ----------
        value: str

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_ExtStringList_Prepend(self, *args)

    def Remove(self, *args):
        r"""

        Parameters
        ----------
        value: str

        Return
        -------
        bool

        Description
        -----------
        Removes the first meet of the <value>.

        Parameters
        ----------
        index: int

        Return
        -------
        bool

        Description
        -----------
        Removes a value at <index> position.

        """
        return _TDataStd.TDataStd_ExtStringList_Remove(self, *args)

    @staticmethod
    def Set(*args):
        r"""

        Parameters
        ----------
        label: TDF_Label

        Return
        -------
        opencascade::handle<TDataStd_ExtStringList>

        Description
        -----------
        Finds or creates a list of string values attribute with explicit user defined <guid>.

        Parameters
        ----------
        label: TDF_Label
        theGuid: Standard_GUID

        Return
        -------
        opencascade::handle<TDataStd_ExtStringList>

        Description
        -----------
        Finds or creates a list of string values attribute.

        """
        return _TDataStd.TDataStd_ExtStringList_Set(*args)

    def SetID(self, *args):
        r"""

        Parameters
        ----------
        theGuid: Standard_GUID

        Return
        -------
        None

        Description
        -----------
        Sets the explicit guid (user defined) for the attribute.
        Return
        -------
        None

        Description
        -----------
        Sets default guid for the attribute.

        """
        return _TDataStd.TDataStd_ExtStringList_SetID(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_ExtStringList_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_ExtStringList

# Register TDataStd_ExtStringList in _TDataStd:
_TDataStd.TDataStd_ExtStringList_swigregister(TDataStd_ExtStringList)
class TDataStd_HDataMapOfStringByte(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        NbBuckets: int (optional, default to 1)

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        theOther: TDataStd_DataMapOfStringByte

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_HDataMapOfStringByte_swiginit(self, _TDataStd.new_TDataStd_HDataMapOfStringByte(*args))

    def ChangeMap(self, *args):
        r"""
        Return
        -------
        TDataStd_DataMapOfStringByte

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_HDataMapOfStringByte_ChangeMap(self, *args)

    def Map(self, *args):
        r"""
        Return
        -------
        TDataStd_DataMapOfStringByte

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_HDataMapOfStringByte_Map(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_HDataMapOfStringByte_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_HDataMapOfStringByte

# Register TDataStd_HDataMapOfStringByte in _TDataStd:
_TDataStd.TDataStd_HDataMapOfStringByte_swigregister(TDataStd_HDataMapOfStringByte)
class TDataStd_HDataMapOfStringHArray1OfInteger(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        NbBuckets: int (optional, default to 1)

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        theOther: TDataStd_DataMapOfStringHArray1OfInteger

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_HDataMapOfStringHArray1OfInteger_swiginit(self, _TDataStd.new_TDataStd_HDataMapOfStringHArray1OfInteger(*args))

    def ChangeMap(self, *args):
        r"""
        Return
        -------
        TDataStd_DataMapOfStringHArray1OfInteger

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_HDataMapOfStringHArray1OfInteger_ChangeMap(self, *args)

    def Map(self, *args):
        r"""
        Return
        -------
        TDataStd_DataMapOfStringHArray1OfInteger

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_HDataMapOfStringHArray1OfInteger_Map(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_HDataMapOfStringHArray1OfInteger_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_HDataMapOfStringHArray1OfInteger

# Register TDataStd_HDataMapOfStringHArray1OfInteger in _TDataStd:
_TDataStd.TDataStd_HDataMapOfStringHArray1OfInteger_swigregister(TDataStd_HDataMapOfStringHArray1OfInteger)
class TDataStd_HDataMapOfStringHArray1OfReal(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        NbBuckets: int (optional, default to 1)

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        theOther: TDataStd_DataMapOfStringHArray1OfReal

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_HDataMapOfStringHArray1OfReal_swiginit(self, _TDataStd.new_TDataStd_HDataMapOfStringHArray1OfReal(*args))

    def ChangeMap(self, *args):
        r"""
        Return
        -------
        TDataStd_DataMapOfStringHArray1OfReal

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_HDataMapOfStringHArray1OfReal_ChangeMap(self, *args)

    def Map(self, *args):
        r"""
        Return
        -------
        TDataStd_DataMapOfStringHArray1OfReal

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_HDataMapOfStringHArray1OfReal_Map(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_HDataMapOfStringHArray1OfReal_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_HDataMapOfStringHArray1OfReal

# Register TDataStd_HDataMapOfStringHArray1OfReal in _TDataStd:
_TDataStd.TDataStd_HDataMapOfStringHArray1OfReal_swigregister(TDataStd_HDataMapOfStringHArray1OfReal)
class TDataStd_HDataMapOfStringInteger(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        NbBuckets: int (optional, default to 1)

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        theOther: TColStd_DataMapOfStringInteger

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_HDataMapOfStringInteger_swiginit(self, _TDataStd.new_TDataStd_HDataMapOfStringInteger(*args))

    def ChangeMap(self, *args):
        r"""
        Return
        -------
        TColStd_DataMapOfStringInteger

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_HDataMapOfStringInteger_ChangeMap(self, *args)

    def Map(self, *args):
        r"""
        Return
        -------
        TColStd_DataMapOfStringInteger

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_HDataMapOfStringInteger_Map(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_HDataMapOfStringInteger_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_HDataMapOfStringInteger

# Register TDataStd_HDataMapOfStringInteger in _TDataStd:
_TDataStd.TDataStd_HDataMapOfStringInteger_swigregister(TDataStd_HDataMapOfStringInteger)
class TDataStd_HDataMapOfStringReal(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        NbBuckets: int (optional, default to 1)

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        theOther: TDataStd_DataMapOfStringReal

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_HDataMapOfStringReal_swiginit(self, _TDataStd.new_TDataStd_HDataMapOfStringReal(*args))

    def ChangeMap(self, *args):
        r"""
        Return
        -------
        TDataStd_DataMapOfStringReal

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_HDataMapOfStringReal_ChangeMap(self, *args)

    def Map(self, *args):
        r"""
        Return
        -------
        TDataStd_DataMapOfStringReal

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_HDataMapOfStringReal_Map(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_HDataMapOfStringReal_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_HDataMapOfStringReal

# Register TDataStd_HDataMapOfStringReal in _TDataStd:
_TDataStd.TDataStd_HDataMapOfStringReal_swigregister(TDataStd_HDataMapOfStringReal)
class TDataStd_HDataMapOfStringString(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""

        Parameters
        ----------
        NbBuckets: int (optional, default to 1)

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        theOther: TDataStd_DataMapOfStringString

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_HDataMapOfStringString_swiginit(self, _TDataStd.new_TDataStd_HDataMapOfStringString(*args))

    def ChangeMap(self, *args):
        r"""
        Return
        -------
        TDataStd_DataMapOfStringString

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_HDataMapOfStringString_ChangeMap(self, *args)

    def Map(self, *args):
        r"""
        Return
        -------
        TDataStd_DataMapOfStringString

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_HDataMapOfStringString_Map(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_HDataMapOfStringString_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_HDataMapOfStringString

# Register TDataStd_HDataMapOfStringString in _TDataStd:
_TDataStd.TDataStd_HDataMapOfStringString_swigregister(TDataStd_HDataMapOfStringString)
class TDataStd_IntPackedMap(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_IntPackedMap_swiginit(self, _TDataStd.new_TDataStd_IntPackedMap(*args))

    def Add(self, *args):
        r"""

        Parameters
        ----------
        theKey: int

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_IntPackedMap_Add(self, *args)

    def ChangeMap(self, *args):
        r"""

        Parameters
        ----------
        theMap: TColStd_HPackedMapOfInteger

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        Parameters
        ----------
        theMap: TColStd_PackedMapOfInteger

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_IntPackedMap_ChangeMap(self, *args)

    def Clear(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_IntPackedMap_Clear(self, *args)

    def Contains(self, *args):
        r"""

        Parameters
        ----------
        theKey: int

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_IntPackedMap_Contains(self, *args)

    def DumpToString(self):
        r"""DumpToString(TDataStd_IntPackedMap self) -> std::string"""
        return _TDataStd.TDataStd_IntPackedMap_DumpToString(self)

    def DumpJsonToString(self, depth=-1):
        r"""Json string serializer.Json string serializer."""
        return _TDataStd.TDataStd_IntPackedMap_DumpJsonToString(self, depth)

    def Extent(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_IntPackedMap_Extent(self, *args)

    def GetDelta(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_IntPackedMap_GetDelta(self, *args)

    def GetHMap(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TColStd_HPackedMapOfInteger>

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_IntPackedMap_GetHMap(self, *args)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Class methods ============= returns the guid of the attribute.

        """
        return _TDataStd.TDataStd_IntPackedMap_GetID(*args)

    def GetMap(self, *args):
        r"""
        Return
        -------
        TColStd_PackedMapOfInteger

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_IntPackedMap_GetMap(self, *args)

    def IsEmpty(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_IntPackedMap_IsEmpty(self, *args)

    def Remove(self, *args):
        r"""

        Parameters
        ----------
        theKey: int

        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_IntPackedMap_Remove(self, *args)

    @staticmethod
    def Set(*args):
        r"""

        Parameters
        ----------
        label: TDF_Label
        isDelta: bool (optional, default to Standard_False)

        Return
        -------
        opencascade::handle<TDataStd_IntPackedMap>

        Description
        -----------
        Finds or creates an integer map attribute on the given label. if <isdelta> == false, defaultdeltaonmodification is used. if <isdelta> == true, deltaonmodification of the current attribute is used. if attribute is already set, input parameter <isdelta> is refused and the found attribute returned. attribute methods ===================.

        """
        return _TDataStd.TDataStd_IntPackedMap_Set(*args)

    def SetDelta(self, *args):
        r"""

        Parameters
        ----------
        isDelta: bool

        Return
        -------
        None

        Description
        -----------
        For internal use only!.

        """
        return _TDataStd.TDataStd_IntPackedMap_SetDelta(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_IntPackedMap_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_IntPackedMap

# Register TDataStd_IntPackedMap in _TDataStd:
_TDataStd.TDataStd_IntPackedMap_swigregister(TDataStd_IntPackedMap)
class TDataStd_Integer(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_Integer_swiginit(self, _TDataStd.new_TDataStd_Integer(*args))

    def DumpToString(self):
        r"""DumpToString(TDataStd_Integer self) -> std::string"""
        return _TDataStd.TDataStd_Integer_DumpToString(self)

    def DumpJsonToString(self, depth=-1):
        r"""Json string serializer.Json string serializer."""
        return _TDataStd.TDataStd_Integer_DumpJsonToString(self, depth)

    def Get(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the integer value contained in the attribute.

        """
        return _TDataStd.TDataStd_Integer_Get(self, *args)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Class methods ============= returns the guid for integers.

        """
        return _TDataStd.TDataStd_Integer_GetID(*args)

    def IsCaptured(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if there is a reference on the same label.

        """
        return _TDataStd.TDataStd_Integer_IsCaptured(self, *args)

    def Set(self, *args):
        r"""

        Parameters
        ----------
        label: TDF_Label
        value: int

        Return
        -------
        opencascade::handle<TDataStd_Integer>

        Description
        -----------
        Finds, or creates, an integer attribute and sets <value> the integer attribute is returned.

        Parameters
        ----------
        label: TDF_Label
        guid: Standard_GUID
        value: int

        Return
        -------
        opencascade::handle<TDataStd_Integer>

        Description
        -----------
        Finds, or creates, an integer attribute with explicit user defined <guid> and sets <value>. the integer attribute is returned. .

        Parameters
        ----------
        V: int

        Return
        -------
        None

        Description
        -----------
        Integer methods ===============.

        """
        return _TDataStd.TDataStd_Integer_Set(self, *args)

    def SetID(self, *args):
        r"""

        Parameters
        ----------
        guid: Standard_GUID

        Return
        -------
        None

        Description
        -----------
        Sets the explicit guid (user defined) for the attribute.
        Return
        -------
        None

        Description
        -----------
        Sets default guid for the attribute.

        """
        return _TDataStd.TDataStd_Integer_SetID(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_Integer_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_Integer

# Register TDataStd_Integer in _TDataStd:
_TDataStd.TDataStd_Integer_swigregister(TDataStd_Integer)
class TDataStd_IntegerArray(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_IntegerArray_swiginit(self, _TDataStd.new_TDataStd_IntegerArray(*args))

    def Array(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TColStd_HArray1OfInteger>

        Description
        -----------
        Return the inner array of the integerarray attribute.

        """
        return _TDataStd.TDataStd_IntegerArray_Array(self, *args)

    def ChangeArray(self, *args):
        r"""

        Parameters
        ----------
        newArray: TColStd_HArray1OfInteger
        isCheckItems: bool (optional, default to Standard_True)

        Return
        -------
        None

        Description
        -----------
        Sets the inner array <myvalue> of the integerarray attribute to <newarray>. if value of <newarray> differs from <myvalue>, backup performed and myvalue refers to new instance of harray1ofinteger that holds <newarray> values if <ischeckitems> equal true each item of <newarray> will be checked with each item of <myvalue> for coincidence (to avoid backup).

        """
        return _TDataStd.TDataStd_IntegerArray_ChangeArray(self, *args)

    def DumpToString(self):
        r"""DumpToString(TDataStd_IntegerArray self) -> std::string"""
        return _TDataStd.TDataStd_IntegerArray_DumpToString(self)

    def DumpJsonToString(self, depth=-1):
        r"""Json string serializer.Json string serializer."""
        return _TDataStd.TDataStd_IntegerArray_DumpJsonToString(self, depth)

    def GetDelta(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_IntegerArray_GetDelta(self, *args)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Class methods ============= returns the guid for arrays of integers.

        """
        return _TDataStd.TDataStd_IntegerArray_GetID(*args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        lower: int
        upper: int

        Return
        -------
        None

        Description
        -----------
        Initialize the inner array with bounds from <lower> to <upper>.

        """
        return _TDataStd.TDataStd_IntegerArray_Init(self, *args)

    def Length(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the length of this array of integers in terms of the number of elements it contains.

        """
        return _TDataStd.TDataStd_IntegerArray_Length(self, *args)

    def Lower(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the lower boundary of this array of integers.

        """
        return _TDataStd.TDataStd_IntegerArray_Lower(self, *args)

    @staticmethod
    def Set(*args):
        r"""

        Parameters
        ----------
        label: TDF_Label
        lower: int
        upper: int
        isDelta: bool (optional, default to Standard_False)

        Return
        -------
        opencascade::handle<TDataStd_IntegerArray>

        Description
        -----------
        Finds or creates on the <label> an integer array attribute with the specified <lower> and <upper> boundaries. if <isdelta> == false, defaultdeltaonmodification is used. if <isdelta> == true, deltaonmodification of the current attribute is used. if attribute is already set, all input parameters are refused and the found attribute is returned.

        Parameters
        ----------
        label: TDF_Label
        theGuid: Standard_GUID
        lower: int
        upper: int
        isDelta: bool (optional, default to Standard_False)

        Return
        -------
        opencascade::handle<TDataStd_IntegerArray>

        Description
        -----------
        Finds, or creates, an integerarray attribute with explicit user defined <guid>. the integerarray attribute is returned.

        """
        return _TDataStd.TDataStd_IntegerArray_Set(*args)

    def SetDelta(self, *args):
        r"""

        Parameters
        ----------
        isDelta: bool

        Return
        -------
        None

        Description
        -----------
        For internal use only!.

        """
        return _TDataStd.TDataStd_IntegerArray_SetDelta(self, *args)

    def SetID(self, *args):
        r"""

        Parameters
        ----------
        theGuid: Standard_GUID

        Return
        -------
        None

        Description
        -----------
        Sets the explicit guid (user defined) for the attribute.
        Return
        -------
        None

        Description
        -----------
        Sets default guid for the attribute.

        """
        return _TDataStd.TDataStd_IntegerArray_SetID(self, *args)

    def SetValue(self, *args):
        r"""

        Parameters
        ----------
        Index: int
        Value: int

        Return
        -------
        None

        Description
        -----------
        Sets the <index>th element of the array to <value> outofrange exception is raised if <index> doesn't respect lower and upper bounds of the internal array.

        """
        return _TDataStd.TDataStd_IntegerArray_SetValue(self, *args)

    def Upper(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Return the upper boundary of this array of integers.

        """
        return _TDataStd.TDataStd_IntegerArray_Upper(self, *args)

    def Value(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        int

        Description
        -----------
        Return the value of the <index>th element of the array.

        """
        return _TDataStd.TDataStd_IntegerArray_Value(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_IntegerArray_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_IntegerArray

# Register TDataStd_IntegerArray in _TDataStd:
_TDataStd.TDataStd_IntegerArray_swigregister(TDataStd_IntegerArray)
class TDataStd_IntegerList(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_IntegerList_swiginit(self, _TDataStd.new_TDataStd_IntegerList(*args))

    def Append(self, *args):
        r"""

        Parameters
        ----------
        value: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_IntegerList_Append(self, *args)

    def Clear(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_IntegerList_Clear(self, *args)

    def DumpToString(self):
        r"""DumpToString(TDataStd_IntegerList self) -> std::string"""
        return _TDataStd.TDataStd_IntegerList_DumpToString(self)

    def DumpJsonToString(self, depth=-1):
        r"""Json string serializer.Json string serializer."""
        return _TDataStd.TDataStd_IntegerList_DumpJsonToString(self, depth)

    def Extent(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_IntegerList_Extent(self, *args)

    def First(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_IntegerList_First(self, *args)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Static methods ============== returns the id of the list of integer attribute.

        """
        return _TDataStd.TDataStd_IntegerList_GetID(*args)

    def InsertAfter(self, *args):
        r"""

        Parameters
        ----------
        value: int
        after_value: int

        Return
        -------
        bool

        Description
        -----------
        Inserts the <value> after the first meet of <after_value>.

        """
        return _TDataStd.TDataStd_IntegerList_InsertAfter(self, *args)

    def InsertAfterByIndex(self, *args):
        r"""

        Parameters
        ----------
        index: int
        after_value: int

        Return
        -------
        bool

        Description
        -----------
        Inserts the <value> after the <index> position. the indices start with 1 .. extent().

        """
        return _TDataStd.TDataStd_IntegerList_InsertAfterByIndex(self, *args)

    def InsertBefore(self, *args):
        r"""

        Parameters
        ----------
        value: int
        before_value: int

        Return
        -------
        bool

        Description
        -----------
        Inserts the <value> before the first meet of <before_value>.

        """
        return _TDataStd.TDataStd_IntegerList_InsertBefore(self, *args)

    def InsertBeforeByIndex(self, *args):
        r"""

        Parameters
        ----------
        index: int
        before_value: int

        Return
        -------
        bool

        Description
        -----------
        Inserts the <value> before the <index> position. the indices start with 1 .. extent().

        """
        return _TDataStd.TDataStd_IntegerList_InsertBeforeByIndex(self, *args)

    def IsEmpty(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_IntegerList_IsEmpty(self, *args)

    def Last(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_IntegerList_Last(self, *args)

    def List(self, *args):
        r"""
        Return
        -------
        TColStd_ListOfInteger

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_IntegerList_List(self, *args)

    def Prepend(self, *args):
        r"""

        Parameters
        ----------
        value: int

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_IntegerList_Prepend(self, *args)

    def Remove(self, *args):
        r"""

        Parameters
        ----------
        value: int

        Return
        -------
        bool

        Description
        -----------
        Removes the first meet of the <value>.

        """
        return _TDataStd.TDataStd_IntegerList_Remove(self, *args)

    def RemoveByIndex(self, *args):
        r"""

        Parameters
        ----------
        index: int

        Return
        -------
        bool

        Description
        -----------
        Removes a value at <index> position.

        """
        return _TDataStd.TDataStd_IntegerList_RemoveByIndex(self, *args)

    @staticmethod
    def Set(*args):
        r"""

        Parameters
        ----------
        label: TDF_Label

        Return
        -------
        opencascade::handle<TDataStd_IntegerList>

        Description
        -----------
        Finds or creates a list of integer values attribute.

        Parameters
        ----------
        label: TDF_Label
        theGuid: Standard_GUID

        Return
        -------
        opencascade::handle<TDataStd_IntegerList>

        Description
        -----------
        Finds or creates a list of integer values attribute with explicit user defined <guid>.

        """
        return _TDataStd.TDataStd_IntegerList_Set(*args)

    def SetID(self, *args):
        r"""

        Parameters
        ----------
        theGuid: Standard_GUID

        Return
        -------
        None

        Description
        -----------
        Sets the explicit guid (user defined) for the attribute.
        Return
        -------
        None

        Description
        -----------
        Sets default guid for the attribute.

        """
        return _TDataStd.TDataStd_IntegerList_SetID(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_IntegerList_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_IntegerList

# Register TDataStd_IntegerList in _TDataStd:
_TDataStd.TDataStd_IntegerList_swigregister(TDataStd_IntegerList)
class TDataStd_NamedData(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _TDataStd.TDataStd_NamedData_swiginit(self, _TDataStd.new_TDataStd_NamedData(*args))

    def ChangeArraysOfIntegers(self, *args):
        r"""

        Parameters
        ----------
        theArraysOfIntegers: TDataStd_DataMapOfStringHArray1OfInteger

        Return
        -------
        None

        Description
        -----------
        Replace the container content by new content of the <thearraysofintegers>.

        """
        return _TDataStd.TDataStd_NamedData_ChangeArraysOfIntegers(self, *args)

    def ChangeArraysOfReals(self, *args):
        r"""

        Parameters
        ----------
        theArraysOfReals: TDataStd_DataMapOfStringHArray1OfReal

        Return
        -------
        None

        Description
        -----------
        Replace the container content by new content of the <thearraysofreals>.

        """
        return _TDataStd.TDataStd_NamedData_ChangeArraysOfReals(self, *args)

    def ChangeBytes(self, *args):
        r"""

        Parameters
        ----------
        theBytes: TDataStd_DataMapOfStringByte

        Return
        -------
        None

        Description
        -----------
        Replace the container content by new content of the <thebytes>.

        """
        return _TDataStd.TDataStd_NamedData_ChangeBytes(self, *args)

    def ChangeIntegers(self, *args):
        r"""

        Parameters
        ----------
        theIntegers: TColStd_DataMapOfStringInteger

        Return
        -------
        None

        Description
        -----------
        Replace the container content by new content of the <theintegers>.

        """
        return _TDataStd.TDataStd_NamedData_ChangeIntegers(self, *args)

    def ChangeReals(self, *args):
        r"""

        Parameters
        ----------
        theReals: TDataStd_DataMapOfStringReal

        Return
        -------
        None

        Description
        -----------
        Replace the container content by new content of the <thereals>.

        """
        return _TDataStd.TDataStd_NamedData_ChangeReals(self, *args)

    def ChangeStrings(self, *args):
        r"""

        Parameters
        ----------
        theStrings: TDataStd_DataMapOfStringString

        Return
        -------
        None

        Description
        -----------
        Replace the container content by new content of the <thestrings>.

        """
        return _TDataStd.TDataStd_NamedData_ChangeStrings(self, *args)

    def Clear(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Clear data.

        """
        return _TDataStd.TDataStd_NamedData_Clear(self, *args)

    def DumpToString(self):
        r"""DumpToString(TDataStd_NamedData self) -> std::string"""
        return _TDataStd.TDataStd_NamedData_DumpToString(self)

    def DumpJsonToString(self, depth=-1):
        r"""Json string serializer.Json string serializer."""
        return _TDataStd.TDataStd_NamedData_DumpJsonToString(self, depth)

    def GetArrayOfIntegers(self, *args):
        r"""

        Parameters
        ----------
        theName: str

        Return
        -------
        opencascade::handle<TColStd_HArray1OfInteger>

        Description
        -----------
        Returns the named array of integer values. it returns a null handle if there is no such a named array of integers (use hasarrayofintegers()).

        """
        return _TDataStd.TDataStd_NamedData_GetArrayOfIntegers(self, *args)

    def GetArrayOfReals(self, *args):
        r"""

        Parameters
        ----------
        theName: str

        Return
        -------
        opencascade::handle<TColStd_HArray1OfReal>

        Description
        -----------
        Returns the named array of real values. it returns a null handle if there is no such a named array of reals (use hasarrayofreals()).

        """
        return _TDataStd.TDataStd_NamedData_GetArrayOfReals(self, *args)

    def GetArraysOfIntegersContainer(self, *args):
        r"""
        Return
        -------
        TDataStd_DataMapOfStringHArray1OfInteger

        Description
        -----------
        Returns the internal container of named arrays of integer values.

        """
        return _TDataStd.TDataStd_NamedData_GetArraysOfIntegersContainer(self, *args)

    def GetArraysOfRealsContainer(self, *args):
        r"""
        Return
        -------
        TDataStd_DataMapOfStringHArray1OfReal

        Description
        -----------
        Returns the internal container of named arrays of real values.

        """
        return _TDataStd.TDataStd_NamedData_GetArraysOfRealsContainer(self, *args)

    def GetByte(self, *args):
        r"""

        Parameters
        ----------
        theName: str

        Return
        -------
        Standard_Byte

        Description
        -----------
        Returns the named byte. it returns 0 if there is no such a named byte (use hasbyte()).

        """
        return _TDataStd.TDataStd_NamedData_GetByte(self, *args)

    def GetBytesContainer(self, *args):
        r"""
        Return
        -------
        TDataStd_DataMapOfStringByte

        Description
        -----------
        Returns the internal container of named bytes.

        """
        return _TDataStd.TDataStd_NamedData_GetBytesContainer(self, *args)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Returns the id of the named data attribute.

        """
        return _TDataStd.TDataStd_NamedData_GetID(*args)

    def GetInteger(self, *args):
        r"""

        Parameters
        ----------
        theName: str

        Return
        -------
        int

        Description
        -----------
        Returns the integer value specified by the name. it returns 0 if internal map doesn't contain the specified integer (use hasinteger() to check before).

        """
        return _TDataStd.TDataStd_NamedData_GetInteger(self, *args)

    def GetIntegersContainer(self, *args):
        r"""
        Return
        -------
        TColStd_DataMapOfStringInteger

        Description
        -----------
        Returns the internal container of named integers.

        """
        return _TDataStd.TDataStd_NamedData_GetIntegersContainer(self, *args)

    def GetReal(self, *args):
        r"""

        Parameters
        ----------
        theName: str

        Return
        -------
        float

        Description
        -----------
        Returns the named real. it returns 0.0 if there is no such a named real (use hasreal()).

        """
        return _TDataStd.TDataStd_NamedData_GetReal(self, *args)

    def GetRealsContainer(self, *args):
        r"""
        Return
        -------
        TDataStd_DataMapOfStringReal

        Description
        -----------
        Returns the internal container of named reals.

        """
        return _TDataStd.TDataStd_NamedData_GetRealsContainer(self, *args)

    def GetString(self, *args):
        r"""

        Parameters
        ----------
        theName: str

        Return
        -------
        TCollection_ExtendedString

        Description
        -----------
        Returns the named string. it returns an empty string if there is no such a named string (use hasstring()).

        """
        return _TDataStd.TDataStd_NamedData_GetString(self, *args)

    def GetStringsContainer(self, *args):
        r"""
        Return
        -------
        TDataStd_DataMapOfStringString

        Description
        -----------
        Returns the internal container of named strings.

        """
        return _TDataStd.TDataStd_NamedData_GetStringsContainer(self, *args)

    def HasArrayOfIntegers(self, *args):
        r"""

        Parameters
        ----------
        theName: str

        Return
        -------
        bool

        Description
        -----------
        Returns true if the attribute contains this named array of integer values.

        """
        return _TDataStd.TDataStd_NamedData_HasArrayOfIntegers(self, *args)

    def HasArrayOfReals(self, *args):
        r"""

        Parameters
        ----------
        theName: str

        Return
        -------
        bool

        Description
        -----------
        Returns true if the attribute contains this named array of real values.

        """
        return _TDataStd.TDataStd_NamedData_HasArrayOfReals(self, *args)

    def HasArraysOfIntegers(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if there are some named arrays of integer values in the attribute.

        """
        return _TDataStd.TDataStd_NamedData_HasArraysOfIntegers(self, *args)

    def HasArraysOfReals(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if there are some named arrays of real values in the attribute.

        """
        return _TDataStd.TDataStd_NamedData_HasArraysOfReals(self, *args)

    def HasByte(self, *args):
        r"""

        Parameters
        ----------
        theName: str

        Return
        -------
        bool

        Description
        -----------
        Returns true if the attribute contains this named byte.

        """
        return _TDataStd.TDataStd_NamedData_HasByte(self, *args)

    def HasBytes(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if there are some named bytes in the attribute.

        """
        return _TDataStd.TDataStd_NamedData_HasBytes(self, *args)

    def HasDeferredData(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if some data is not loaded from deferred storage and can be loaded using loaddeferreddata(). //! late-load interface allows to avoid loading auxiliary data into memory until it is needed by application and also speed up reader by skipping data chunks in file. this feature requires file format having special structure, and usually implies read-only access, therefore default implementation will return false here. //! late-load elements require special attention to ensure data consistency, as such elements are created in undefined state (no data) and undo/redo mechanism will not work until deferred data being loaded. //! usage scenarios: - application displays model in read-only way. late-load elements are loaded temporarily on demand and immediately unloaded. thenameddata->loaddeferreddata (true); tcollection_asciistring avalue = thenameddata->getstring (thekey); thenameddata->unloaddeferreddata(); - application saves the model into another format. all late-load elements should be loaded (at least temporary during operation). - application modifies the model. late-load element should be loaded with removed link to deferred storage, so that undo()/redo() will work as expected since loading. thenameddata->loaddeferreddata (false); thenameddata->setstring (thekey, thenewvalue);.

        """
        return _TDataStd.TDataStd_NamedData_HasDeferredData(self, *args)

    def HasInteger(self, *args):
        r"""

        Parameters
        ----------
        theName: str

        Return
        -------
        bool

        Description
        -----------
        Returns true if the attribute contains specified by name integer value.

        """
        return _TDataStd.TDataStd_NamedData_HasInteger(self, *args)

    def HasIntegers(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if at least one named integer value is kept in the attribute.

        """
        return _TDataStd.TDataStd_NamedData_HasIntegers(self, *args)

    def HasReal(self, *args):
        r"""

        Parameters
        ----------
        theName: str

        Return
        -------
        bool

        Description
        -----------
        Returns true if the attribute contains a real specified by name.

        """
        return _TDataStd.TDataStd_NamedData_HasReal(self, *args)

    def HasReals(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if at least one named real value is kept in the attribute.

        """
        return _TDataStd.TDataStd_NamedData_HasReals(self, *args)

    def HasString(self, *args):
        r"""

        Parameters
        ----------
        theName: str

        Return
        -------
        bool

        Description
        -----------
        Returns true if the attribute contains this named string.

        """
        return _TDataStd.TDataStd_NamedData_HasString(self, *args)

    def HasStrings(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if there are some named strings in the attribute.

        """
        return _TDataStd.TDataStd_NamedData_HasStrings(self, *args)

    def LoadDeferredData(self, *args):
        r"""

        Parameters
        ----------
        theToKeepDeferred: bool (optional, default to false)

        Return
        -------
        bool

        Description
        -----------
        Load data from deferred storage, without calling backup(). as result, the content of the object will be overridden by data from deferred storage (which is normally read-only). @param thetokeepdeferred [in] when true, the link to deferred storage will be preserved  so that it will be possible calling unloaddeferreddata() afterwards for releasing memory return false if deferred storage is unavailable or deferred data has been already loaded.

        """
        return _TDataStd.TDataStd_NamedData_LoadDeferredData(self, *args)

    @staticmethod
    def Set(*args):
        r"""

        Parameters
        ----------
        label: TDF_Label

        Return
        -------
        opencascade::handle<TDataStd_NamedData>

        Description
        -----------
        Finds or creates a named data attribute.

        """
        return _TDataStd.TDataStd_NamedData_Set(*args)

    def SetArrayOfIntegers(self, *args):
        r"""

        Parameters
        ----------
        theName: str
        theArrayOfIntegers: TColStd_HArray1OfInteger

        Return
        -------
        None

        Description
        -----------
        Defines a named array of integer values. @param thename [in] key @param thearrayofintegers [in] new value, overrides existing (passed array will be copied by value!).

        """
        return _TDataStd.TDataStd_NamedData_SetArrayOfIntegers(self, *args)

    def SetArrayOfReals(self, *args):
        r"""

        Parameters
        ----------
        theName: str
        theArrayOfReals: TColStd_HArray1OfReal

        Return
        -------
        None

        Description
        -----------
        Defines a named array of real values. @param[in] thename key @param[in] thearrayofreals new value, overrides existing (passed array will be copied by value!).

        """
        return _TDataStd.TDataStd_NamedData_SetArrayOfReals(self, *args)

    def SetByte(self, *args):
        r"""

        Parameters
        ----------
        theName: str
        theByte: Standard_Byte

        Return
        -------
        None

        Description
        -----------
        Defines a named byte. if the byte already exists, it changes its value to <thebyte>.

        """
        return _TDataStd.TDataStd_NamedData_SetByte(self, *args)

    def SetInteger(self, *args):
        r"""

        Parameters
        ----------
        theName: str
        theInteger: int

        Return
        -------
        None

        Description
        -----------
        Defines a named integer. if the integer already exists, it changes its value to <theinteger>.

        """
        return _TDataStd.TDataStd_NamedData_SetInteger(self, *args)

    def SetReal(self, *args):
        r"""

        Parameters
        ----------
        theName: str
        theReal: float

        Return
        -------
        None

        Description
        -----------
        Defines a named real. if the real already exists, it changes its value to <thereal>.

        """
        return _TDataStd.TDataStd_NamedData_SetReal(self, *args)

    def SetString(self, *args):
        r"""

        Parameters
        ----------
        theName: str
        theString: str

        Return
        -------
        None

        Description
        -----------
        Defines a named string. if the string already exists, it changes its value to <thestring>.

        """
        return _TDataStd.TDataStd_NamedData_SetString(self, *args)

    def UnloadDeferredData(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Releases data if object has connected deferred storage, without calling backup(). warning! this operation does not unload modifications to deferred storage (normally it is read-only), so that modifications will be discarded (if any). return false if object has no deferred data.

        """
        return _TDataStd.TDataStd_NamedData_UnloadDeferredData(self, *args)

    def clear(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Clear data without calling backup().

        """
        return _TDataStd.TDataStd_NamedData_clear(self, *args)

    def setArrayOfIntegers(self, *args):
        r"""

        Parameters
        ----------
        theName: str
        theArrayOfIntegers: TColStd_HArray1OfInteger

        Return
        -------
        None

        Description
        -----------
        Defines a named array of integer values (without calling backup).

        """
        return _TDataStd.TDataStd_NamedData_setArrayOfIntegers(self, *args)

    def setArrayOfReals(self, *args):
        r"""

        Parameters
        ----------
        theName: str
        theArrayOfReals: TColStd_HArray1OfReal

        Return
        -------
        None

        Description
        -----------
        Defines a named array of real values (without calling backup).

        """
        return _TDataStd.TDataStd_NamedData_setArrayOfReals(self, *args)

    def setByte(self, *args):
        r"""

        Parameters
        ----------
        theName: str
        theByte: Standard_Byte

        Return
        -------
        None

        Description
        -----------
        Defines a named byte (without calling backup).

        """
        return _TDataStd.TDataStd_NamedData_setByte(self, *args)

    def setInteger(self, *args):
        r"""

        Parameters
        ----------
        theName: str
        theInteger: int

        Return
        -------
        None

        Description
        -----------
        Defines a named integer (without calling backup).

        """
        return _TDataStd.TDataStd_NamedData_setInteger(self, *args)

    def setReal(self, *args):
        r"""

        Parameters
        ----------
        theName: str
        theReal: float

        Return
        -------
        None

        Description
        -----------
        Defines a named real (without calling backup).

        """
        return _TDataStd.TDataStd_NamedData_setReal(self, *args)

    def setString(self, *args):
        r"""

        Parameters
        ----------
        theName: str
        theString: str

        Return
        -------
        None

        Description
        -----------
        Defines a named string (without calling backup).

        """
        return _TDataStd.TDataStd_NamedData_setString(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_NamedData_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_NamedData

# Register TDataStd_NamedData in _TDataStd:
_TDataStd.TDataStd_NamedData_swigregister(TDataStd_NamedData)
class TDataStd_Real(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_Real_swiginit(self, _TDataStd.new_TDataStd_Real(*args))

    def DumpToString(self):
        r"""DumpToString(TDataStd_Real self) -> std::string"""
        return _TDataStd.TDataStd_Real_DumpToString(self)

    def DumpJsonToString(self, depth=-1):
        r"""Json string serializer.Json string serializer."""
        return _TDataStd.TDataStd_Real_DumpJsonToString(self, depth)

    def Get(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns the real number value contained in the attribute.

        """
        return _TDataStd.TDataStd_Real_Get(self, *args)

    def GetDimension(self, *args):
        r"""
        Return
        -------
        TDataStd_RealEnum

        Description
        -----------
        Obsolete method that will be removed in next versions. this field is not supported in the persistence mechanism.

        """
        return _TDataStd.TDataStd_Real_GetDimension(self, *args)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Class methods ============= returns the default guid for real numbers.

        """
        return _TDataStd.TDataStd_Real_GetID(*args)

    def IsCaptured(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if there is a reference on the same label.

        """
        return _TDataStd.TDataStd_Real_IsCaptured(self, *args)

    def Set(self, *args):
        r"""

        Parameters
        ----------
        label: TDF_Label
        value: float

        Return
        -------
        opencascade::handle<TDataStd_Real>

        Description
        -----------
        Finds, or creates, a real attribute with default guid and sets <value>. the real attribute is returned. the real dimension is scalar by default. use setdimension to overwrite. real methods ============.

        Parameters
        ----------
        label: TDF_Label
        guid: Standard_GUID
        value: float

        Return
        -------
        opencascade::handle<TDataStd_Real>

        Description
        -----------
        Finds, or creates, a real attribute with explicit guid and sets <value>. the real attribute is returned. real methods ============.

        Parameters
        ----------
        V: float

        Return
        -------
        None

        Description
        -----------
        Sets the real number v.

        """
        return _TDataStd.TDataStd_Real_Set(self, *args)

    def SetDimension(self, *args):
        r"""

        Parameters
        ----------
        DIM: TDataStd_RealEnum

        Return
        -------
        None

        Description
        -----------
        Obsolete method that will be removed in next versions. this field is not supported in the persistence mechanism.

        """
        return _TDataStd.TDataStd_Real_SetDimension(self, *args)

    def SetID(self, *args):
        r"""

        Parameters
        ----------
        guid: Standard_GUID

        Return
        -------
        None

        Description
        -----------
        Sets the explicit guid for the attribute.
        Return
        -------
        None

        Description
        -----------
        Sets default guid for the attribute.

        """
        return _TDataStd.TDataStd_Real_SetID(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_Real_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_Real

# Register TDataStd_Real in _TDataStd:
_TDataStd.TDataStd_Real_swigregister(TDataStd_Real)
class TDataStd_RealArray(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_RealArray_swiginit(self, _TDataStd.new_TDataStd_RealArray(*args))

    def Array(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TColStd_HArray1OfReal>

        Description
        -----------
        Returns the handle of this array of reals.

        """
        return _TDataStd.TDataStd_RealArray_Array(self, *args)

    def ChangeArray(self, *args):
        r"""

        Parameters
        ----------
        newArray: TColStd_HArray1OfReal
        isCheckItems: bool (optional, default to Standard_True)

        Return
        -------
        None

        Description
        -----------
        Sets the inner array <myvalue> of the realarray attribute to <newarray>. if value of <newarray> differs from <myvalue>, backup performed and myvalue refers to new instance of harray1ofreal that holds <newarray> values if <ischeckitems> equal true each item of <newarray> will be checked with each item of <myvalue> for coincidence (to avoid backup).

        """
        return _TDataStd.TDataStd_RealArray_ChangeArray(self, *args)

    def DumpToString(self):
        r"""DumpToString(TDataStd_RealArray self) -> std::string"""
        return _TDataStd.TDataStd_RealArray_DumpToString(self)

    def DumpJsonToString(self, depth=-1):
        r"""Json string serializer.Json string serializer."""
        return _TDataStd.TDataStd_RealArray_DumpJsonToString(self, depth)

    def GetDelta(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_RealArray_GetDelta(self, *args)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Class methods ============= returns the guid for arrays of reals.

        """
        return _TDataStd.TDataStd_RealArray_GetID(*args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        lower: int
        upper: int

        Return
        -------
        None

        Description
        -----------
        Initialize the inner array with bounds from <lower> to <upper>.

        """
        return _TDataStd.TDataStd_RealArray_Init(self, *args)

    def Length(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the number of elements of the array of reals in terms of the number of elements it contains.

        """
        return _TDataStd.TDataStd_RealArray_Length(self, *args)

    def Lower(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the lower boundary of the array.

        """
        return _TDataStd.TDataStd_RealArray_Lower(self, *args)

    @staticmethod
    def Set(*args):
        r"""

        Parameters
        ----------
        label: TDF_Label
        lower: int
        upper: int
        isDelta: bool (optional, default to Standard_False)

        Return
        -------
        opencascade::handle<TDataStd_RealArray>

        Description
        -----------
        Finds or creates on the <label> a real array attribute with the specified <lower> and <upper> boundaries. if <isdelta> == false, defaultdeltaonmodification is used. if <isdelta> == true, deltaonmodification of the current attribute is used. if attribute is already set, input parameter <isdelta> is refused and the found attribute returned.

        Parameters
        ----------
        label: TDF_Label
        theGuid: Standard_GUID
        lower: int
        upper: int
        isDelta: bool (optional, default to Standard_False)

        Return
        -------
        opencascade::handle<TDataStd_RealArray>

        Description
        -----------
        Finds, or creates, an realarray attribute with explicit user defined <guid>. the realarray attribute is returned.

        """
        return _TDataStd.TDataStd_RealArray_Set(*args)

    def SetDelta(self, *args):
        r"""

        Parameters
        ----------
        isDelta: bool

        Return
        -------
        None

        Description
        -----------
        For internal use only!.

        """
        return _TDataStd.TDataStd_RealArray_SetDelta(self, *args)

    def SetID(self, *args):
        r"""

        Parameters
        ----------
        theGuid: Standard_GUID

        Return
        -------
        None

        Description
        -----------
        Sets the explicit guid (user defined) for the attribute.
        Return
        -------
        None

        Description
        -----------
        Sets default guid for the attribute.

        """
        return _TDataStd.TDataStd_RealArray_SetID(self, *args)

    def SetValue(self, *args):
        r"""

        Parameters
        ----------
        Index: int
        Value: float

        Return
        -------
        None

        Description
        -----------
        Sets the <index>th element of the array to <value> outofrange exception is raised if <index> doesn't respect lower and upper bounds of the internal array.

        """
        return _TDataStd.TDataStd_RealArray_SetValue(self, *args)

    def Upper(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the upper boundary of the array.

        """
        return _TDataStd.TDataStd_RealArray_Upper(self, *args)

    def Value(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        float

        Description
        -----------
        Return the value of the <index>th element of the array.

        """
        return _TDataStd.TDataStd_RealArray_Value(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_RealArray_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_RealArray

# Register TDataStd_RealArray in _TDataStd:
_TDataStd.TDataStd_RealArray_swigregister(TDataStd_RealArray)
class TDataStd_RealList(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_RealList_swiginit(self, _TDataStd.new_TDataStd_RealList(*args))

    def Append(self, *args):
        r"""

        Parameters
        ----------
        value: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_RealList_Append(self, *args)

    def Clear(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_RealList_Clear(self, *args)

    def DumpToString(self):
        r"""DumpToString(TDataStd_RealList self) -> std::string"""
        return _TDataStd.TDataStd_RealList_DumpToString(self)

    def DumpJsonToString(self, depth=-1):
        r"""Json string serializer.Json string serializer."""
        return _TDataStd.TDataStd_RealList_DumpJsonToString(self, depth)

    def Extent(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_RealList_Extent(self, *args)

    def First(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_RealList_First(self, *args)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Static methods ============== returns the id of the list of doubles attribute.

        """
        return _TDataStd.TDataStd_RealList_GetID(*args)

    def InsertAfter(self, *args):
        r"""

        Parameters
        ----------
        value: float
        after_value: float

        Return
        -------
        bool

        Description
        -----------
        Inserts the <value> after the first meet of <after_value>.

        """
        return _TDataStd.TDataStd_RealList_InsertAfter(self, *args)

    def InsertAfterByIndex(self, *args):
        r"""

        Parameters
        ----------
        index: int
        after_value: float

        Return
        -------
        bool

        Description
        -----------
        Inserts the <value> after the <index> position. the indices start with 1 .. extent().

        """
        return _TDataStd.TDataStd_RealList_InsertAfterByIndex(self, *args)

    def InsertBefore(self, *args):
        r"""

        Parameters
        ----------
        value: float
        before_value: float

        Return
        -------
        bool

        Description
        -----------
        Inserts the <value> before the first meet of <before_value>.

        """
        return _TDataStd.TDataStd_RealList_InsertBefore(self, *args)

    def InsertBeforeByIndex(self, *args):
        r"""

        Parameters
        ----------
        index: int
        before_value: float

        Return
        -------
        bool

        Description
        -----------
        Inserts the <value> before the <index> position. the indices start with 1 .. extent().

        """
        return _TDataStd.TDataStd_RealList_InsertBeforeByIndex(self, *args)

    def IsEmpty(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_RealList_IsEmpty(self, *args)

    def Last(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_RealList_Last(self, *args)

    def List(self, *args):
        r"""
        Return
        -------
        TColStd_ListOfReal

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_RealList_List(self, *args)

    def Prepend(self, *args):
        r"""

        Parameters
        ----------
        value: float

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_RealList_Prepend(self, *args)

    def Remove(self, *args):
        r"""

        Parameters
        ----------
        value: float

        Return
        -------
        bool

        Description
        -----------
        Removes the first meet of the <value>.

        """
        return _TDataStd.TDataStd_RealList_Remove(self, *args)

    def RemoveByIndex(self, *args):
        r"""

        Parameters
        ----------
        index: int

        Return
        -------
        bool

        Description
        -----------
        Removes a value at <index> position.

        """
        return _TDataStd.TDataStd_RealList_RemoveByIndex(self, *args)

    @staticmethod
    def Set(*args):
        r"""

        Parameters
        ----------
        label: TDF_Label

        Return
        -------
        opencascade::handle<TDataStd_RealList>

        Description
        -----------
        Finds or creates a list of double values attribute.

        Parameters
        ----------
        label: TDF_Label
        theGuid: Standard_GUID

        Return
        -------
        opencascade::handle<TDataStd_RealList>

        Description
        -----------
        Finds or creates a list of double values attribute with explicit user defined <guid>.

        """
        return _TDataStd.TDataStd_RealList_Set(*args)

    def SetID(self, *args):
        r"""

        Parameters
        ----------
        theGuid: Standard_GUID

        Return
        -------
        None

        Description
        -----------
        Sets the explicit guid (user defined) for the attribute.
        Return
        -------
        None

        Description
        -----------
        Sets default guid for the attribute.

        """
        return _TDataStd.TDataStd_RealList_SetID(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_RealList_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_RealList

# Register TDataStd_RealList in _TDataStd:
_TDataStd.TDataStd_RealList_swigregister(TDataStd_RealList)
class TDataStd_ReferenceArray(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_ReferenceArray_swiginit(self, _TDataStd.new_TDataStd_ReferenceArray(*args))

    def DumpToString(self):
        r"""DumpToString(TDataStd_ReferenceArray self) -> std::string"""
        return _TDataStd.TDataStd_ReferenceArray_DumpToString(self)

    def DumpJsonToString(self, depth=-1):
        r"""Json string serializer.Json string serializer."""
        return _TDataStd.TDataStd_ReferenceArray_DumpJsonToString(self, depth)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Static methods ============== returns the id of the array of references (labels) attribute.

        """
        return _TDataStd.TDataStd_ReferenceArray_GetID(*args)

    def Init(self, *args):
        r"""

        Parameters
        ----------
        lower: int
        upper: int

        Return
        -------
        None

        Description
        -----------
        Initialize the inner array with bounds from <lower> to <upper>.

        """
        return _TDataStd.TDataStd_ReferenceArray_Init(self, *args)

    def InternalArray(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TDataStd_HLabelArray1>

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_ReferenceArray_InternalArray(self, *args)

    def Length(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the number of elements in the array.

        """
        return _TDataStd.TDataStd_ReferenceArray_Length(self, *args)

    def Lower(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the lower boundary of the array.

        """
        return _TDataStd.TDataStd_ReferenceArray_Lower(self, *args)

    @staticmethod
    def Set(*args):
        r"""

        Parameters
        ----------
        label: TDF_Label
        lower: int
        upper: int

        Return
        -------
        opencascade::handle<TDataStd_ReferenceArray>

        Description
        -----------
        Finds or creates an array of reference values (labels) attribute.

        Parameters
        ----------
        label: TDF_Label
        theGuid: Standard_GUID
        lower: int
        upper: int

        Return
        -------
        opencascade::handle<TDataStd_ReferenceArray>

        Description
        -----------
        Finds or creates an array of reference values (labels) attribute with explicit user defined <guid>.

        """
        return _TDataStd.TDataStd_ReferenceArray_Set(*args)

    def SetID(self, *args):
        r"""

        Parameters
        ----------
        theGuid: Standard_GUID

        Return
        -------
        None

        Description
        -----------
        Sets the explicit guid (user defined) for the attribute.
        Return
        -------
        None

        Description
        -----------
        Sets default guid for the attribute.

        """
        return _TDataStd.TDataStd_ReferenceArray_SetID(self, *args)

    def SetInternalArray(self, *args):
        r"""

        Parameters
        ----------
        values: TDataStd_HLabelArray1
        isCheckItems: bool (optional, default to Standard_True)

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_ReferenceArray_SetInternalArray(self, *args)

    def SetValue(self, *args):
        r"""

        Parameters
        ----------
        index: int
        value: TDF_Label

        Return
        -------
        None

        Description
        -----------
        Sets the <index>th element of the array to <value> outofrange exception is raised if <index> doesn't respect lower and upper bounds of the internal array.

        """
        return _TDataStd.TDataStd_ReferenceArray_SetValue(self, *args)

    def Upper(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the upper boundary of the array.

        """
        return _TDataStd.TDataStd_ReferenceArray_Upper(self, *args)

    def Value(self, *args):
        r"""

        Parameters
        ----------
        Index: int

        Return
        -------
        TDF_Label

        Description
        -----------
        Returns the value of the <index>th element of the array.

        """
        return _TDataStd.TDataStd_ReferenceArray_Value(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_ReferenceArray_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_ReferenceArray

# Register TDataStd_ReferenceArray in _TDataStd:
_TDataStd.TDataStd_ReferenceArray_swigregister(TDataStd_ReferenceArray)
class TDataStd_ReferenceList(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_ReferenceList_swiginit(self, _TDataStd.new_TDataStd_ReferenceList(*args))

    def Append(self, *args):
        r"""

        Parameters
        ----------
        value: TDF_Label

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_ReferenceList_Append(self, *args)

    def Clear(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_ReferenceList_Clear(self, *args)

    def DumpToString(self):
        r"""DumpToString(TDataStd_ReferenceList self) -> std::string"""
        return _TDataStd.TDataStd_ReferenceList_DumpToString(self)

    def DumpJsonToString(self, depth=-1):
        r"""Json string serializer.Json string serializer."""
        return _TDataStd.TDataStd_ReferenceList_DumpJsonToString(self, depth)

    def Extent(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_ReferenceList_Extent(self, *args)

    def First(self, *args):
        r"""
        Return
        -------
        TDF_Label

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_ReferenceList_First(self, *args)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Static methods ============== returns the id of the list of references (labels) attribute.

        """
        return _TDataStd.TDataStd_ReferenceList_GetID(*args)

    def InsertAfter(self, *args):
        r"""

        Parameters
        ----------
        value: TDF_Label
        after_value: TDF_Label

        Return
        -------
        bool

        Description
        -----------
        Inserts the <value> after the first meet of <after_value>.

        Parameters
        ----------
        index: int
        after_value: TDF_Label

        Return
        -------
        bool

        Description
        -----------
        Inserts the label after the <index> position. the indices start with 1 .. extent().

        """
        return _TDataStd.TDataStd_ReferenceList_InsertAfter(self, *args)

    def InsertBefore(self, *args):
        r"""

        Parameters
        ----------
        value: TDF_Label
        before_value: TDF_Label

        Return
        -------
        bool

        Description
        -----------
        Inserts the <value> before the first meet of <before_value>.

        Parameters
        ----------
        index: int
        before_value: TDF_Label

        Return
        -------
        bool

        Description
        -----------
        Inserts the label before the <index> position. the indices start with 1 .. extent().

        """
        return _TDataStd.TDataStd_ReferenceList_InsertBefore(self, *args)

    def IsEmpty(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_ReferenceList_IsEmpty(self, *args)

    def Last(self, *args):
        r"""
        Return
        -------
        TDF_Label

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_ReferenceList_Last(self, *args)

    def List(self, *args):
        r"""
        Return
        -------
        TDF_LabelList

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_ReferenceList_List(self, *args)

    def Prepend(self, *args):
        r"""

        Parameters
        ----------
        value: TDF_Label

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_ReferenceList_Prepend(self, *args)

    def Remove(self, *args):
        r"""

        Parameters
        ----------
        value: TDF_Label

        Return
        -------
        bool

        Description
        -----------
        Removes the first meet of the <value>.

        Parameters
        ----------
        index: int

        Return
        -------
        bool

        Description
        -----------
        Removes a label at 'index' position.

        """
        return _TDataStd.TDataStd_ReferenceList_Remove(self, *args)

    @staticmethod
    def Set(*args):
        r"""

        Parameters
        ----------
        label: TDF_Label

        Return
        -------
        opencascade::handle<TDataStd_ReferenceList>

        Description
        -----------
        Finds or creates a list of reference values (labels) attribute.

        Parameters
        ----------
        label: TDF_Label
        theGuid: Standard_GUID

        Return
        -------
        opencascade::handle<TDataStd_ReferenceList>

        Description
        -----------
        Finds or creates a list of reference values (labels) attribute with explicit user defined <guid>.

        """
        return _TDataStd.TDataStd_ReferenceList_Set(*args)

    def SetID(self, *args):
        r"""

        Parameters
        ----------
        theGuid: Standard_GUID

        Return
        -------
        None

        Description
        -----------
        Sets the explicit guid (user defined) for the attribute.
        Return
        -------
        None

        Description
        -----------
        Sets default guid for the attribute.

        """
        return _TDataStd.TDataStd_ReferenceList_SetID(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_ReferenceList_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_ReferenceList

# Register TDataStd_ReferenceList in _TDataStd:
_TDataStd.TDataStd_ReferenceList_swigregister(TDataStd_ReferenceList)
class TDataStd_TreeNode(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_TreeNode_swiginit(self, _TDataStd.new_TDataStd_TreeNode(*args))

    def Append(self, *args):
        r"""

        Parameters
        ----------
        Child: TDataStd_TreeNode

        Return
        -------
        bool

        Description
        -----------
        Insert the treenode <child> as last child of <self>. if the insertion is successful <self> becomes the father of <child>.

        """
        return _TDataStd.TDataStd_TreeNode_Append(self, *args)

    def Depth(self, *args):
        r"""
        Return
        -------
        int

        Description
        -----------
        Returns the depth of this tree node in the overall tree node structure. in other words, the number of father tree nodes of this one is returned.

        """
        return _TDataStd.TDataStd_TreeNode_Depth(self, *args)

    def DumpToString(self):
        r"""DumpToString(TDataStd_TreeNode self) -> std::string"""
        return _TDataStd.TDataStd_TreeNode_DumpToString(self)

    def DumpJsonToString(self, depth=-1):
        r"""Json string serializer.Json string serializer."""
        return _TDataStd.TDataStd_TreeNode_DumpJsonToString(self, depth)

    def Father(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TDataStd_TreeNode>

        Description
        -----------
        Returns the father treenode of <self>. null if root.

        """
        return _TDataStd.TDataStd_TreeNode_Father(self, *args)

    @staticmethod
    def Find(*args):
        r"""

        Parameters
        ----------
        L: TDF_Label
        T: TDataStd_TreeNode

        Return
        -------
        bool

        Description
        -----------
        Class methods working on the node =================================== returns true if the tree node t is found on the label l. otherwise, false is returned.

        """
        return _TDataStd.TDataStd_TreeNode_Find(*args)

    def FindLast(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TDataStd_TreeNode>

        Description
        -----------
        Returns the last child tree node in this tree node object. to set fields =============.

        """
        return _TDataStd.TDataStd_TreeNode_FindLast(self, *args)

    def First(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TDataStd_TreeNode>

        Description
        -----------
        Returns the first child tree node in this tree node object.

        """
        return _TDataStd.TDataStd_TreeNode_First(self, *args)

    @staticmethod
    def GetDefaultTreeID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Returns a default tree id. this id is used by the <set> method without explicit tree id. instance methods: ================.

        """
        return _TDataStd.TDataStd_TreeNode_GetDefaultTreeID(*args)

    def HasFather(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if this tree node attribute has a father tree node.

        """
        return _TDataStd.TDataStd_TreeNode_HasFather(self, *args)

    def HasFirst(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if this tree node attribute has a first child tree node.

        """
        return _TDataStd.TDataStd_TreeNode_HasFirst(self, *args)

    def HasLast(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if this tree node attribute has a last child tree node.

        """
        return _TDataStd.TDataStd_TreeNode_HasLast(self, *args)

    def HasNext(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if this tree node attribute has a next tree node.

        """
        return _TDataStd.TDataStd_TreeNode_HasNext(self, *args)

    def HasPrevious(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if this tree node attribute has a previous tree node.

        """
        return _TDataStd.TDataStd_TreeNode_HasPrevious(self, *args)

    def InsertAfter(self, *args):
        r"""

        Parameters
        ----------
        Node: TDataStd_TreeNode

        Return
        -------
        bool

        Description
        -----------
        Inserts the treenode <node> after <self>. if insertion is successful <self> and <node> belongs to the same father.

        """
        return _TDataStd.TDataStd_TreeNode_InsertAfter(self, *args)

    def InsertBefore(self, *args):
        r"""

        Parameters
        ----------
        Node: TDataStd_TreeNode

        Return
        -------
        bool

        Description
        -----------
        Inserts the treenode <node> before <self>. if insertion is successful <self> and <node> belongs to the same father.

        """
        return _TDataStd.TDataStd_TreeNode_InsertBefore(self, *args)

    def IsAscendant(self, *args):
        r"""

        Parameters
        ----------
        of: TDataStd_TreeNode

        Return
        -------
        bool

        Description
        -----------
        Returns true if this tree node attribute is an ascendant of of. in other words, if it is a father or the father of a father of of.

        """
        return _TDataStd.TDataStd_TreeNode_IsAscendant(self, *args)

    def IsChild(self, *args):
        r"""

        Parameters
        ----------
        of: TDataStd_TreeNode

        Return
        -------
        bool

        Description
        -----------
        Returns true if this tree node attribute is a child of of.

        """
        return _TDataStd.TDataStd_TreeNode_IsChild(self, *args)

    def IsDescendant(self, *args):
        r"""

        Parameters
        ----------
        of: TDataStd_TreeNode

        Return
        -------
        bool

        Description
        -----------
        Returns true if this tree node attribute is a descendant of of. in other words, if it is a child or the child of a child of of.

        """
        return _TDataStd.TDataStd_TreeNode_IsDescendant(self, *args)

    def IsFather(self, *args):
        r"""

        Parameters
        ----------
        of: TDataStd_TreeNode

        Return
        -------
        bool

        Description
        -----------
        Returns true if this tree node attribute is a father of of.

        """
        return _TDataStd.TDataStd_TreeNode_IsFather(self, *args)

    def IsRoot(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if this tree node attribute is the ultimate father in the tree.

        """
        return _TDataStd.TDataStd_TreeNode_IsRoot(self, *args)

    def Last(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TDataStd_TreeNode>

        Description
        -----------
        Returns the last child tree node in this tree node object.

        """
        return _TDataStd.TDataStd_TreeNode_Last(self, *args)

    def NbChildren(self, *args):
        r"""

        Parameters
        ----------
        allLevels: bool (optional, default to Standard_False)

        Return
        -------
        int

        Description
        -----------
        Returns the number of child nodes. if <alllevels> is true, the method counts children of all levels (children of children ...).

        """
        return _TDataStd.TDataStd_TreeNode_NbChildren(self, *args)

    def Next(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TDataStd_TreeNode>

        Description
        -----------
        Returns the next tree node in this tree node attribute. warning this tree node is null if it is the last one in this tree node attribute.returns the next treenode of <self>. null if last.

        """
        return _TDataStd.TDataStd_TreeNode_Next(self, *args)

    def Prepend(self, *args):
        r"""

        Parameters
        ----------
        Child: TDataStd_TreeNode

        Return
        -------
        bool

        Description
        -----------
        Insert the the treenode <child> as first child of <self>. if the insertion is successful <self> becomes the father of <child>.

        """
        return _TDataStd.TDataStd_TreeNode_Prepend(self, *args)

    def Previous(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TDataStd_TreeNode>

        Description
        -----------
        Returns the previous tree node of this tree node attribute. warning this tree node is null if it is the first one in this tree node attribute.

        """
        return _TDataStd.TDataStd_TreeNode_Previous(self, *args)

    def Remove(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Removes this tree node attribute from its father node. the result is that this attribute becomes a root node.

        """
        return _TDataStd.TDataStd_TreeNode_Remove(self, *args)

    def Root(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TDataStd_TreeNode>

        Description
        -----------
        Returns the ultimate father of this tree node attribute.

        """
        return _TDataStd.TDataStd_TreeNode_Root(self, *args)

    @staticmethod
    def Set(*args):
        r"""

        Parameters
        ----------
        L: TDF_Label

        Return
        -------
        opencascade::handle<TDataStd_TreeNode>

        Description
        -----------
        Finds or creates a treenode attribute on the label <l> with the default tree id, returned by the method <getdefaulttreeid>. returns the created/found treenode attribute.

        Parameters
        ----------
        L: TDF_Label
        ExplicitTreeID: Standard_GUID

        Return
        -------
        opencascade::handle<TDataStd_TreeNode>

        Description
        -----------
        Finds or creates a treenode attribute on the label <l>, with an explicit tree id. <explicittreeid> is the id returned by <tdf_attribute::id> method. returns the found/created treenode attribute.

        """
        return _TDataStd.TDataStd_TreeNode_Set(*args)

    def SetFather(self, *args):
        r"""

        Parameters
        ----------
        F: TDataStd_TreeNode

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_TreeNode_SetFather(self, *args)

    def SetFirst(self, *args):
        r"""

        Parameters
        ----------
        F: TDataStd_TreeNode

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_TreeNode_SetFirst(self, *args)

    def SetLast(self, *args):
        r"""

        Parameters
        ----------
        F: TDataStd_TreeNode

        Return
        -------
        None

        Description
        -----------
        Treenode callback: ==================.

        """
        return _TDataStd.TDataStd_TreeNode_SetLast(self, *args)

    def SetNext(self, *args):
        r"""

        Parameters
        ----------
        F: TDataStd_TreeNode

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_TreeNode_SetNext(self, *args)

    def SetPrevious(self, *args):
        r"""

        Parameters
        ----------
        F: TDataStd_TreeNode

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_TreeNode_SetPrevious(self, *args)

    def SetTreeID(self, *args):
        r"""

        Parameters
        ----------
        explicitID: Standard_GUID

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_TreeNode_SetTreeID(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_TreeNode_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_TreeNode

# Register TDataStd_TreeNode in _TDataStd:
_TDataStd.TDataStd_TreeNode_swigregister(TDataStd_TreeNode)
class TDataStd_UAttribute(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_UAttribute_swiginit(self, _TDataStd.new_TDataStd_UAttribute(*args))

    def DumpToString(self):
        r"""DumpToString(TDataStd_UAttribute self) -> std::string"""
        return _TDataStd.TDataStd_UAttribute_DumpToString(self)

    def DumpJsonToString(self, depth=-1):
        r"""Json string serializer.Json string serializer."""
        return _TDataStd.TDataStd_UAttribute_DumpJsonToString(self, depth)

    @staticmethod
    def Set(*args):
        r"""

        Parameters
        ----------
        label: TDF_Label
        LocalID: Standard_GUID

        Return
        -------
        opencascade::handle<TDataStd_UAttribute>

        Description
        -----------
        Api class methods ============= find, or create, a uattribute attribute with <localid> as local guid. the uattribute attribute is returned. uattribute methods ============.

        """
        return _TDataStd.TDataStd_UAttribute_Set(*args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_UAttribute_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_UAttribute

# Register TDataStd_UAttribute in _TDataStd:
_TDataStd.TDataStd_UAttribute_swigregister(TDataStd_UAttribute)
class TDataStd_Variable(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_Variable_swiginit(self, _TDataStd.new_TDataStd_Variable(*args))

    def Assign(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TDataStd_Expression>

        Description
        -----------
        Create(if doesn't exist) and returns the assigned expression attribute. fill it after.

        """
        return _TDataStd.TDataStd_Variable_Assign(self, *args)

    def Constant(self, *args):
        r"""

        Parameters
        ----------
        status: bool

        Return
        -------
        None

        Description
        -----------
        If <status> is true, this variable will not be modified by the solver.

        """
        return _TDataStd.TDataStd_Variable_Constant(self, *args)

    def Desassign(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        If <self> is assigned delete the associated expression attribute.

        """
        return _TDataStd.TDataStd_Variable_Desassign(self, *args)

    def DumpToString(self):
        r"""DumpToString(TDataStd_Variable self) -> std::string"""
        return _TDataStd.TDataStd_Variable_DumpToString(self)

    def DumpJsonToString(self, depth=-1):
        r"""Json string serializer.Json string serializer."""
        return _TDataStd.TDataStd_Variable_DumpJsonToString(self, depth)

    def Expression(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TDataStd_Expression>

        Description
        -----------
        If <self> is assigned, returns associated expression attribute.

        """
        return _TDataStd.TDataStd_Variable_Expression(self, *args)

    def Get(self, *args):
        r"""
        Return
        -------
        float

        Description
        -----------
        Returns value stored in associated real attribute.

        """
        return _TDataStd.TDataStd_Variable_Get(self, *args)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Class methods =============.

        """
        return _TDataStd.TDataStd_Variable_GetID(*args)

    def IsAssigned(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if an expression attribute is associated. create(if doesn't exist), set and returns the assigned expression attribute.

        """
        return _TDataStd.TDataStd_Variable_IsAssigned(self, *args)

    def IsCaptured(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Shortcut for <real()->iscaptured()>.

        """
        return _TDataStd.TDataStd_Variable_IsCaptured(self, *args)

    def IsConstant(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        A constant value is not modified by regeneration.

        """
        return _TDataStd.TDataStd_Variable_IsConstant(self, *args)

    def IsValued(self, *args):
        r"""
        Return
        -------
        bool

        Description
        -----------
        Returns true if a real attribute is associated.

        """
        return _TDataStd.TDataStd_Variable_IsValued(self, *args)

    def Name(self, *args):
        r"""

        Parameters
        ----------
        string: str

        Return
        -------
        None

        Description
        -----------
        Set or change the name of the variable, in myunknown and my associated name attribute.
        Return
        -------
        TCollection_ExtendedString

        Description
        -----------
        Returns string stored in the associated name attribute.

        """
        return _TDataStd.TDataStd_Variable_Name(self, *args)

    def Real(self, *args):
        r"""
        Return
        -------
        opencascade::handle<TDataStd_Real>

        Description
        -----------
        Returns associated real attribute.

        """
        return _TDataStd.TDataStd_Variable_Real(self, *args)

    def Set(self, *args):
        r"""

        Parameters
        ----------
        label: TDF_Label

        Return
        -------
        opencascade::handle<TDataStd_Variable>

        Description
        -----------
        Find, or create, a variable attribute. real methods ============.

        Parameters
        ----------
        value: float

        Return
        -------
        None

        Description
        -----------
        Retrieve or create the associated real attribute and set the value <value>.

        Parameters
        ----------
        value: float
        dimension: TDataStd_RealEnum

        Return
        -------
        None

        Description
        -----------
        Obsolete method that will be removed in next versions. the dimension argument is not supported in the persistence mechanism.

        """
        return _TDataStd.TDataStd_Variable_Set(self, *args)

    def Unit(self, *args):
        r"""

        Parameters
        ----------
        unit: str

        Return
        -------
        None

        Description
        -----------
        No available documentation.
        Return
        -------
        TCollection_AsciiString

        Description
        -----------
        To read/write fields ===================.

        """
        return _TDataStd.TDataStd_Variable_Unit(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_Variable_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_Variable

# Register TDataStd_Variable in _TDataStd:
_TDataStd.TDataStd_Variable_swigregister(TDataStd_Variable)
class TDataStd_Comment(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_Comment_swiginit(self, _TDataStd.new_TDataStd_Comment(*args))

    def DumpToString(self):
        r"""DumpToString(TDataStd_Comment self) -> std::string"""
        return _TDataStd.TDataStd_Comment_DumpToString(self)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Class methods ============= returns the guid for comments.

        """
        return _TDataStd.TDataStd_Comment_GetID(*args)

    def Set(self, *args):
        r"""

        Parameters
        ----------
        label: TDF_Label

        Return
        -------
        opencascade::handle<TDataStd_Comment>

        Description
        -----------
        Find, or create a comment attribute. the comment attribute is returned.

        Parameters
        ----------
        label: TDF_Label
        string: str

        Return
        -------
        opencascade::handle<TDataStd_Comment>

        Description
        -----------
        Finds, or creates a comment attribute and sets the string. the comment attribute is returned. comment methods ============.

        Parameters
        ----------
        S: str

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_Comment_Set(self, *args)

    def SetID(self, *args):
        r"""

        Parameters
        ----------
        guid: Standard_GUID

        Return
        -------
        None

        Description
        -----------
        Sets the explicit user defined guid to the attribute.
        Return
        -------
        None

        Description
        -----------
        Sets default guid for the attribute.

        """
        return _TDataStd.TDataStd_Comment_SetID(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_Comment_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_Comment

# Register TDataStd_Comment in _TDataStd:
_TDataStd.TDataStd_Comment_swigregister(TDataStd_Comment)
class TDataStd_Directory(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_Directory_swiginit(self, _TDataStd.new_TDataStd_Directory(*args))

    @staticmethod
    def AddDirectory(*args):
        r"""

        Parameters
        ----------
        dir: TDataStd_Directory

        Return
        -------
        opencascade::handle<TDataStd_Directory>

        Description
        -----------
        Creates a new sub-label and sets the sub-directory dir on that label.

        """
        return _TDataStd.TDataStd_Directory_AddDirectory(*args)

    def DumpToString(self):
        r"""DumpToString(TDataStd_Directory self) -> std::string"""
        return _TDataStd.TDataStd_Directory_DumpToString(self)

    @staticmethod
    def Find(*args):
        r"""

        Parameters
        ----------
        current: TDF_Label
        D: TDataStd_Directory

        Return
        -------
        bool

        Description
        -----------
        Class methods ============= searches for a directory attribute on the label current, or on one of the father labels of current. if a directory attribute is found, true is returned, and the attribute found is set as d.

        """
        return _TDataStd.TDataStd_Directory_Find(*args)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Directory methods ===============.

        """
        return _TDataStd.TDataStd_Directory_GetID(*args)

    def ID(self, *args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_Directory_ID(self, *args)

    @staticmethod
    def MakeObjectLabel(*args):
        r"""

        Parameters
        ----------
        dir: TDataStd_Directory

        Return
        -------
        TDF_Label

        Description
        -----------
        Makes new label and returns it to insert other object attributes (sketch,part...etc...).

        """
        return _TDataStd.TDataStd_Directory_MakeObjectLabel(*args)

    @staticmethod
    def New(*args):
        r"""

        Parameters
        ----------
        label: TDF_Label

        Return
        -------
        opencascade::handle<TDataStd_Directory>

        Description
        -----------
        Creates an empty directory attribute, located at <label>. raises if <label> has attribute.

        """
        return _TDataStd.TDataStd_Directory_New(*args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_Directory_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_Directory

# Register TDataStd_Directory in _TDataStd:
_TDataStd.TDataStd_Directory_swigregister(TDataStd_Directory)
class TDataStd_Name(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_Name_swiginit(self, _TDataStd.new_TDataStd_Name(*args))

    def DumpToString(self):
        r"""DumpToString(TDataStd_Name self) -> std::string"""
        return _TDataStd.TDataStd_Name_DumpToString(self)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Class methods working on the name itself ======================================== returns the guid for name attributes.

        """
        return _TDataStd.TDataStd_Name_GetID(*args)

    def Set(self, *args):
        r"""

        Parameters
        ----------
        label: TDF_Label
        string: str

        Return
        -------
        opencascade::handle<TDataStd_Name>

        Description
        -----------
        Creates (if does not exist) and sets the name in the name attribute. from any label <l> search in father labels (l is not concerned) the first name attribute.if found set it in <father>. class methods working on the name tree ====================================== search in the whole tdf_data the name attribute which fit with <fullpath>. returns true if found. search under <currentlabel> a label which fit with <name>. returns true if found. shortcut which avoids building a listofextendedstrin. search in the whole tdf_data the label which fit with name returns true if found. tools methods to translate path <-> pathlist =========================================== move to draw for draw test we may provide this tool method which convert a path in a sequence of string to call after the findlabel methods. example: if it's given 'assembly:part_1:sketch_5' it will return in <pathlist> the list of 3 strings: 'assembly','part_1','sketch_5'. move to draw from <pathlist> build the string path name methods ============.

        Parameters
        ----------
        label: TDF_Label
        guid: Standard_GUID
        string: str

        Return
        -------
        opencascade::handle<TDataStd_Name>

        Description
        -----------
        Finds, or creates, a name attribute with explicit user defined <guid> and sets <string>. the name attribute is returned. .

        Parameters
        ----------
        S: str

        Return
        -------
        None

        Description
        -----------
        Sets <s> as name. raises if <s> is not a valid name.

        """
        return _TDataStd.TDataStd_Name_Set(self, *args)

    def SetID(self, *args):
        r"""

        Parameters
        ----------
        guid: Standard_GUID

        Return
        -------
        None

        Description
        -----------
        Sets the explicit user defined guid to the attribute.
        Return
        -------
        None

        Description
        -----------
        Sets default guid for the attribute.

        """
        return _TDataStd.TDataStd_Name_SetID(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_Name_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_Name

# Register TDataStd_Name in _TDataStd:
_TDataStd.TDataStd_Name_swigregister(TDataStd_Name)
class TDataStd_NoteBook(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_NoteBook_swiginit(self, _TDataStd.new_TDataStd_NoteBook(*args))

    def Append(self, *args):
        r"""

        Parameters
        ----------
        value: float
        isExported: bool (optional, default to Standard_False)

        Return
        -------
        opencascade::handle<TDataStd_Real>

        Description
        -----------
        Tool to create an integer attribute from <value>, insert it in a new son label of <self>. the real attribute is returned.

        Parameters
        ----------
        value: int
        isExported: bool (optional, default to Standard_False)

        Return
        -------
        opencascade::handle<TDataStd_Integer>

        Description
        -----------
        Tool to create an real attribute from <value>, insert it in a new son label of <self>. the integer attribute is returned.

        """
        return _TDataStd.TDataStd_NoteBook_Append(self, *args)

    def DumpToString(self):
        r"""DumpToString(TDataStd_NoteBook self) -> std::string"""
        return _TDataStd.TDataStd_NoteBook_DumpToString(self)

    @staticmethod
    def Find(*args):
        r"""

        Parameters
        ----------
        current: TDF_Label
        N: TDataStd_NoteBook

        Return
        -------
        bool

        Description
        -----------
        Class methods ============= try to retrieve a notebook attribute at <current> label or in fathers label of <current>. returns true if found and set <n>.

        """
        return _TDataStd.TDataStd_NoteBook_Find(*args)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Notebook methods ===============.

        """
        return _TDataStd.TDataStd_NoteBook_GetID(*args)

    def ID(self, *args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_NoteBook_ID(self, *args)

    @staticmethod
    def New(*args):
        r"""

        Parameters
        ----------
        label: TDF_Label

        Return
        -------
        opencascade::handle<TDataStd_NoteBook>

        Description
        -----------
        Create an enpty notebook attribute, located at <label>. raises if <label> has attribute.

        """
        return _TDataStd.TDataStd_NoteBook_New(*args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_NoteBook_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_NoteBook

# Register TDataStd_NoteBook in _TDataStd:
_TDataStd.TDataStd_NoteBook_swigregister(TDataStd_NoteBook)
class TDataStd_Relation(TDataStd_Expression):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_Relation_swiginit(self, _TDataStd.new_TDataStd_Relation(*args))

    def DumpToString(self):
        r"""DumpToString(TDataStd_Relation self) -> std::string"""
        return _TDataStd.TDataStd_Relation_DumpToString(self)

    def DumpJsonToString(self, depth=-1):
        r"""Json string serializer.Json string serializer."""
        return _TDataStd.TDataStd_Relation_DumpJsonToString(self, depth)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Class methods =============.

        """
        return _TDataStd.TDataStd_Relation_GetID(*args)

    def GetRelation(self, *args):
        r"""
        Return
        -------
        TCollection_ExtendedString

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_Relation_GetRelation(self, *args)

    @staticmethod
    def Set(*args):
        r"""

        Parameters
        ----------
        label: TDF_Label

        Return
        -------
        opencascade::handle<TDataStd_Relation>

        Description
        -----------
        Find, or create, an relation attribute. real methods ============.

        """
        return _TDataStd.TDataStd_Relation_Set(*args)

    def SetRelation(self, *args):
        r"""

        Parameters
        ----------
        E: str

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_Relation_SetRelation(self, *args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_Relation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_Relation

# Register TDataStd_Relation in _TDataStd:
_TDataStd.TDataStd_Relation_swigregister(TDataStd_Relation)
class TDataStd_Tick(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _TDataStd.TDataStd_Tick_swiginit(self, _TDataStd.new_TDataStd_Tick(*args))

    def DumpToString(self):
        r"""DumpToString(TDataStd_Tick self) -> std::string"""
        return _TDataStd.TDataStd_Tick_DumpToString(self)

    @staticmethod
    def GetID(*args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        Static methods ==============.

        """
        return _TDataStd.TDataStd_Tick_GetID(*args)

    def ID(self, *args):
        r"""
        Return
        -------
        Standard_GUID

        Description
        -----------
        No available documentation.

        """
        return _TDataStd.TDataStd_Tick_ID(self, *args)

    @staticmethod
    def Set(*args):
        r"""

        Parameters
        ----------
        label: TDF_Label

        Return
        -------
        opencascade::handle<TDataStd_Tick>

        Description
        -----------
        Find, or create, a tick attribute. tick methods ============.

        """
        return _TDataStd.TDataStd_Tick_Set(*args)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_Tick_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_Tick

# Register TDataStd_Tick in _TDataStd:
_TDataStd.TDataStd_Tick_swigregister(TDataStd_Tick)

@classnotwrapped
class TDataStd_GenericEmpty:
	pass

@classnotwrapped
class TDataStd_GenericExtString:
	pass


class TDataStd_HLabelArray1(TDataStd_LabelArray1, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TDataStd.TDataStd_HLabelArray1_swiginit(self, _TDataStd.new_TDataStd_HLabelArray1(*args))

    def Array1(self):
        return _TDataStd.TDataStd_HLabelArray1_Array1(self)

    def ChangeArray1(self):
        return _TDataStd.TDataStd_HLabelArray1_ChangeArray1(self)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_HLabelArray1_DownCast(t)

    __swig_destroy__ = _TDataStd.delete_TDataStd_HLabelArray1

# Register TDataStd_HLabelArray1 in _TDataStd:
_TDataStd.TDataStd_HLabelArray1_swigregister(TDataStd_HLabelArray1)



@deprecated
def tdatastd_IDList(*args):
	return tdatastd.IDList(*args)

@deprecated
def TDataStd_AsciiString_GetID(*args):
	return TDataStd_AsciiString.GetID(*args)

@deprecated
def TDataStd_AsciiString_Set(*args):
	return TDataStd_AsciiString.Set(*args)

@deprecated
def TDataStd_AsciiString_Set(*args):
	return TDataStd_AsciiString.Set(*args)

@deprecated
def TDataStd_BooleanArray_GetID(*args):
	return TDataStd_BooleanArray.GetID(*args)

@deprecated
def TDataStd_BooleanArray_Set(*args):
	return TDataStd_BooleanArray.Set(*args)

@deprecated
def TDataStd_BooleanArray_Set(*args):
	return TDataStd_BooleanArray.Set(*args)

@deprecated
def TDataStd_BooleanList_GetID(*args):
	return TDataStd_BooleanList.GetID(*args)

@deprecated
def TDataStd_BooleanList_Set(*args):
	return TDataStd_BooleanList.Set(*args)

@deprecated
def TDataStd_BooleanList_Set(*args):
	return TDataStd_BooleanList.Set(*args)

@deprecated
def TDataStd_ByteArray_GetID(*args):
	return TDataStd_ByteArray.GetID(*args)

@deprecated
def TDataStd_ByteArray_Set(*args):
	return TDataStd_ByteArray.Set(*args)

@deprecated
def TDataStd_ByteArray_Set(*args):
	return TDataStd_ByteArray.Set(*args)

@deprecated
def TDataStd_Current_Get(*args):
	return TDataStd_Current.Get(*args)

@deprecated
def TDataStd_Current_GetID(*args):
	return TDataStd_Current.GetID(*args)

@deprecated
def TDataStd_Current_Has(*args):
	return TDataStd_Current.Has(*args)

@deprecated
def TDataStd_Current_Set(*args):
	return TDataStd_Current.Set(*args)

@deprecated
def TDataStd_Expression_GetID(*args):
	return TDataStd_Expression.GetID(*args)

@deprecated
def TDataStd_Expression_Set(*args):
	return TDataStd_Expression.Set(*args)

@deprecated
def TDataStd_ExtStringArray_GetID(*args):
	return TDataStd_ExtStringArray.GetID(*args)

@deprecated
def TDataStd_ExtStringArray_Set(*args):
	return TDataStd_ExtStringArray.Set(*args)

@deprecated
def TDataStd_ExtStringArray_Set(*args):
	return TDataStd_ExtStringArray.Set(*args)

@deprecated
def TDataStd_ExtStringList_GetID(*args):
	return TDataStd_ExtStringList.GetID(*args)

@deprecated
def TDataStd_ExtStringList_Set(*args):
	return TDataStd_ExtStringList.Set(*args)

@deprecated
def TDataStd_ExtStringList_Set(*args):
	return TDataStd_ExtStringList.Set(*args)

@deprecated
def TDataStd_IntPackedMap_GetID(*args):
	return TDataStd_IntPackedMap.GetID(*args)

@deprecated
def TDataStd_IntPackedMap_Set(*args):
	return TDataStd_IntPackedMap.Set(*args)

@deprecated
def TDataStd_Integer_GetID(*args):
	return TDataStd_Integer.GetID(*args)

@deprecated
def TDataStd_Integer_Set(*args):
	return TDataStd_Integer.Set(*args)

@deprecated
def TDataStd_Integer_Set(*args):
	return TDataStd_Integer.Set(*args)

@deprecated
def TDataStd_IntegerArray_GetID(*args):
	return TDataStd_IntegerArray.GetID(*args)

@deprecated
def TDataStd_IntegerArray_Set(*args):
	return TDataStd_IntegerArray.Set(*args)

@deprecated
def TDataStd_IntegerArray_Set(*args):
	return TDataStd_IntegerArray.Set(*args)

@deprecated
def TDataStd_IntegerList_GetID(*args):
	return TDataStd_IntegerList.GetID(*args)

@deprecated
def TDataStd_IntegerList_Set(*args):
	return TDataStd_IntegerList.Set(*args)

@deprecated
def TDataStd_IntegerList_Set(*args):
	return TDataStd_IntegerList.Set(*args)

@deprecated
def TDataStd_NamedData_GetID(*args):
	return TDataStd_NamedData.GetID(*args)

@deprecated
def TDataStd_NamedData_Set(*args):
	return TDataStd_NamedData.Set(*args)

@deprecated
def TDataStd_Real_GetID(*args):
	return TDataStd_Real.GetID(*args)

@deprecated
def TDataStd_Real_Set(*args):
	return TDataStd_Real.Set(*args)

@deprecated
def TDataStd_Real_Set(*args):
	return TDataStd_Real.Set(*args)

@deprecated
def TDataStd_RealArray_GetID(*args):
	return TDataStd_RealArray.GetID(*args)

@deprecated
def TDataStd_RealArray_Set(*args):
	return TDataStd_RealArray.Set(*args)

@deprecated
def TDataStd_RealArray_Set(*args):
	return TDataStd_RealArray.Set(*args)

@deprecated
def TDataStd_RealList_GetID(*args):
	return TDataStd_RealList.GetID(*args)

@deprecated
def TDataStd_RealList_Set(*args):
	return TDataStd_RealList.Set(*args)

@deprecated
def TDataStd_RealList_Set(*args):
	return TDataStd_RealList.Set(*args)

@deprecated
def TDataStd_ReferenceArray_GetID(*args):
	return TDataStd_ReferenceArray.GetID(*args)

@deprecated
def TDataStd_ReferenceArray_Set(*args):
	return TDataStd_ReferenceArray.Set(*args)

@deprecated
def TDataStd_ReferenceArray_Set(*args):
	return TDataStd_ReferenceArray.Set(*args)

@deprecated
def TDataStd_ReferenceList_GetID(*args):
	return TDataStd_ReferenceList.GetID(*args)

@deprecated
def TDataStd_ReferenceList_Set(*args):
	return TDataStd_ReferenceList.Set(*args)

@deprecated
def TDataStd_ReferenceList_Set(*args):
	return TDataStd_ReferenceList.Set(*args)

@deprecated
def TDataStd_TreeNode_Find(*args):
	return TDataStd_TreeNode.Find(*args)

@deprecated
def TDataStd_TreeNode_GetDefaultTreeID(*args):
	return TDataStd_TreeNode.GetDefaultTreeID(*args)

@deprecated
def TDataStd_TreeNode_Set(*args):
	return TDataStd_TreeNode.Set(*args)

@deprecated
def TDataStd_TreeNode_Set(*args):
	return TDataStd_TreeNode.Set(*args)

@deprecated
def TDataStd_UAttribute_Set(*args):
	return TDataStd_UAttribute.Set(*args)

@deprecated
def TDataStd_Variable_GetID(*args):
	return TDataStd_Variable.GetID(*args)

@deprecated
def TDataStd_Variable_Set(*args):
	return TDataStd_Variable.Set(*args)

@deprecated
def TDataStd_Comment_GetID(*args):
	return TDataStd_Comment.GetID(*args)

@deprecated
def TDataStd_Comment_Set(*args):
	return TDataStd_Comment.Set(*args)

@deprecated
def TDataStd_Comment_Set(*args):
	return TDataStd_Comment.Set(*args)

@deprecated
def TDataStd_Directory_AddDirectory(*args):
	return TDataStd_Directory.AddDirectory(*args)

@deprecated
def TDataStd_Directory_Find(*args):
	return TDataStd_Directory.Find(*args)

@deprecated
def TDataStd_Directory_GetID(*args):
	return TDataStd_Directory.GetID(*args)

@deprecated
def TDataStd_Directory_MakeObjectLabel(*args):
	return TDataStd_Directory.MakeObjectLabel(*args)

@deprecated
def TDataStd_Directory_New(*args):
	return TDataStd_Directory.New(*args)

@deprecated
def TDataStd_Name_GetID(*args):
	return TDataStd_Name.GetID(*args)

@deprecated
def TDataStd_Name_Set(*args):
	return TDataStd_Name.Set(*args)

@deprecated
def TDataStd_Name_Set(*args):
	return TDataStd_Name.Set(*args)

@deprecated
def TDataStd_NoteBook_Find(*args):
	return TDataStd_NoteBook.Find(*args)

@deprecated
def TDataStd_NoteBook_GetID(*args):
	return TDataStd_NoteBook.GetID(*args)

@deprecated
def TDataStd_NoteBook_New(*args):
	return TDataStd_NoteBook.New(*args)

@deprecated
def TDataStd_Relation_GetID(*args):
	return TDataStd_Relation.GetID(*args)

@deprecated
def TDataStd_Relation_Set(*args):
	return TDataStd_Relation.Set(*args)

@deprecated
def TDataStd_Tick_GetID(*args):
	return TDataStd_Tick.GetID(*args)

@deprecated
def TDataStd_Tick_Set(*args):
	return TDataStd_Tick.Set(*args)



