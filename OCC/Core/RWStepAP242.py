# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.2.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

"""
RWStepAP242 module, see official documentation at
https://dev.opencascade.org/doc/occt-7.7.0/refman/html/package_rwstepap242.html
"""

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _RWStepAP242
else:
    import _RWStepAP242

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _RWStepAP242.delete_SwigPyIterator

    def value(self):
        return _RWStepAP242.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _RWStepAP242.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _RWStepAP242.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _RWStepAP242.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _RWStepAP242.SwigPyIterator_equal(self, x)

    def copy(self):
        return _RWStepAP242.SwigPyIterator_copy(self)

    def next(self):
        return _RWStepAP242.SwigPyIterator_next(self)

    def __next__(self):
        return _RWStepAP242.SwigPyIterator___next__(self)

    def previous(self):
        return _RWStepAP242.SwigPyIterator_previous(self)

    def advance(self, n):
        return _RWStepAP242.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _RWStepAP242.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _RWStepAP242.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _RWStepAP242.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _RWStepAP242.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _RWStepAP242.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _RWStepAP242.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _RWStepAP242:
_RWStepAP242.SwigPyIterator_swigregister(SwigPyIterator)

def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error, method_name, class_name):
    return _RWStepAP242.process_exception(error, method_name, class_name)

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

class ios_base(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    erase_event = _RWStepAP242.ios_base_erase_event
    imbue_event = _RWStepAP242.ios_base_imbue_event
    copyfmt_event = _RWStepAP242.ios_base_copyfmt_event

    def register_callback(self, __fn, __index):
        return _RWStepAP242.ios_base_register_callback(self, __fn, __index)

    def flags(self, *args):
        return _RWStepAP242.ios_base_flags(self, *args)

    def setf(self, *args):
        return _RWStepAP242.ios_base_setf(self, *args)

    def unsetf(self, __mask):
        return _RWStepAP242.ios_base_unsetf(self, __mask)

    def precision(self, *args):
        return _RWStepAP242.ios_base_precision(self, *args)

    def width(self, *args):
        return _RWStepAP242.ios_base_width(self, *args)

    @staticmethod
    def sync_with_stdio(__sync=True):
        return _RWStepAP242.ios_base_sync_with_stdio(__sync)

    def imbue(self, __loc):
        return _RWStepAP242.ios_base_imbue(self, __loc)

    def getloc(self):
        return _RWStepAP242.ios_base_getloc(self)

    @staticmethod
    def xalloc():
        return _RWStepAP242.ios_base_xalloc()

    def iword(self, __ix):
        return _RWStepAP242.ios_base_iword(self, __ix)

    def pword(self, __ix):
        return _RWStepAP242.ios_base_pword(self, __ix)
    __swig_destroy__ = _RWStepAP242.delete_ios_base

# Register ios_base in _RWStepAP242:
_RWStepAP242.ios_base_swigregister(ios_base)
cvar = _RWStepAP242.cvar
ios_base.boolalpha = _RWStepAP242.cvar.ios_base_boolalpha
ios_base.dec = _RWStepAP242.cvar.ios_base_dec
ios_base.fixed = _RWStepAP242.cvar.ios_base_fixed
ios_base.hex = _RWStepAP242.cvar.ios_base_hex
ios_base.internal = _RWStepAP242.cvar.ios_base_internal
ios_base.left = _RWStepAP242.cvar.ios_base_left
ios_base.oct = _RWStepAP242.cvar.ios_base_oct
ios_base.right = _RWStepAP242.cvar.ios_base_right
ios_base.scientific = _RWStepAP242.cvar.ios_base_scientific
ios_base.showbase = _RWStepAP242.cvar.ios_base_showbase
ios_base.showpoint = _RWStepAP242.cvar.ios_base_showpoint
ios_base.showpos = _RWStepAP242.cvar.ios_base_showpos
ios_base.skipws = _RWStepAP242.cvar.ios_base_skipws
ios_base.unitbuf = _RWStepAP242.cvar.ios_base_unitbuf
ios_base.uppercase = _RWStepAP242.cvar.ios_base_uppercase
ios_base.adjustfield = _RWStepAP242.cvar.ios_base_adjustfield
ios_base.basefield = _RWStepAP242.cvar.ios_base_basefield
ios_base.floatfield = _RWStepAP242.cvar.ios_base_floatfield
ios_base.badbit = _RWStepAP242.cvar.ios_base_badbit
ios_base.eofbit = _RWStepAP242.cvar.ios_base_eofbit
ios_base.failbit = _RWStepAP242.cvar.ios_base_failbit
ios_base.goodbit = _RWStepAP242.cvar.ios_base_goodbit
ios_base.app = _RWStepAP242.cvar.ios_base_app
ios_base.ate = _RWStepAP242.cvar.ios_base_ate
ios_base.binary = _RWStepAP242.cvar.ios_base_binary
ios_base.ios_base_in = _RWStepAP242.cvar.ios_base_ios_base_in
ios_base.out = _RWStepAP242.cvar.ios_base_out
ios_base.trunc = _RWStepAP242.cvar.ios_base_trunc
ios_base.beg = _RWStepAP242.cvar.ios_base_beg
ios_base.cur = _RWStepAP242.cvar.ios_base_cur
ios_base.end = _RWStepAP242.cvar.ios_base_end

class ios(ios_base):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def rdstate(self):
        return _RWStepAP242.ios_rdstate(self)

    def clear(self, *args):
        return _RWStepAP242.ios_clear(self, *args)

    def setstate(self, __state):
        return _RWStepAP242.ios_setstate(self, __state)

    def good(self):
        return _RWStepAP242.ios_good(self)

    def eof(self):
        return _RWStepAP242.ios_eof(self)

    def fail(self):
        return _RWStepAP242.ios_fail(self)

    def bad(self):
        return _RWStepAP242.ios_bad(self)

    def exceptions(self, *args):
        return _RWStepAP242.ios_exceptions(self, *args)

    def __init__(self, __sb):
        _RWStepAP242.ios_swiginit(self, _RWStepAP242.new_ios(__sb))
    __swig_destroy__ = _RWStepAP242.delete_ios

    def tie(self, *args):
        return _RWStepAP242.ios_tie(self, *args)

    def rdbuf(self, *args):
        return _RWStepAP242.ios_rdbuf(self, *args)

    def copyfmt(self, __rhs):
        return _RWStepAP242.ios_copyfmt(self, __rhs)

    def fill(self, *args):
        return _RWStepAP242.ios_fill(self, *args)

    def imbue(self, __loc):
        return _RWStepAP242.ios_imbue(self, __loc)

    def narrow(self, __c, __dfault):
        return _RWStepAP242.ios_narrow(self, __c, __dfault)

    def widen(self, __c):
        return _RWStepAP242.ios_widen(self, __c)

# Register ios in _RWStepAP242:
_RWStepAP242.ios_swigregister(ios)
class ostream(ios):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, __sb):
        _RWStepAP242.ostream_swiginit(self, _RWStepAP242.new_ostream(__sb))
    __swig_destroy__ = _RWStepAP242.delete_ostream

    def __lshift__(self, *args):
        return _RWStepAP242.ostream___lshift__(self, *args)

    def put(self, __c):
        return _RWStepAP242.ostream_put(self, __c)

    def write(self, __s, __n):
        return _RWStepAP242.ostream_write(self, __s, __n)

    def flush(self):
        return _RWStepAP242.ostream_flush(self)

    def tellp(self):
        return _RWStepAP242.ostream_tellp(self)

    def seekp(self, *args):
        return _RWStepAP242.ostream_seekp(self, *args)

# Register ostream in _RWStepAP242:
_RWStepAP242.ostream_swigregister(ostream)
class istream(ios):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, __sb):
        _RWStepAP242.istream_swiginit(self, _RWStepAP242.new_istream(__sb))
    __swig_destroy__ = _RWStepAP242.delete_istream

    def __rshift__(self, *args):
        return _RWStepAP242.istream___rshift__(self, *args)

    def gcount(self):
        return _RWStepAP242.istream_gcount(self)

    def get(self, *args):
        return _RWStepAP242.istream_get(self, *args)

    def getline(self, *args):
        return _RWStepAP242.istream_getline(self, *args)

    def ignore(self, *args):
        return _RWStepAP242.istream_ignore(self, *args)

    def peek(self):
        return _RWStepAP242.istream_peek(self)

    def read(self, __s, __n):
        return _RWStepAP242.istream_read(self, __s, __n)

    def readsome(self, __s, __n):
        return _RWStepAP242.istream_readsome(self, __s, __n)

    def putback(self, __c):
        return _RWStepAP242.istream_putback(self, __c)

    def unget(self):
        return _RWStepAP242.istream_unget(self)

    def sync(self):
        return _RWStepAP242.istream_sync(self)

    def tellg(self):
        return _RWStepAP242.istream_tellg(self)

    def seekg(self, *args):
        return _RWStepAP242.istream_seekg(self, *args)

# Register istream in _RWStepAP242:
_RWStepAP242.istream_swigregister(istream)
class iostream(istream, ostream):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, __sb):
        _RWStepAP242.iostream_swiginit(self, _RWStepAP242.new_iostream(__sb))
    __swig_destroy__ = _RWStepAP242.delete_iostream

# Register iostream in _RWStepAP242:
_RWStepAP242.iostream_swigregister(iostream)
cin = cvar.cin
cout = cvar.cout
cerr = cvar.cerr
clog = cvar.clog

endl_cb_ptr = _RWStepAP242.endl_cb_ptr
endl = _RWStepAP242.endl
ends_cb_ptr = _RWStepAP242.ends_cb_ptr
ends = _RWStepAP242.ends
flush_cb_ptr = _RWStepAP242.flush_cb_ptr
flush = _RWStepAP242.flush
import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.StepData
import OCC.Core.TCollection
import OCC.Core.Interface
import OCC.Core.Message
import OCC.Core.OSD
import OCC.Core.TColStd
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.Resource
import OCC.Core.StepAP242
import OCC.Core.StepBasic
import OCC.Core.StepShape
import OCC.Core.StepGeom
import OCC.Core.StepRepr
import OCC.Core.StepDimTol
import OCC.Core.StepAP214
import OCC.Core.StepVisual
import OCC.Core.TColgp

from enum import IntEnum
from OCC.Core.Exception import *



class RWStepAP242_RWDraughtingModelItemAssociation(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _RWStepAP242.RWStepAP242_RWDraughtingModelItemAssociation_swiginit(self, _RWStepAP242.new_RWStepAP242_RWDraughtingModelItemAssociation(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepAP242_DraughtingModelItemAssociation

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _RWStepAP242.RWStepAP242_RWDraughtingModelItemAssociation_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepAP242_DraughtingModelItemAssociation
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _RWStepAP242.RWStepAP242_RWDraughtingModelItemAssociation_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepAP242_DraughtingModelItemAssociation

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _RWStepAP242.RWStepAP242_RWDraughtingModelItemAssociation_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepAP242.delete_RWStepAP242_RWDraughtingModelItemAssociation

# Register RWStepAP242_RWDraughtingModelItemAssociation in _RWStepAP242:
_RWStepAP242.RWStepAP242_RWDraughtingModelItemAssociation_swigregister(RWStepAP242_RWDraughtingModelItemAssociation)
class RWStepAP242_RWGeometricItemSpecificUsage(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _RWStepAP242.RWStepAP242_RWGeometricItemSpecificUsage_swiginit(self, _RWStepAP242.new_RWStepAP242_RWGeometricItemSpecificUsage(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepAP242_GeometricItemSpecificUsage

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _RWStepAP242.RWStepAP242_RWGeometricItemSpecificUsage_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepAP242_GeometricItemSpecificUsage
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _RWStepAP242.RWStepAP242_RWGeometricItemSpecificUsage_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepAP242_GeometricItemSpecificUsage

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _RWStepAP242.RWStepAP242_RWGeometricItemSpecificUsage_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepAP242.delete_RWStepAP242_RWGeometricItemSpecificUsage

# Register RWStepAP242_RWGeometricItemSpecificUsage in _RWStepAP242:
_RWStepAP242.RWStepAP242_RWGeometricItemSpecificUsage_swigregister(RWStepAP242_RWGeometricItemSpecificUsage)
class RWStepAP242_RWIdAttribute(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _RWStepAP242.RWStepAP242_RWIdAttribute_swiginit(self, _RWStepAP242.new_RWStepAP242_RWIdAttribute(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepAP242_IdAttribute

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _RWStepAP242.RWStepAP242_RWIdAttribute_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepAP242_IdAttribute
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _RWStepAP242.RWStepAP242_RWIdAttribute_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepAP242_IdAttribute

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _RWStepAP242.RWStepAP242_RWIdAttribute_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepAP242.delete_RWStepAP242_RWIdAttribute

# Register RWStepAP242_RWIdAttribute in _RWStepAP242:
_RWStepAP242.RWStepAP242_RWIdAttribute_swigregister(RWStepAP242_RWIdAttribute)
class RWStepAP242_RWItemIdentifiedRepresentationUsage(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        _RWStepAP242.RWStepAP242_RWItemIdentifiedRepresentationUsage_swiginit(self, _RWStepAP242.new_RWStepAP242_RWItemIdentifiedRepresentationUsage(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepAP242_ItemIdentifiedRepresentationUsage

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _RWStepAP242.RWStepAP242_RWItemIdentifiedRepresentationUsage_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepAP242_ItemIdentifiedRepresentationUsage
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _RWStepAP242.RWStepAP242_RWItemIdentifiedRepresentationUsage_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepAP242_ItemIdentifiedRepresentationUsage

        Return
        -------
        None

        Description
        -----------
        No available documentation.

        """
        return _RWStepAP242.RWStepAP242_RWItemIdentifiedRepresentationUsage_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepAP242.delete_RWStepAP242_RWItemIdentifiedRepresentationUsage

# Register RWStepAP242_RWItemIdentifiedRepresentationUsage in _RWStepAP242:
_RWStepAP242.RWStepAP242_RWItemIdentifiedRepresentationUsage_swigregister(RWStepAP242_RWItemIdentifiedRepresentationUsage)



