# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

"""
RWStepFEA module, see official documentation at
https://www.opencascade.com/doc/occt-7.7.0/refman/html/package_rwstepfea.html
"""

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _RWStepFEA
else:
    import _RWStepFEA

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _RWStepFEA.delete_SwigPyIterator

    def value(self):
        return _RWStepFEA.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _RWStepFEA.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _RWStepFEA.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _RWStepFEA.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _RWStepFEA.SwigPyIterator_equal(self, x)

    def copy(self):
        return _RWStepFEA.SwigPyIterator_copy(self)

    def next(self):
        return _RWStepFEA.SwigPyIterator_next(self)

    def __next__(self):
        return _RWStepFEA.SwigPyIterator___next__(self)

    def previous(self):
        return _RWStepFEA.SwigPyIterator_previous(self)

    def advance(self, n):
        return _RWStepFEA.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _RWStepFEA.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _RWStepFEA.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _RWStepFEA.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _RWStepFEA.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _RWStepFEA.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _RWStepFEA.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _RWStepFEA:
_RWStepFEA.SwigPyIterator_swigregister(SwigPyIterator)

def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error, method_name, class_name):
    return _RWStepFEA.process_exception(error, method_name, class_name)

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.TCollection
import OCC.Core.Message
import OCC.Core.OSD
import OCC.Core.TColStd
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.Resource
import OCC.Core.StepFEA
import OCC.Core.StepElement
import OCC.Core.StepRepr
import OCC.Core.StepBasic
import OCC.Core.StepGeom

from enum import IntEnum
from OCC.Core.Exception import *



class RWStepFEA_RWAlignedCurve3dElementCoordinateSystem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWAlignedCurve3dElementCoordinateSystem_swiginit(self, _RWStepFEA.new_RWStepFEA_RWAlignedCurve3dElementCoordinateSystem(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_AlignedCurve3dElementCoordinateSystem

        Return
        -------
        None

        Description
        -----------
        Reads alignedcurve3delementcoordinatesystem.

        """
        return _RWStepFEA.RWStepFEA_RWAlignedCurve3dElementCoordinateSystem_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_AlignedCurve3dElementCoordinateSystem
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWAlignedCurve3dElementCoordinateSystem_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_AlignedCurve3dElementCoordinateSystem

        Return
        -------
        None

        Description
        -----------
        Writes alignedcurve3delementcoordinatesystem.

        """
        return _RWStepFEA.RWStepFEA_RWAlignedCurve3dElementCoordinateSystem_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWAlignedCurve3dElementCoordinateSystem

# Register RWStepFEA_RWAlignedCurve3dElementCoordinateSystem in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWAlignedCurve3dElementCoordinateSystem_swigregister(RWStepFEA_RWAlignedCurve3dElementCoordinateSystem)
class RWStepFEA_RWAlignedSurface3dElementCoordinateSystem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWAlignedSurface3dElementCoordinateSystem_swiginit(self, _RWStepFEA.new_RWStepFEA_RWAlignedSurface3dElementCoordinateSystem(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_AlignedSurface3dElementCoordinateSystem

        Return
        -------
        None

        Description
        -----------
        Reads alignedsurface3delementcoordinatesystem.

        """
        return _RWStepFEA.RWStepFEA_RWAlignedSurface3dElementCoordinateSystem_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_AlignedSurface3dElementCoordinateSystem
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWAlignedSurface3dElementCoordinateSystem_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_AlignedSurface3dElementCoordinateSystem

        Return
        -------
        None

        Description
        -----------
        Writes alignedsurface3delementcoordinatesystem.

        """
        return _RWStepFEA.RWStepFEA_RWAlignedSurface3dElementCoordinateSystem_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWAlignedSurface3dElementCoordinateSystem

# Register RWStepFEA_RWAlignedSurface3dElementCoordinateSystem in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWAlignedSurface3dElementCoordinateSystem_swigregister(RWStepFEA_RWAlignedSurface3dElementCoordinateSystem)
class RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem_swiginit(self, _RWStepFEA.new_RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_ArbitraryVolume3dElementCoordinateSystem

        Return
        -------
        None

        Description
        -----------
        Reads arbitraryvolume3delementcoordinatesystem.

        """
        return _RWStepFEA.RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_ArbitraryVolume3dElementCoordinateSystem
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_ArbitraryVolume3dElementCoordinateSystem

        Return
        -------
        None

        Description
        -----------
        Writes arbitraryvolume3delementcoordinatesystem.

        """
        return _RWStepFEA.RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem

# Register RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem_swigregister(RWStepFEA_RWArbitraryVolume3dElementCoordinateSystem)
class RWStepFEA_RWConstantSurface3dElementCoordinateSystem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWConstantSurface3dElementCoordinateSystem_swiginit(self, _RWStepFEA.new_RWStepFEA_RWConstantSurface3dElementCoordinateSystem(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_ConstantSurface3dElementCoordinateSystem

        Return
        -------
        None

        Description
        -----------
        Reads constantsurface3delementcoordinatesystem.

        """
        return _RWStepFEA.RWStepFEA_RWConstantSurface3dElementCoordinateSystem_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_ConstantSurface3dElementCoordinateSystem
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWConstantSurface3dElementCoordinateSystem_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_ConstantSurface3dElementCoordinateSystem

        Return
        -------
        None

        Description
        -----------
        Writes constantsurface3delementcoordinatesystem.

        """
        return _RWStepFEA.RWStepFEA_RWConstantSurface3dElementCoordinateSystem_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWConstantSurface3dElementCoordinateSystem

# Register RWStepFEA_RWConstantSurface3dElementCoordinateSystem in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWConstantSurface3dElementCoordinateSystem_swigregister(RWStepFEA_RWConstantSurface3dElementCoordinateSystem)
class RWStepFEA_RWCurve3dElementProperty(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWCurve3dElementProperty_swiginit(self, _RWStepFEA.new_RWStepFEA_RWCurve3dElementProperty(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_Curve3dElementProperty

        Return
        -------
        None

        Description
        -----------
        Reads curve3delementproperty.

        """
        return _RWStepFEA.RWStepFEA_RWCurve3dElementProperty_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_Curve3dElementProperty
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWCurve3dElementProperty_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_Curve3dElementProperty

        Return
        -------
        None

        Description
        -----------
        Writes curve3delementproperty.

        """
        return _RWStepFEA.RWStepFEA_RWCurve3dElementProperty_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWCurve3dElementProperty

# Register RWStepFEA_RWCurve3dElementProperty in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWCurve3dElementProperty_swigregister(RWStepFEA_RWCurve3dElementProperty)
class RWStepFEA_RWCurve3dElementRepresentation(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWCurve3dElementRepresentation_swiginit(self, _RWStepFEA.new_RWStepFEA_RWCurve3dElementRepresentation(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_Curve3dElementRepresentation

        Return
        -------
        None

        Description
        -----------
        Reads curve3delementrepresentation.

        """
        return _RWStepFEA.RWStepFEA_RWCurve3dElementRepresentation_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_Curve3dElementRepresentation
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWCurve3dElementRepresentation_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_Curve3dElementRepresentation

        Return
        -------
        None

        Description
        -----------
        Writes curve3delementrepresentation.

        """
        return _RWStepFEA.RWStepFEA_RWCurve3dElementRepresentation_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWCurve3dElementRepresentation

# Register RWStepFEA_RWCurve3dElementRepresentation in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWCurve3dElementRepresentation_swigregister(RWStepFEA_RWCurve3dElementRepresentation)
class RWStepFEA_RWCurveElementEndOffset(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWCurveElementEndOffset_swiginit(self, _RWStepFEA.new_RWStepFEA_RWCurveElementEndOffset(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_CurveElementEndOffset

        Return
        -------
        None

        Description
        -----------
        Reads curveelementendoffset.

        """
        return _RWStepFEA.RWStepFEA_RWCurveElementEndOffset_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_CurveElementEndOffset
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWCurveElementEndOffset_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_CurveElementEndOffset

        Return
        -------
        None

        Description
        -----------
        Writes curveelementendoffset.

        """
        return _RWStepFEA.RWStepFEA_RWCurveElementEndOffset_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWCurveElementEndOffset

# Register RWStepFEA_RWCurveElementEndOffset in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWCurveElementEndOffset_swigregister(RWStepFEA_RWCurveElementEndOffset)
class RWStepFEA_RWCurveElementEndRelease(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWCurveElementEndRelease_swiginit(self, _RWStepFEA.new_RWStepFEA_RWCurveElementEndRelease(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_CurveElementEndRelease

        Return
        -------
        None

        Description
        -----------
        Reads curveelementendrelease.

        """
        return _RWStepFEA.RWStepFEA_RWCurveElementEndRelease_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_CurveElementEndRelease
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWCurveElementEndRelease_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_CurveElementEndRelease

        Return
        -------
        None

        Description
        -----------
        Writes curveelementendrelease.

        """
        return _RWStepFEA.RWStepFEA_RWCurveElementEndRelease_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWCurveElementEndRelease

# Register RWStepFEA_RWCurveElementEndRelease in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWCurveElementEndRelease_swigregister(RWStepFEA_RWCurveElementEndRelease)
class RWStepFEA_RWCurveElementInterval(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWCurveElementInterval_swiginit(self, _RWStepFEA.new_RWStepFEA_RWCurveElementInterval(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_CurveElementInterval

        Return
        -------
        None

        Description
        -----------
        Reads curveelementinterval.

        """
        return _RWStepFEA.RWStepFEA_RWCurveElementInterval_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_CurveElementInterval
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWCurveElementInterval_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_CurveElementInterval

        Return
        -------
        None

        Description
        -----------
        Writes curveelementinterval.

        """
        return _RWStepFEA.RWStepFEA_RWCurveElementInterval_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWCurveElementInterval

# Register RWStepFEA_RWCurveElementInterval in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWCurveElementInterval_swigregister(RWStepFEA_RWCurveElementInterval)
class RWStepFEA_RWCurveElementIntervalConstant(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWCurveElementIntervalConstant_swiginit(self, _RWStepFEA.new_RWStepFEA_RWCurveElementIntervalConstant(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_CurveElementIntervalConstant

        Return
        -------
        None

        Description
        -----------
        Reads curveelementintervalconstant.

        """
        return _RWStepFEA.RWStepFEA_RWCurveElementIntervalConstant_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_CurveElementIntervalConstant
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWCurveElementIntervalConstant_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_CurveElementIntervalConstant

        Return
        -------
        None

        Description
        -----------
        Writes curveelementintervalconstant.

        """
        return _RWStepFEA.RWStepFEA_RWCurveElementIntervalConstant_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWCurveElementIntervalConstant

# Register RWStepFEA_RWCurveElementIntervalConstant in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWCurveElementIntervalConstant_swigregister(RWStepFEA_RWCurveElementIntervalConstant)
class RWStepFEA_RWCurveElementIntervalLinearlyVarying(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWCurveElementIntervalLinearlyVarying_swiginit(self, _RWStepFEA.new_RWStepFEA_RWCurveElementIntervalLinearlyVarying(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_CurveElementIntervalLinearlyVarying

        Return
        -------
        None

        Description
        -----------
        Reads curveelementintervallinearlyvarying.

        """
        return _RWStepFEA.RWStepFEA_RWCurveElementIntervalLinearlyVarying_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_CurveElementIntervalLinearlyVarying
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWCurveElementIntervalLinearlyVarying_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_CurveElementIntervalLinearlyVarying

        Return
        -------
        None

        Description
        -----------
        Writes curveelementintervallinearlyvarying.

        """
        return _RWStepFEA.RWStepFEA_RWCurveElementIntervalLinearlyVarying_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWCurveElementIntervalLinearlyVarying

# Register RWStepFEA_RWCurveElementIntervalLinearlyVarying in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWCurveElementIntervalLinearlyVarying_swigregister(RWStepFEA_RWCurveElementIntervalLinearlyVarying)
class RWStepFEA_RWCurveElementLocation(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWCurveElementLocation_swiginit(self, _RWStepFEA.new_RWStepFEA_RWCurveElementLocation(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_CurveElementLocation

        Return
        -------
        None

        Description
        -----------
        Reads curveelementlocation.

        """
        return _RWStepFEA.RWStepFEA_RWCurveElementLocation_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_CurveElementLocation
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWCurveElementLocation_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_CurveElementLocation

        Return
        -------
        None

        Description
        -----------
        Writes curveelementlocation.

        """
        return _RWStepFEA.RWStepFEA_RWCurveElementLocation_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWCurveElementLocation

# Register RWStepFEA_RWCurveElementLocation in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWCurveElementLocation_swigregister(RWStepFEA_RWCurveElementLocation)
class RWStepFEA_RWDummyNode(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWDummyNode_swiginit(self, _RWStepFEA.new_RWStepFEA_RWDummyNode(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_DummyNode

        Return
        -------
        None

        Description
        -----------
        Reads dummynode.

        """
        return _RWStepFEA.RWStepFEA_RWDummyNode_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_DummyNode
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWDummyNode_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_DummyNode

        Return
        -------
        None

        Description
        -----------
        Writes dummynode.

        """
        return _RWStepFEA.RWStepFEA_RWDummyNode_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWDummyNode

# Register RWStepFEA_RWDummyNode in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWDummyNode_swigregister(RWStepFEA_RWDummyNode)
class RWStepFEA_RWElementGeometricRelationship(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWElementGeometricRelationship_swiginit(self, _RWStepFEA.new_RWStepFEA_RWElementGeometricRelationship(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_ElementGeometricRelationship

        Return
        -------
        None

        Description
        -----------
        Reads elementgeometricrelationship.

        """
        return _RWStepFEA.RWStepFEA_RWElementGeometricRelationship_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_ElementGeometricRelationship
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWElementGeometricRelationship_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_ElementGeometricRelationship

        Return
        -------
        None

        Description
        -----------
        Writes elementgeometricrelationship.

        """
        return _RWStepFEA.RWStepFEA_RWElementGeometricRelationship_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWElementGeometricRelationship

# Register RWStepFEA_RWElementGeometricRelationship in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWElementGeometricRelationship_swigregister(RWStepFEA_RWElementGeometricRelationship)
class RWStepFEA_RWElementGroup(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWElementGroup_swiginit(self, _RWStepFEA.new_RWStepFEA_RWElementGroup(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_ElementGroup

        Return
        -------
        None

        Description
        -----------
        Reads elementgroup.

        """
        return _RWStepFEA.RWStepFEA_RWElementGroup_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_ElementGroup
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWElementGroup_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_ElementGroup

        Return
        -------
        None

        Description
        -----------
        Writes elementgroup.

        """
        return _RWStepFEA.RWStepFEA_RWElementGroup_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWElementGroup

# Register RWStepFEA_RWElementGroup in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWElementGroup_swigregister(RWStepFEA_RWElementGroup)
class RWStepFEA_RWElementRepresentation(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWElementRepresentation_swiginit(self, _RWStepFEA.new_RWStepFEA_RWElementRepresentation(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_ElementRepresentation

        Return
        -------
        None

        Description
        -----------
        Reads elementrepresentation.

        """
        return _RWStepFEA.RWStepFEA_RWElementRepresentation_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_ElementRepresentation
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWElementRepresentation_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_ElementRepresentation

        Return
        -------
        None

        Description
        -----------
        Writes elementrepresentation.

        """
        return _RWStepFEA.RWStepFEA_RWElementRepresentation_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWElementRepresentation

# Register RWStepFEA_RWElementRepresentation in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWElementRepresentation_swigregister(RWStepFEA_RWElementRepresentation)
class RWStepFEA_RWFeaAreaDensity(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWFeaAreaDensity_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaAreaDensity(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_FeaAreaDensity

        Return
        -------
        None

        Description
        -----------
        Reads feaareadensity.

        """
        return _RWStepFEA.RWStepFEA_RWFeaAreaDensity_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_FeaAreaDensity
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWFeaAreaDensity_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_FeaAreaDensity

        Return
        -------
        None

        Description
        -----------
        Writes feaareadensity.

        """
        return _RWStepFEA.RWStepFEA_RWFeaAreaDensity_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaAreaDensity

# Register RWStepFEA_RWFeaAreaDensity in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWFeaAreaDensity_swigregister(RWStepFEA_RWFeaAreaDensity)
class RWStepFEA_RWFeaAxis2Placement3d(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWFeaAxis2Placement3d_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaAxis2Placement3d(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_FeaAxis2Placement3d

        Return
        -------
        None

        Description
        -----------
        Reads feaaxis2placement3d.

        """
        return _RWStepFEA.RWStepFEA_RWFeaAxis2Placement3d_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_FeaAxis2Placement3d
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWFeaAxis2Placement3d_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_FeaAxis2Placement3d

        Return
        -------
        None

        Description
        -----------
        Writes feaaxis2placement3d.

        """
        return _RWStepFEA.RWStepFEA_RWFeaAxis2Placement3d_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaAxis2Placement3d

# Register RWStepFEA_RWFeaAxis2Placement3d in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWFeaAxis2Placement3d_swigregister(RWStepFEA_RWFeaAxis2Placement3d)
class RWStepFEA_RWFeaCurveSectionGeometricRelationship(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWFeaCurveSectionGeometricRelationship_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaCurveSectionGeometricRelationship(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_FeaCurveSectionGeometricRelationship

        Return
        -------
        None

        Description
        -----------
        Reads feacurvesectiongeometricrelationship.

        """
        return _RWStepFEA.RWStepFEA_RWFeaCurveSectionGeometricRelationship_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_FeaCurveSectionGeometricRelationship
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWFeaCurveSectionGeometricRelationship_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_FeaCurveSectionGeometricRelationship

        Return
        -------
        None

        Description
        -----------
        Writes feacurvesectiongeometricrelationship.

        """
        return _RWStepFEA.RWStepFEA_RWFeaCurveSectionGeometricRelationship_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaCurveSectionGeometricRelationship

# Register RWStepFEA_RWFeaCurveSectionGeometricRelationship in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWFeaCurveSectionGeometricRelationship_swigregister(RWStepFEA_RWFeaCurveSectionGeometricRelationship)
class RWStepFEA_RWFeaGroup(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWFeaGroup_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaGroup(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_FeaGroup

        Return
        -------
        None

        Description
        -----------
        Reads feagroup.

        """
        return _RWStepFEA.RWStepFEA_RWFeaGroup_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_FeaGroup
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWFeaGroup_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_FeaGroup

        Return
        -------
        None

        Description
        -----------
        Writes feagroup.

        """
        return _RWStepFEA.RWStepFEA_RWFeaGroup_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaGroup

# Register RWStepFEA_RWFeaGroup in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWFeaGroup_swigregister(RWStepFEA_RWFeaGroup)
class RWStepFEA_RWFeaLinearElasticity(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWFeaLinearElasticity_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaLinearElasticity(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_FeaLinearElasticity

        Return
        -------
        None

        Description
        -----------
        Reads fealinearelasticity.

        """
        return _RWStepFEA.RWStepFEA_RWFeaLinearElasticity_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_FeaLinearElasticity
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWFeaLinearElasticity_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_FeaLinearElasticity

        Return
        -------
        None

        Description
        -----------
        Writes fealinearelasticity.

        """
        return _RWStepFEA.RWStepFEA_RWFeaLinearElasticity_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaLinearElasticity

# Register RWStepFEA_RWFeaLinearElasticity in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWFeaLinearElasticity_swigregister(RWStepFEA_RWFeaLinearElasticity)
class RWStepFEA_RWFeaMassDensity(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWFeaMassDensity_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaMassDensity(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_FeaMassDensity

        Return
        -------
        None

        Description
        -----------
        Reads feamassdensity.

        """
        return _RWStepFEA.RWStepFEA_RWFeaMassDensity_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_FeaMassDensity
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWFeaMassDensity_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_FeaMassDensity

        Return
        -------
        None

        Description
        -----------
        Writes feamassdensity.

        """
        return _RWStepFEA.RWStepFEA_RWFeaMassDensity_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaMassDensity

# Register RWStepFEA_RWFeaMassDensity in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWFeaMassDensity_swigregister(RWStepFEA_RWFeaMassDensity)
class RWStepFEA_RWFeaMaterialPropertyRepresentation(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentation_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaMaterialPropertyRepresentation(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_FeaMaterialPropertyRepresentation

        Return
        -------
        None

        Description
        -----------
        Reads feamaterialpropertyrepresentation.

        """
        return _RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentation_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_FeaMaterialPropertyRepresentation
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentation_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_FeaMaterialPropertyRepresentation

        Return
        -------
        None

        Description
        -----------
        Writes feamaterialpropertyrepresentation.

        """
        return _RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentation_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaMaterialPropertyRepresentation

# Register RWStepFEA_RWFeaMaterialPropertyRepresentation in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentation_swigregister(RWStepFEA_RWFeaMaterialPropertyRepresentation)
class RWStepFEA_RWFeaMaterialPropertyRepresentationItem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentationItem_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaMaterialPropertyRepresentationItem(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_FeaMaterialPropertyRepresentationItem

        Return
        -------
        None

        Description
        -----------
        Reads feamaterialpropertyrepresentationitem.

        """
        return _RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentationItem_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_FeaMaterialPropertyRepresentationItem
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentationItem_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_FeaMaterialPropertyRepresentationItem

        Return
        -------
        None

        Description
        -----------
        Writes feamaterialpropertyrepresentationitem.

        """
        return _RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentationItem_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaMaterialPropertyRepresentationItem

# Register RWStepFEA_RWFeaMaterialPropertyRepresentationItem in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWFeaMaterialPropertyRepresentationItem_swigregister(RWStepFEA_RWFeaMaterialPropertyRepresentationItem)
class RWStepFEA_RWFeaModel(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWFeaModel_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaModel(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_FeaModel

        Return
        -------
        None

        Description
        -----------
        Reads feamodel.

        """
        return _RWStepFEA.RWStepFEA_RWFeaModel_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_FeaModel
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWFeaModel_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_FeaModel

        Return
        -------
        None

        Description
        -----------
        Writes feamodel.

        """
        return _RWStepFEA.RWStepFEA_RWFeaModel_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaModel

# Register RWStepFEA_RWFeaModel in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWFeaModel_swigregister(RWStepFEA_RWFeaModel)
class RWStepFEA_RWFeaModel3d(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWFeaModel3d_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaModel3d(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_FeaModel3d

        Return
        -------
        None

        Description
        -----------
        Reads feamodel3d.

        """
        return _RWStepFEA.RWStepFEA_RWFeaModel3d_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_FeaModel3d
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWFeaModel3d_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_FeaModel3d

        Return
        -------
        None

        Description
        -----------
        Writes feamodel3d.

        """
        return _RWStepFEA.RWStepFEA_RWFeaModel3d_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaModel3d

# Register RWStepFEA_RWFeaModel3d in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWFeaModel3d_swigregister(RWStepFEA_RWFeaModel3d)
class RWStepFEA_RWFeaModelDefinition(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWFeaModelDefinition_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaModelDefinition(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_FeaModelDefinition

        Return
        -------
        None

        Description
        -----------
        Reads feamodeldefinition.

        """
        return _RWStepFEA.RWStepFEA_RWFeaModelDefinition_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_FeaModelDefinition
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWFeaModelDefinition_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_FeaModelDefinition

        Return
        -------
        None

        Description
        -----------
        Writes feamodeldefinition.

        """
        return _RWStepFEA.RWStepFEA_RWFeaModelDefinition_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaModelDefinition

# Register RWStepFEA_RWFeaModelDefinition in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWFeaModelDefinition_swigregister(RWStepFEA_RWFeaModelDefinition)
class RWStepFEA_RWFeaMoistureAbsorption(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWFeaMoistureAbsorption_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaMoistureAbsorption(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_FeaMoistureAbsorption

        Return
        -------
        None

        Description
        -----------
        Reads feamoistureabsorption.

        """
        return _RWStepFEA.RWStepFEA_RWFeaMoistureAbsorption_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_FeaMoistureAbsorption
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWFeaMoistureAbsorption_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_FeaMoistureAbsorption

        Return
        -------
        None

        Description
        -----------
        Writes feamoistureabsorption.

        """
        return _RWStepFEA.RWStepFEA_RWFeaMoistureAbsorption_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaMoistureAbsorption

# Register RWStepFEA_RWFeaMoistureAbsorption in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWFeaMoistureAbsorption_swigregister(RWStepFEA_RWFeaMoistureAbsorption)
class RWStepFEA_RWFeaParametricPoint(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWFeaParametricPoint_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaParametricPoint(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_FeaParametricPoint

        Return
        -------
        None

        Description
        -----------
        Reads feaparametricpoint.

        """
        return _RWStepFEA.RWStepFEA_RWFeaParametricPoint_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_FeaParametricPoint
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWFeaParametricPoint_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_FeaParametricPoint

        Return
        -------
        None

        Description
        -----------
        Writes feaparametricpoint.

        """
        return _RWStepFEA.RWStepFEA_RWFeaParametricPoint_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaParametricPoint

# Register RWStepFEA_RWFeaParametricPoint in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWFeaParametricPoint_swigregister(RWStepFEA_RWFeaParametricPoint)
class RWStepFEA_RWFeaRepresentationItem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWFeaRepresentationItem_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaRepresentationItem(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_FeaRepresentationItem

        Return
        -------
        None

        Description
        -----------
        Reads fearepresentationitem.

        """
        return _RWStepFEA.RWStepFEA_RWFeaRepresentationItem_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_FeaRepresentationItem
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWFeaRepresentationItem_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_FeaRepresentationItem

        Return
        -------
        None

        Description
        -----------
        Writes fearepresentationitem.

        """
        return _RWStepFEA.RWStepFEA_RWFeaRepresentationItem_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaRepresentationItem

# Register RWStepFEA_RWFeaRepresentationItem in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWFeaRepresentationItem_swigregister(RWStepFEA_RWFeaRepresentationItem)
class RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_FeaSecantCoefficientOfLinearThermalExpansion

        Return
        -------
        None

        Description
        -----------
        Reads feasecantcoefficientoflinearthermalexpansion.

        """
        return _RWStepFEA.RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_FeaSecantCoefficientOfLinearThermalExpansion
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_FeaSecantCoefficientOfLinearThermalExpansion

        Return
        -------
        None

        Description
        -----------
        Writes feasecantcoefficientoflinearthermalexpansion.

        """
        return _RWStepFEA.RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion

# Register RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion_swigregister(RWStepFEA_RWFeaSecantCoefficientOfLinearThermalExpansion)
class RWStepFEA_RWFeaShellBendingStiffness(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWFeaShellBendingStiffness_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaShellBendingStiffness(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_FeaShellBendingStiffness

        Return
        -------
        None

        Description
        -----------
        Reads feashellbendingstiffness.

        """
        return _RWStepFEA.RWStepFEA_RWFeaShellBendingStiffness_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_FeaShellBendingStiffness
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWFeaShellBendingStiffness_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_FeaShellBendingStiffness

        Return
        -------
        None

        Description
        -----------
        Writes feashellbendingstiffness.

        """
        return _RWStepFEA.RWStepFEA_RWFeaShellBendingStiffness_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaShellBendingStiffness

# Register RWStepFEA_RWFeaShellBendingStiffness in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWFeaShellBendingStiffness_swigregister(RWStepFEA_RWFeaShellBendingStiffness)
class RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_FeaShellMembraneBendingCouplingStiffness

        Return
        -------
        None

        Description
        -----------
        Reads feashellmembranebendingcouplingstiffness.

        """
        return _RWStepFEA.RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_FeaShellMembraneBendingCouplingStiffness
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_FeaShellMembraneBendingCouplingStiffness

        Return
        -------
        None

        Description
        -----------
        Writes feashellmembranebendingcouplingstiffness.

        """
        return _RWStepFEA.RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness

# Register RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness_swigregister(RWStepFEA_RWFeaShellMembraneBendingCouplingStiffness)
class RWStepFEA_RWFeaShellMembraneStiffness(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWFeaShellMembraneStiffness_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaShellMembraneStiffness(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_FeaShellMembraneStiffness

        Return
        -------
        None

        Description
        -----------
        Reads feashellmembranestiffness.

        """
        return _RWStepFEA.RWStepFEA_RWFeaShellMembraneStiffness_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_FeaShellMembraneStiffness
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWFeaShellMembraneStiffness_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_FeaShellMembraneStiffness

        Return
        -------
        None

        Description
        -----------
        Writes feashellmembranestiffness.

        """
        return _RWStepFEA.RWStepFEA_RWFeaShellMembraneStiffness_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaShellMembraneStiffness

# Register RWStepFEA_RWFeaShellMembraneStiffness in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWFeaShellMembraneStiffness_swigregister(RWStepFEA_RWFeaShellMembraneStiffness)
class RWStepFEA_RWFeaShellShearStiffness(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWFeaShellShearStiffness_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaShellShearStiffness(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_FeaShellShearStiffness

        Return
        -------
        None

        Description
        -----------
        Reads feashellshearstiffness.

        """
        return _RWStepFEA.RWStepFEA_RWFeaShellShearStiffness_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_FeaShellShearStiffness
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWFeaShellShearStiffness_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_FeaShellShearStiffness

        Return
        -------
        None

        Description
        -----------
        Writes feashellshearstiffness.

        """
        return _RWStepFEA.RWStepFEA_RWFeaShellShearStiffness_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaShellShearStiffness

# Register RWStepFEA_RWFeaShellShearStiffness in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWFeaShellShearStiffness_swigregister(RWStepFEA_RWFeaShellShearStiffness)
class RWStepFEA_RWFeaSurfaceSectionGeometricRelationship(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWFeaSurfaceSectionGeometricRelationship_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaSurfaceSectionGeometricRelationship(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_FeaSurfaceSectionGeometricRelationship

        Return
        -------
        None

        Description
        -----------
        Reads feasurfacesectiongeometricrelationship.

        """
        return _RWStepFEA.RWStepFEA_RWFeaSurfaceSectionGeometricRelationship_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_FeaSurfaceSectionGeometricRelationship
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWFeaSurfaceSectionGeometricRelationship_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_FeaSurfaceSectionGeometricRelationship

        Return
        -------
        None

        Description
        -----------
        Writes feasurfacesectiongeometricrelationship.

        """
        return _RWStepFEA.RWStepFEA_RWFeaSurfaceSectionGeometricRelationship_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaSurfaceSectionGeometricRelationship

# Register RWStepFEA_RWFeaSurfaceSectionGeometricRelationship in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWFeaSurfaceSectionGeometricRelationship_swigregister(RWStepFEA_RWFeaSurfaceSectionGeometricRelationship)
class RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion

        Return
        -------
        None

        Description
        -----------
        Reads featangentialcoefficientoflinearthermalexpansion.

        """
        return _RWStepFEA.RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion

        Return
        -------
        None

        Description
        -----------
        Writes featangentialcoefficientoflinearthermalexpansion.

        """
        return _RWStepFEA.RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion

# Register RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion_swigregister(RWStepFEA_RWFeaTangentialCoefficientOfLinearThermalExpansion)
class RWStepFEA_RWFreedomAndCoefficient(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWFreedomAndCoefficient_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFreedomAndCoefficient(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_FreedomAndCoefficient

        Return
        -------
        None

        Description
        -----------
        Reads freedomandcoefficient.

        """
        return _RWStepFEA.RWStepFEA_RWFreedomAndCoefficient_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_FreedomAndCoefficient
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWFreedomAndCoefficient_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_FreedomAndCoefficient

        Return
        -------
        None

        Description
        -----------
        Writes freedomandcoefficient.

        """
        return _RWStepFEA.RWStepFEA_RWFreedomAndCoefficient_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFreedomAndCoefficient

# Register RWStepFEA_RWFreedomAndCoefficient in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWFreedomAndCoefficient_swigregister(RWStepFEA_RWFreedomAndCoefficient)
class RWStepFEA_RWFreedomsList(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWFreedomsList_swiginit(self, _RWStepFEA.new_RWStepFEA_RWFreedomsList(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_FreedomsList

        Return
        -------
        None

        Description
        -----------
        Reads freedomslist.

        """
        return _RWStepFEA.RWStepFEA_RWFreedomsList_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_FreedomsList
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWFreedomsList_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_FreedomsList

        Return
        -------
        None

        Description
        -----------
        Writes freedomslist.

        """
        return _RWStepFEA.RWStepFEA_RWFreedomsList_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWFreedomsList

# Register RWStepFEA_RWFreedomsList in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWFreedomsList_swigregister(RWStepFEA_RWFreedomsList)
class RWStepFEA_RWGeometricNode(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWGeometricNode_swiginit(self, _RWStepFEA.new_RWStepFEA_RWGeometricNode(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_GeometricNode

        Return
        -------
        None

        Description
        -----------
        Reads geometricnode.

        """
        return _RWStepFEA.RWStepFEA_RWGeometricNode_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_GeometricNode
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWGeometricNode_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_GeometricNode

        Return
        -------
        None

        Description
        -----------
        Writes geometricnode.

        """
        return _RWStepFEA.RWStepFEA_RWGeometricNode_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWGeometricNode

# Register RWStepFEA_RWGeometricNode in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWGeometricNode_swigregister(RWStepFEA_RWGeometricNode)
class RWStepFEA_RWNode(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWNode_swiginit(self, _RWStepFEA.new_RWStepFEA_RWNode(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_Node

        Return
        -------
        None

        Description
        -----------
        Reads node.

        """
        return _RWStepFEA.RWStepFEA_RWNode_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_Node
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWNode_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_Node

        Return
        -------
        None

        Description
        -----------
        Writes node.

        """
        return _RWStepFEA.RWStepFEA_RWNode_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWNode

# Register RWStepFEA_RWNode in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWNode_swigregister(RWStepFEA_RWNode)
class RWStepFEA_RWNodeDefinition(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWNodeDefinition_swiginit(self, _RWStepFEA.new_RWStepFEA_RWNodeDefinition(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_NodeDefinition

        Return
        -------
        None

        Description
        -----------
        Reads nodedefinition.

        """
        return _RWStepFEA.RWStepFEA_RWNodeDefinition_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_NodeDefinition
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWNodeDefinition_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_NodeDefinition

        Return
        -------
        None

        Description
        -----------
        Writes nodedefinition.

        """
        return _RWStepFEA.RWStepFEA_RWNodeDefinition_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWNodeDefinition

# Register RWStepFEA_RWNodeDefinition in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWNodeDefinition_swigregister(RWStepFEA_RWNodeDefinition)
class RWStepFEA_RWNodeGroup(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWNodeGroup_swiginit(self, _RWStepFEA.new_RWStepFEA_RWNodeGroup(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_NodeGroup

        Return
        -------
        None

        Description
        -----------
        Reads nodegroup.

        """
        return _RWStepFEA.RWStepFEA_RWNodeGroup_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_NodeGroup
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWNodeGroup_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_NodeGroup

        Return
        -------
        None

        Description
        -----------
        Writes nodegroup.

        """
        return _RWStepFEA.RWStepFEA_RWNodeGroup_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWNodeGroup

# Register RWStepFEA_RWNodeGroup in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWNodeGroup_swigregister(RWStepFEA_RWNodeGroup)
class RWStepFEA_RWNodeRepresentation(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWNodeRepresentation_swiginit(self, _RWStepFEA.new_RWStepFEA_RWNodeRepresentation(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_NodeRepresentation

        Return
        -------
        None

        Description
        -----------
        Reads noderepresentation.

        """
        return _RWStepFEA.RWStepFEA_RWNodeRepresentation_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_NodeRepresentation
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWNodeRepresentation_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_NodeRepresentation

        Return
        -------
        None

        Description
        -----------
        Writes noderepresentation.

        """
        return _RWStepFEA.RWStepFEA_RWNodeRepresentation_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWNodeRepresentation

# Register RWStepFEA_RWNodeRepresentation in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWNodeRepresentation_swigregister(RWStepFEA_RWNodeRepresentation)
class RWStepFEA_RWNodeSet(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWNodeSet_swiginit(self, _RWStepFEA.new_RWStepFEA_RWNodeSet(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_NodeSet

        Return
        -------
        None

        Description
        -----------
        Reads nodeset.

        """
        return _RWStepFEA.RWStepFEA_RWNodeSet_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_NodeSet
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWNodeSet_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_NodeSet

        Return
        -------
        None

        Description
        -----------
        Writes nodeset.

        """
        return _RWStepFEA.RWStepFEA_RWNodeSet_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWNodeSet

# Register RWStepFEA_RWNodeSet in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWNodeSet_swigregister(RWStepFEA_RWNodeSet)
class RWStepFEA_RWNodeWithSolutionCoordinateSystem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWNodeWithSolutionCoordinateSystem_swiginit(self, _RWStepFEA.new_RWStepFEA_RWNodeWithSolutionCoordinateSystem(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_NodeWithSolutionCoordinateSystem

        Return
        -------
        None

        Description
        -----------
        Reads nodewithsolutioncoordinatesystem.

        """
        return _RWStepFEA.RWStepFEA_RWNodeWithSolutionCoordinateSystem_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_NodeWithSolutionCoordinateSystem
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWNodeWithSolutionCoordinateSystem_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_NodeWithSolutionCoordinateSystem

        Return
        -------
        None

        Description
        -----------
        Writes nodewithsolutioncoordinatesystem.

        """
        return _RWStepFEA.RWStepFEA_RWNodeWithSolutionCoordinateSystem_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWNodeWithSolutionCoordinateSystem

# Register RWStepFEA_RWNodeWithSolutionCoordinateSystem in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWNodeWithSolutionCoordinateSystem_swigregister(RWStepFEA_RWNodeWithSolutionCoordinateSystem)
class RWStepFEA_RWNodeWithVector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWNodeWithVector_swiginit(self, _RWStepFEA.new_RWStepFEA_RWNodeWithVector(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_NodeWithVector

        Return
        -------
        None

        Description
        -----------
        Reads nodewithvector.

        """
        return _RWStepFEA.RWStepFEA_RWNodeWithVector_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_NodeWithVector
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWNodeWithVector_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_NodeWithVector

        Return
        -------
        None

        Description
        -----------
        Writes nodewithvector.

        """
        return _RWStepFEA.RWStepFEA_RWNodeWithVector_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWNodeWithVector

# Register RWStepFEA_RWNodeWithVector in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWNodeWithVector_swigregister(RWStepFEA_RWNodeWithVector)
class RWStepFEA_RWParametricCurve3dElementCoordinateDirection(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateDirection_swiginit(self, _RWStepFEA.new_RWStepFEA_RWParametricCurve3dElementCoordinateDirection(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_ParametricCurve3dElementCoordinateDirection

        Return
        -------
        None

        Description
        -----------
        Reads parametriccurve3delementcoordinatedirection.

        """
        return _RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateDirection_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_ParametricCurve3dElementCoordinateDirection
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateDirection_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_ParametricCurve3dElementCoordinateDirection

        Return
        -------
        None

        Description
        -----------
        Writes parametriccurve3delementcoordinatedirection.

        """
        return _RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateDirection_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWParametricCurve3dElementCoordinateDirection

# Register RWStepFEA_RWParametricCurve3dElementCoordinateDirection in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateDirection_swigregister(RWStepFEA_RWParametricCurve3dElementCoordinateDirection)
class RWStepFEA_RWParametricCurve3dElementCoordinateSystem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateSystem_swiginit(self, _RWStepFEA.new_RWStepFEA_RWParametricCurve3dElementCoordinateSystem(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_ParametricCurve3dElementCoordinateSystem

        Return
        -------
        None

        Description
        -----------
        Reads parametriccurve3delementcoordinatesystem.

        """
        return _RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateSystem_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_ParametricCurve3dElementCoordinateSystem
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateSystem_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_ParametricCurve3dElementCoordinateSystem

        Return
        -------
        None

        Description
        -----------
        Writes parametriccurve3delementcoordinatesystem.

        """
        return _RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateSystem_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWParametricCurve3dElementCoordinateSystem

# Register RWStepFEA_RWParametricCurve3dElementCoordinateSystem in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWParametricCurve3dElementCoordinateSystem_swigregister(RWStepFEA_RWParametricCurve3dElementCoordinateSystem)
class RWStepFEA_RWParametricSurface3dElementCoordinateSystem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWParametricSurface3dElementCoordinateSystem_swiginit(self, _RWStepFEA.new_RWStepFEA_RWParametricSurface3dElementCoordinateSystem(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_ParametricSurface3dElementCoordinateSystem

        Return
        -------
        None

        Description
        -----------
        Reads parametricsurface3delementcoordinatesystem.

        """
        return _RWStepFEA.RWStepFEA_RWParametricSurface3dElementCoordinateSystem_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_ParametricSurface3dElementCoordinateSystem
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWParametricSurface3dElementCoordinateSystem_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_ParametricSurface3dElementCoordinateSystem

        Return
        -------
        None

        Description
        -----------
        Writes parametricsurface3delementcoordinatesystem.

        """
        return _RWStepFEA.RWStepFEA_RWParametricSurface3dElementCoordinateSystem_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWParametricSurface3dElementCoordinateSystem

# Register RWStepFEA_RWParametricSurface3dElementCoordinateSystem in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWParametricSurface3dElementCoordinateSystem_swigregister(RWStepFEA_RWParametricSurface3dElementCoordinateSystem)
class RWStepFEA_RWSurface3dElementRepresentation(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWSurface3dElementRepresentation_swiginit(self, _RWStepFEA.new_RWStepFEA_RWSurface3dElementRepresentation(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_Surface3dElementRepresentation

        Return
        -------
        None

        Description
        -----------
        Reads surface3delementrepresentation.

        """
        return _RWStepFEA.RWStepFEA_RWSurface3dElementRepresentation_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_Surface3dElementRepresentation
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWSurface3dElementRepresentation_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_Surface3dElementRepresentation

        Return
        -------
        None

        Description
        -----------
        Writes surface3delementrepresentation.

        """
        return _RWStepFEA.RWStepFEA_RWSurface3dElementRepresentation_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWSurface3dElementRepresentation

# Register RWStepFEA_RWSurface3dElementRepresentation in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWSurface3dElementRepresentation_swigregister(RWStepFEA_RWSurface3dElementRepresentation)
class RWStepFEA_RWVolume3dElementRepresentation(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepFEA.RWStepFEA_RWVolume3dElementRepresentation_swiginit(self, _RWStepFEA.new_RWStepFEA_RWVolume3dElementRepresentation(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepFEA_Volume3dElementRepresentation

        Return
        -------
        None

        Description
        -----------
        Reads volume3delementrepresentation.

        """
        return _RWStepFEA.RWStepFEA_RWVolume3dElementRepresentation_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepFEA_Volume3dElementRepresentation
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepFEA.RWStepFEA_RWVolume3dElementRepresentation_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepFEA_Volume3dElementRepresentation

        Return
        -------
        None

        Description
        -----------
        Writes volume3delementrepresentation.

        """
        return _RWStepFEA.RWStepFEA_RWVolume3dElementRepresentation_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepFEA.delete_RWStepFEA_RWVolume3dElementRepresentation

# Register RWStepFEA_RWVolume3dElementRepresentation in _RWStepFEA:
_RWStepFEA.RWStepFEA_RWVolume3dElementRepresentation_swigregister(RWStepFEA_RWVolume3dElementRepresentation)



