# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

"""
RWStepAP203 module, see official documentation at
https://www.opencascade.com/doc/occt-7.7.0/refman/html/package_rwstepap203.html
"""

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _RWStepAP203
else:
    import _RWStepAP203

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _RWStepAP203.delete_SwigPyIterator

    def value(self):
        return _RWStepAP203.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _RWStepAP203.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _RWStepAP203.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _RWStepAP203.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _RWStepAP203.SwigPyIterator_equal(self, x)

    def copy(self):
        return _RWStepAP203.SwigPyIterator_copy(self)

    def next(self):
        return _RWStepAP203.SwigPyIterator_next(self)

    def __next__(self):
        return _RWStepAP203.SwigPyIterator___next__(self)

    def previous(self):
        return _RWStepAP203.SwigPyIterator_previous(self)

    def advance(self, n):
        return _RWStepAP203.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _RWStepAP203.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _RWStepAP203.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _RWStepAP203.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _RWStepAP203.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _RWStepAP203.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _RWStepAP203.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _RWStepAP203:
_RWStepAP203.SwigPyIterator_swigregister(SwigPyIterator)

def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error, method_name, class_name):
    return _RWStepAP203.process_exception(error, method_name, class_name)

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.TCollection
import OCC.Core.Message
import OCC.Core.OSD
import OCC.Core.TColStd
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.Resource
import OCC.Core.StepAP203
import OCC.Core.StepBasic
import OCC.Core.StepRepr

from enum import IntEnum
from OCC.Core.Exception import *



class RWStepAP203_RWCcDesignApproval(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepAP203.RWStepAP203_RWCcDesignApproval_swiginit(self, _RWStepAP203.new_RWStepAP203_RWCcDesignApproval(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepAP203_CcDesignApproval

        Return
        -------
        None

        Description
        -----------
        Reads ccdesignapproval.

        """
        return _RWStepAP203.RWStepAP203_RWCcDesignApproval_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepAP203_CcDesignApproval
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepAP203.RWStepAP203_RWCcDesignApproval_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepAP203_CcDesignApproval

        Return
        -------
        None

        Description
        -----------
        Writes ccdesignapproval.

        """
        return _RWStepAP203.RWStepAP203_RWCcDesignApproval_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepAP203.delete_RWStepAP203_RWCcDesignApproval

# Register RWStepAP203_RWCcDesignApproval in _RWStepAP203:
_RWStepAP203.RWStepAP203_RWCcDesignApproval_swigregister(RWStepAP203_RWCcDesignApproval)
class RWStepAP203_RWCcDesignCertification(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepAP203.RWStepAP203_RWCcDesignCertification_swiginit(self, _RWStepAP203.new_RWStepAP203_RWCcDesignCertification(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepAP203_CcDesignCertification

        Return
        -------
        None

        Description
        -----------
        Reads ccdesigncertification.

        """
        return _RWStepAP203.RWStepAP203_RWCcDesignCertification_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepAP203_CcDesignCertification
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepAP203.RWStepAP203_RWCcDesignCertification_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepAP203_CcDesignCertification

        Return
        -------
        None

        Description
        -----------
        Writes ccdesigncertification.

        """
        return _RWStepAP203.RWStepAP203_RWCcDesignCertification_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepAP203.delete_RWStepAP203_RWCcDesignCertification

# Register RWStepAP203_RWCcDesignCertification in _RWStepAP203:
_RWStepAP203.RWStepAP203_RWCcDesignCertification_swigregister(RWStepAP203_RWCcDesignCertification)
class RWStepAP203_RWCcDesignContract(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepAP203.RWStepAP203_RWCcDesignContract_swiginit(self, _RWStepAP203.new_RWStepAP203_RWCcDesignContract(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepAP203_CcDesignContract

        Return
        -------
        None

        Description
        -----------
        Reads ccdesigncontract.

        """
        return _RWStepAP203.RWStepAP203_RWCcDesignContract_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepAP203_CcDesignContract
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepAP203.RWStepAP203_RWCcDesignContract_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepAP203_CcDesignContract

        Return
        -------
        None

        Description
        -----------
        Writes ccdesigncontract.

        """
        return _RWStepAP203.RWStepAP203_RWCcDesignContract_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepAP203.delete_RWStepAP203_RWCcDesignContract

# Register RWStepAP203_RWCcDesignContract in _RWStepAP203:
_RWStepAP203.RWStepAP203_RWCcDesignContract_swigregister(RWStepAP203_RWCcDesignContract)
class RWStepAP203_RWCcDesignDateAndTimeAssignment(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepAP203.RWStepAP203_RWCcDesignDateAndTimeAssignment_swiginit(self, _RWStepAP203.new_RWStepAP203_RWCcDesignDateAndTimeAssignment(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepAP203_CcDesignDateAndTimeAssignment

        Return
        -------
        None

        Description
        -----------
        Reads ccdesigndateandtimeassignment.

        """
        return _RWStepAP203.RWStepAP203_RWCcDesignDateAndTimeAssignment_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepAP203_CcDesignDateAndTimeAssignment
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepAP203.RWStepAP203_RWCcDesignDateAndTimeAssignment_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepAP203_CcDesignDateAndTimeAssignment

        Return
        -------
        None

        Description
        -----------
        Writes ccdesigndateandtimeassignment.

        """
        return _RWStepAP203.RWStepAP203_RWCcDesignDateAndTimeAssignment_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepAP203.delete_RWStepAP203_RWCcDesignDateAndTimeAssignment

# Register RWStepAP203_RWCcDesignDateAndTimeAssignment in _RWStepAP203:
_RWStepAP203.RWStepAP203_RWCcDesignDateAndTimeAssignment_swigregister(RWStepAP203_RWCcDesignDateAndTimeAssignment)
class RWStepAP203_RWCcDesignPersonAndOrganizationAssignment(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepAP203.RWStepAP203_RWCcDesignPersonAndOrganizationAssignment_swiginit(self, _RWStepAP203.new_RWStepAP203_RWCcDesignPersonAndOrganizationAssignment(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepAP203_CcDesignPersonAndOrganizationAssignment

        Return
        -------
        None

        Description
        -----------
        Reads ccdesignpersonandorganizationassignment.

        """
        return _RWStepAP203.RWStepAP203_RWCcDesignPersonAndOrganizationAssignment_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepAP203_CcDesignPersonAndOrganizationAssignment
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepAP203.RWStepAP203_RWCcDesignPersonAndOrganizationAssignment_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepAP203_CcDesignPersonAndOrganizationAssignment

        Return
        -------
        None

        Description
        -----------
        Writes ccdesignpersonandorganizationassignment.

        """
        return _RWStepAP203.RWStepAP203_RWCcDesignPersonAndOrganizationAssignment_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepAP203.delete_RWStepAP203_RWCcDesignPersonAndOrganizationAssignment

# Register RWStepAP203_RWCcDesignPersonAndOrganizationAssignment in _RWStepAP203:
_RWStepAP203.RWStepAP203_RWCcDesignPersonAndOrganizationAssignment_swigregister(RWStepAP203_RWCcDesignPersonAndOrganizationAssignment)
class RWStepAP203_RWCcDesignSecurityClassification(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepAP203.RWStepAP203_RWCcDesignSecurityClassification_swiginit(self, _RWStepAP203.new_RWStepAP203_RWCcDesignSecurityClassification(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepAP203_CcDesignSecurityClassification

        Return
        -------
        None

        Description
        -----------
        Reads ccdesignsecurityclassification.

        """
        return _RWStepAP203.RWStepAP203_RWCcDesignSecurityClassification_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepAP203_CcDesignSecurityClassification
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepAP203.RWStepAP203_RWCcDesignSecurityClassification_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepAP203_CcDesignSecurityClassification

        Return
        -------
        None

        Description
        -----------
        Writes ccdesignsecurityclassification.

        """
        return _RWStepAP203.RWStepAP203_RWCcDesignSecurityClassification_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepAP203.delete_RWStepAP203_RWCcDesignSecurityClassification

# Register RWStepAP203_RWCcDesignSecurityClassification in _RWStepAP203:
_RWStepAP203.RWStepAP203_RWCcDesignSecurityClassification_swigregister(RWStepAP203_RWCcDesignSecurityClassification)
class RWStepAP203_RWCcDesignSpecificationReference(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepAP203.RWStepAP203_RWCcDesignSpecificationReference_swiginit(self, _RWStepAP203.new_RWStepAP203_RWCcDesignSpecificationReference(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepAP203_CcDesignSpecificationReference

        Return
        -------
        None

        Description
        -----------
        Reads ccdesignspecificationreference.

        """
        return _RWStepAP203.RWStepAP203_RWCcDesignSpecificationReference_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepAP203_CcDesignSpecificationReference
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepAP203.RWStepAP203_RWCcDesignSpecificationReference_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepAP203_CcDesignSpecificationReference

        Return
        -------
        None

        Description
        -----------
        Writes ccdesignspecificationreference.

        """
        return _RWStepAP203.RWStepAP203_RWCcDesignSpecificationReference_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepAP203.delete_RWStepAP203_RWCcDesignSpecificationReference

# Register RWStepAP203_RWCcDesignSpecificationReference in _RWStepAP203:
_RWStepAP203.RWStepAP203_RWCcDesignSpecificationReference_swigregister(RWStepAP203_RWCcDesignSpecificationReference)
class RWStepAP203_RWChange(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepAP203.RWStepAP203_RWChange_swiginit(self, _RWStepAP203.new_RWStepAP203_RWChange(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepAP203_Change

        Return
        -------
        None

        Description
        -----------
        Reads change.

        """
        return _RWStepAP203.RWStepAP203_RWChange_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepAP203_Change
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepAP203.RWStepAP203_RWChange_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepAP203_Change

        Return
        -------
        None

        Description
        -----------
        Writes change.

        """
        return _RWStepAP203.RWStepAP203_RWChange_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepAP203.delete_RWStepAP203_RWChange

# Register RWStepAP203_RWChange in _RWStepAP203:
_RWStepAP203.RWStepAP203_RWChange_swigregister(RWStepAP203_RWChange)
class RWStepAP203_RWChangeRequest(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepAP203.RWStepAP203_RWChangeRequest_swiginit(self, _RWStepAP203.new_RWStepAP203_RWChangeRequest(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepAP203_ChangeRequest

        Return
        -------
        None

        Description
        -----------
        Reads changerequest.

        """
        return _RWStepAP203.RWStepAP203_RWChangeRequest_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepAP203_ChangeRequest
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepAP203.RWStepAP203_RWChangeRequest_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepAP203_ChangeRequest

        Return
        -------
        None

        Description
        -----------
        Writes changerequest.

        """
        return _RWStepAP203.RWStepAP203_RWChangeRequest_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepAP203.delete_RWStepAP203_RWChangeRequest

# Register RWStepAP203_RWChangeRequest in _RWStepAP203:
_RWStepAP203.RWStepAP203_RWChangeRequest_swigregister(RWStepAP203_RWChangeRequest)
class RWStepAP203_RWStartRequest(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepAP203.RWStepAP203_RWStartRequest_swiginit(self, _RWStepAP203.new_RWStepAP203_RWStartRequest(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepAP203_StartRequest

        Return
        -------
        None

        Description
        -----------
        Reads startrequest.

        """
        return _RWStepAP203.RWStepAP203_RWStartRequest_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepAP203_StartRequest
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepAP203.RWStepAP203_RWStartRequest_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepAP203_StartRequest

        Return
        -------
        None

        Description
        -----------
        Writes startrequest.

        """
        return _RWStepAP203.RWStepAP203_RWStartRequest_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepAP203.delete_RWStepAP203_RWStartRequest

# Register RWStepAP203_RWStartRequest in _RWStepAP203:
_RWStepAP203.RWStepAP203_RWStartRequest_swigregister(RWStepAP203_RWStartRequest)
class RWStepAP203_RWStartWork(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        Return
        -------
        None

        Description
        -----------
        Empty constructor.

        """
        _RWStepAP203.RWStepAP203_RWStartWork_swiginit(self, _RWStepAP203.new_RWStepAP203_RWStartWork(*args))

    def ReadStep(self, *args):
        r"""

        Parameters
        ----------
        data: StepData_StepReaderData
        num: int
        ach: Interface_Check
        ent: StepAP203_StartWork

        Return
        -------
        None

        Description
        -----------
        Reads startwork.

        """
        return _RWStepAP203.RWStepAP203_RWStartWork_ReadStep(self, *args)

    def Share(self, *args):
        r"""

        Parameters
        ----------
        ent: StepAP203_StartWork
        iter: Interface_EntityIterator

        Return
        -------
        None

        Description
        -----------
        Fills data for graph (shared items).

        """
        return _RWStepAP203.RWStepAP203_RWStartWork_Share(self, *args)

    def WriteStep(self, *args):
        r"""

        Parameters
        ----------
        SW: StepData_StepWriter
        ent: StepAP203_StartWork

        Return
        -------
        None

        Description
        -----------
        Writes startwork.

        """
        return _RWStepAP203.RWStepAP203_RWStartWork_WriteStep(self, *args)

    __repr__ = _dumps_object

    __swig_destroy__ = _RWStepAP203.delete_RWStepAP203_RWStartWork

# Register RWStepAP203_RWStartWork in _RWStepAP203:
_RWStepAP203.RWStepAP203_RWStartWork_swigregister(RWStepAP203_RWStartWork)



