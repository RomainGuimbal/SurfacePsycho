# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
StepRepr module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_steprepr.html
"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_StepRepr')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_StepRepr')
    _StepRepr = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_StepRepr', [dirname(__file__)])
        except ImportError:
            import _StepRepr
            return _StepRepr
        try:
            _mod = imp.load_module('_StepRepr', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _StepRepr = swig_import_helper()
    del swig_import_helper
else:
    import _StepRepr
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

class SwigPyIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwigPyIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwigPyIterator, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _StepRepr.delete_SwigPyIterator
    __del__ = lambda self: None

    def value(self) -> "PyObject *":
        return _StepRepr.SwigPyIterator_value(self)

    def incr(self, n: 'size_t'=1) -> "swig::SwigPyIterator *":
        return _StepRepr.SwigPyIterator_incr(self, n)

    def decr(self, n: 'size_t'=1) -> "swig::SwigPyIterator *":
        return _StepRepr.SwigPyIterator_decr(self, n)

    def distance(self, x: 'SwigPyIterator') -> "ptrdiff_t":
        return _StepRepr.SwigPyIterator_distance(self, x)

    def equal(self, x: 'SwigPyIterator') -> "bool":
        return _StepRepr.SwigPyIterator_equal(self, x)

    def copy(self) -> "swig::SwigPyIterator *":
        return _StepRepr.SwigPyIterator_copy(self)

    def next(self) -> "PyObject *":
        return _StepRepr.SwigPyIterator_next(self)

    def __next__(self) -> "PyObject *":
        return _StepRepr.SwigPyIterator___next__(self)

    def previous(self) -> "PyObject *":
        return _StepRepr.SwigPyIterator_previous(self)

    def advance(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator *":
        return _StepRepr.SwigPyIterator_advance(self, n)

    def __eq__(self, x: 'SwigPyIterator') -> "bool":
        return _StepRepr.SwigPyIterator___eq__(self, x)

    def __ne__(self, x: 'SwigPyIterator') -> "bool":
        return _StepRepr.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator &":
        return _StepRepr.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator &":
        return _StepRepr.SwigPyIterator___isub__(self, n)

    def __add__(self, n: 'ptrdiff_t') -> "swig::SwigPyIterator *":
        return _StepRepr.SwigPyIterator___add__(self, n)

    def __sub__(self, *args) -> "ptrdiff_t":
        return _StepRepr.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self
SwigPyIterator_swigregister = _StepRepr.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


def process_exception(error: 'Standard_Failure', method_name: 'std::string', class_name: 'std::string') -> "void":
    return _StepRepr.process_exception(error, method_name, class_name)
process_exception = _StepRepr.process_exception

from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.TCollection
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.Message
import OCC.Core.OSD
import OCC.Core.TColStd
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.Resource
import OCC.Core.StepBasic

from enum import IntEnum
from OCC.Core.Exception import *




def Handle_StepRepr_AssemblyComponentUsageSubstitute_Create() -> "opencascade::handle< StepRepr_AssemblyComponentUsageSubstitute >":
    return _StepRepr.Handle_StepRepr_AssemblyComponentUsageSubstitute_Create()
Handle_StepRepr_AssemblyComponentUsageSubstitute_Create = _StepRepr.Handle_StepRepr_AssemblyComponentUsageSubstitute_Create

def Handle_StepRepr_AssemblyComponentUsageSubstitute_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_AssemblyComponentUsageSubstitute >":
    return _StepRepr.Handle_StepRepr_AssemblyComponentUsageSubstitute_DownCast(t)
Handle_StepRepr_AssemblyComponentUsageSubstitute_DownCast = _StepRepr.Handle_StepRepr_AssemblyComponentUsageSubstitute_DownCast

def Handle_StepRepr_AssemblyComponentUsageSubstitute_IsNull(t: 'opencascade::handle< StepRepr_AssemblyComponentUsageSubstitute > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_AssemblyComponentUsageSubstitute_IsNull(t)
Handle_StepRepr_AssemblyComponentUsageSubstitute_IsNull = _StepRepr.Handle_StepRepr_AssemblyComponentUsageSubstitute_IsNull

def Handle_StepRepr_ConfigurationDesign_Create() -> "opencascade::handle< StepRepr_ConfigurationDesign >":
    return _StepRepr.Handle_StepRepr_ConfigurationDesign_Create()
Handle_StepRepr_ConfigurationDesign_Create = _StepRepr.Handle_StepRepr_ConfigurationDesign_Create

def Handle_StepRepr_ConfigurationDesign_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ConfigurationDesign >":
    return _StepRepr.Handle_StepRepr_ConfigurationDesign_DownCast(t)
Handle_StepRepr_ConfigurationDesign_DownCast = _StepRepr.Handle_StepRepr_ConfigurationDesign_DownCast

def Handle_StepRepr_ConfigurationDesign_IsNull(t: 'opencascade::handle< StepRepr_ConfigurationDesign > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ConfigurationDesign_IsNull(t)
Handle_StepRepr_ConfigurationDesign_IsNull = _StepRepr.Handle_StepRepr_ConfigurationDesign_IsNull

def Handle_StepRepr_ConfigurationEffectivity_Create() -> "opencascade::handle< StepRepr_ConfigurationEffectivity >":
    return _StepRepr.Handle_StepRepr_ConfigurationEffectivity_Create()
Handle_StepRepr_ConfigurationEffectivity_Create = _StepRepr.Handle_StepRepr_ConfigurationEffectivity_Create

def Handle_StepRepr_ConfigurationEffectivity_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ConfigurationEffectivity >":
    return _StepRepr.Handle_StepRepr_ConfigurationEffectivity_DownCast(t)
Handle_StepRepr_ConfigurationEffectivity_DownCast = _StepRepr.Handle_StepRepr_ConfigurationEffectivity_DownCast

def Handle_StepRepr_ConfigurationEffectivity_IsNull(t: 'opencascade::handle< StepRepr_ConfigurationEffectivity > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ConfigurationEffectivity_IsNull(t)
Handle_StepRepr_ConfigurationEffectivity_IsNull = _StepRepr.Handle_StepRepr_ConfigurationEffectivity_IsNull

def Handle_StepRepr_ConfigurationItem_Create() -> "opencascade::handle< StepRepr_ConfigurationItem >":
    return _StepRepr.Handle_StepRepr_ConfigurationItem_Create()
Handle_StepRepr_ConfigurationItem_Create = _StepRepr.Handle_StepRepr_ConfigurationItem_Create

def Handle_StepRepr_ConfigurationItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ConfigurationItem >":
    return _StepRepr.Handle_StepRepr_ConfigurationItem_DownCast(t)
Handle_StepRepr_ConfigurationItem_DownCast = _StepRepr.Handle_StepRepr_ConfigurationItem_DownCast

def Handle_StepRepr_ConfigurationItem_IsNull(t: 'opencascade::handle< StepRepr_ConfigurationItem > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ConfigurationItem_IsNull(t)
Handle_StepRepr_ConfigurationItem_IsNull = _StepRepr.Handle_StepRepr_ConfigurationItem_IsNull

def Handle_StepRepr_DataEnvironment_Create() -> "opencascade::handle< StepRepr_DataEnvironment >":
    return _StepRepr.Handle_StepRepr_DataEnvironment_Create()
Handle_StepRepr_DataEnvironment_Create = _StepRepr.Handle_StepRepr_DataEnvironment_Create

def Handle_StepRepr_DataEnvironment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_DataEnvironment >":
    return _StepRepr.Handle_StepRepr_DataEnvironment_DownCast(t)
Handle_StepRepr_DataEnvironment_DownCast = _StepRepr.Handle_StepRepr_DataEnvironment_DownCast

def Handle_StepRepr_DataEnvironment_IsNull(t: 'opencascade::handle< StepRepr_DataEnvironment > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_DataEnvironment_IsNull(t)
Handle_StepRepr_DataEnvironment_IsNull = _StepRepr.Handle_StepRepr_DataEnvironment_IsNull

def Handle_StepRepr_FunctionallyDefinedTransformation_Create() -> "opencascade::handle< StepRepr_FunctionallyDefinedTransformation >":
    return _StepRepr.Handle_StepRepr_FunctionallyDefinedTransformation_Create()
Handle_StepRepr_FunctionallyDefinedTransformation_Create = _StepRepr.Handle_StepRepr_FunctionallyDefinedTransformation_Create

def Handle_StepRepr_FunctionallyDefinedTransformation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_FunctionallyDefinedTransformation >":
    return _StepRepr.Handle_StepRepr_FunctionallyDefinedTransformation_DownCast(t)
Handle_StepRepr_FunctionallyDefinedTransformation_DownCast = _StepRepr.Handle_StepRepr_FunctionallyDefinedTransformation_DownCast

def Handle_StepRepr_FunctionallyDefinedTransformation_IsNull(t: 'opencascade::handle< StepRepr_FunctionallyDefinedTransformation > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_FunctionallyDefinedTransformation_IsNull(t)
Handle_StepRepr_FunctionallyDefinedTransformation_IsNull = _StepRepr.Handle_StepRepr_FunctionallyDefinedTransformation_IsNull

def Handle_StepRepr_ItemDefinedTransformation_Create() -> "opencascade::handle< StepRepr_ItemDefinedTransformation >":
    return _StepRepr.Handle_StepRepr_ItemDefinedTransformation_Create()
Handle_StepRepr_ItemDefinedTransformation_Create = _StepRepr.Handle_StepRepr_ItemDefinedTransformation_Create

def Handle_StepRepr_ItemDefinedTransformation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ItemDefinedTransformation >":
    return _StepRepr.Handle_StepRepr_ItemDefinedTransformation_DownCast(t)
Handle_StepRepr_ItemDefinedTransformation_DownCast = _StepRepr.Handle_StepRepr_ItemDefinedTransformation_DownCast

def Handle_StepRepr_ItemDefinedTransformation_IsNull(t: 'opencascade::handle< StepRepr_ItemDefinedTransformation > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ItemDefinedTransformation_IsNull(t)
Handle_StepRepr_ItemDefinedTransformation_IsNull = _StepRepr.Handle_StepRepr_ItemDefinedTransformation_IsNull

def Handle_StepRepr_MaterialDesignation_Create() -> "opencascade::handle< StepRepr_MaterialDesignation >":
    return _StepRepr.Handle_StepRepr_MaterialDesignation_Create()
Handle_StepRepr_MaterialDesignation_Create = _StepRepr.Handle_StepRepr_MaterialDesignation_Create

def Handle_StepRepr_MaterialDesignation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_MaterialDesignation >":
    return _StepRepr.Handle_StepRepr_MaterialDesignation_DownCast(t)
Handle_StepRepr_MaterialDesignation_DownCast = _StepRepr.Handle_StepRepr_MaterialDesignation_DownCast

def Handle_StepRepr_MaterialDesignation_IsNull(t: 'opencascade::handle< StepRepr_MaterialDesignation > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_MaterialDesignation_IsNull(t)
Handle_StepRepr_MaterialDesignation_IsNull = _StepRepr.Handle_StepRepr_MaterialDesignation_IsNull

def Handle_StepRepr_ProductConcept_Create() -> "opencascade::handle< StepRepr_ProductConcept >":
    return _StepRepr.Handle_StepRepr_ProductConcept_Create()
Handle_StepRepr_ProductConcept_Create = _StepRepr.Handle_StepRepr_ProductConcept_Create

def Handle_StepRepr_ProductConcept_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ProductConcept >":
    return _StepRepr.Handle_StepRepr_ProductConcept_DownCast(t)
Handle_StepRepr_ProductConcept_DownCast = _StepRepr.Handle_StepRepr_ProductConcept_DownCast

def Handle_StepRepr_ProductConcept_IsNull(t: 'opencascade::handle< StepRepr_ProductConcept > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ProductConcept_IsNull(t)
Handle_StepRepr_ProductConcept_IsNull = _StepRepr.Handle_StepRepr_ProductConcept_IsNull

def Handle_StepRepr_ProductDefinitionUsage_Create() -> "opencascade::handle< StepRepr_ProductDefinitionUsage >":
    return _StepRepr.Handle_StepRepr_ProductDefinitionUsage_Create()
Handle_StepRepr_ProductDefinitionUsage_Create = _StepRepr.Handle_StepRepr_ProductDefinitionUsage_Create

def Handle_StepRepr_ProductDefinitionUsage_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ProductDefinitionUsage >":
    return _StepRepr.Handle_StepRepr_ProductDefinitionUsage_DownCast(t)
Handle_StepRepr_ProductDefinitionUsage_DownCast = _StepRepr.Handle_StepRepr_ProductDefinitionUsage_DownCast

def Handle_StepRepr_ProductDefinitionUsage_IsNull(t: 'opencascade::handle< StepRepr_ProductDefinitionUsage > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ProductDefinitionUsage_IsNull(t)
Handle_StepRepr_ProductDefinitionUsage_IsNull = _StepRepr.Handle_StepRepr_ProductDefinitionUsage_IsNull

def Handle_StepRepr_PropertyDefinition_Create() -> "opencascade::handle< StepRepr_PropertyDefinition >":
    return _StepRepr.Handle_StepRepr_PropertyDefinition_Create()
Handle_StepRepr_PropertyDefinition_Create = _StepRepr.Handle_StepRepr_PropertyDefinition_Create

def Handle_StepRepr_PropertyDefinition_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_PropertyDefinition >":
    return _StepRepr.Handle_StepRepr_PropertyDefinition_DownCast(t)
Handle_StepRepr_PropertyDefinition_DownCast = _StepRepr.Handle_StepRepr_PropertyDefinition_DownCast

def Handle_StepRepr_PropertyDefinition_IsNull(t: 'opencascade::handle< StepRepr_PropertyDefinition > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_PropertyDefinition_IsNull(t)
Handle_StepRepr_PropertyDefinition_IsNull = _StepRepr.Handle_StepRepr_PropertyDefinition_IsNull

def Handle_StepRepr_PropertyDefinitionRelationship_Create() -> "opencascade::handle< StepRepr_PropertyDefinitionRelationship >":
    return _StepRepr.Handle_StepRepr_PropertyDefinitionRelationship_Create()
Handle_StepRepr_PropertyDefinitionRelationship_Create = _StepRepr.Handle_StepRepr_PropertyDefinitionRelationship_Create

def Handle_StepRepr_PropertyDefinitionRelationship_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_PropertyDefinitionRelationship >":
    return _StepRepr.Handle_StepRepr_PropertyDefinitionRelationship_DownCast(t)
Handle_StepRepr_PropertyDefinitionRelationship_DownCast = _StepRepr.Handle_StepRepr_PropertyDefinitionRelationship_DownCast

def Handle_StepRepr_PropertyDefinitionRelationship_IsNull(t: 'opencascade::handle< StepRepr_PropertyDefinitionRelationship > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_PropertyDefinitionRelationship_IsNull(t)
Handle_StepRepr_PropertyDefinitionRelationship_IsNull = _StepRepr.Handle_StepRepr_PropertyDefinitionRelationship_IsNull

def Handle_StepRepr_PropertyDefinitionRepresentation_Create() -> "opencascade::handle< StepRepr_PropertyDefinitionRepresentation >":
    return _StepRepr.Handle_StepRepr_PropertyDefinitionRepresentation_Create()
Handle_StepRepr_PropertyDefinitionRepresentation_Create = _StepRepr.Handle_StepRepr_PropertyDefinitionRepresentation_Create

def Handle_StepRepr_PropertyDefinitionRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_PropertyDefinitionRepresentation >":
    return _StepRepr.Handle_StepRepr_PropertyDefinitionRepresentation_DownCast(t)
Handle_StepRepr_PropertyDefinitionRepresentation_DownCast = _StepRepr.Handle_StepRepr_PropertyDefinitionRepresentation_DownCast

def Handle_StepRepr_PropertyDefinitionRepresentation_IsNull(t: 'opencascade::handle< StepRepr_PropertyDefinitionRepresentation > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_PropertyDefinitionRepresentation_IsNull(t)
Handle_StepRepr_PropertyDefinitionRepresentation_IsNull = _StepRepr.Handle_StepRepr_PropertyDefinitionRepresentation_IsNull

def Handle_StepRepr_Representation_Create() -> "opencascade::handle< StepRepr_Representation >":
    return _StepRepr.Handle_StepRepr_Representation_Create()
Handle_StepRepr_Representation_Create = _StepRepr.Handle_StepRepr_Representation_Create

def Handle_StepRepr_Representation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_Representation >":
    return _StepRepr.Handle_StepRepr_Representation_DownCast(t)
Handle_StepRepr_Representation_DownCast = _StepRepr.Handle_StepRepr_Representation_DownCast

def Handle_StepRepr_Representation_IsNull(t: 'opencascade::handle< StepRepr_Representation > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_Representation_IsNull(t)
Handle_StepRepr_Representation_IsNull = _StepRepr.Handle_StepRepr_Representation_IsNull

def Handle_StepRepr_RepresentationContext_Create() -> "opencascade::handle< StepRepr_RepresentationContext >":
    return _StepRepr.Handle_StepRepr_RepresentationContext_Create()
Handle_StepRepr_RepresentationContext_Create = _StepRepr.Handle_StepRepr_RepresentationContext_Create

def Handle_StepRepr_RepresentationContext_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_RepresentationContext >":
    return _StepRepr.Handle_StepRepr_RepresentationContext_DownCast(t)
Handle_StepRepr_RepresentationContext_DownCast = _StepRepr.Handle_StepRepr_RepresentationContext_DownCast

def Handle_StepRepr_RepresentationContext_IsNull(t: 'opencascade::handle< StepRepr_RepresentationContext > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_RepresentationContext_IsNull(t)
Handle_StepRepr_RepresentationContext_IsNull = _StepRepr.Handle_StepRepr_RepresentationContext_IsNull

def Handle_StepRepr_RepresentationItem_Create() -> "opencascade::handle< StepRepr_RepresentationItem >":
    return _StepRepr.Handle_StepRepr_RepresentationItem_Create()
Handle_StepRepr_RepresentationItem_Create = _StepRepr.Handle_StepRepr_RepresentationItem_Create

def Handle_StepRepr_RepresentationItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_RepresentationItem >":
    return _StepRepr.Handle_StepRepr_RepresentationItem_DownCast(t)
Handle_StepRepr_RepresentationItem_DownCast = _StepRepr.Handle_StepRepr_RepresentationItem_DownCast

def Handle_StepRepr_RepresentationItem_IsNull(t: 'opencascade::handle< StepRepr_RepresentationItem > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_RepresentationItem_IsNull(t)
Handle_StepRepr_RepresentationItem_IsNull = _StepRepr.Handle_StepRepr_RepresentationItem_IsNull

def Handle_StepRepr_RepresentationMap_Create() -> "opencascade::handle< StepRepr_RepresentationMap >":
    return _StepRepr.Handle_StepRepr_RepresentationMap_Create()
Handle_StepRepr_RepresentationMap_Create = _StepRepr.Handle_StepRepr_RepresentationMap_Create

def Handle_StepRepr_RepresentationMap_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_RepresentationMap >":
    return _StepRepr.Handle_StepRepr_RepresentationMap_DownCast(t)
Handle_StepRepr_RepresentationMap_DownCast = _StepRepr.Handle_StepRepr_RepresentationMap_DownCast

def Handle_StepRepr_RepresentationMap_IsNull(t: 'opencascade::handle< StepRepr_RepresentationMap > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_RepresentationMap_IsNull(t)
Handle_StepRepr_RepresentationMap_IsNull = _StepRepr.Handle_StepRepr_RepresentationMap_IsNull

def Handle_StepRepr_RepresentationRelationship_Create() -> "opencascade::handle< StepRepr_RepresentationRelationship >":
    return _StepRepr.Handle_StepRepr_RepresentationRelationship_Create()
Handle_StepRepr_RepresentationRelationship_Create = _StepRepr.Handle_StepRepr_RepresentationRelationship_Create

def Handle_StepRepr_RepresentationRelationship_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_RepresentationRelationship >":
    return _StepRepr.Handle_StepRepr_RepresentationRelationship_DownCast(t)
Handle_StepRepr_RepresentationRelationship_DownCast = _StepRepr.Handle_StepRepr_RepresentationRelationship_DownCast

def Handle_StepRepr_RepresentationRelationship_IsNull(t: 'opencascade::handle< StepRepr_RepresentationRelationship > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_RepresentationRelationship_IsNull(t)
Handle_StepRepr_RepresentationRelationship_IsNull = _StepRepr.Handle_StepRepr_RepresentationRelationship_IsNull

def Handle_StepRepr_ShapeAspect_Create() -> "opencascade::handle< StepRepr_ShapeAspect >":
    return _StepRepr.Handle_StepRepr_ShapeAspect_Create()
Handle_StepRepr_ShapeAspect_Create = _StepRepr.Handle_StepRepr_ShapeAspect_Create

def Handle_StepRepr_ShapeAspect_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ShapeAspect >":
    return _StepRepr.Handle_StepRepr_ShapeAspect_DownCast(t)
Handle_StepRepr_ShapeAspect_DownCast = _StepRepr.Handle_StepRepr_ShapeAspect_DownCast

def Handle_StepRepr_ShapeAspect_IsNull(t: 'opencascade::handle< StepRepr_ShapeAspect > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ShapeAspect_IsNull(t)
Handle_StepRepr_ShapeAspect_IsNull = _StepRepr.Handle_StepRepr_ShapeAspect_IsNull

def Handle_StepRepr_ShapeAspectRelationship_Create() -> "opencascade::handle< StepRepr_ShapeAspectRelationship >":
    return _StepRepr.Handle_StepRepr_ShapeAspectRelationship_Create()
Handle_StepRepr_ShapeAspectRelationship_Create = _StepRepr.Handle_StepRepr_ShapeAspectRelationship_Create

def Handle_StepRepr_ShapeAspectRelationship_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ShapeAspectRelationship >":
    return _StepRepr.Handle_StepRepr_ShapeAspectRelationship_DownCast(t)
Handle_StepRepr_ShapeAspectRelationship_DownCast = _StepRepr.Handle_StepRepr_ShapeAspectRelationship_DownCast

def Handle_StepRepr_ShapeAspectRelationship_IsNull(t: 'opencascade::handle< StepRepr_ShapeAspectRelationship > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ShapeAspectRelationship_IsNull(t)
Handle_StepRepr_ShapeAspectRelationship_IsNull = _StepRepr.Handle_StepRepr_ShapeAspectRelationship_IsNull

def Handle_StepRepr_SuppliedPartRelationship_Create() -> "opencascade::handle< StepRepr_SuppliedPartRelationship >":
    return _StepRepr.Handle_StepRepr_SuppliedPartRelationship_Create()
Handle_StepRepr_SuppliedPartRelationship_Create = _StepRepr.Handle_StepRepr_SuppliedPartRelationship_Create

def Handle_StepRepr_SuppliedPartRelationship_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_SuppliedPartRelationship >":
    return _StepRepr.Handle_StepRepr_SuppliedPartRelationship_DownCast(t)
Handle_StepRepr_SuppliedPartRelationship_DownCast = _StepRepr.Handle_StepRepr_SuppliedPartRelationship_DownCast

def Handle_StepRepr_SuppliedPartRelationship_IsNull(t: 'opencascade::handle< StepRepr_SuppliedPartRelationship > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_SuppliedPartRelationship_IsNull(t)
Handle_StepRepr_SuppliedPartRelationship_IsNull = _StepRepr.Handle_StepRepr_SuppliedPartRelationship_IsNull

def Handle_StepRepr_AssemblyComponentUsage_Create() -> "opencascade::handle< StepRepr_AssemblyComponentUsage >":
    return _StepRepr.Handle_StepRepr_AssemblyComponentUsage_Create()
Handle_StepRepr_AssemblyComponentUsage_Create = _StepRepr.Handle_StepRepr_AssemblyComponentUsage_Create

def Handle_StepRepr_AssemblyComponentUsage_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_AssemblyComponentUsage >":
    return _StepRepr.Handle_StepRepr_AssemblyComponentUsage_DownCast(t)
Handle_StepRepr_AssemblyComponentUsage_DownCast = _StepRepr.Handle_StepRepr_AssemblyComponentUsage_DownCast

def Handle_StepRepr_AssemblyComponentUsage_IsNull(t: 'opencascade::handle< StepRepr_AssemblyComponentUsage > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_AssemblyComponentUsage_IsNull(t)
Handle_StepRepr_AssemblyComponentUsage_IsNull = _StepRepr.Handle_StepRepr_AssemblyComponentUsage_IsNull

def Handle_StepRepr_CharacterizedRepresentation_Create() -> "opencascade::handle< StepRepr_CharacterizedRepresentation >":
    return _StepRepr.Handle_StepRepr_CharacterizedRepresentation_Create()
Handle_StepRepr_CharacterizedRepresentation_Create = _StepRepr.Handle_StepRepr_CharacterizedRepresentation_Create

def Handle_StepRepr_CharacterizedRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_CharacterizedRepresentation >":
    return _StepRepr.Handle_StepRepr_CharacterizedRepresentation_DownCast(t)
Handle_StepRepr_CharacterizedRepresentation_DownCast = _StepRepr.Handle_StepRepr_CharacterizedRepresentation_DownCast

def Handle_StepRepr_CharacterizedRepresentation_IsNull(t: 'opencascade::handle< StepRepr_CharacterizedRepresentation > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_CharacterizedRepresentation_IsNull(t)
Handle_StepRepr_CharacterizedRepresentation_IsNull = _StepRepr.Handle_StepRepr_CharacterizedRepresentation_IsNull

def Handle_StepRepr_CompShAspAndDatumFeatAndShAsp_Create() -> "opencascade::handle< StepRepr_CompShAspAndDatumFeatAndShAsp >":
    return _StepRepr.Handle_StepRepr_CompShAspAndDatumFeatAndShAsp_Create()
Handle_StepRepr_CompShAspAndDatumFeatAndShAsp_Create = _StepRepr.Handle_StepRepr_CompShAspAndDatumFeatAndShAsp_Create

def Handle_StepRepr_CompShAspAndDatumFeatAndShAsp_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_CompShAspAndDatumFeatAndShAsp >":
    return _StepRepr.Handle_StepRepr_CompShAspAndDatumFeatAndShAsp_DownCast(t)
Handle_StepRepr_CompShAspAndDatumFeatAndShAsp_DownCast = _StepRepr.Handle_StepRepr_CompShAspAndDatumFeatAndShAsp_DownCast

def Handle_StepRepr_CompShAspAndDatumFeatAndShAsp_IsNull(t: 'opencascade::handle< StepRepr_CompShAspAndDatumFeatAndShAsp > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_CompShAspAndDatumFeatAndShAsp_IsNull(t)
Handle_StepRepr_CompShAspAndDatumFeatAndShAsp_IsNull = _StepRepr.Handle_StepRepr_CompShAspAndDatumFeatAndShAsp_IsNull

def Handle_StepRepr_CompositeShapeAspect_Create() -> "opencascade::handle< StepRepr_CompositeShapeAspect >":
    return _StepRepr.Handle_StepRepr_CompositeShapeAspect_Create()
Handle_StepRepr_CompositeShapeAspect_Create = _StepRepr.Handle_StepRepr_CompositeShapeAspect_Create

def Handle_StepRepr_CompositeShapeAspect_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_CompositeShapeAspect >":
    return _StepRepr.Handle_StepRepr_CompositeShapeAspect_DownCast(t)
Handle_StepRepr_CompositeShapeAspect_DownCast = _StepRepr.Handle_StepRepr_CompositeShapeAspect_DownCast

def Handle_StepRepr_CompositeShapeAspect_IsNull(t: 'opencascade::handle< StepRepr_CompositeShapeAspect > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_CompositeShapeAspect_IsNull(t)
Handle_StepRepr_CompositeShapeAspect_IsNull = _StepRepr.Handle_StepRepr_CompositeShapeAspect_IsNull

def Handle_StepRepr_CompoundRepresentationItem_Create() -> "opencascade::handle< StepRepr_CompoundRepresentationItem >":
    return _StepRepr.Handle_StepRepr_CompoundRepresentationItem_Create()
Handle_StepRepr_CompoundRepresentationItem_Create = _StepRepr.Handle_StepRepr_CompoundRepresentationItem_Create

def Handle_StepRepr_CompoundRepresentationItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_CompoundRepresentationItem >":
    return _StepRepr.Handle_StepRepr_CompoundRepresentationItem_DownCast(t)
Handle_StepRepr_CompoundRepresentationItem_DownCast = _StepRepr.Handle_StepRepr_CompoundRepresentationItem_DownCast

def Handle_StepRepr_CompoundRepresentationItem_IsNull(t: 'opencascade::handle< StepRepr_CompoundRepresentationItem > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_CompoundRepresentationItem_IsNull(t)
Handle_StepRepr_CompoundRepresentationItem_IsNull = _StepRepr.Handle_StepRepr_CompoundRepresentationItem_IsNull

def Handle_StepRepr_ConstructiveGeometryRepresentation_Create() -> "opencascade::handle< StepRepr_ConstructiveGeometryRepresentation >":
    return _StepRepr.Handle_StepRepr_ConstructiveGeometryRepresentation_Create()
Handle_StepRepr_ConstructiveGeometryRepresentation_Create = _StepRepr.Handle_StepRepr_ConstructiveGeometryRepresentation_Create

def Handle_StepRepr_ConstructiveGeometryRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ConstructiveGeometryRepresentation >":
    return _StepRepr.Handle_StepRepr_ConstructiveGeometryRepresentation_DownCast(t)
Handle_StepRepr_ConstructiveGeometryRepresentation_DownCast = _StepRepr.Handle_StepRepr_ConstructiveGeometryRepresentation_DownCast

def Handle_StepRepr_ConstructiveGeometryRepresentation_IsNull(t: 'opencascade::handle< StepRepr_ConstructiveGeometryRepresentation > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ConstructiveGeometryRepresentation_IsNull(t)
Handle_StepRepr_ConstructiveGeometryRepresentation_IsNull = _StepRepr.Handle_StepRepr_ConstructiveGeometryRepresentation_IsNull

def Handle_StepRepr_ConstructiveGeometryRepresentationRelationship_Create() -> "opencascade::handle< StepRepr_ConstructiveGeometryRepresentationRelationship >":
    return _StepRepr.Handle_StepRepr_ConstructiveGeometryRepresentationRelationship_Create()
Handle_StepRepr_ConstructiveGeometryRepresentationRelationship_Create = _StepRepr.Handle_StepRepr_ConstructiveGeometryRepresentationRelationship_Create

def Handle_StepRepr_ConstructiveGeometryRepresentationRelationship_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ConstructiveGeometryRepresentationRelationship >":
    return _StepRepr.Handle_StepRepr_ConstructiveGeometryRepresentationRelationship_DownCast(t)
Handle_StepRepr_ConstructiveGeometryRepresentationRelationship_DownCast = _StepRepr.Handle_StepRepr_ConstructiveGeometryRepresentationRelationship_DownCast

def Handle_StepRepr_ConstructiveGeometryRepresentationRelationship_IsNull(t: 'opencascade::handle< StepRepr_ConstructiveGeometryRepresentationRelationship > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ConstructiveGeometryRepresentationRelationship_IsNull(t)
Handle_StepRepr_ConstructiveGeometryRepresentationRelationship_IsNull = _StepRepr.Handle_StepRepr_ConstructiveGeometryRepresentationRelationship_IsNull

def Handle_StepRepr_DefinitionalRepresentation_Create() -> "opencascade::handle< StepRepr_DefinitionalRepresentation >":
    return _StepRepr.Handle_StepRepr_DefinitionalRepresentation_Create()
Handle_StepRepr_DefinitionalRepresentation_Create = _StepRepr.Handle_StepRepr_DefinitionalRepresentation_Create

def Handle_StepRepr_DefinitionalRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_DefinitionalRepresentation >":
    return _StepRepr.Handle_StepRepr_DefinitionalRepresentation_DownCast(t)
Handle_StepRepr_DefinitionalRepresentation_DownCast = _StepRepr.Handle_StepRepr_DefinitionalRepresentation_DownCast

def Handle_StepRepr_DefinitionalRepresentation_IsNull(t: 'opencascade::handle< StepRepr_DefinitionalRepresentation > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_DefinitionalRepresentation_IsNull(t)
Handle_StepRepr_DefinitionalRepresentation_IsNull = _StepRepr.Handle_StepRepr_DefinitionalRepresentation_IsNull

def Handle_StepRepr_DerivedShapeAspect_Create() -> "opencascade::handle< StepRepr_DerivedShapeAspect >":
    return _StepRepr.Handle_StepRepr_DerivedShapeAspect_Create()
Handle_StepRepr_DerivedShapeAspect_Create = _StepRepr.Handle_StepRepr_DerivedShapeAspect_Create

def Handle_StepRepr_DerivedShapeAspect_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_DerivedShapeAspect >":
    return _StepRepr.Handle_StepRepr_DerivedShapeAspect_DownCast(t)
Handle_StepRepr_DerivedShapeAspect_DownCast = _StepRepr.Handle_StepRepr_DerivedShapeAspect_DownCast

def Handle_StepRepr_DerivedShapeAspect_IsNull(t: 'opencascade::handle< StepRepr_DerivedShapeAspect > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_DerivedShapeAspect_IsNull(t)
Handle_StepRepr_DerivedShapeAspect_IsNull = _StepRepr.Handle_StepRepr_DerivedShapeAspect_IsNull

def Handle_StepRepr_DescriptiveRepresentationItem_Create() -> "opencascade::handle< StepRepr_DescriptiveRepresentationItem >":
    return _StepRepr.Handle_StepRepr_DescriptiveRepresentationItem_Create()
Handle_StepRepr_DescriptiveRepresentationItem_Create = _StepRepr.Handle_StepRepr_DescriptiveRepresentationItem_Create

def Handle_StepRepr_DescriptiveRepresentationItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_DescriptiveRepresentationItem >":
    return _StepRepr.Handle_StepRepr_DescriptiveRepresentationItem_DownCast(t)
Handle_StepRepr_DescriptiveRepresentationItem_DownCast = _StepRepr.Handle_StepRepr_DescriptiveRepresentationItem_DownCast

def Handle_StepRepr_DescriptiveRepresentationItem_IsNull(t: 'opencascade::handle< StepRepr_DescriptiveRepresentationItem > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_DescriptiveRepresentationItem_IsNull(t)
Handle_StepRepr_DescriptiveRepresentationItem_IsNull = _StepRepr.Handle_StepRepr_DescriptiveRepresentationItem_IsNull

def Handle_StepRepr_ExternallyDefinedRepresentation_Create() -> "opencascade::handle< StepRepr_ExternallyDefinedRepresentation >":
    return _StepRepr.Handle_StepRepr_ExternallyDefinedRepresentation_Create()
Handle_StepRepr_ExternallyDefinedRepresentation_Create = _StepRepr.Handle_StepRepr_ExternallyDefinedRepresentation_Create

def Handle_StepRepr_ExternallyDefinedRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ExternallyDefinedRepresentation >":
    return _StepRepr.Handle_StepRepr_ExternallyDefinedRepresentation_DownCast(t)
Handle_StepRepr_ExternallyDefinedRepresentation_DownCast = _StepRepr.Handle_StepRepr_ExternallyDefinedRepresentation_DownCast

def Handle_StepRepr_ExternallyDefinedRepresentation_IsNull(t: 'opencascade::handle< StepRepr_ExternallyDefinedRepresentation > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ExternallyDefinedRepresentation_IsNull(t)
Handle_StepRepr_ExternallyDefinedRepresentation_IsNull = _StepRepr.Handle_StepRepr_ExternallyDefinedRepresentation_IsNull

def Handle_StepRepr_FeatureForDatumTargetRelationship_Create() -> "opencascade::handle< StepRepr_FeatureForDatumTargetRelationship >":
    return _StepRepr.Handle_StepRepr_FeatureForDatumTargetRelationship_Create()
Handle_StepRepr_FeatureForDatumTargetRelationship_Create = _StepRepr.Handle_StepRepr_FeatureForDatumTargetRelationship_Create

def Handle_StepRepr_FeatureForDatumTargetRelationship_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_FeatureForDatumTargetRelationship >":
    return _StepRepr.Handle_StepRepr_FeatureForDatumTargetRelationship_DownCast(t)
Handle_StepRepr_FeatureForDatumTargetRelationship_DownCast = _StepRepr.Handle_StepRepr_FeatureForDatumTargetRelationship_DownCast

def Handle_StepRepr_FeatureForDatumTargetRelationship_IsNull(t: 'opencascade::handle< StepRepr_FeatureForDatumTargetRelationship > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_FeatureForDatumTargetRelationship_IsNull(t)
Handle_StepRepr_FeatureForDatumTargetRelationship_IsNull = _StepRepr.Handle_StepRepr_FeatureForDatumTargetRelationship_IsNull

def Handle_StepRepr_GlobalUncertaintyAssignedContext_Create() -> "opencascade::handle< StepRepr_GlobalUncertaintyAssignedContext >":
    return _StepRepr.Handle_StepRepr_GlobalUncertaintyAssignedContext_Create()
Handle_StepRepr_GlobalUncertaintyAssignedContext_Create = _StepRepr.Handle_StepRepr_GlobalUncertaintyAssignedContext_Create

def Handle_StepRepr_GlobalUncertaintyAssignedContext_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_GlobalUncertaintyAssignedContext >":
    return _StepRepr.Handle_StepRepr_GlobalUncertaintyAssignedContext_DownCast(t)
Handle_StepRepr_GlobalUncertaintyAssignedContext_DownCast = _StepRepr.Handle_StepRepr_GlobalUncertaintyAssignedContext_DownCast

def Handle_StepRepr_GlobalUncertaintyAssignedContext_IsNull(t: 'opencascade::handle< StepRepr_GlobalUncertaintyAssignedContext > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_GlobalUncertaintyAssignedContext_IsNull(t)
Handle_StepRepr_GlobalUncertaintyAssignedContext_IsNull = _StepRepr.Handle_StepRepr_GlobalUncertaintyAssignedContext_IsNull

def Handle_StepRepr_GlobalUnitAssignedContext_Create() -> "opencascade::handle< StepRepr_GlobalUnitAssignedContext >":
    return _StepRepr.Handle_StepRepr_GlobalUnitAssignedContext_Create()
Handle_StepRepr_GlobalUnitAssignedContext_Create = _StepRepr.Handle_StepRepr_GlobalUnitAssignedContext_Create

def Handle_StepRepr_GlobalUnitAssignedContext_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_GlobalUnitAssignedContext >":
    return _StepRepr.Handle_StepRepr_GlobalUnitAssignedContext_DownCast(t)
Handle_StepRepr_GlobalUnitAssignedContext_DownCast = _StepRepr.Handle_StepRepr_GlobalUnitAssignedContext_DownCast

def Handle_StepRepr_GlobalUnitAssignedContext_IsNull(t: 'opencascade::handle< StepRepr_GlobalUnitAssignedContext > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_GlobalUnitAssignedContext_IsNull(t)
Handle_StepRepr_GlobalUnitAssignedContext_IsNull = _StepRepr.Handle_StepRepr_GlobalUnitAssignedContext_IsNull

def Handle_StepRepr_IntegerRepresentationItem_Create() -> "opencascade::handle< StepRepr_IntegerRepresentationItem >":
    return _StepRepr.Handle_StepRepr_IntegerRepresentationItem_Create()
Handle_StepRepr_IntegerRepresentationItem_Create = _StepRepr.Handle_StepRepr_IntegerRepresentationItem_Create

def Handle_StepRepr_IntegerRepresentationItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_IntegerRepresentationItem >":
    return _StepRepr.Handle_StepRepr_IntegerRepresentationItem_DownCast(t)
Handle_StepRepr_IntegerRepresentationItem_DownCast = _StepRepr.Handle_StepRepr_IntegerRepresentationItem_DownCast

def Handle_StepRepr_IntegerRepresentationItem_IsNull(t: 'opencascade::handle< StepRepr_IntegerRepresentationItem > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_IntegerRepresentationItem_IsNull(t)
Handle_StepRepr_IntegerRepresentationItem_IsNull = _StepRepr.Handle_StepRepr_IntegerRepresentationItem_IsNull

def Handle_StepRepr_MakeFromUsageOption_Create() -> "opencascade::handle< StepRepr_MakeFromUsageOption >":
    return _StepRepr.Handle_StepRepr_MakeFromUsageOption_Create()
Handle_StepRepr_MakeFromUsageOption_Create = _StepRepr.Handle_StepRepr_MakeFromUsageOption_Create

def Handle_StepRepr_MakeFromUsageOption_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_MakeFromUsageOption >":
    return _StepRepr.Handle_StepRepr_MakeFromUsageOption_DownCast(t)
Handle_StepRepr_MakeFromUsageOption_DownCast = _StepRepr.Handle_StepRepr_MakeFromUsageOption_DownCast

def Handle_StepRepr_MakeFromUsageOption_IsNull(t: 'opencascade::handle< StepRepr_MakeFromUsageOption > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_MakeFromUsageOption_IsNull(t)
Handle_StepRepr_MakeFromUsageOption_IsNull = _StepRepr.Handle_StepRepr_MakeFromUsageOption_IsNull

def Handle_StepRepr_MappedItem_Create() -> "opencascade::handle< StepRepr_MappedItem >":
    return _StepRepr.Handle_StepRepr_MappedItem_Create()
Handle_StepRepr_MappedItem_Create = _StepRepr.Handle_StepRepr_MappedItem_Create

def Handle_StepRepr_MappedItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_MappedItem >":
    return _StepRepr.Handle_StepRepr_MappedItem_DownCast(t)
Handle_StepRepr_MappedItem_DownCast = _StepRepr.Handle_StepRepr_MappedItem_DownCast

def Handle_StepRepr_MappedItem_IsNull(t: 'opencascade::handle< StepRepr_MappedItem > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_MappedItem_IsNull(t)
Handle_StepRepr_MappedItem_IsNull = _StepRepr.Handle_StepRepr_MappedItem_IsNull

def Handle_StepRepr_MaterialProperty_Create() -> "opencascade::handle< StepRepr_MaterialProperty >":
    return _StepRepr.Handle_StepRepr_MaterialProperty_Create()
Handle_StepRepr_MaterialProperty_Create = _StepRepr.Handle_StepRepr_MaterialProperty_Create

def Handle_StepRepr_MaterialProperty_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_MaterialProperty >":
    return _StepRepr.Handle_StepRepr_MaterialProperty_DownCast(t)
Handle_StepRepr_MaterialProperty_DownCast = _StepRepr.Handle_StepRepr_MaterialProperty_DownCast

def Handle_StepRepr_MaterialProperty_IsNull(t: 'opencascade::handle< StepRepr_MaterialProperty > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_MaterialProperty_IsNull(t)
Handle_StepRepr_MaterialProperty_IsNull = _StepRepr.Handle_StepRepr_MaterialProperty_IsNull

def Handle_StepRepr_MaterialPropertyRepresentation_Create() -> "opencascade::handle< StepRepr_MaterialPropertyRepresentation >":
    return _StepRepr.Handle_StepRepr_MaterialPropertyRepresentation_Create()
Handle_StepRepr_MaterialPropertyRepresentation_Create = _StepRepr.Handle_StepRepr_MaterialPropertyRepresentation_Create

def Handle_StepRepr_MaterialPropertyRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_MaterialPropertyRepresentation >":
    return _StepRepr.Handle_StepRepr_MaterialPropertyRepresentation_DownCast(t)
Handle_StepRepr_MaterialPropertyRepresentation_DownCast = _StepRepr.Handle_StepRepr_MaterialPropertyRepresentation_DownCast

def Handle_StepRepr_MaterialPropertyRepresentation_IsNull(t: 'opencascade::handle< StepRepr_MaterialPropertyRepresentation > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_MaterialPropertyRepresentation_IsNull(t)
Handle_StepRepr_MaterialPropertyRepresentation_IsNull = _StepRepr.Handle_StepRepr_MaterialPropertyRepresentation_IsNull

def Handle_StepRepr_MeasureRepresentationItem_Create() -> "opencascade::handle< StepRepr_MeasureRepresentationItem >":
    return _StepRepr.Handle_StepRepr_MeasureRepresentationItem_Create()
Handle_StepRepr_MeasureRepresentationItem_Create = _StepRepr.Handle_StepRepr_MeasureRepresentationItem_Create

def Handle_StepRepr_MeasureRepresentationItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_MeasureRepresentationItem >":
    return _StepRepr.Handle_StepRepr_MeasureRepresentationItem_DownCast(t)
Handle_StepRepr_MeasureRepresentationItem_DownCast = _StepRepr.Handle_StepRepr_MeasureRepresentationItem_DownCast

def Handle_StepRepr_MeasureRepresentationItem_IsNull(t: 'opencascade::handle< StepRepr_MeasureRepresentationItem > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_MeasureRepresentationItem_IsNull(t)
Handle_StepRepr_MeasureRepresentationItem_IsNull = _StepRepr.Handle_StepRepr_MeasureRepresentationItem_IsNull

def Handle_StepRepr_ParametricRepresentationContext_Create() -> "opencascade::handle< StepRepr_ParametricRepresentationContext >":
    return _StepRepr.Handle_StepRepr_ParametricRepresentationContext_Create()
Handle_StepRepr_ParametricRepresentationContext_Create = _StepRepr.Handle_StepRepr_ParametricRepresentationContext_Create

def Handle_StepRepr_ParametricRepresentationContext_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ParametricRepresentationContext >":
    return _StepRepr.Handle_StepRepr_ParametricRepresentationContext_DownCast(t)
Handle_StepRepr_ParametricRepresentationContext_DownCast = _StepRepr.Handle_StepRepr_ParametricRepresentationContext_DownCast

def Handle_StepRepr_ParametricRepresentationContext_IsNull(t: 'opencascade::handle< StepRepr_ParametricRepresentationContext > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ParametricRepresentationContext_IsNull(t)
Handle_StepRepr_ParametricRepresentationContext_IsNull = _StepRepr.Handle_StepRepr_ParametricRepresentationContext_IsNull

def Handle_StepRepr_ProductDefinitionShape_Create() -> "opencascade::handle< StepRepr_ProductDefinitionShape >":
    return _StepRepr.Handle_StepRepr_ProductDefinitionShape_Create()
Handle_StepRepr_ProductDefinitionShape_Create = _StepRepr.Handle_StepRepr_ProductDefinitionShape_Create

def Handle_StepRepr_ProductDefinitionShape_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ProductDefinitionShape >":
    return _StepRepr.Handle_StepRepr_ProductDefinitionShape_DownCast(t)
Handle_StepRepr_ProductDefinitionShape_DownCast = _StepRepr.Handle_StepRepr_ProductDefinitionShape_DownCast

def Handle_StepRepr_ProductDefinitionShape_IsNull(t: 'opencascade::handle< StepRepr_ProductDefinitionShape > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ProductDefinitionShape_IsNull(t)
Handle_StepRepr_ProductDefinitionShape_IsNull = _StepRepr.Handle_StepRepr_ProductDefinitionShape_IsNull

def Handle_StepRepr_ReprItemAndMeasureWithUnit_Create() -> "opencascade::handle< StepRepr_ReprItemAndMeasureWithUnit >":
    return _StepRepr.Handle_StepRepr_ReprItemAndMeasureWithUnit_Create()
Handle_StepRepr_ReprItemAndMeasureWithUnit_Create = _StepRepr.Handle_StepRepr_ReprItemAndMeasureWithUnit_Create

def Handle_StepRepr_ReprItemAndMeasureWithUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ReprItemAndMeasureWithUnit >":
    return _StepRepr.Handle_StepRepr_ReprItemAndMeasureWithUnit_DownCast(t)
Handle_StepRepr_ReprItemAndMeasureWithUnit_DownCast = _StepRepr.Handle_StepRepr_ReprItemAndMeasureWithUnit_DownCast

def Handle_StepRepr_ReprItemAndMeasureWithUnit_IsNull(t: 'opencascade::handle< StepRepr_ReprItemAndMeasureWithUnit > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ReprItemAndMeasureWithUnit_IsNull(t)
Handle_StepRepr_ReprItemAndMeasureWithUnit_IsNull = _StepRepr.Handle_StepRepr_ReprItemAndMeasureWithUnit_IsNull

def Handle_StepRepr_ShapeAspectDerivingRelationship_Create() -> "opencascade::handle< StepRepr_ShapeAspectDerivingRelationship >":
    return _StepRepr.Handle_StepRepr_ShapeAspectDerivingRelationship_Create()
Handle_StepRepr_ShapeAspectDerivingRelationship_Create = _StepRepr.Handle_StepRepr_ShapeAspectDerivingRelationship_Create

def Handle_StepRepr_ShapeAspectDerivingRelationship_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ShapeAspectDerivingRelationship >":
    return _StepRepr.Handle_StepRepr_ShapeAspectDerivingRelationship_DownCast(t)
Handle_StepRepr_ShapeAspectDerivingRelationship_DownCast = _StepRepr.Handle_StepRepr_ShapeAspectDerivingRelationship_DownCast

def Handle_StepRepr_ShapeAspectDerivingRelationship_IsNull(t: 'opencascade::handle< StepRepr_ShapeAspectDerivingRelationship > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ShapeAspectDerivingRelationship_IsNull(t)
Handle_StepRepr_ShapeAspectDerivingRelationship_IsNull = _StepRepr.Handle_StepRepr_ShapeAspectDerivingRelationship_IsNull

def Handle_StepRepr_ShapeAspectTransition_Create() -> "opencascade::handle< StepRepr_ShapeAspectTransition >":
    return _StepRepr.Handle_StepRepr_ShapeAspectTransition_Create()
Handle_StepRepr_ShapeAspectTransition_Create = _StepRepr.Handle_StepRepr_ShapeAspectTransition_Create

def Handle_StepRepr_ShapeAspectTransition_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ShapeAspectTransition >":
    return _StepRepr.Handle_StepRepr_ShapeAspectTransition_DownCast(t)
Handle_StepRepr_ShapeAspectTransition_DownCast = _StepRepr.Handle_StepRepr_ShapeAspectTransition_DownCast

def Handle_StepRepr_ShapeAspectTransition_IsNull(t: 'opencascade::handle< StepRepr_ShapeAspectTransition > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ShapeAspectTransition_IsNull(t)
Handle_StepRepr_ShapeAspectTransition_IsNull = _StepRepr.Handle_StepRepr_ShapeAspectTransition_IsNull

def Handle_StepRepr_ShapeRepresentationRelationship_Create() -> "opencascade::handle< StepRepr_ShapeRepresentationRelationship >":
    return _StepRepr.Handle_StepRepr_ShapeRepresentationRelationship_Create()
Handle_StepRepr_ShapeRepresentationRelationship_Create = _StepRepr.Handle_StepRepr_ShapeRepresentationRelationship_Create

def Handle_StepRepr_ShapeRepresentationRelationship_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ShapeRepresentationRelationship >":
    return _StepRepr.Handle_StepRepr_ShapeRepresentationRelationship_DownCast(t)
Handle_StepRepr_ShapeRepresentationRelationship_DownCast = _StepRepr.Handle_StepRepr_ShapeRepresentationRelationship_DownCast

def Handle_StepRepr_ShapeRepresentationRelationship_IsNull(t: 'opencascade::handle< StepRepr_ShapeRepresentationRelationship > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ShapeRepresentationRelationship_IsNull(t)
Handle_StepRepr_ShapeRepresentationRelationship_IsNull = _StepRepr.Handle_StepRepr_ShapeRepresentationRelationship_IsNull

def Handle_StepRepr_StructuralResponseProperty_Create() -> "opencascade::handle< StepRepr_StructuralResponseProperty >":
    return _StepRepr.Handle_StepRepr_StructuralResponseProperty_Create()
Handle_StepRepr_StructuralResponseProperty_Create = _StepRepr.Handle_StepRepr_StructuralResponseProperty_Create

def Handle_StepRepr_StructuralResponseProperty_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_StructuralResponseProperty >":
    return _StepRepr.Handle_StepRepr_StructuralResponseProperty_DownCast(t)
Handle_StepRepr_StructuralResponseProperty_DownCast = _StepRepr.Handle_StepRepr_StructuralResponseProperty_DownCast

def Handle_StepRepr_StructuralResponseProperty_IsNull(t: 'opencascade::handle< StepRepr_StructuralResponseProperty > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_StructuralResponseProperty_IsNull(t)
Handle_StepRepr_StructuralResponseProperty_IsNull = _StepRepr.Handle_StepRepr_StructuralResponseProperty_IsNull

def Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_Create() -> "opencascade::handle< StepRepr_StructuralResponsePropertyDefinitionRepresentation >":
    return _StepRepr.Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_Create()
Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_Create = _StepRepr.Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_Create

def Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_StructuralResponsePropertyDefinitionRepresentation >":
    return _StepRepr.Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_DownCast(t)
Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_DownCast = _StepRepr.Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_DownCast

def Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_IsNull(t: 'opencascade::handle< StepRepr_StructuralResponsePropertyDefinitionRepresentation > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_IsNull(t)
Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_IsNull = _StepRepr.Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_IsNull

def Handle_StepRepr_ValueRepresentationItem_Create() -> "opencascade::handle< StepRepr_ValueRepresentationItem >":
    return _StepRepr.Handle_StepRepr_ValueRepresentationItem_Create()
Handle_StepRepr_ValueRepresentationItem_Create = _StepRepr.Handle_StepRepr_ValueRepresentationItem_Create

def Handle_StepRepr_ValueRepresentationItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ValueRepresentationItem >":
    return _StepRepr.Handle_StepRepr_ValueRepresentationItem_DownCast(t)
Handle_StepRepr_ValueRepresentationItem_DownCast = _StepRepr.Handle_StepRepr_ValueRepresentationItem_DownCast

def Handle_StepRepr_ValueRepresentationItem_IsNull(t: 'opencascade::handle< StepRepr_ValueRepresentationItem > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ValueRepresentationItem_IsNull(t)
Handle_StepRepr_ValueRepresentationItem_IsNull = _StepRepr.Handle_StepRepr_ValueRepresentationItem_IsNull

def Handle_StepRepr_Apex_Create() -> "opencascade::handle< StepRepr_Apex >":
    return _StepRepr.Handle_StepRepr_Apex_Create()
Handle_StepRepr_Apex_Create = _StepRepr.Handle_StepRepr_Apex_Create

def Handle_StepRepr_Apex_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_Apex >":
    return _StepRepr.Handle_StepRepr_Apex_DownCast(t)
Handle_StepRepr_Apex_DownCast = _StepRepr.Handle_StepRepr_Apex_DownCast

def Handle_StepRepr_Apex_IsNull(t: 'opencascade::handle< StepRepr_Apex > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_Apex_IsNull(t)
Handle_StepRepr_Apex_IsNull = _StepRepr.Handle_StepRepr_Apex_IsNull

def Handle_StepRepr_CentreOfSymmetry_Create() -> "opencascade::handle< StepRepr_CentreOfSymmetry >":
    return _StepRepr.Handle_StepRepr_CentreOfSymmetry_Create()
Handle_StepRepr_CentreOfSymmetry_Create = _StepRepr.Handle_StepRepr_CentreOfSymmetry_Create

def Handle_StepRepr_CentreOfSymmetry_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_CentreOfSymmetry >":
    return _StepRepr.Handle_StepRepr_CentreOfSymmetry_DownCast(t)
Handle_StepRepr_CentreOfSymmetry_DownCast = _StepRepr.Handle_StepRepr_CentreOfSymmetry_DownCast

def Handle_StepRepr_CentreOfSymmetry_IsNull(t: 'opencascade::handle< StepRepr_CentreOfSymmetry > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_CentreOfSymmetry_IsNull(t)
Handle_StepRepr_CentreOfSymmetry_IsNull = _StepRepr.Handle_StepRepr_CentreOfSymmetry_IsNull

def Handle_StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp_Create() -> "opencascade::handle< StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp >":
    return _StepRepr.Handle_StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp_Create()
Handle_StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp_Create = _StepRepr.Handle_StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp_Create

def Handle_StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp >":
    return _StepRepr.Handle_StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp_DownCast(t)
Handle_StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp_DownCast = _StepRepr.Handle_StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp_DownCast

def Handle_StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp_IsNull(t: 'opencascade::handle< StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp_IsNull(t)
Handle_StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp_IsNull = _StepRepr.Handle_StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp_IsNull

def Handle_StepRepr_CompositeGroupShapeAspect_Create() -> "opencascade::handle< StepRepr_CompositeGroupShapeAspect >":
    return _StepRepr.Handle_StepRepr_CompositeGroupShapeAspect_Create()
Handle_StepRepr_CompositeGroupShapeAspect_Create = _StepRepr.Handle_StepRepr_CompositeGroupShapeAspect_Create

def Handle_StepRepr_CompositeGroupShapeAspect_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_CompositeGroupShapeAspect >":
    return _StepRepr.Handle_StepRepr_CompositeGroupShapeAspect_DownCast(t)
Handle_StepRepr_CompositeGroupShapeAspect_DownCast = _StepRepr.Handle_StepRepr_CompositeGroupShapeAspect_DownCast

def Handle_StepRepr_CompositeGroupShapeAspect_IsNull(t: 'opencascade::handle< StepRepr_CompositeGroupShapeAspect > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_CompositeGroupShapeAspect_IsNull(t)
Handle_StepRepr_CompositeGroupShapeAspect_IsNull = _StepRepr.Handle_StepRepr_CompositeGroupShapeAspect_IsNull

def Handle_StepRepr_ContinuosShapeAspect_Create() -> "opencascade::handle< StepRepr_ContinuosShapeAspect >":
    return _StepRepr.Handle_StepRepr_ContinuosShapeAspect_Create()
Handle_StepRepr_ContinuosShapeAspect_Create = _StepRepr.Handle_StepRepr_ContinuosShapeAspect_Create

def Handle_StepRepr_ContinuosShapeAspect_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ContinuosShapeAspect >":
    return _StepRepr.Handle_StepRepr_ContinuosShapeAspect_DownCast(t)
Handle_StepRepr_ContinuosShapeAspect_DownCast = _StepRepr.Handle_StepRepr_ContinuosShapeAspect_DownCast

def Handle_StepRepr_ContinuosShapeAspect_IsNull(t: 'opencascade::handle< StepRepr_ContinuosShapeAspect > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ContinuosShapeAspect_IsNull(t)
Handle_StepRepr_ContinuosShapeAspect_IsNull = _StepRepr.Handle_StepRepr_ContinuosShapeAspect_IsNull

def Handle_StepRepr_Extension_Create() -> "opencascade::handle< StepRepr_Extension >":
    return _StepRepr.Handle_StepRepr_Extension_Create()
Handle_StepRepr_Extension_Create = _StepRepr.Handle_StepRepr_Extension_Create

def Handle_StepRepr_Extension_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_Extension >":
    return _StepRepr.Handle_StepRepr_Extension_DownCast(t)
Handle_StepRepr_Extension_DownCast = _StepRepr.Handle_StepRepr_Extension_DownCast

def Handle_StepRepr_Extension_IsNull(t: 'opencascade::handle< StepRepr_Extension > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_Extension_IsNull(t)
Handle_StepRepr_Extension_IsNull = _StepRepr.Handle_StepRepr_Extension_IsNull

def Handle_StepRepr_GeometricAlignment_Create() -> "opencascade::handle< StepRepr_GeometricAlignment >":
    return _StepRepr.Handle_StepRepr_GeometricAlignment_Create()
Handle_StepRepr_GeometricAlignment_Create = _StepRepr.Handle_StepRepr_GeometricAlignment_Create

def Handle_StepRepr_GeometricAlignment_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_GeometricAlignment >":
    return _StepRepr.Handle_StepRepr_GeometricAlignment_DownCast(t)
Handle_StepRepr_GeometricAlignment_DownCast = _StepRepr.Handle_StepRepr_GeometricAlignment_DownCast

def Handle_StepRepr_GeometricAlignment_IsNull(t: 'opencascade::handle< StepRepr_GeometricAlignment > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_GeometricAlignment_IsNull(t)
Handle_StepRepr_GeometricAlignment_IsNull = _StepRepr.Handle_StepRepr_GeometricAlignment_IsNull

def Handle_StepRepr_NextAssemblyUsageOccurrence_Create() -> "opencascade::handle< StepRepr_NextAssemblyUsageOccurrence >":
    return _StepRepr.Handle_StepRepr_NextAssemblyUsageOccurrence_Create()
Handle_StepRepr_NextAssemblyUsageOccurrence_Create = _StepRepr.Handle_StepRepr_NextAssemblyUsageOccurrence_Create

def Handle_StepRepr_NextAssemblyUsageOccurrence_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_NextAssemblyUsageOccurrence >":
    return _StepRepr.Handle_StepRepr_NextAssemblyUsageOccurrence_DownCast(t)
Handle_StepRepr_NextAssemblyUsageOccurrence_DownCast = _StepRepr.Handle_StepRepr_NextAssemblyUsageOccurrence_DownCast

def Handle_StepRepr_NextAssemblyUsageOccurrence_IsNull(t: 'opencascade::handle< StepRepr_NextAssemblyUsageOccurrence > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_NextAssemblyUsageOccurrence_IsNull(t)
Handle_StepRepr_NextAssemblyUsageOccurrence_IsNull = _StepRepr.Handle_StepRepr_NextAssemblyUsageOccurrence_IsNull

def Handle_StepRepr_ParallelOffset_Create() -> "opencascade::handle< StepRepr_ParallelOffset >":
    return _StepRepr.Handle_StepRepr_ParallelOffset_Create()
Handle_StepRepr_ParallelOffset_Create = _StepRepr.Handle_StepRepr_ParallelOffset_Create

def Handle_StepRepr_ParallelOffset_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ParallelOffset >":
    return _StepRepr.Handle_StepRepr_ParallelOffset_DownCast(t)
Handle_StepRepr_ParallelOffset_DownCast = _StepRepr.Handle_StepRepr_ParallelOffset_DownCast

def Handle_StepRepr_ParallelOffset_IsNull(t: 'opencascade::handle< StepRepr_ParallelOffset > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ParallelOffset_IsNull(t)
Handle_StepRepr_ParallelOffset_IsNull = _StepRepr.Handle_StepRepr_ParallelOffset_IsNull

def Handle_StepRepr_PerpendicularTo_Create() -> "opencascade::handle< StepRepr_PerpendicularTo >":
    return _StepRepr.Handle_StepRepr_PerpendicularTo_Create()
Handle_StepRepr_PerpendicularTo_Create = _StepRepr.Handle_StepRepr_PerpendicularTo_Create

def Handle_StepRepr_PerpendicularTo_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_PerpendicularTo >":
    return _StepRepr.Handle_StepRepr_PerpendicularTo_DownCast(t)
Handle_StepRepr_PerpendicularTo_DownCast = _StepRepr.Handle_StepRepr_PerpendicularTo_DownCast

def Handle_StepRepr_PerpendicularTo_IsNull(t: 'opencascade::handle< StepRepr_PerpendicularTo > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_PerpendicularTo_IsNull(t)
Handle_StepRepr_PerpendicularTo_IsNull = _StepRepr.Handle_StepRepr_PerpendicularTo_IsNull

def Handle_StepRepr_PromissoryUsageOccurrence_Create() -> "opencascade::handle< StepRepr_PromissoryUsageOccurrence >":
    return _StepRepr.Handle_StepRepr_PromissoryUsageOccurrence_Create()
Handle_StepRepr_PromissoryUsageOccurrence_Create = _StepRepr.Handle_StepRepr_PromissoryUsageOccurrence_Create

def Handle_StepRepr_PromissoryUsageOccurrence_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_PromissoryUsageOccurrence >":
    return _StepRepr.Handle_StepRepr_PromissoryUsageOccurrence_DownCast(t)
Handle_StepRepr_PromissoryUsageOccurrence_DownCast = _StepRepr.Handle_StepRepr_PromissoryUsageOccurrence_DownCast

def Handle_StepRepr_PromissoryUsageOccurrence_IsNull(t: 'opencascade::handle< StepRepr_PromissoryUsageOccurrence > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_PromissoryUsageOccurrence_IsNull(t)
Handle_StepRepr_PromissoryUsageOccurrence_IsNull = _StepRepr.Handle_StepRepr_PromissoryUsageOccurrence_IsNull

def Handle_StepRepr_QuantifiedAssemblyComponentUsage_Create() -> "opencascade::handle< StepRepr_QuantifiedAssemblyComponentUsage >":
    return _StepRepr.Handle_StepRepr_QuantifiedAssemblyComponentUsage_Create()
Handle_StepRepr_QuantifiedAssemblyComponentUsage_Create = _StepRepr.Handle_StepRepr_QuantifiedAssemblyComponentUsage_Create

def Handle_StepRepr_QuantifiedAssemblyComponentUsage_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_QuantifiedAssemblyComponentUsage >":
    return _StepRepr.Handle_StepRepr_QuantifiedAssemblyComponentUsage_DownCast(t)
Handle_StepRepr_QuantifiedAssemblyComponentUsage_DownCast = _StepRepr.Handle_StepRepr_QuantifiedAssemblyComponentUsage_DownCast

def Handle_StepRepr_QuantifiedAssemblyComponentUsage_IsNull(t: 'opencascade::handle< StepRepr_QuantifiedAssemblyComponentUsage > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_QuantifiedAssemblyComponentUsage_IsNull(t)
Handle_StepRepr_QuantifiedAssemblyComponentUsage_IsNull = _StepRepr.Handle_StepRepr_QuantifiedAssemblyComponentUsage_IsNull

def Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_Create() -> "opencascade::handle< StepRepr_ReprItemAndLengthMeasureWithUnit >":
    return _StepRepr.Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_Create()
Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_Create = _StepRepr.Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_Create

def Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ReprItemAndLengthMeasureWithUnit >":
    return _StepRepr.Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_DownCast(t)
Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_DownCast = _StepRepr.Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_DownCast

def Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_IsNull(t: 'opencascade::handle< StepRepr_ReprItemAndLengthMeasureWithUnit > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_IsNull(t)
Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_IsNull = _StepRepr.Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_IsNull

def Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnit_Create() -> "opencascade::handle< StepRepr_ReprItemAndPlaneAngleMeasureWithUnit >":
    return _StepRepr.Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnit_Create()
Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnit_Create = _StepRepr.Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnit_Create

def Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnit_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ReprItemAndPlaneAngleMeasureWithUnit >":
    return _StepRepr.Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnit_DownCast(t)
Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnit_DownCast = _StepRepr.Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnit_DownCast

def Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnit_IsNull(t: 'opencascade::handle< StepRepr_ReprItemAndPlaneAngleMeasureWithUnit > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnit_IsNull(t)
Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnit_IsNull = _StepRepr.Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnit_IsNull

def Handle_StepRepr_RepresentationRelationshipWithTransformation_Create() -> "opencascade::handle< StepRepr_RepresentationRelationshipWithTransformation >":
    return _StepRepr.Handle_StepRepr_RepresentationRelationshipWithTransformation_Create()
Handle_StepRepr_RepresentationRelationshipWithTransformation_Create = _StepRepr.Handle_StepRepr_RepresentationRelationshipWithTransformation_Create

def Handle_StepRepr_RepresentationRelationshipWithTransformation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_RepresentationRelationshipWithTransformation >":
    return _StepRepr.Handle_StepRepr_RepresentationRelationshipWithTransformation_DownCast(t)
Handle_StepRepr_RepresentationRelationshipWithTransformation_DownCast = _StepRepr.Handle_StepRepr_RepresentationRelationshipWithTransformation_DownCast

def Handle_StepRepr_RepresentationRelationshipWithTransformation_IsNull(t: 'opencascade::handle< StepRepr_RepresentationRelationshipWithTransformation > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_RepresentationRelationshipWithTransformation_IsNull(t)
Handle_StepRepr_RepresentationRelationshipWithTransformation_IsNull = _StepRepr.Handle_StepRepr_RepresentationRelationshipWithTransformation_IsNull

def Handle_StepRepr_SpecifiedHigherUsageOccurrence_Create() -> "opencascade::handle< StepRepr_SpecifiedHigherUsageOccurrence >":
    return _StepRepr.Handle_StepRepr_SpecifiedHigherUsageOccurrence_Create()
Handle_StepRepr_SpecifiedHigherUsageOccurrence_Create = _StepRepr.Handle_StepRepr_SpecifiedHigherUsageOccurrence_Create

def Handle_StepRepr_SpecifiedHigherUsageOccurrence_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_SpecifiedHigherUsageOccurrence >":
    return _StepRepr.Handle_StepRepr_SpecifiedHigherUsageOccurrence_DownCast(t)
Handle_StepRepr_SpecifiedHigherUsageOccurrence_DownCast = _StepRepr.Handle_StepRepr_SpecifiedHigherUsageOccurrence_DownCast

def Handle_StepRepr_SpecifiedHigherUsageOccurrence_IsNull(t: 'opencascade::handle< StepRepr_SpecifiedHigherUsageOccurrence > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_SpecifiedHigherUsageOccurrence_IsNull(t)
Handle_StepRepr_SpecifiedHigherUsageOccurrence_IsNull = _StepRepr.Handle_StepRepr_SpecifiedHigherUsageOccurrence_IsNull

def Handle_StepRepr_Tangent_Create() -> "opencascade::handle< StepRepr_Tangent >":
    return _StepRepr.Handle_StepRepr_Tangent_Create()
Handle_StepRepr_Tangent_Create = _StepRepr.Handle_StepRepr_Tangent_Create

def Handle_StepRepr_Tangent_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_Tangent >":
    return _StepRepr.Handle_StepRepr_Tangent_DownCast(t)
Handle_StepRepr_Tangent_DownCast = _StepRepr.Handle_StepRepr_Tangent_DownCast

def Handle_StepRepr_Tangent_IsNull(t: 'opencascade::handle< StepRepr_Tangent > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_Tangent_IsNull(t)
Handle_StepRepr_Tangent_IsNull = _StepRepr.Handle_StepRepr_Tangent_IsNull

def Handle_StepRepr_ValueRange_Create() -> "opencascade::handle< StepRepr_ValueRange >":
    return _StepRepr.Handle_StepRepr_ValueRange_Create()
Handle_StepRepr_ValueRange_Create = _StepRepr.Handle_StepRepr_ValueRange_Create

def Handle_StepRepr_ValueRange_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ValueRange >":
    return _StepRepr.Handle_StepRepr_ValueRange_DownCast(t)
Handle_StepRepr_ValueRange_DownCast = _StepRepr.Handle_StepRepr_ValueRange_DownCast

def Handle_StepRepr_ValueRange_IsNull(t: 'opencascade::handle< StepRepr_ValueRange > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ValueRange_IsNull(t)
Handle_StepRepr_ValueRange_IsNull = _StepRepr.Handle_StepRepr_ValueRange_IsNull

def Handle_StepRepr_AllAroundShapeAspect_Create() -> "opencascade::handle< StepRepr_AllAroundShapeAspect >":
    return _StepRepr.Handle_StepRepr_AllAroundShapeAspect_Create()
Handle_StepRepr_AllAroundShapeAspect_Create = _StepRepr.Handle_StepRepr_AllAroundShapeAspect_Create

def Handle_StepRepr_AllAroundShapeAspect_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_AllAroundShapeAspect >":
    return _StepRepr.Handle_StepRepr_AllAroundShapeAspect_DownCast(t)
Handle_StepRepr_AllAroundShapeAspect_DownCast = _StepRepr.Handle_StepRepr_AllAroundShapeAspect_DownCast

def Handle_StepRepr_AllAroundShapeAspect_IsNull(t: 'opencascade::handle< StepRepr_AllAroundShapeAspect > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_AllAroundShapeAspect_IsNull(t)
Handle_StepRepr_AllAroundShapeAspect_IsNull = _StepRepr.Handle_StepRepr_AllAroundShapeAspect_IsNull

def Handle_StepRepr_BetweenShapeAspect_Create() -> "opencascade::handle< StepRepr_BetweenShapeAspect >":
    return _StepRepr.Handle_StepRepr_BetweenShapeAspect_Create()
Handle_StepRepr_BetweenShapeAspect_Create = _StepRepr.Handle_StepRepr_BetweenShapeAspect_Create

def Handle_StepRepr_BetweenShapeAspect_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_BetweenShapeAspect >":
    return _StepRepr.Handle_StepRepr_BetweenShapeAspect_DownCast(t)
Handle_StepRepr_BetweenShapeAspect_DownCast = _StepRepr.Handle_StepRepr_BetweenShapeAspect_DownCast

def Handle_StepRepr_BetweenShapeAspect_IsNull(t: 'opencascade::handle< StepRepr_BetweenShapeAspect > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_BetweenShapeAspect_IsNull(t)
Handle_StepRepr_BetweenShapeAspect_IsNull = _StepRepr.Handle_StepRepr_BetweenShapeAspect_IsNull

def Handle_StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI_Create() -> "opencascade::handle< StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI >":
    return _StepRepr.Handle_StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI_Create()
Handle_StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI_Create = _StepRepr.Handle_StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI_Create

def Handle_StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI >":
    return _StepRepr.Handle_StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI_DownCast(t)
Handle_StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI_DownCast = _StepRepr.Handle_StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI_DownCast

def Handle_StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI_IsNull(t: 'opencascade::handle< StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI_IsNull(t)
Handle_StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI_IsNull = _StepRepr.Handle_StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI_IsNull

def Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI_Create() -> "opencascade::handle< StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI >":
    return _StepRepr.Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI_Create()
Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI_Create = _StepRepr.Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI_Create

def Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI >":
    return _StepRepr.Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI_DownCast(t)
Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI_DownCast = _StepRepr.Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI_DownCast

def Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI_IsNull(t: 'opencascade::handle< StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI_IsNull(t)
Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI_IsNull = _StepRepr.Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI_IsNull

def Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_Create() -> "opencascade::handle< StepRepr_ShapeRepresentationRelationshipWithTransformation >":
    return _StepRepr.Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_Create()
Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_Create = _StepRepr.Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_Create

def Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_ShapeRepresentationRelationshipWithTransformation >":
    return _StepRepr.Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_DownCast(t)
Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_DownCast = _StepRepr.Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_DownCast

def Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_IsNull(t: 'opencascade::handle< StepRepr_ShapeRepresentationRelationshipWithTransformation > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_IsNull(t)
Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_IsNull = _StepRepr.Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_IsNull

def Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_Create() -> "opencascade::handle< StepRepr_HArray1OfMaterialPropertyRepresentation >":
    return _StepRepr.Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_Create()
Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_Create = _StepRepr.Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_Create

def Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_HArray1OfMaterialPropertyRepresentation >":
    return _StepRepr.Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_DownCast(t)
Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_DownCast = _StepRepr.Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_DownCast

def Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_IsNull(t: 'opencascade::handle< StepRepr_HArray1OfMaterialPropertyRepresentation > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_IsNull(t)
Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_IsNull = _StepRepr.Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_IsNull

def Handle_StepRepr_HArray1OfRepresentationItem_Create() -> "opencascade::handle< StepRepr_HArray1OfRepresentationItem >":
    return _StepRepr.Handle_StepRepr_HArray1OfRepresentationItem_Create()
Handle_StepRepr_HArray1OfRepresentationItem_Create = _StepRepr.Handle_StepRepr_HArray1OfRepresentationItem_Create

def Handle_StepRepr_HArray1OfRepresentationItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_HArray1OfRepresentationItem >":
    return _StepRepr.Handle_StepRepr_HArray1OfRepresentationItem_DownCast(t)
Handle_StepRepr_HArray1OfRepresentationItem_DownCast = _StepRepr.Handle_StepRepr_HArray1OfRepresentationItem_DownCast

def Handle_StepRepr_HArray1OfRepresentationItem_IsNull(t: 'opencascade::handle< StepRepr_HArray1OfRepresentationItem > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_HArray1OfRepresentationItem_IsNull(t)
Handle_StepRepr_HArray1OfRepresentationItem_IsNull = _StepRepr.Handle_StepRepr_HArray1OfRepresentationItem_IsNull

def Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_Create() -> "opencascade::handle< StepRepr_HArray1OfPropertyDefinitionRepresentation >":
    return _StepRepr.Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_Create()
Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_Create = _StepRepr.Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_Create

def Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_HArray1OfPropertyDefinitionRepresentation >":
    return _StepRepr.Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_DownCast(t)
Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_DownCast = _StepRepr.Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_DownCast

def Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_IsNull(t: 'opencascade::handle< StepRepr_HArray1OfPropertyDefinitionRepresentation > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_IsNull(t)
Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_IsNull = _StepRepr.Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_IsNull

def Handle_StepRepr_HArray1OfShapeAspect_Create() -> "opencascade::handle< StepRepr_HArray1OfShapeAspect >":
    return _StepRepr.Handle_StepRepr_HArray1OfShapeAspect_Create()
Handle_StepRepr_HArray1OfShapeAspect_Create = _StepRepr.Handle_StepRepr_HArray1OfShapeAspect_Create

def Handle_StepRepr_HArray1OfShapeAspect_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_HArray1OfShapeAspect >":
    return _StepRepr.Handle_StepRepr_HArray1OfShapeAspect_DownCast(t)
Handle_StepRepr_HArray1OfShapeAspect_DownCast = _StepRepr.Handle_StepRepr_HArray1OfShapeAspect_DownCast

def Handle_StepRepr_HArray1OfShapeAspect_IsNull(t: 'opencascade::handle< StepRepr_HArray1OfShapeAspect > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_HArray1OfShapeAspect_IsNull(t)
Handle_StepRepr_HArray1OfShapeAspect_IsNull = _StepRepr.Handle_StepRepr_HArray1OfShapeAspect_IsNull

def Handle_StepRepr_HSequenceOfRepresentationItem_Create() -> "opencascade::handle< StepRepr_HSequenceOfRepresentationItem >":
    return _StepRepr.Handle_StepRepr_HSequenceOfRepresentationItem_Create()
Handle_StepRepr_HSequenceOfRepresentationItem_Create = _StepRepr.Handle_StepRepr_HSequenceOfRepresentationItem_Create

def Handle_StepRepr_HSequenceOfRepresentationItem_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_HSequenceOfRepresentationItem >":
    return _StepRepr.Handle_StepRepr_HSequenceOfRepresentationItem_DownCast(t)
Handle_StepRepr_HSequenceOfRepresentationItem_DownCast = _StepRepr.Handle_StepRepr_HSequenceOfRepresentationItem_DownCast

def Handle_StepRepr_HSequenceOfRepresentationItem_IsNull(t: 'opencascade::handle< StepRepr_HSequenceOfRepresentationItem > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_HSequenceOfRepresentationItem_IsNull(t)
Handle_StepRepr_HSequenceOfRepresentationItem_IsNull = _StepRepr.Handle_StepRepr_HSequenceOfRepresentationItem_IsNull

def Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_Create() -> "opencascade::handle< StepRepr_HSequenceOfMaterialPropertyRepresentation >":
    return _StepRepr.Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_Create()
Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_Create = _StepRepr.Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_Create

def Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_DownCast(t: 'opencascade::handle< Standard_Transient > const &') -> "opencascade::handle< StepRepr_HSequenceOfMaterialPropertyRepresentation >":
    return _StepRepr.Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_DownCast(t)
Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_DownCast = _StepRepr.Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_DownCast

def Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_IsNull(t: 'opencascade::handle< StepRepr_HSequenceOfMaterialPropertyRepresentation > const &') -> "bool":
    return _StepRepr.Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_IsNull(t)
Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_IsNull = _StepRepr.Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_IsNull
class StepRepr_Array1OfMaterialPropertyRepresentation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_Array1OfMaterialPropertyRepresentation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_Array1OfMaterialPropertyRepresentation, name)
    __repr__ = _swig_repr

    def begin(self) -> "NCollection_Array1< opencascade::handle< StepRepr_MaterialPropertyRepresentation > >::iterator":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_begin(self)

    def end(self) -> "NCollection_Array1< opencascade::handle< StepRepr_MaterialPropertyRepresentation > >::iterator":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_end(self)

    def cbegin(self) -> "NCollection_Array1< opencascade::handle< StepRepr_MaterialPropertyRepresentation > >::const_iterator":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_cbegin(self)

    def cend(self) -> "NCollection_Array1< opencascade::handle< StepRepr_MaterialPropertyRepresentation > >::const_iterator":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_cend(self)

    def __init__(self, *args):
        this = _StepRepr.new_StepRepr_Array1OfMaterialPropertyRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Init(self, theValue: 'opencascade::handle< StepRepr_MaterialPropertyRepresentation > const &') -> "void":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Init(self, theValue)

    def Size(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Size(self)

    def Length(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Length(self)

    def IsEmpty(self) -> "Standard_Boolean":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_IsEmpty(self)

    def Lower(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Lower(self)

    def Upper(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Upper(self)

    def IsDeletable(self) -> "Standard_Boolean":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_IsDeletable(self)

    def IsAllocated(self) -> "Standard_Boolean":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_IsAllocated(self)

    def Assign(self, theOther: 'StepRepr_Array1OfMaterialPropertyRepresentation') -> "NCollection_Array1< opencascade::handle< StepRepr_MaterialPropertyRepresentation > > &":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Assign(self, theOther)

    def Move(self, theOther: 'StepRepr_Array1OfMaterialPropertyRepresentation') -> "NCollection_Array1< opencascade::handle< StepRepr_MaterialPropertyRepresentation > > &":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Move(self, theOther)

    def Set(self, *args) -> "NCollection_Array1< opencascade::handle< StepRepr_MaterialPropertyRepresentation > > &":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Set(self, *args)

    def First(self) -> "opencascade::handle< StepRepr_MaterialPropertyRepresentation > const &":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_First(self)

    def ChangeFirst(self) -> "opencascade::handle< StepRepr_MaterialPropertyRepresentation > &":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_ChangeFirst(self)

    def Last(self) -> "opencascade::handle< StepRepr_MaterialPropertyRepresentation > const &":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Last(self)

    def ChangeLast(self) -> "opencascade::handle< StepRepr_MaterialPropertyRepresentation > &":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_ChangeLast(self)

    def Value(self, theIndex: 'Standard_Integer const') -> "opencascade::handle< StepRepr_MaterialPropertyRepresentation > const &":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Value(self, theIndex)

    def ChangeValue(self, theIndex: 'Standard_Integer const') -> "opencascade::handle< StepRepr_MaterialPropertyRepresentation > &":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_ChangeValue(self, theIndex)

    def __call__(self, *args) -> "opencascade::handle< StepRepr_MaterialPropertyRepresentation > &":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation___call__(self, *args)

    def SetValue(self, theIndex: 'Standard_Integer const', theItem: 'opencascade::handle< StepRepr_MaterialPropertyRepresentation > const &') -> "void":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_SetValue(self, theIndex, theItem)

    def Resize(self, theLower: 'Standard_Integer const', theUpper: 'Standard_Integer const', theToCopyData: 'Standard_Boolean const') -> "void":
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Resize(self, theLower, theUpper, theToCopyData)
    __swig_destroy__ = _StepRepr.delete_StepRepr_Array1OfMaterialPropertyRepresentation
    __del__ = lambda self: None

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepRepr_Array1OfMaterialPropertyRepresentation_swigregister = _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_swigregister
StepRepr_Array1OfMaterialPropertyRepresentation_swigregister(StepRepr_Array1OfMaterialPropertyRepresentation)

class StepRepr_Array1OfPropertyDefinitionRepresentation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_Array1OfPropertyDefinitionRepresentation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_Array1OfPropertyDefinitionRepresentation, name)
    __repr__ = _swig_repr

    def begin(self) -> "NCollection_Array1< opencascade::handle< StepRepr_PropertyDefinitionRepresentation > >::iterator":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_begin(self)

    def end(self) -> "NCollection_Array1< opencascade::handle< StepRepr_PropertyDefinitionRepresentation > >::iterator":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_end(self)

    def cbegin(self) -> "NCollection_Array1< opencascade::handle< StepRepr_PropertyDefinitionRepresentation > >::const_iterator":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_cbegin(self)

    def cend(self) -> "NCollection_Array1< opencascade::handle< StepRepr_PropertyDefinitionRepresentation > >::const_iterator":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_cend(self)

    def __init__(self, *args):
        this = _StepRepr.new_StepRepr_Array1OfPropertyDefinitionRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Init(self, theValue: 'opencascade::handle< StepRepr_PropertyDefinitionRepresentation > const &') -> "void":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Init(self, theValue)

    def Size(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Size(self)

    def Length(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Length(self)

    def IsEmpty(self) -> "Standard_Boolean":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_IsEmpty(self)

    def Lower(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Lower(self)

    def Upper(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Upper(self)

    def IsDeletable(self) -> "Standard_Boolean":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_IsDeletable(self)

    def IsAllocated(self) -> "Standard_Boolean":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_IsAllocated(self)

    def Assign(self, theOther: 'StepRepr_Array1OfPropertyDefinitionRepresentation') -> "NCollection_Array1< opencascade::handle< StepRepr_PropertyDefinitionRepresentation > > &":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Assign(self, theOther)

    def Move(self, theOther: 'StepRepr_Array1OfPropertyDefinitionRepresentation') -> "NCollection_Array1< opencascade::handle< StepRepr_PropertyDefinitionRepresentation > > &":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Move(self, theOther)

    def Set(self, *args) -> "NCollection_Array1< opencascade::handle< StepRepr_PropertyDefinitionRepresentation > > &":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Set(self, *args)

    def First(self) -> "opencascade::handle< StepRepr_PropertyDefinitionRepresentation > const &":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_First(self)

    def ChangeFirst(self) -> "opencascade::handle< StepRepr_PropertyDefinitionRepresentation > &":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_ChangeFirst(self)

    def Last(self) -> "opencascade::handle< StepRepr_PropertyDefinitionRepresentation > const &":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Last(self)

    def ChangeLast(self) -> "opencascade::handle< StepRepr_PropertyDefinitionRepresentation > &":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_ChangeLast(self)

    def Value(self, theIndex: 'Standard_Integer const') -> "opencascade::handle< StepRepr_PropertyDefinitionRepresentation > const &":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Value(self, theIndex)

    def ChangeValue(self, theIndex: 'Standard_Integer const') -> "opencascade::handle< StepRepr_PropertyDefinitionRepresentation > &":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_ChangeValue(self, theIndex)

    def __call__(self, *args) -> "opencascade::handle< StepRepr_PropertyDefinitionRepresentation > &":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation___call__(self, *args)

    def SetValue(self, theIndex: 'Standard_Integer const', theItem: 'opencascade::handle< StepRepr_PropertyDefinitionRepresentation > const &') -> "void":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_SetValue(self, theIndex, theItem)

    def Resize(self, theLower: 'Standard_Integer const', theUpper: 'Standard_Integer const', theToCopyData: 'Standard_Boolean const') -> "void":
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Resize(self, theLower, theUpper, theToCopyData)
    __swig_destroy__ = _StepRepr.delete_StepRepr_Array1OfPropertyDefinitionRepresentation
    __del__ = lambda self: None

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepRepr_Array1OfPropertyDefinitionRepresentation_swigregister = _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_swigregister
StepRepr_Array1OfPropertyDefinitionRepresentation_swigregister(StepRepr_Array1OfPropertyDefinitionRepresentation)

class StepRepr_Array1OfRepresentationItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_Array1OfRepresentationItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_Array1OfRepresentationItem, name)
    __repr__ = _swig_repr

    def begin(self) -> "NCollection_Array1< opencascade::handle< StepRepr_RepresentationItem > >::iterator":
        return _StepRepr.StepRepr_Array1OfRepresentationItem_begin(self)

    def end(self) -> "NCollection_Array1< opencascade::handle< StepRepr_RepresentationItem > >::iterator":
        return _StepRepr.StepRepr_Array1OfRepresentationItem_end(self)

    def cbegin(self) -> "NCollection_Array1< opencascade::handle< StepRepr_RepresentationItem > >::const_iterator":
        return _StepRepr.StepRepr_Array1OfRepresentationItem_cbegin(self)

    def cend(self) -> "NCollection_Array1< opencascade::handle< StepRepr_RepresentationItem > >::const_iterator":
        return _StepRepr.StepRepr_Array1OfRepresentationItem_cend(self)

    def __init__(self, *args):
        this = _StepRepr.new_StepRepr_Array1OfRepresentationItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Init(self, theValue: 'opencascade::handle< StepRepr_RepresentationItem > const &') -> "void":
        return _StepRepr.StepRepr_Array1OfRepresentationItem_Init(self, theValue)

    def Size(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_Array1OfRepresentationItem_Size(self)

    def Length(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_Array1OfRepresentationItem_Length(self)

    def IsEmpty(self) -> "Standard_Boolean":
        return _StepRepr.StepRepr_Array1OfRepresentationItem_IsEmpty(self)

    def Lower(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_Array1OfRepresentationItem_Lower(self)

    def Upper(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_Array1OfRepresentationItem_Upper(self)

    def IsDeletable(self) -> "Standard_Boolean":
        return _StepRepr.StepRepr_Array1OfRepresentationItem_IsDeletable(self)

    def IsAllocated(self) -> "Standard_Boolean":
        return _StepRepr.StepRepr_Array1OfRepresentationItem_IsAllocated(self)

    def Assign(self, theOther: 'StepRepr_Array1OfRepresentationItem') -> "NCollection_Array1< opencascade::handle< StepRepr_RepresentationItem > > &":
        return _StepRepr.StepRepr_Array1OfRepresentationItem_Assign(self, theOther)

    def Move(self, theOther: 'StepRepr_Array1OfRepresentationItem') -> "NCollection_Array1< opencascade::handle< StepRepr_RepresentationItem > > &":
        return _StepRepr.StepRepr_Array1OfRepresentationItem_Move(self, theOther)

    def Set(self, *args) -> "NCollection_Array1< opencascade::handle< StepRepr_RepresentationItem > > &":
        return _StepRepr.StepRepr_Array1OfRepresentationItem_Set(self, *args)

    def First(self) -> "opencascade::handle< StepRepr_RepresentationItem > const &":
        return _StepRepr.StepRepr_Array1OfRepresentationItem_First(self)

    def ChangeFirst(self) -> "opencascade::handle< StepRepr_RepresentationItem > &":
        return _StepRepr.StepRepr_Array1OfRepresentationItem_ChangeFirst(self)

    def Last(self) -> "opencascade::handle< StepRepr_RepresentationItem > const &":
        return _StepRepr.StepRepr_Array1OfRepresentationItem_Last(self)

    def ChangeLast(self) -> "opencascade::handle< StepRepr_RepresentationItem > &":
        return _StepRepr.StepRepr_Array1OfRepresentationItem_ChangeLast(self)

    def Value(self, theIndex: 'Standard_Integer const') -> "opencascade::handle< StepRepr_RepresentationItem > const &":
        return _StepRepr.StepRepr_Array1OfRepresentationItem_Value(self, theIndex)

    def ChangeValue(self, theIndex: 'Standard_Integer const') -> "opencascade::handle< StepRepr_RepresentationItem > &":
        return _StepRepr.StepRepr_Array1OfRepresentationItem_ChangeValue(self, theIndex)

    def __call__(self, *args) -> "opencascade::handle< StepRepr_RepresentationItem > &":
        return _StepRepr.StepRepr_Array1OfRepresentationItem___call__(self, *args)

    def SetValue(self, theIndex: 'Standard_Integer const', theItem: 'opencascade::handle< StepRepr_RepresentationItem > const &') -> "void":
        return _StepRepr.StepRepr_Array1OfRepresentationItem_SetValue(self, theIndex, theItem)

    def Resize(self, theLower: 'Standard_Integer const', theUpper: 'Standard_Integer const', theToCopyData: 'Standard_Boolean const') -> "void":
        return _StepRepr.StepRepr_Array1OfRepresentationItem_Resize(self, theLower, theUpper, theToCopyData)
    __swig_destroy__ = _StepRepr.delete_StepRepr_Array1OfRepresentationItem
    __del__ = lambda self: None

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepRepr_Array1OfRepresentationItem_swigregister = _StepRepr.StepRepr_Array1OfRepresentationItem_swigregister
StepRepr_Array1OfRepresentationItem_swigregister(StepRepr_Array1OfRepresentationItem)

class StepRepr_Array1OfShapeAspect(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_Array1OfShapeAspect, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_Array1OfShapeAspect, name)
    __repr__ = _swig_repr

    def begin(self) -> "NCollection_Array1< opencascade::handle< StepRepr_ShapeAspect > >::iterator":
        return _StepRepr.StepRepr_Array1OfShapeAspect_begin(self)

    def end(self) -> "NCollection_Array1< opencascade::handle< StepRepr_ShapeAspect > >::iterator":
        return _StepRepr.StepRepr_Array1OfShapeAspect_end(self)

    def cbegin(self) -> "NCollection_Array1< opencascade::handle< StepRepr_ShapeAspect > >::const_iterator":
        return _StepRepr.StepRepr_Array1OfShapeAspect_cbegin(self)

    def cend(self) -> "NCollection_Array1< opencascade::handle< StepRepr_ShapeAspect > >::const_iterator":
        return _StepRepr.StepRepr_Array1OfShapeAspect_cend(self)

    def __init__(self, *args):
        this = _StepRepr.new_StepRepr_Array1OfShapeAspect(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Init(self, theValue: 'opencascade::handle< StepRepr_ShapeAspect > const &') -> "void":
        return _StepRepr.StepRepr_Array1OfShapeAspect_Init(self, theValue)

    def Size(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_Array1OfShapeAspect_Size(self)

    def Length(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_Array1OfShapeAspect_Length(self)

    def IsEmpty(self) -> "Standard_Boolean":
        return _StepRepr.StepRepr_Array1OfShapeAspect_IsEmpty(self)

    def Lower(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_Array1OfShapeAspect_Lower(self)

    def Upper(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_Array1OfShapeAspect_Upper(self)

    def IsDeletable(self) -> "Standard_Boolean":
        return _StepRepr.StepRepr_Array1OfShapeAspect_IsDeletable(self)

    def IsAllocated(self) -> "Standard_Boolean":
        return _StepRepr.StepRepr_Array1OfShapeAspect_IsAllocated(self)

    def Assign(self, theOther: 'StepRepr_Array1OfShapeAspect') -> "NCollection_Array1< opencascade::handle< StepRepr_ShapeAspect > > &":
        return _StepRepr.StepRepr_Array1OfShapeAspect_Assign(self, theOther)

    def Move(self, theOther: 'StepRepr_Array1OfShapeAspect') -> "NCollection_Array1< opencascade::handle< StepRepr_ShapeAspect > > &":
        return _StepRepr.StepRepr_Array1OfShapeAspect_Move(self, theOther)

    def Set(self, *args) -> "NCollection_Array1< opencascade::handle< StepRepr_ShapeAspect > > &":
        return _StepRepr.StepRepr_Array1OfShapeAspect_Set(self, *args)

    def First(self) -> "opencascade::handle< StepRepr_ShapeAspect > const &":
        return _StepRepr.StepRepr_Array1OfShapeAspect_First(self)

    def ChangeFirst(self) -> "opencascade::handle< StepRepr_ShapeAspect > &":
        return _StepRepr.StepRepr_Array1OfShapeAspect_ChangeFirst(self)

    def Last(self) -> "opencascade::handle< StepRepr_ShapeAspect > const &":
        return _StepRepr.StepRepr_Array1OfShapeAspect_Last(self)

    def ChangeLast(self) -> "opencascade::handle< StepRepr_ShapeAspect > &":
        return _StepRepr.StepRepr_Array1OfShapeAspect_ChangeLast(self)

    def Value(self, theIndex: 'Standard_Integer const') -> "opencascade::handle< StepRepr_ShapeAspect > const &":
        return _StepRepr.StepRepr_Array1OfShapeAspect_Value(self, theIndex)

    def ChangeValue(self, theIndex: 'Standard_Integer const') -> "opencascade::handle< StepRepr_ShapeAspect > &":
        return _StepRepr.StepRepr_Array1OfShapeAspect_ChangeValue(self, theIndex)

    def __call__(self, *args) -> "opencascade::handle< StepRepr_ShapeAspect > &":
        return _StepRepr.StepRepr_Array1OfShapeAspect___call__(self, *args)

    def SetValue(self, theIndex: 'Standard_Integer const', theItem: 'opencascade::handle< StepRepr_ShapeAspect > const &') -> "void":
        return _StepRepr.StepRepr_Array1OfShapeAspect_SetValue(self, theIndex, theItem)

    def Resize(self, theLower: 'Standard_Integer const', theUpper: 'Standard_Integer const', theToCopyData: 'Standard_Boolean const') -> "void":
        return _StepRepr.StepRepr_Array1OfShapeAspect_Resize(self, theLower, theUpper, theToCopyData)
    __swig_destroy__ = _StepRepr.delete_StepRepr_Array1OfShapeAspect
    __del__ = lambda self: None

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next

StepRepr_Array1OfShapeAspect_swigregister = _StepRepr.StepRepr_Array1OfShapeAspect_swigregister
StepRepr_Array1OfShapeAspect_swigregister(StepRepr_Array1OfShapeAspect)

class StepRepr_SequenceOfMaterialPropertyRepresentation(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_SequenceOfMaterialPropertyRepresentation, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_SequenceOfMaterialPropertyRepresentation, name)
    __repr__ = _swig_repr

    def begin(self) -> "NCollection_Sequence< opencascade::handle< StepRepr_MaterialPropertyRepresentation > >::iterator":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_begin(self)

    def end(self) -> "NCollection_Sequence< opencascade::handle< StepRepr_MaterialPropertyRepresentation > >::iterator":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_end(self)

    def cbegin(self) -> "NCollection_Sequence< opencascade::handle< StepRepr_MaterialPropertyRepresentation > >::const_iterator":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_cbegin(self)

    def cend(self) -> "NCollection_Sequence< opencascade::handle< StepRepr_MaterialPropertyRepresentation > >::const_iterator":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_cend(self)

    def __init__(self, *args):
        this = _StepRepr.new_StepRepr_SequenceOfMaterialPropertyRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Size(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Size(self)

    def Length(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Length(self)

    def Lower(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Lower(self)

    def Upper(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Upper(self)

    def IsEmpty(self) -> "Standard_Boolean":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_IsEmpty(self)

    def Reverse(self) -> "void":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Reverse(self)

    def Exchange(self, I: 'Standard_Integer const', J: 'Standard_Integer const') -> "void":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Exchange(self, I, J)
    if _newclass:
        delNode = staticmethod(_StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_delNode)
    else:
        delNode = _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_delNode

    def Clear(self, theAllocator: 'opencascade::handle< NCollection_BaseAllocator > const &'=0) -> "void":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Clear(self, theAllocator)

    def Assign(self, theOther: 'StepRepr_SequenceOfMaterialPropertyRepresentation') -> "NCollection_Sequence< opencascade::handle< StepRepr_MaterialPropertyRepresentation > > &":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Assign(self, theOther)

    def Set(self, theOther: 'StepRepr_SequenceOfMaterialPropertyRepresentation') -> "NCollection_Sequence< opencascade::handle< StepRepr_MaterialPropertyRepresentation > > &":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Set(self, theOther)

    def Remove(self, *args) -> "void":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Remove(self, *args)

    def Append(self, *args) -> "void":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Append(self, *args)

    def Prepend(self, *args) -> "void":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Prepend(self, *args)

    def InsertBefore(self, *args) -> "void":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_InsertBefore(self, *args)

    def InsertAfter(self, *args) -> "void":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_InsertAfter(self, *args)

    def Split(self, theIndex: 'Standard_Integer const', theSeq: 'StepRepr_SequenceOfMaterialPropertyRepresentation') -> "void":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Split(self, theIndex, theSeq)

    def First(self) -> "opencascade::handle< StepRepr_MaterialPropertyRepresentation > const &":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_First(self)

    def ChangeFirst(self) -> "opencascade::handle< StepRepr_MaterialPropertyRepresentation > &":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_ChangeFirst(self)

    def Last(self) -> "opencascade::handle< StepRepr_MaterialPropertyRepresentation > const &":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Last(self)

    def ChangeLast(self) -> "opencascade::handle< StepRepr_MaterialPropertyRepresentation > &":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_ChangeLast(self)

    def Value(self, theIndex: 'Standard_Integer const') -> "opencascade::handle< StepRepr_MaterialPropertyRepresentation > const &":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Value(self, theIndex)

    def ChangeValue(self, theIndex: 'Standard_Integer const') -> "opencascade::handle< StepRepr_MaterialPropertyRepresentation > &":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_ChangeValue(self, theIndex)

    def __call__(self, *args) -> "opencascade::handle< StepRepr_MaterialPropertyRepresentation > &":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation___call__(self, *args)

    def SetValue(self, theIndex: 'Standard_Integer const', theItem: 'opencascade::handle< StepRepr_MaterialPropertyRepresentation > const &') -> "void":
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_SetValue(self, theIndex, theItem)
    __swig_destroy__ = _StepRepr.delete_StepRepr_SequenceOfMaterialPropertyRepresentation
    __del__ = lambda self: None

    def __len__(self):
        return self.Size()

StepRepr_SequenceOfMaterialPropertyRepresentation_swigregister = _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_swigregister
StepRepr_SequenceOfMaterialPropertyRepresentation_swigregister(StepRepr_SequenceOfMaterialPropertyRepresentation)

def StepRepr_SequenceOfMaterialPropertyRepresentation_delNode(theNode: 'NCollection_SeqNode *', theAl: 'opencascade::handle< NCollection_BaseAllocator > &') -> "void":
    return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_delNode(theNode, theAl)
StepRepr_SequenceOfMaterialPropertyRepresentation_delNode = _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_delNode

class StepRepr_SequenceOfRepresentationItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_SequenceOfRepresentationItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_SequenceOfRepresentationItem, name)
    __repr__ = _swig_repr

    def begin(self) -> "NCollection_Sequence< opencascade::handle< StepRepr_RepresentationItem > >::iterator":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_begin(self)

    def end(self) -> "NCollection_Sequence< opencascade::handle< StepRepr_RepresentationItem > >::iterator":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_end(self)

    def cbegin(self) -> "NCollection_Sequence< opencascade::handle< StepRepr_RepresentationItem > >::const_iterator":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_cbegin(self)

    def cend(self) -> "NCollection_Sequence< opencascade::handle< StepRepr_RepresentationItem > >::const_iterator":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_cend(self)

    def __init__(self, *args):
        this = _StepRepr.new_StepRepr_SequenceOfRepresentationItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Size(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Size(self)

    def Length(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Length(self)

    def Lower(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Lower(self)

    def Upper(self) -> "Standard_Integer":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Upper(self)

    def IsEmpty(self) -> "Standard_Boolean":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_IsEmpty(self)

    def Reverse(self) -> "void":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Reverse(self)

    def Exchange(self, I: 'Standard_Integer const', J: 'Standard_Integer const') -> "void":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Exchange(self, I, J)
    if _newclass:
        delNode = staticmethod(_StepRepr.StepRepr_SequenceOfRepresentationItem_delNode)
    else:
        delNode = _StepRepr.StepRepr_SequenceOfRepresentationItem_delNode

    def Clear(self, theAllocator: 'opencascade::handle< NCollection_BaseAllocator > const &'=0) -> "void":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Clear(self, theAllocator)

    def Assign(self, theOther: 'StepRepr_SequenceOfRepresentationItem') -> "NCollection_Sequence< opencascade::handle< StepRepr_RepresentationItem > > &":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Assign(self, theOther)

    def Set(self, theOther: 'StepRepr_SequenceOfRepresentationItem') -> "NCollection_Sequence< opencascade::handle< StepRepr_RepresentationItem > > &":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Set(self, theOther)

    def Remove(self, *args) -> "void":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Remove(self, *args)

    def Append(self, *args) -> "void":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Append(self, *args)

    def Prepend(self, *args) -> "void":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Prepend(self, *args)

    def InsertBefore(self, *args) -> "void":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_InsertBefore(self, *args)

    def InsertAfter(self, *args) -> "void":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_InsertAfter(self, *args)

    def Split(self, theIndex: 'Standard_Integer const', theSeq: 'StepRepr_SequenceOfRepresentationItem') -> "void":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Split(self, theIndex, theSeq)

    def First(self) -> "opencascade::handle< StepRepr_RepresentationItem > const &":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_First(self)

    def ChangeFirst(self) -> "opencascade::handle< StepRepr_RepresentationItem > &":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_ChangeFirst(self)

    def Last(self) -> "opencascade::handle< StepRepr_RepresentationItem > const &":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Last(self)

    def ChangeLast(self) -> "opencascade::handle< StepRepr_RepresentationItem > &":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_ChangeLast(self)

    def Value(self, theIndex: 'Standard_Integer const') -> "opencascade::handle< StepRepr_RepresentationItem > const &":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Value(self, theIndex)

    def ChangeValue(self, theIndex: 'Standard_Integer const') -> "opencascade::handle< StepRepr_RepresentationItem > &":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_ChangeValue(self, theIndex)

    def __call__(self, *args) -> "opencascade::handle< StepRepr_RepresentationItem > &":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem___call__(self, *args)

    def SetValue(self, theIndex: 'Standard_Integer const', theItem: 'opencascade::handle< StepRepr_RepresentationItem > const &') -> "void":
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_SetValue(self, theIndex, theItem)
    __swig_destroy__ = _StepRepr.delete_StepRepr_SequenceOfRepresentationItem
    __del__ = lambda self: None

    def __len__(self):
        return self.Size()

StepRepr_SequenceOfRepresentationItem_swigregister = _StepRepr.StepRepr_SequenceOfRepresentationItem_swigregister
StepRepr_SequenceOfRepresentationItem_swigregister(StepRepr_SequenceOfRepresentationItem)

def StepRepr_SequenceOfRepresentationItem_delNode(theNode: 'NCollection_SeqNode *', theAl: 'opencascade::handle< NCollection_BaseAllocator > &') -> "void":
    return _StepRepr.StepRepr_SequenceOfRepresentationItem_delNode(theNode, theAl)
StepRepr_SequenceOfRepresentationItem_delNode = _StepRepr.StepRepr_SequenceOfRepresentationItem_delNode

class StepRepr_AssemblyComponentUsageSubstitute(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_AssemblyComponentUsageSubstitute, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_AssemblyComponentUsageSubstitute, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_AssemblyComponentUsageSubstitute(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Base(self, *args) -> "opencascade::handle< StepRepr_AssemblyComponentUsage >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepRepr_AssemblyComponentUsage>

        """
        return _StepRepr.StepRepr_AssemblyComponentUsageSubstitute_Base(self, *args)


    def Definition(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_AssemblyComponentUsageSubstitute_Definition(self, *args)


    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aName: TCollection_HAsciiString
        aDef: TCollection_HAsciiString
        aBase: StepRepr_AssemblyComponentUsage
        aSubs: StepRepr_AssemblyComponentUsage

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_AssemblyComponentUsageSubstitute_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_AssemblyComponentUsageSubstitute_Name(self, *args)


    def SetBase(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aBase: StepRepr_AssemblyComponentUsage

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_AssemblyComponentUsageSubstitute_SetBase(self, *args)


    def SetDefinition(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aDef: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_AssemblyComponentUsageSubstitute_SetDefinition(self, *args)


    def SetName(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aName: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_AssemblyComponentUsageSubstitute_SetName(self, *args)


    def SetSubstitute(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aSubstitute: StepRepr_AssemblyComponentUsage

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_AssemblyComponentUsageSubstitute_SetSubstitute(self, *args)


    def Substitute(self, *args) -> "opencascade::handle< StepRepr_AssemblyComponentUsage >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepRepr_AssemblyComponentUsage>

        """
        return _StepRepr.StepRepr_AssemblyComponentUsageSubstitute_Substitute(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_AssemblyComponentUsageSubstitute_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_AssemblyComponentUsageSubstitute
    __del__ = lambda self: None
StepRepr_AssemblyComponentUsageSubstitute_swigregister = _StepRepr.StepRepr_AssemblyComponentUsageSubstitute_swigregister
StepRepr_AssemblyComponentUsageSubstitute_swigregister(StepRepr_AssemblyComponentUsageSubstitute)

class StepRepr_CharacterizedDefinition(OCC.Core.StepData.StepData_SelectType):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.StepData.StepData_SelectType]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_CharacterizedDefinition, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.StepData.StepData_SelectType]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_CharacterizedDefinition, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_CharacterizedDefinition(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def CharacterizedObject(self, *args) -> "opencascade::handle< StepBasic_CharacterizedObject >":
        """
        Returns value as characterizedobject (or null if another type).

        Returns
        -------
        opencascade::handle<StepBasic_CharacterizedObject>

        """
        return _StepRepr.StepRepr_CharacterizedDefinition_CharacterizedObject(self, *args)


    def DocumentFile(self, *args) -> "opencascade::handle< StepBasic_DocumentFile >":
        """
        Returns value as documentfile (or null if another type).

        Returns
        -------
        opencascade::handle<StepBasic_DocumentFile>

        """
        return _StepRepr.StepRepr_CharacterizedDefinition_DocumentFile(self, *args)


    def ProductDefinition(self, *args) -> "opencascade::handle< StepBasic_ProductDefinition >":
        """
        Returns value as productdefinition (or null if another type).

        Returns
        -------
        opencascade::handle<StepBasic_ProductDefinition>

        """
        return _StepRepr.StepRepr_CharacterizedDefinition_ProductDefinition(self, *args)


    def ProductDefinitionRelationship(self, *args) -> "opencascade::handle< StepBasic_ProductDefinitionRelationship >":
        """
        Returns value as productdefinitionrelationship (or null if another type).

        Returns
        -------
        opencascade::handle<StepBasic_ProductDefinitionRelationship>

        """
        return _StepRepr.StepRepr_CharacterizedDefinition_ProductDefinitionRelationship(self, *args)


    def ProductDefinitionShape(self, *args) -> "opencascade::handle< StepRepr_ProductDefinitionShape >":
        """
        Returns value as productdefinitionshape (or null if another type).

        Returns
        -------
        opencascade::handle<StepRepr_ProductDefinitionShape>

        """
        return _StepRepr.StepRepr_CharacterizedDefinition_ProductDefinitionShape(self, *args)


    def ShapeAspect(self, *args) -> "opencascade::handle< StepRepr_ShapeAspect >":
        """
        Returns value as shapeaspect (or null if another type).

        Returns
        -------
        opencascade::handle<StepRepr_ShapeAspect>

        """
        return _StepRepr.StepRepr_CharacterizedDefinition_ShapeAspect(self, *args)


    def ShapeAspectRelationship(self, *args) -> "opencascade::handle< StepRepr_ShapeAspectRelationship >":
        """
        Returns value as shapeaspectrelationship (or null if another type).

        Returns
        -------
        opencascade::handle<StepRepr_ShapeAspectRelationship>

        """
        return _StepRepr.StepRepr_CharacterizedDefinition_ShapeAspectRelationship(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_CharacterizedDefinition
    __del__ = lambda self: None
StepRepr_CharacterizedDefinition_swigregister = _StepRepr.StepRepr_CharacterizedDefinition_swigregister
StepRepr_CharacterizedDefinition_swigregister(StepRepr_CharacterizedDefinition)

class StepRepr_ConfigurationDesign(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ConfigurationDesign, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ConfigurationDesign, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ConfigurationDesign(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Configuration(self, *args) -> "opencascade::handle< StepRepr_ConfigurationItem >":
        """
        Returns field configuration.

        Returns
        -------
        opencascade::handle<StepRepr_ConfigurationItem>

        """
        return _StepRepr.StepRepr_ConfigurationDesign_Configuration(self, *args)


    def Design(self, *args) -> "StepRepr_ConfigurationDesignItem":
        """
        Returns field design.

        Returns
        -------
        StepRepr_ConfigurationDesignItem

        """
        return _StepRepr.StepRepr_ConfigurationDesign_Design(self, *args)


    def Init(self, *args) -> "void":
        """
        Initialize all fields (own and inherited).

        Parameters
        ----------
        aConfiguration: StepRepr_ConfigurationItem
        aDesign: StepRepr_ConfigurationDesignItem

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ConfigurationDesign_Init(self, *args)


    def SetConfiguration(self, *args) -> "void":
        """
        Set field configuration.

        Parameters
        ----------
        Configuration: StepRepr_ConfigurationItem

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ConfigurationDesign_SetConfiguration(self, *args)


    def SetDesign(self, *args) -> "void":
        """
        Set field design.

        Parameters
        ----------
        Design: StepRepr_ConfigurationDesignItem

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ConfigurationDesign_SetDesign(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ConfigurationDesign_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ConfigurationDesign
    __del__ = lambda self: None
StepRepr_ConfigurationDesign_swigregister = _StepRepr.StepRepr_ConfigurationDesign_swigregister
StepRepr_ConfigurationDesign_swigregister(StepRepr_ConfigurationDesign)

class StepRepr_ConfigurationDesignItem(OCC.Core.StepData.StepData_SelectType):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.StepData.StepData_SelectType]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ConfigurationDesignItem, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.StepData.StepData_SelectType]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ConfigurationDesignItem, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ConfigurationDesignItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ProductDefinition(self, *args) -> "opencascade::handle< StepBasic_ProductDefinition >":
        """
        Returns value as productdefinition (or null if another type).

        Returns
        -------
        opencascade::handle<StepBasic_ProductDefinition>

        """
        return _StepRepr.StepRepr_ConfigurationDesignItem_ProductDefinition(self, *args)


    def ProductDefinitionFormation(self, *args) -> "opencascade::handle< StepBasic_ProductDefinitionFormation >":
        """
        Returns value as productdefinitionformation (or null if another type).

        Returns
        -------
        opencascade::handle<StepBasic_ProductDefinitionFormation>

        """
        return _StepRepr.StepRepr_ConfigurationDesignItem_ProductDefinitionFormation(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ConfigurationDesignItem
    __del__ = lambda self: None
StepRepr_ConfigurationDesignItem_swigregister = _StepRepr.StepRepr_ConfigurationDesignItem_swigregister
StepRepr_ConfigurationDesignItem_swigregister(StepRepr_ConfigurationDesignItem)

class StepRepr_ConfigurationEffectivity(OCC.Core.StepBasic.StepBasic_ProductDefinitionEffectivity):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.StepBasic.StepBasic_ProductDefinitionEffectivity]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ConfigurationEffectivity, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.StepBasic.StepBasic_ProductDefinitionEffectivity]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ConfigurationEffectivity, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ConfigurationEffectivity(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Configuration(self, *args) -> "opencascade::handle< StepRepr_ConfigurationDesign >":
        """
        Returns field configuration.

        Returns
        -------
        opencascade::handle<StepRepr_ConfigurationDesign>

        """
        return _StepRepr.StepRepr_ConfigurationEffectivity_Configuration(self, *args)


    def Init(self, *args) -> "void":
        """
        Initialize all fields (own and inherited).

        Parameters
        ----------
        aEffectivity_Id: TCollection_HAsciiString
        aProductDefinitionEffectivity_Usage: StepBasic_ProductDefinitionRelationship
        aConfiguration: StepRepr_ConfigurationDesign

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ConfigurationEffectivity_Init(self, *args)


    def SetConfiguration(self, *args) -> "void":
        """
        Set field configuration.

        Parameters
        ----------
        Configuration: StepRepr_ConfigurationDesign

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ConfigurationEffectivity_SetConfiguration(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ConfigurationEffectivity_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ConfigurationEffectivity
    __del__ = lambda self: None
StepRepr_ConfigurationEffectivity_swigregister = _StepRepr.StepRepr_ConfigurationEffectivity_swigregister
StepRepr_ConfigurationEffectivity_swigregister(StepRepr_ConfigurationEffectivity)

class StepRepr_ConfigurationItem(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ConfigurationItem, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ConfigurationItem, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ConfigurationItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        Returns field description.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_ConfigurationItem_Description(self, *args)


    def HasDescription(self, *args) -> "Standard_Boolean":
        """
        Returns true if optional field description is defined.

        Returns
        -------
        bool

        """
        return _StepRepr.StepRepr_ConfigurationItem_HasDescription(self, *args)


    def HasPurpose(self, *args) -> "Standard_Boolean":
        """
        Returns true if optional field purpose is defined.

        Returns
        -------
        bool

        """
        return _StepRepr.StepRepr_ConfigurationItem_HasPurpose(self, *args)


    def Id(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        Returns field id.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_ConfigurationItem_Id(self, *args)


    def Init(self, *args) -> "void":
        """
        Initialize all fields (own and inherited).

        Parameters
        ----------
        aId: TCollection_HAsciiString
        aName: TCollection_HAsciiString
        hasDescription: bool
        aDescription: TCollection_HAsciiString
        aItemConcept: StepRepr_ProductConcept
        hasPurpose: bool
        aPurpose: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ConfigurationItem_Init(self, *args)


    def ItemConcept(self, *args) -> "opencascade::handle< StepRepr_ProductConcept >":
        """
        Returns field itemconcept.

        Returns
        -------
        opencascade::handle<StepRepr_ProductConcept>

        """
        return _StepRepr.StepRepr_ConfigurationItem_ItemConcept(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        Returns field name.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_ConfigurationItem_Name(self, *args)


    def Purpose(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        Returns field purpose.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_ConfigurationItem_Purpose(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        Set field description.

        Parameters
        ----------
        Description: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ConfigurationItem_SetDescription(self, *args)


    def SetId(self, *args) -> "void":
        """
        Set field id.

        Parameters
        ----------
        Id: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ConfigurationItem_SetId(self, *args)


    def SetItemConcept(self, *args) -> "void":
        """
        Set field itemconcept.

        Parameters
        ----------
        ItemConcept: StepRepr_ProductConcept

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ConfigurationItem_SetItemConcept(self, *args)


    def SetName(self, *args) -> "void":
        """
        Set field name.

        Parameters
        ----------
        Name: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ConfigurationItem_SetName(self, *args)


    def SetPurpose(self, *args) -> "void":
        """
        Set field purpose.

        Parameters
        ----------
        Purpose: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ConfigurationItem_SetPurpose(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ConfigurationItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ConfigurationItem
    __del__ = lambda self: None
StepRepr_ConfigurationItem_swigregister = _StepRepr.StepRepr_ConfigurationItem_swigregister
StepRepr_ConfigurationItem_swigregister(StepRepr_ConfigurationItem)

class StepRepr_DataEnvironment(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_DataEnvironment, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_DataEnvironment, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_DataEnvironment(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        Returns field description.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_DataEnvironment_Description(self, *args)


    def Elements(self, *args) -> "opencascade::handle< StepRepr_HArray1OfPropertyDefinitionRepresentation >":
        """
        Returns field elements.

        Returns
        -------
        opencascade::handle<StepRepr_HArray1OfPropertyDefinitionRepresentation>

        """
        return _StepRepr.StepRepr_DataEnvironment_Elements(self, *args)


    def Init(self, *args) -> "void":
        """
        Initialize all fields (own and inherited).

        Parameters
        ----------
        aName: TCollection_HAsciiString
        aDescription: TCollection_HAsciiString
        aElements: StepRepr_HArray1OfPropertyDefinitionRepresentation

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_DataEnvironment_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        Returns field name.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_DataEnvironment_Name(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        Set field description.

        Parameters
        ----------
        Description: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_DataEnvironment_SetDescription(self, *args)


    def SetElements(self, *args) -> "void":
        """
        Set field elements.

        Parameters
        ----------
        Elements: StepRepr_HArray1OfPropertyDefinitionRepresentation

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_DataEnvironment_SetElements(self, *args)


    def SetName(self, *args) -> "void":
        """
        Set field name.

        Parameters
        ----------
        Name: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_DataEnvironment_SetName(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_DataEnvironment_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_DataEnvironment
    __del__ = lambda self: None
StepRepr_DataEnvironment_swigregister = _StepRepr.StepRepr_DataEnvironment_swigregister
StepRepr_DataEnvironment_swigregister(StepRepr_DataEnvironment)

class StepRepr_FunctionallyDefinedTransformation(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_FunctionallyDefinedTransformation, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_FunctionallyDefinedTransformation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Returns a functionallydefinedtransformation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_FunctionallyDefinedTransformation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_FunctionallyDefinedTransformation_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aName: TCollection_HAsciiString
        aDescription: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_FunctionallyDefinedTransformation_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_FunctionallyDefinedTransformation_Name(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aDescription: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_FunctionallyDefinedTransformation_SetDescription(self, *args)


    def SetName(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aName: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_FunctionallyDefinedTransformation_SetName(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_FunctionallyDefinedTransformation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_FunctionallyDefinedTransformation
    __del__ = lambda self: None
StepRepr_FunctionallyDefinedTransformation_swigregister = _StepRepr.StepRepr_FunctionallyDefinedTransformation_swigregister
StepRepr_FunctionallyDefinedTransformation_swigregister(StepRepr_FunctionallyDefinedTransformation)

class StepRepr_ItemDefinedTransformation(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ItemDefinedTransformation, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ItemDefinedTransformation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ItemDefinedTransformation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_ItemDefinedTransformation_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aName: TCollection_HAsciiString
        aDescription: TCollection_HAsciiString
        aTransformItem1: StepRepr_RepresentationItem
        aTransformItem2: StepRepr_RepresentationItem

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ItemDefinedTransformation_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_ItemDefinedTransformation_Name(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aDescription: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ItemDefinedTransformation_SetDescription(self, *args)


    def SetName(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aName: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ItemDefinedTransformation_SetName(self, *args)


    def SetTransformItem1(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aItem: StepRepr_RepresentationItem

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ItemDefinedTransformation_SetTransformItem1(self, *args)


    def SetTransformItem2(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aItem: StepRepr_RepresentationItem

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ItemDefinedTransformation_SetTransformItem2(self, *args)


    def TransformItem1(self, *args) -> "opencascade::handle< StepRepr_RepresentationItem >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepRepr_RepresentationItem>

        """
        return _StepRepr.StepRepr_ItemDefinedTransformation_TransformItem1(self, *args)


    def TransformItem2(self, *args) -> "opencascade::handle< StepRepr_RepresentationItem >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepRepr_RepresentationItem>

        """
        return _StepRepr.StepRepr_ItemDefinedTransformation_TransformItem2(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ItemDefinedTransformation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ItemDefinedTransformation
    __del__ = lambda self: None
StepRepr_ItemDefinedTransformation_swigregister = _StepRepr.StepRepr_ItemDefinedTransformation_swigregister
StepRepr_ItemDefinedTransformation_swigregister(StepRepr_ItemDefinedTransformation)

class StepRepr_MaterialDesignation(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_MaterialDesignation, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_MaterialDesignation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_MaterialDesignation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aName: TCollection_HAsciiString
        aOfDefinition: StepRepr_CharacterizedDefinition

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_MaterialDesignation_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_MaterialDesignation_Name(self, *args)


    def OfDefinition(self, *args) -> "StepRepr_CharacterizedDefinition":
        """
        No available documentation.

        Returns
        -------
        StepRepr_CharacterizedDefinition

        """
        return _StepRepr.StepRepr_MaterialDesignation_OfDefinition(self, *args)


    def SetName(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aName: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_MaterialDesignation_SetName(self, *args)


    def SetOfDefinition(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aOfDefinition: StepRepr_CharacterizedDefinition

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_MaterialDesignation_SetOfDefinition(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_MaterialDesignation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_MaterialDesignation
    __del__ = lambda self: None
StepRepr_MaterialDesignation_swigregister = _StepRepr.StepRepr_MaterialDesignation_swigregister
StepRepr_MaterialDesignation_swigregister(StepRepr_MaterialDesignation)

class StepRepr_ProductConcept(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ProductConcept, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ProductConcept, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ProductConcept(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        Returns field description.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_ProductConcept_Description(self, *args)


    def HasDescription(self, *args) -> "Standard_Boolean":
        """
        Returns true if optional field description is defined.

        Returns
        -------
        bool

        """
        return _StepRepr.StepRepr_ProductConcept_HasDescription(self, *args)


    def Id(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        Returns field id.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_ProductConcept_Id(self, *args)


    def Init(self, *args) -> "void":
        """
        Initialize all fields (own and inherited).

        Parameters
        ----------
        aId: TCollection_HAsciiString
        aName: TCollection_HAsciiString
        hasDescription: bool
        aDescription: TCollection_HAsciiString
        aMarketContext: StepBasic_ProductConceptContext

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ProductConcept_Init(self, *args)


    def MarketContext(self, *args) -> "opencascade::handle< StepBasic_ProductConceptContext >":
        """
        Returns field marketcontext.

        Returns
        -------
        opencascade::handle<StepBasic_ProductConceptContext>

        """
        return _StepRepr.StepRepr_ProductConcept_MarketContext(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        Returns field name.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_ProductConcept_Name(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        Set field description.

        Parameters
        ----------
        Description: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ProductConcept_SetDescription(self, *args)


    def SetId(self, *args) -> "void":
        """
        Set field id.

        Parameters
        ----------
        Id: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ProductConcept_SetId(self, *args)


    def SetMarketContext(self, *args) -> "void":
        """
        Set field marketcontext.

        Parameters
        ----------
        MarketContext: StepBasic_ProductConceptContext

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ProductConcept_SetMarketContext(self, *args)


    def SetName(self, *args) -> "void":
        """
        Set field name.

        Parameters
        ----------
        Name: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ProductConcept_SetName(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ProductConcept_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ProductConcept
    __del__ = lambda self: None
StepRepr_ProductConcept_swigregister = _StepRepr.StepRepr_ProductConcept_swigregister
StepRepr_ProductConcept_swigregister(StepRepr_ProductConcept)

class StepRepr_ProductDefinitionUsage(OCC.Core.StepBasic.StepBasic_ProductDefinitionRelationship):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.StepBasic.StepBasic_ProductDefinitionRelationship]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ProductDefinitionUsage, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.StepBasic.StepBasic_ProductDefinitionRelationship]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ProductDefinitionUsage, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ProductDefinitionUsage(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ProductDefinitionUsage_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ProductDefinitionUsage
    __del__ = lambda self: None
StepRepr_ProductDefinitionUsage_swigregister = _StepRepr.StepRepr_ProductDefinitionUsage_swigregister
StepRepr_ProductDefinitionUsage_swigregister(StepRepr_ProductDefinitionUsage)

class StepRepr_PropertyDefinition(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_PropertyDefinition, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_PropertyDefinition, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_PropertyDefinition(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Definition(self, *args) -> "StepRepr_CharacterizedDefinition":
        """
        Returns field definition.

        Returns
        -------
        StepRepr_CharacterizedDefinition

        """
        return _StepRepr.StepRepr_PropertyDefinition_Definition(self, *args)


    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        Returns field description.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_PropertyDefinition_Description(self, *args)


    def HasDescription(self, *args) -> "Standard_Boolean":
        """
        Returns true if optional field description is defined.

        Returns
        -------
        bool

        """
        return _StepRepr.StepRepr_PropertyDefinition_HasDescription(self, *args)


    def Init(self, *args) -> "void":
        """
        Initialize all fields (own and inherited).

        Parameters
        ----------
        aName: TCollection_HAsciiString
        hasDescription: bool
        aDescription: TCollection_HAsciiString
        aDefinition: StepRepr_CharacterizedDefinition

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_PropertyDefinition_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        Returns field name.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_PropertyDefinition_Name(self, *args)


    def SetDefinition(self, *args) -> "void":
        """
        Set field definition.

        Parameters
        ----------
        Definition: StepRepr_CharacterizedDefinition

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_PropertyDefinition_SetDefinition(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        Set field description.

        Parameters
        ----------
        Description: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_PropertyDefinition_SetDescription(self, *args)


    def SetName(self, *args) -> "void":
        """
        Set field name.

        Parameters
        ----------
        Name: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_PropertyDefinition_SetName(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_PropertyDefinition_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_PropertyDefinition
    __del__ = lambda self: None
StepRepr_PropertyDefinition_swigregister = _StepRepr.StepRepr_PropertyDefinition_swigregister
StepRepr_PropertyDefinition_swigregister(StepRepr_PropertyDefinition)

class StepRepr_PropertyDefinitionRelationship(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_PropertyDefinitionRelationship, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_PropertyDefinitionRelationship, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_PropertyDefinitionRelationship(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        Returns field description.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_PropertyDefinitionRelationship_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        Initialize all fields (own and inherited).

        Parameters
        ----------
        aName: TCollection_HAsciiString
        aDescription: TCollection_HAsciiString
        aRelatingPropertyDefinition: StepRepr_PropertyDefinition
        aRelatedPropertyDefinition: StepRepr_PropertyDefinition

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_PropertyDefinitionRelationship_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        Returns field name.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_PropertyDefinitionRelationship_Name(self, *args)


    def RelatedPropertyDefinition(self, *args) -> "opencascade::handle< StepRepr_PropertyDefinition >":
        """
        Returns field relatedpropertydefinition.

        Returns
        -------
        opencascade::handle<StepRepr_PropertyDefinition>

        """
        return _StepRepr.StepRepr_PropertyDefinitionRelationship_RelatedPropertyDefinition(self, *args)


    def RelatingPropertyDefinition(self, *args) -> "opencascade::handle< StepRepr_PropertyDefinition >":
        """
        Returns field relatingpropertydefinition.

        Returns
        -------
        opencascade::handle<StepRepr_PropertyDefinition>

        """
        return _StepRepr.StepRepr_PropertyDefinitionRelationship_RelatingPropertyDefinition(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        Set field description.

        Parameters
        ----------
        Description: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_PropertyDefinitionRelationship_SetDescription(self, *args)


    def SetName(self, *args) -> "void":
        """
        Set field name.

        Parameters
        ----------
        Name: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_PropertyDefinitionRelationship_SetName(self, *args)


    def SetRelatedPropertyDefinition(self, *args) -> "void":
        """
        Set field relatedpropertydefinition.

        Parameters
        ----------
        RelatedPropertyDefinition: StepRepr_PropertyDefinition

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_PropertyDefinitionRelationship_SetRelatedPropertyDefinition(self, *args)


    def SetRelatingPropertyDefinition(self, *args) -> "void":
        """
        Set field relatingpropertydefinition.

        Parameters
        ----------
        RelatingPropertyDefinition: StepRepr_PropertyDefinition

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_PropertyDefinitionRelationship_SetRelatingPropertyDefinition(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_PropertyDefinitionRelationship_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_PropertyDefinitionRelationship
    __del__ = lambda self: None
StepRepr_PropertyDefinitionRelationship_swigregister = _StepRepr.StepRepr_PropertyDefinitionRelationship_swigregister
StepRepr_PropertyDefinitionRelationship_swigregister(StepRepr_PropertyDefinitionRelationship)

class StepRepr_PropertyDefinitionRepresentation(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_PropertyDefinitionRepresentation, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_PropertyDefinitionRepresentation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_PropertyDefinitionRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Definition(self, *args) -> "StepRepr_RepresentedDefinition":
        """
        Returns field definition.

        Returns
        -------
        StepRepr_RepresentedDefinition

        """
        return _StepRepr.StepRepr_PropertyDefinitionRepresentation_Definition(self, *args)


    def Init(self, *args) -> "void":
        """
        Initialize all fields (own and inherited).

        Parameters
        ----------
        aDefinition: StepRepr_RepresentedDefinition
        aUsedRepresentation: StepRepr_Representation

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_PropertyDefinitionRepresentation_Init(self, *args)


    def SetDefinition(self, *args) -> "void":
        """
        Set field definition.

        Parameters
        ----------
        Definition: StepRepr_RepresentedDefinition

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_PropertyDefinitionRepresentation_SetDefinition(self, *args)


    def SetUsedRepresentation(self, *args) -> "void":
        """
        Set field usedrepresentation.

        Parameters
        ----------
        UsedRepresentation: StepRepr_Representation

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_PropertyDefinitionRepresentation_SetUsedRepresentation(self, *args)


    def UsedRepresentation(self, *args) -> "opencascade::handle< StepRepr_Representation >":
        """
        Returns field usedrepresentation.

        Returns
        -------
        opencascade::handle<StepRepr_Representation>

        """
        return _StepRepr.StepRepr_PropertyDefinitionRepresentation_UsedRepresentation(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_PropertyDefinitionRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_PropertyDefinitionRepresentation
    __del__ = lambda self: None
StepRepr_PropertyDefinitionRepresentation_swigregister = _StepRepr.StepRepr_PropertyDefinitionRepresentation_swigregister
StepRepr_PropertyDefinitionRepresentation_swigregister(StepRepr_PropertyDefinitionRepresentation)

class StepRepr_Representation(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_Representation, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_Representation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Returns a representation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_Representation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ContextOfItems(self, *args) -> "opencascade::handle< StepRepr_RepresentationContext >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepRepr_RepresentationContext>

        """
        return _StepRepr.StepRepr_Representation_ContextOfItems(self, *args)


    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aName: TCollection_HAsciiString
        aItems: StepRepr_HArray1OfRepresentationItem
        aContextOfItems: StepRepr_RepresentationContext

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_Representation_Init(self, *args)


    def Items(self, *args) -> "opencascade::handle< StepRepr_HArray1OfRepresentationItem >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepRepr_HArray1OfRepresentationItem>

        """
        return _StepRepr.StepRepr_Representation_Items(self, *args)


    def ItemsValue(self, *args) -> "opencascade::handle< StepRepr_RepresentationItem >":
        """
        No available documentation.

        Parameters
        ----------
        num: int

        Returns
        -------
        opencascade::handle<StepRepr_RepresentationItem>

        """
        return _StepRepr.StepRepr_Representation_ItemsValue(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_Representation_Name(self, *args)


    def NbItems(self, *args) -> "Standard_Integer":
        """
        No available documentation.

        Returns
        -------
        int

        """
        return _StepRepr.StepRepr_Representation_NbItems(self, *args)


    def SetContextOfItems(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aContextOfItems: StepRepr_RepresentationContext

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_Representation_SetContextOfItems(self, *args)


    def SetItems(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aItems: StepRepr_HArray1OfRepresentationItem

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_Representation_SetItems(self, *args)


    def SetName(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aName: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_Representation_SetName(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_Representation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_Representation
    __del__ = lambda self: None
StepRepr_Representation_swigregister = _StepRepr.StepRepr_Representation_swigregister
StepRepr_Representation_swigregister(StepRepr_Representation)

class StepRepr_RepresentationContext(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_RepresentationContext, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_RepresentationContext, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Returns a representationcontext.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_RepresentationContext(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ContextIdentifier(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_RepresentationContext_ContextIdentifier(self, *args)


    def ContextType(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_RepresentationContext_ContextType(self, *args)


    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aContextIdentifier: TCollection_HAsciiString
        aContextType: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_RepresentationContext_Init(self, *args)


    def SetContextIdentifier(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aContextIdentifier: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_RepresentationContext_SetContextIdentifier(self, *args)


    def SetContextType(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aContextType: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_RepresentationContext_SetContextType(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_RepresentationContext_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_RepresentationContext
    __del__ = lambda self: None
StepRepr_RepresentationContext_swigregister = _StepRepr.StepRepr_RepresentationContext_swigregister
StepRepr_RepresentationContext_swigregister(StepRepr_RepresentationContext)

class StepRepr_RepresentationItem(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_RepresentationItem, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_RepresentationItem, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Returns a representationitem.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_RepresentationItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aName: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_RepresentationItem_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_RepresentationItem_Name(self, *args)


    def SetName(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aName: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_RepresentationItem_SetName(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_RepresentationItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_RepresentationItem
    __del__ = lambda self: None
StepRepr_RepresentationItem_swigregister = _StepRepr.StepRepr_RepresentationItem_swigregister
StepRepr_RepresentationItem_swigregister(StepRepr_RepresentationItem)

class StepRepr_RepresentationMap(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_RepresentationMap, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_RepresentationMap, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Returns a representationmap.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_RepresentationMap(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aMappingOrigin: StepRepr_RepresentationItem
        aMappedRepresentation: StepRepr_Representation

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_RepresentationMap_Init(self, *args)


    def MappedRepresentation(self, *args) -> "opencascade::handle< StepRepr_Representation >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepRepr_Representation>

        """
        return _StepRepr.StepRepr_RepresentationMap_MappedRepresentation(self, *args)


    def MappingOrigin(self, *args) -> "opencascade::handle< StepRepr_RepresentationItem >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepRepr_RepresentationItem>

        """
        return _StepRepr.StepRepr_RepresentationMap_MappingOrigin(self, *args)


    def SetMappedRepresentation(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aMappedRepresentation: StepRepr_Representation

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_RepresentationMap_SetMappedRepresentation(self, *args)


    def SetMappingOrigin(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aMappingOrigin: StepRepr_RepresentationItem

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_RepresentationMap_SetMappingOrigin(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_RepresentationMap_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_RepresentationMap
    __del__ = lambda self: None
StepRepr_RepresentationMap_swigregister = _StepRepr.StepRepr_RepresentationMap_swigregister
StepRepr_RepresentationMap_swigregister(StepRepr_RepresentationMap)

class StepRepr_RepresentationRelationship(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_RepresentationRelationship, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_RepresentationRelationship, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Returns a representationrelationship.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_RepresentationRelationship(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_RepresentationRelationship_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aName: TCollection_HAsciiString
        aDescription: TCollection_HAsciiString
        aRep1: StepRepr_Representation
        aRep2: StepRepr_Representation

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_RepresentationRelationship_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_RepresentationRelationship_Name(self, *args)


    def Rep1(self, *args) -> "opencascade::handle< StepRepr_Representation >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepRepr_Representation>

        """
        return _StepRepr.StepRepr_RepresentationRelationship_Rep1(self, *args)


    def Rep2(self, *args) -> "opencascade::handle< StepRepr_Representation >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepRepr_Representation>

        """
        return _StepRepr.StepRepr_RepresentationRelationship_Rep2(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aDescription: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_RepresentationRelationship_SetDescription(self, *args)


    def SetName(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aName: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_RepresentationRelationship_SetName(self, *args)


    def SetRep1(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aRep1: StepRepr_Representation

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_RepresentationRelationship_SetRep1(self, *args)


    def SetRep2(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aRep2: StepRepr_Representation

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_RepresentationRelationship_SetRep2(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_RepresentationRelationship_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_RepresentationRelationship
    __del__ = lambda self: None
StepRepr_RepresentationRelationship_swigregister = _StepRepr.StepRepr_RepresentationRelationship_swigregister
StepRepr_RepresentationRelationship_swigregister(StepRepr_RepresentationRelationship)

class StepRepr_RepresentedDefinition(OCC.Core.StepData.StepData_SelectType):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.StepData.StepData_SelectType]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_RepresentedDefinition, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.StepData.StepData_SelectType]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_RepresentedDefinition, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_RepresentedDefinition(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def GeneralProperty(self, *args) -> "opencascade::handle< StepBasic_GeneralProperty >":
        """
        Returns value as generalproperty (or null if another type).

        Returns
        -------
        opencascade::handle<StepBasic_GeneralProperty>

        """
        return _StepRepr.StepRepr_RepresentedDefinition_GeneralProperty(self, *args)


    def PropertyDefinition(self, *args) -> "opencascade::handle< StepRepr_PropertyDefinition >":
        """
        Returns value as propertydefinition (or null if another type).

        Returns
        -------
        opencascade::handle<StepRepr_PropertyDefinition>

        """
        return _StepRepr.StepRepr_RepresentedDefinition_PropertyDefinition(self, *args)


    def PropertyDefinitionRelationship(self, *args) -> "opencascade::handle< StepRepr_PropertyDefinitionRelationship >":
        """
        Returns value as propertydefinitionrelationship (or null if another type).

        Returns
        -------
        opencascade::handle<StepRepr_PropertyDefinitionRelationship>

        """
        return _StepRepr.StepRepr_RepresentedDefinition_PropertyDefinitionRelationship(self, *args)


    def ShapeAspect(self, *args) -> "opencascade::handle< StepRepr_ShapeAspect >":
        """
        Returns value as shapeaspect (or null if another type).

        Returns
        -------
        opencascade::handle<StepRepr_ShapeAspect>

        """
        return _StepRepr.StepRepr_RepresentedDefinition_ShapeAspect(self, *args)


    def ShapeAspectRelationship(self, *args) -> "opencascade::handle< StepRepr_ShapeAspectRelationship >":
        """
        Returns value as shapeaspectrelationship (or null if another type).

        Returns
        -------
        opencascade::handle<StepRepr_ShapeAspectRelationship>

        """
        return _StepRepr.StepRepr_RepresentedDefinition_ShapeAspectRelationship(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_RepresentedDefinition
    __del__ = lambda self: None
StepRepr_RepresentedDefinition_swigregister = _StepRepr.StepRepr_RepresentedDefinition_swigregister
StepRepr_RepresentedDefinition_swigregister(StepRepr_RepresentedDefinition)

class StepRepr_ShapeAspect(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ShapeAspect, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ShapeAspect, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Returns a shapeaspect.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ShapeAspect(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_ShapeAspect_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aName: TCollection_HAsciiString
        aDescription: TCollection_HAsciiString
        aOfShape: StepRepr_ProductDefinitionShape
        aProductDefinitional: StepData_Logical

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ShapeAspect_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_ShapeAspect_Name(self, *args)


    def OfShape(self, *args) -> "opencascade::handle< StepRepr_ProductDefinitionShape >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepRepr_ProductDefinitionShape>

        """
        return _StepRepr.StepRepr_ShapeAspect_OfShape(self, *args)


    def ProductDefinitional(self, *args) -> "StepData_Logical":
        """
        No available documentation.

        Returns
        -------
        StepData_Logical

        """
        return _StepRepr.StepRepr_ShapeAspect_ProductDefinitional(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aDescription: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ShapeAspect_SetDescription(self, *args)


    def SetName(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aName: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ShapeAspect_SetName(self, *args)


    def SetOfShape(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aOfShape: StepRepr_ProductDefinitionShape

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ShapeAspect_SetOfShape(self, *args)


    def SetProductDefinitional(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aProductDefinitional: StepData_Logical

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ShapeAspect_SetProductDefinitional(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ShapeAspect_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ShapeAspect
    __del__ = lambda self: None
StepRepr_ShapeAspect_swigregister = _StepRepr.StepRepr_ShapeAspect_swigregister
StepRepr_ShapeAspect_swigregister(StepRepr_ShapeAspect)

class StepRepr_ShapeAspectRelationship(OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ShapeAspectRelationship, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ShapeAspectRelationship, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ShapeAspectRelationship(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        Returns field description.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_ShapeAspectRelationship_Description(self, *args)


    def HasDescription(self, *args) -> "Standard_Boolean":
        """
        Returns true if optional field description is defined.

        Returns
        -------
        bool

        """
        return _StepRepr.StepRepr_ShapeAspectRelationship_HasDescription(self, *args)


    def Init(self, *args) -> "void":
        """
        Initialize all fields (own and inherited).

        Parameters
        ----------
        aName: TCollection_HAsciiString
        hasDescription: bool
        aDescription: TCollection_HAsciiString
        aRelatingShapeAspect: StepRepr_ShapeAspect
        aRelatedShapeAspect: StepRepr_ShapeAspect

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ShapeAspectRelationship_Init(self, *args)


    def Name(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        Returns field name.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_ShapeAspectRelationship_Name(self, *args)


    def RelatedShapeAspect(self, *args) -> "opencascade::handle< StepRepr_ShapeAspect >":
        """
        Returns field relatedshapeaspect.

        Returns
        -------
        opencascade::handle<StepRepr_ShapeAspect>

        """
        return _StepRepr.StepRepr_ShapeAspectRelationship_RelatedShapeAspect(self, *args)


    def RelatingShapeAspect(self, *args) -> "opencascade::handle< StepRepr_ShapeAspect >":
        """
        Returns field relatingshapeaspect.

        Returns
        -------
        opencascade::handle<StepRepr_ShapeAspect>

        """
        return _StepRepr.StepRepr_ShapeAspectRelationship_RelatingShapeAspect(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        Set field description.

        Parameters
        ----------
        Description: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ShapeAspectRelationship_SetDescription(self, *args)


    def SetName(self, *args) -> "void":
        """
        Set field name.

        Parameters
        ----------
        Name: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ShapeAspectRelationship_SetName(self, *args)


    def SetRelatedShapeAspect(self, *args) -> "void":
        """
        Set field relatedshapeaspect.

        Parameters
        ----------
        RelatedShapeAspect: StepRepr_ShapeAspect

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ShapeAspectRelationship_SetRelatedShapeAspect(self, *args)


    def SetRelatingShapeAspect(self, *args) -> "void":
        """
        Set field relatingshapeaspect.

        Parameters
        ----------
        RelatingShapeAspect: StepRepr_ShapeAspect

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ShapeAspectRelationship_SetRelatingShapeAspect(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ShapeAspectRelationship_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ShapeAspectRelationship
    __del__ = lambda self: None
StepRepr_ShapeAspectRelationship_swigregister = _StepRepr.StepRepr_ShapeAspectRelationship_swigregister
StepRepr_ShapeAspectRelationship_swigregister(StepRepr_ShapeAspectRelationship)

class StepRepr_ShapeDefinition(OCC.Core.StepData.StepData_SelectType):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.StepData.StepData_SelectType]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ShapeDefinition, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.StepData.StepData_SelectType]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ShapeDefinition, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Returns a shapedefinition selecttype.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ShapeDefinition(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ProductDefinitionShape(self, *args) -> "opencascade::handle< StepRepr_ProductDefinitionShape >":
        """
        Returns value as a productdefinitionshape (null if another type).

        Returns
        -------
        opencascade::handle<StepRepr_ProductDefinitionShape>

        """
        return _StepRepr.StepRepr_ShapeDefinition_ProductDefinitionShape(self, *args)


    def ShapeAspect(self, *args) -> "opencascade::handle< StepRepr_ShapeAspect >":
        """
        Returns value as a shapeaspect (null if another type).

        Returns
        -------
        opencascade::handle<StepRepr_ShapeAspect>

        """
        return _StepRepr.StepRepr_ShapeDefinition_ShapeAspect(self, *args)


    def ShapeAspectRelationship(self, *args) -> "opencascade::handle< StepRepr_ShapeAspectRelationship >":
        """
        Returns value as a shapeaspectrelationship (null if another type).

        Returns
        -------
        opencascade::handle<StepRepr_ShapeAspectRelationship>

        """
        return _StepRepr.StepRepr_ShapeDefinition_ShapeAspectRelationship(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ShapeDefinition
    __del__ = lambda self: None
StepRepr_ShapeDefinition_swigregister = _StepRepr.StepRepr_ShapeDefinition_swigregister
StepRepr_ShapeDefinition_swigregister(StepRepr_ShapeDefinition)

class StepRepr_SuppliedPartRelationship(OCC.Core.StepBasic.StepBasic_ProductDefinitionRelationship):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.StepBasic.StepBasic_ProductDefinitionRelationship]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_SuppliedPartRelationship, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.StepBasic.StepBasic_ProductDefinitionRelationship]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_SuppliedPartRelationship, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_SuppliedPartRelationship(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_SuppliedPartRelationship_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_SuppliedPartRelationship
    __del__ = lambda self: None
StepRepr_SuppliedPartRelationship_swigregister = _StepRepr.StepRepr_SuppliedPartRelationship_swigregister
StepRepr_SuppliedPartRelationship_swigregister(StepRepr_SuppliedPartRelationship)

class StepRepr_Transformation(OCC.Core.StepData.StepData_SelectType):
    __swig_setmethods__ = {}
    for _s in [OCC.Core.StepData.StepData_SelectType]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_Transformation, name, value)
    __swig_getmethods__ = {}
    for _s in [OCC.Core.StepData.StepData_SelectType]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_Transformation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Returns a transformation selecttype.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_Transformation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def FunctionallyDefinedTransformation(self, *args) -> "opencascade::handle< StepRepr_FunctionallyDefinedTransformation >":
        """
        Returns value as a functionallydefinedtransformation (null if another type).

        Returns
        -------
        opencascade::handle<StepRepr_FunctionallyDefinedTransformation>

        """
        return _StepRepr.StepRepr_Transformation_FunctionallyDefinedTransformation(self, *args)


    def ItemDefinedTransformation(self, *args) -> "opencascade::handle< StepRepr_ItemDefinedTransformation >":
        """
        Returns value as a itemdefinedtransformation (null if another type).

        Returns
        -------
        opencascade::handle<StepRepr_ItemDefinedTransformation>

        """
        return _StepRepr.StepRepr_Transformation_ItemDefinedTransformation(self, *args)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_Transformation
    __del__ = lambda self: None
StepRepr_Transformation_swigregister = _StepRepr.StepRepr_Transformation_swigregister
StepRepr_Transformation_swigregister(StepRepr_Transformation)

class StepRepr_AssemblyComponentUsage(StepRepr_ProductDefinitionUsage):
    __swig_setmethods__ = {}
    for _s in [StepRepr_ProductDefinitionUsage]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_AssemblyComponentUsage, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_ProductDefinitionUsage]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_AssemblyComponentUsage, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_AssemblyComponentUsage(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def HasReferenceDesignator(self, *args) -> "Standard_Boolean":
        """
        Returns true if optional field referencedesignator is defined.

        Returns
        -------
        bool

        """
        return _StepRepr.StepRepr_AssemblyComponentUsage_HasReferenceDesignator(self, *args)


    def Init(self, *args) -> "void":
        """
        Initialize all fields (own and inherited).

        Parameters
        ----------
        aProductDefinitionRelationship_Id: TCollection_HAsciiString
        aProductDefinitionRelationship_Name: TCollection_HAsciiString
        hasProductDefinitionRelationship_Description: bool
        aProductDefinitionRelationship_Description: TCollection_HAsciiString
        aProductDefinitionRelationship_RelatingProductDefinition: StepBasic_ProductDefinition
        aProductDefinitionRelationship_RelatedProductDefinition: StepBasic_ProductDefinition
        hasReferenceDesignator: bool
        aReferenceDesignator: TCollection_HAsciiString

        Returns
        -------
        None

        Initialize all fields (own and inherited).

        Parameters
        ----------
        aProductDefinitionRelationship_Id: TCollection_HAsciiString
        aProductDefinitionRelationship_Name: TCollection_HAsciiString
        hasProductDefinitionRelationship_Description: bool
        aProductDefinitionRelationship_Description: TCollection_HAsciiString
        aProductDefinitionRelationship_RelatingProductDefinition: StepBasic_ProductDefinitionOrReference
        aProductDefinitionRelationship_RelatedProductDefinition: StepBasic_ProductDefinitionOrReference
        hasReferenceDesignator: bool
        aReferenceDesignator: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_AssemblyComponentUsage_Init(self, *args)


    def ReferenceDesignator(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        Returns field referencedesignator.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_AssemblyComponentUsage_ReferenceDesignator(self, *args)


    def SetReferenceDesignator(self, *args) -> "void":
        """
        Set field referencedesignator.

        Parameters
        ----------
        ReferenceDesignator: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_AssemblyComponentUsage_SetReferenceDesignator(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_AssemblyComponentUsage_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_AssemblyComponentUsage
    __del__ = lambda self: None
StepRepr_AssemblyComponentUsage_swigregister = _StepRepr.StepRepr_AssemblyComponentUsage_swigregister
StepRepr_AssemblyComponentUsage_swigregister(StepRepr_AssemblyComponentUsage)

class StepRepr_CharacterizedRepresentation(StepRepr_Representation):
    __swig_setmethods__ = {}
    for _s in [StepRepr_Representation]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_CharacterizedRepresentation, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_Representation]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_CharacterizedRepresentation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_CharacterizedRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_CharacterizedRepresentation_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        Returns a characterizedrepresentation.

        Parameters
        ----------
        theName: TCollection_HAsciiString
        theDescription: TCollection_HAsciiString
        theItems: StepRepr_HArray1OfRepresentationItem
        theContextOfItems: StepRepr_RepresentationContext

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_CharacterizedRepresentation_Init(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        theDescription: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_CharacterizedRepresentation_SetDescription(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_CharacterizedRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_CharacterizedRepresentation
    __del__ = lambda self: None
StepRepr_CharacterizedRepresentation_swigregister = _StepRepr.StepRepr_CharacterizedRepresentation_swigregister
StepRepr_CharacterizedRepresentation_swigregister(StepRepr_CharacterizedRepresentation)

class StepRepr_CompShAspAndDatumFeatAndShAsp(StepRepr_ShapeAspect):
    __swig_setmethods__ = {}
    for _s in [StepRepr_ShapeAspect]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_CompShAspAndDatumFeatAndShAsp, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_ShapeAspect]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_CompShAspAndDatumFeatAndShAsp, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_CompShAspAndDatumFeatAndShAsp(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_CompShAspAndDatumFeatAndShAsp_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_CompShAspAndDatumFeatAndShAsp
    __del__ = lambda self: None
StepRepr_CompShAspAndDatumFeatAndShAsp_swigregister = _StepRepr.StepRepr_CompShAspAndDatumFeatAndShAsp_swigregister
StepRepr_CompShAspAndDatumFeatAndShAsp_swigregister(StepRepr_CompShAspAndDatumFeatAndShAsp)

class StepRepr_CompositeShapeAspect(StepRepr_ShapeAspect):
    __swig_setmethods__ = {}
    for _s in [StepRepr_ShapeAspect]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_CompositeShapeAspect, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_ShapeAspect]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_CompositeShapeAspect, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_CompositeShapeAspect(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_CompositeShapeAspect_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_CompositeShapeAspect
    __del__ = lambda self: None
StepRepr_CompositeShapeAspect_swigregister = _StepRepr.StepRepr_CompositeShapeAspect_swigregister
StepRepr_CompositeShapeAspect_swigregister(StepRepr_CompositeShapeAspect)

class StepRepr_CompoundRepresentationItem(StepRepr_RepresentationItem):
    __swig_setmethods__ = {}
    for _s in [StepRepr_RepresentationItem]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_CompoundRepresentationItem, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_RepresentationItem]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_CompoundRepresentationItem, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_CompoundRepresentationItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aName: TCollection_HAsciiString
        item_element: StepRepr_HArray1OfRepresentationItem

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_CompoundRepresentationItem_Init(self, *args)


    def ItemElement(self, *args) -> "opencascade::handle< StepRepr_HArray1OfRepresentationItem >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepRepr_HArray1OfRepresentationItem>

        """
        return _StepRepr.StepRepr_CompoundRepresentationItem_ItemElement(self, *args)


    def ItemElementValue(self, *args) -> "opencascade::handle< StepRepr_RepresentationItem >":
        """
        No available documentation.

        Parameters
        ----------
        num: int

        Returns
        -------
        opencascade::handle<StepRepr_RepresentationItem>

        """
        return _StepRepr.StepRepr_CompoundRepresentationItem_ItemElementValue(self, *args)


    def NbItemElement(self, *args) -> "Standard_Integer":
        """
        No available documentation.

        Returns
        -------
        int

        """
        return _StepRepr.StepRepr_CompoundRepresentationItem_NbItemElement(self, *args)


    def SetItemElement(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        item_element: StepRepr_HArray1OfRepresentationItem

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_CompoundRepresentationItem_SetItemElement(self, *args)


    def SetItemElementValue(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        num: int
        anelement: StepRepr_RepresentationItem

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_CompoundRepresentationItem_SetItemElementValue(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_CompoundRepresentationItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_CompoundRepresentationItem
    __del__ = lambda self: None
StepRepr_CompoundRepresentationItem_swigregister = _StepRepr.StepRepr_CompoundRepresentationItem_swigregister
StepRepr_CompoundRepresentationItem_swigregister(StepRepr_CompoundRepresentationItem)

class StepRepr_ConstructiveGeometryRepresentation(StepRepr_Representation):
    __swig_setmethods__ = {}
    for _s in [StepRepr_Representation]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ConstructiveGeometryRepresentation, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_Representation]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ConstructiveGeometryRepresentation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Returns a constructivegeometryrepresentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ConstructiveGeometryRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ConstructiveGeometryRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ConstructiveGeometryRepresentation
    __del__ = lambda self: None
StepRepr_ConstructiveGeometryRepresentation_swigregister = _StepRepr.StepRepr_ConstructiveGeometryRepresentation_swigregister
StepRepr_ConstructiveGeometryRepresentation_swigregister(StepRepr_ConstructiveGeometryRepresentation)

class StepRepr_ConstructiveGeometryRepresentationRelationship(StepRepr_RepresentationRelationship):
    __swig_setmethods__ = {}
    for _s in [StepRepr_RepresentationRelationship]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ConstructiveGeometryRepresentationRelationship, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_RepresentationRelationship]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ConstructiveGeometryRepresentationRelationship, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ConstructiveGeometryRepresentationRelationship(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ConstructiveGeometryRepresentationRelationship_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ConstructiveGeometryRepresentationRelationship
    __del__ = lambda self: None
StepRepr_ConstructiveGeometryRepresentationRelationship_swigregister = _StepRepr.StepRepr_ConstructiveGeometryRepresentationRelationship_swigregister
StepRepr_ConstructiveGeometryRepresentationRelationship_swigregister(StepRepr_ConstructiveGeometryRepresentationRelationship)

class StepRepr_DefinitionalRepresentation(StepRepr_Representation):
    __swig_setmethods__ = {}
    for _s in [StepRepr_Representation]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_DefinitionalRepresentation, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_Representation]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_DefinitionalRepresentation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Returns a definitionalrepresentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_DefinitionalRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_DefinitionalRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_DefinitionalRepresentation
    __del__ = lambda self: None
StepRepr_DefinitionalRepresentation_swigregister = _StepRepr.StepRepr_DefinitionalRepresentation_swigregister
StepRepr_DefinitionalRepresentation_swigregister(StepRepr_DefinitionalRepresentation)

class StepRepr_DerivedShapeAspect(StepRepr_ShapeAspect):
    __swig_setmethods__ = {}
    for _s in [StepRepr_ShapeAspect]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_DerivedShapeAspect, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_ShapeAspect]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_DerivedShapeAspect, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_DerivedShapeAspect(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_DerivedShapeAspect_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_DerivedShapeAspect
    __del__ = lambda self: None
StepRepr_DerivedShapeAspect_swigregister = _StepRepr.StepRepr_DerivedShapeAspect_swigregister
StepRepr_DerivedShapeAspect_swigregister(StepRepr_DerivedShapeAspect)

class StepRepr_DescriptiveRepresentationItem(StepRepr_RepresentationItem):
    __swig_setmethods__ = {}
    for _s in [StepRepr_RepresentationItem]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_DescriptiveRepresentationItem, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_RepresentationItem]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_DescriptiveRepresentationItem, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Returns a descriptiverepresentationitem.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_DescriptiveRepresentationItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Description(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_DescriptiveRepresentationItem_Description(self, *args)


    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aName: TCollection_HAsciiString
        aDescription: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_DescriptiveRepresentationItem_Init(self, *args)


    def SetDescription(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aDescription: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_DescriptiveRepresentationItem_SetDescription(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_DescriptiveRepresentationItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_DescriptiveRepresentationItem
    __del__ = lambda self: None
StepRepr_DescriptiveRepresentationItem_swigregister = _StepRepr.StepRepr_DescriptiveRepresentationItem_swigregister
StepRepr_DescriptiveRepresentationItem_swigregister(StepRepr_DescriptiveRepresentationItem)

class StepRepr_ExternallyDefinedRepresentation(StepRepr_Representation):
    __swig_setmethods__ = {}
    for _s in [StepRepr_Representation]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ExternallyDefinedRepresentation, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_Representation]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ExternallyDefinedRepresentation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ExternallyDefinedRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ExternallyDefinedRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ExternallyDefinedRepresentation
    __del__ = lambda self: None
StepRepr_ExternallyDefinedRepresentation_swigregister = _StepRepr.StepRepr_ExternallyDefinedRepresentation_swigregister
StepRepr_ExternallyDefinedRepresentation_swigregister(StepRepr_ExternallyDefinedRepresentation)

class StepRepr_FeatureForDatumTargetRelationship(StepRepr_ShapeAspectRelationship):
    __swig_setmethods__ = {}
    for _s in [StepRepr_ShapeAspectRelationship]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_FeatureForDatumTargetRelationship, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_ShapeAspectRelationship]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_FeatureForDatumTargetRelationship, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_FeatureForDatumTargetRelationship(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_FeatureForDatumTargetRelationship_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_FeatureForDatumTargetRelationship
    __del__ = lambda self: None
StepRepr_FeatureForDatumTargetRelationship_swigregister = _StepRepr.StepRepr_FeatureForDatumTargetRelationship_swigregister
StepRepr_FeatureForDatumTargetRelationship_swigregister(StepRepr_FeatureForDatumTargetRelationship)

class StepRepr_GlobalUncertaintyAssignedContext(StepRepr_RepresentationContext):
    __swig_setmethods__ = {}
    for _s in [StepRepr_RepresentationContext]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_GlobalUncertaintyAssignedContext, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_RepresentationContext]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_GlobalUncertaintyAssignedContext, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Returns a globaluncertaintyassignedcontext.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_GlobalUncertaintyAssignedContext(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aContextIdentifier: TCollection_HAsciiString
        aContextType: TCollection_HAsciiString
        aUncertainty: StepBasic_HArray1OfUncertaintyMeasureWithUnit

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_GlobalUncertaintyAssignedContext_Init(self, *args)


    def NbUncertainty(self, *args) -> "Standard_Integer":
        """
        No available documentation.

        Returns
        -------
        int

        """
        return _StepRepr.StepRepr_GlobalUncertaintyAssignedContext_NbUncertainty(self, *args)


    def SetUncertainty(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aUncertainty: StepBasic_HArray1OfUncertaintyMeasureWithUnit

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_GlobalUncertaintyAssignedContext_SetUncertainty(self, *args)


    def Uncertainty(self, *args) -> "opencascade::handle< StepBasic_HArray1OfUncertaintyMeasureWithUnit >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepBasic_HArray1OfUncertaintyMeasureWithUnit>

        """
        return _StepRepr.StepRepr_GlobalUncertaintyAssignedContext_Uncertainty(self, *args)


    def UncertaintyValue(self, *args) -> "opencascade::handle< StepBasic_UncertaintyMeasureWithUnit >":
        """
        No available documentation.

        Parameters
        ----------
        num: int

        Returns
        -------
        opencascade::handle<StepBasic_UncertaintyMeasureWithUnit>

        """
        return _StepRepr.StepRepr_GlobalUncertaintyAssignedContext_UncertaintyValue(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_GlobalUncertaintyAssignedContext_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_GlobalUncertaintyAssignedContext
    __del__ = lambda self: None
StepRepr_GlobalUncertaintyAssignedContext_swigregister = _StepRepr.StepRepr_GlobalUncertaintyAssignedContext_swigregister
StepRepr_GlobalUncertaintyAssignedContext_swigregister(StepRepr_GlobalUncertaintyAssignedContext)

class StepRepr_GlobalUnitAssignedContext(StepRepr_RepresentationContext):
    __swig_setmethods__ = {}
    for _s in [StepRepr_RepresentationContext]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_GlobalUnitAssignedContext, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_RepresentationContext]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_GlobalUnitAssignedContext, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Returns a globalunitassignedcontext.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_GlobalUnitAssignedContext(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aContextIdentifier: TCollection_HAsciiString
        aContextType: TCollection_HAsciiString
        aUnits: StepBasic_HArray1OfNamedUnit

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_GlobalUnitAssignedContext_Init(self, *args)


    def NbUnits(self, *args) -> "Standard_Integer":
        """
        No available documentation.

        Returns
        -------
        int

        """
        return _StepRepr.StepRepr_GlobalUnitAssignedContext_NbUnits(self, *args)


    def SetUnits(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aUnits: StepBasic_HArray1OfNamedUnit

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_GlobalUnitAssignedContext_SetUnits(self, *args)


    def Units(self, *args) -> "opencascade::handle< StepBasic_HArray1OfNamedUnit >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepBasic_HArray1OfNamedUnit>

        """
        return _StepRepr.StepRepr_GlobalUnitAssignedContext_Units(self, *args)


    def UnitsValue(self, *args) -> "opencascade::handle< StepBasic_NamedUnit >":
        """
        No available documentation.

        Parameters
        ----------
        num: int

        Returns
        -------
        opencascade::handle<StepBasic_NamedUnit>

        """
        return _StepRepr.StepRepr_GlobalUnitAssignedContext_UnitsValue(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_GlobalUnitAssignedContext_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_GlobalUnitAssignedContext
    __del__ = lambda self: None
StepRepr_GlobalUnitAssignedContext_swigregister = _StepRepr.StepRepr_GlobalUnitAssignedContext_swigregister
StepRepr_GlobalUnitAssignedContext_swigregister(StepRepr_GlobalUnitAssignedContext)

class StepRepr_IntegerRepresentationItem(StepRepr_RepresentationItem):
    __swig_setmethods__ = {}
    for _s in [StepRepr_RepresentationItem]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_IntegerRepresentationItem, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_RepresentationItem]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_IntegerRepresentationItem, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Returns a integerrepresentationitem.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_IntegerRepresentationItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        theName: TCollection_HAsciiString
        theValue: int

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_IntegerRepresentationItem_Init(self, *args)


    def SetValue(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        theValue: int

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_IntegerRepresentationItem_SetValue(self, *args)


    def Value(self, *args) -> "Standard_Integer":
        """
        No available documentation.

        Returns
        -------
        int

        """
        return _StepRepr.StepRepr_IntegerRepresentationItem_Value(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_IntegerRepresentationItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_IntegerRepresentationItem
    __del__ = lambda self: None
StepRepr_IntegerRepresentationItem_swigregister = _StepRepr.StepRepr_IntegerRepresentationItem_swigregister
StepRepr_IntegerRepresentationItem_swigregister(StepRepr_IntegerRepresentationItem)

class StepRepr_MakeFromUsageOption(StepRepr_ProductDefinitionUsage):
    __swig_setmethods__ = {}
    for _s in [StepRepr_ProductDefinitionUsage]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_MakeFromUsageOption, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_ProductDefinitionUsage]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_MakeFromUsageOption, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_MakeFromUsageOption(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Init(self, *args) -> "void":
        """
        Initialize all fields (own and inherited).

        Parameters
        ----------
        aProductDefinitionRelationship_Id: TCollection_HAsciiString
        aProductDefinitionRelationship_Name: TCollection_HAsciiString
        hasProductDefinitionRelationship_Description: bool
        aProductDefinitionRelationship_Description: TCollection_HAsciiString
        aProductDefinitionRelationship_RelatingProductDefinition: StepBasic_ProductDefinition
        aProductDefinitionRelationship_RelatedProductDefinition: StepBasic_ProductDefinition
        aRanking: int
        aRankingRationale: TCollection_HAsciiString
        aQuantity: StepBasic_MeasureWithUnit

        Returns
        -------
        None

        Initialize all fields (own and inherited).

        Parameters
        ----------
        aProductDefinitionRelationship_Id: TCollection_HAsciiString
        aProductDefinitionRelationship_Name: TCollection_HAsciiString
        hasProductDefinitionRelationship_Description: bool
        aProductDefinitionRelationship_Description: TCollection_HAsciiString
        aProductDefinitionRelationship_RelatingProductDefinition: StepBasic_ProductDefinitionOrReference
        aProductDefinitionRelationship_RelatedProductDefinition: StepBasic_ProductDefinitionOrReference
        aRanking: int
        aRankingRationale: TCollection_HAsciiString
        aQuantity: StepBasic_MeasureWithUnit

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_MakeFromUsageOption_Init(self, *args)


    def Quantity(self, *args) -> "opencascade::handle< StepBasic_MeasureWithUnit >":
        """
        Returns field quantity.

        Returns
        -------
        opencascade::handle<StepBasic_MeasureWithUnit>

        """
        return _StepRepr.StepRepr_MakeFromUsageOption_Quantity(self, *args)


    def Ranking(self, *args) -> "Standard_Integer":
        """
        Returns field ranking.

        Returns
        -------
        int

        """
        return _StepRepr.StepRepr_MakeFromUsageOption_Ranking(self, *args)


    def RankingRationale(self, *args) -> "opencascade::handle< TCollection_HAsciiString >":
        """
        Returns field rankingrationale.

        Returns
        -------
        opencascade::handle<TCollection_HAsciiString>

        """
        return _StepRepr.StepRepr_MakeFromUsageOption_RankingRationale(self, *args)


    def SetQuantity(self, *args) -> "void":
        """
        Set field quantity.

        Parameters
        ----------
        Quantity: StepBasic_MeasureWithUnit

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_MakeFromUsageOption_SetQuantity(self, *args)


    def SetRanking(self, *args) -> "void":
        """
        Set field ranking.

        Parameters
        ----------
        Ranking: int

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_MakeFromUsageOption_SetRanking(self, *args)


    def SetRankingRationale(self, *args) -> "void":
        """
        Set field rankingrationale.

        Parameters
        ----------
        RankingRationale: TCollection_HAsciiString

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_MakeFromUsageOption_SetRankingRationale(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_MakeFromUsageOption_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_MakeFromUsageOption
    __del__ = lambda self: None
StepRepr_MakeFromUsageOption_swigregister = _StepRepr.StepRepr_MakeFromUsageOption_swigregister
StepRepr_MakeFromUsageOption_swigregister(StepRepr_MakeFromUsageOption)

class StepRepr_MappedItem(StepRepr_RepresentationItem):
    __swig_setmethods__ = {}
    for _s in [StepRepr_RepresentationItem]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_MappedItem, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_RepresentationItem]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_MappedItem, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Returns a mappeditem.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_MappedItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aName: TCollection_HAsciiString
        aMappingSource: StepRepr_RepresentationMap
        aMappingTarget: StepRepr_RepresentationItem

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_MappedItem_Init(self, *args)


    def MappingSource(self, *args) -> "opencascade::handle< StepRepr_RepresentationMap >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepRepr_RepresentationMap>

        """
        return _StepRepr.StepRepr_MappedItem_MappingSource(self, *args)


    def MappingTarget(self, *args) -> "opencascade::handle< StepRepr_RepresentationItem >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepRepr_RepresentationItem>

        """
        return _StepRepr.StepRepr_MappedItem_MappingTarget(self, *args)


    def SetMappingSource(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aMappingSource: StepRepr_RepresentationMap

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_MappedItem_SetMappingSource(self, *args)


    def SetMappingTarget(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aMappingTarget: StepRepr_RepresentationItem

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_MappedItem_SetMappingTarget(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_MappedItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_MappedItem
    __del__ = lambda self: None
StepRepr_MappedItem_swigregister = _StepRepr.StepRepr_MappedItem_swigregister
StepRepr_MappedItem_swigregister(StepRepr_MappedItem)

class StepRepr_MaterialProperty(StepRepr_PropertyDefinition):
    __swig_setmethods__ = {}
    for _s in [StepRepr_PropertyDefinition]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_MaterialProperty, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_PropertyDefinition]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_MaterialProperty, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_MaterialProperty(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_MaterialProperty_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_MaterialProperty
    __del__ = lambda self: None
StepRepr_MaterialProperty_swigregister = _StepRepr.StepRepr_MaterialProperty_swigregister
StepRepr_MaterialProperty_swigregister(StepRepr_MaterialProperty)

class StepRepr_MaterialPropertyRepresentation(StepRepr_PropertyDefinitionRepresentation):
    __swig_setmethods__ = {}
    for _s in [StepRepr_PropertyDefinitionRepresentation]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_MaterialPropertyRepresentation, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_PropertyDefinitionRepresentation]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_MaterialPropertyRepresentation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_MaterialPropertyRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def DependentEnvironment(self, *args) -> "opencascade::handle< StepRepr_DataEnvironment >":
        """
        Returns field dependentenvironment.

        Returns
        -------
        opencascade::handle<StepRepr_DataEnvironment>

        """
        return _StepRepr.StepRepr_MaterialPropertyRepresentation_DependentEnvironment(self, *args)


    def Init(self, *args) -> "void":
        """
        Initialize all fields (own and inherited).

        Parameters
        ----------
        aPropertyDefinitionRepresentation_Definition: StepRepr_RepresentedDefinition
        aPropertyDefinitionRepresentation_UsedRepresentation: StepRepr_Representation
        aDependentEnvironment: StepRepr_DataEnvironment

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_MaterialPropertyRepresentation_Init(self, *args)


    def SetDependentEnvironment(self, *args) -> "void":
        """
        Set field dependentenvironment.

        Parameters
        ----------
        DependentEnvironment: StepRepr_DataEnvironment

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_MaterialPropertyRepresentation_SetDependentEnvironment(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_MaterialPropertyRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_MaterialPropertyRepresentation
    __del__ = lambda self: None
StepRepr_MaterialPropertyRepresentation_swigregister = _StepRepr.StepRepr_MaterialPropertyRepresentation_swigregister
StepRepr_MaterialPropertyRepresentation_swigregister(StepRepr_MaterialPropertyRepresentation)

class StepRepr_MeasureRepresentationItem(StepRepr_RepresentationItem):
    __swig_setmethods__ = {}
    for _s in [StepRepr_RepresentationItem]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_MeasureRepresentationItem, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_RepresentationItem]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_MeasureRepresentationItem, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Creates empty object.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_MeasureRepresentationItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Init(self, *args) -> "void":
        """
        Init all fields.

        Parameters
        ----------
        aName: TCollection_HAsciiString
        aValueComponent: StepBasic_MeasureValueMember
        aUnitComponent: StepBasic_Unit

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_MeasureRepresentationItem_Init(self, *args)


    def Measure(self, *args) -> "opencascade::handle< StepBasic_MeasureWithUnit >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepBasic_MeasureWithUnit>

        """
        return _StepRepr.StepRepr_MeasureRepresentationItem_Measure(self, *args)


    def SetMeasure(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        Measure: StepBasic_MeasureWithUnit

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_MeasureRepresentationItem_SetMeasure(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_MeasureRepresentationItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_MeasureRepresentationItem
    __del__ = lambda self: None
StepRepr_MeasureRepresentationItem_swigregister = _StepRepr.StepRepr_MeasureRepresentationItem_swigregister
StepRepr_MeasureRepresentationItem_swigregister(StepRepr_MeasureRepresentationItem)

class StepRepr_ParametricRepresentationContext(StepRepr_RepresentationContext):
    __swig_setmethods__ = {}
    for _s in [StepRepr_RepresentationContext]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ParametricRepresentationContext, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_RepresentationContext]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ParametricRepresentationContext, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Returns a parametricrepresentationcontext.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ParametricRepresentationContext(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ParametricRepresentationContext_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ParametricRepresentationContext
    __del__ = lambda self: None
StepRepr_ParametricRepresentationContext_swigregister = _StepRepr.StepRepr_ParametricRepresentationContext_swigregister
StepRepr_ParametricRepresentationContext_swigregister(StepRepr_ParametricRepresentationContext)

class StepRepr_ProductDefinitionShape(StepRepr_PropertyDefinition):
    __swig_setmethods__ = {}
    for _s in [StepRepr_PropertyDefinition]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ProductDefinitionShape, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_PropertyDefinition]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ProductDefinitionShape, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ProductDefinitionShape(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ProductDefinitionShape_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ProductDefinitionShape
    __del__ = lambda self: None
StepRepr_ProductDefinitionShape_swigregister = _StepRepr.StepRepr_ProductDefinitionShape_swigregister
StepRepr_ProductDefinitionShape_swigregister(StepRepr_ProductDefinitionShape)

class StepRepr_ReprItemAndMeasureWithUnit(StepRepr_RepresentationItem):
    __swig_setmethods__ = {}
    for _s in [StepRepr_RepresentationItem]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ReprItemAndMeasureWithUnit, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_RepresentationItem]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ReprItemAndMeasureWithUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ReprItemAndMeasureWithUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def GetMeasureRepresentationItem(self, *args) -> "opencascade::handle< StepRepr_MeasureRepresentationItem >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepRepr_MeasureRepresentationItem>

        """
        return _StepRepr.StepRepr_ReprItemAndMeasureWithUnit_GetMeasureRepresentationItem(self, *args)


    def GetMeasureWithUnit(self, *args) -> "opencascade::handle< StepBasic_MeasureWithUnit >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepBasic_MeasureWithUnit>

        """
        return _StepRepr.StepRepr_ReprItemAndMeasureWithUnit_GetMeasureWithUnit(self, *args)


    def GetRepresentationItem(self, *args) -> "opencascade::handle< StepRepr_RepresentationItem >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepRepr_RepresentationItem>

        """
        return _StepRepr.StepRepr_ReprItemAndMeasureWithUnit_GetRepresentationItem(self, *args)


    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aMWU: StepBasic_MeasureWithUnit
        aRI: StepRepr_RepresentationItem

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ReprItemAndMeasureWithUnit_Init(self, *args)


    def SetMeasureWithUnit(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aMWU: StepBasic_MeasureWithUnit

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ReprItemAndMeasureWithUnit_SetMeasureWithUnit(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ReprItemAndMeasureWithUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ReprItemAndMeasureWithUnit
    __del__ = lambda self: None
StepRepr_ReprItemAndMeasureWithUnit_swigregister = _StepRepr.StepRepr_ReprItemAndMeasureWithUnit_swigregister
StepRepr_ReprItemAndMeasureWithUnit_swigregister(StepRepr_ReprItemAndMeasureWithUnit)

class StepRepr_ShapeAspectDerivingRelationship(StepRepr_ShapeAspectRelationship):
    __swig_setmethods__ = {}
    for _s in [StepRepr_ShapeAspectRelationship]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ShapeAspectDerivingRelationship, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_ShapeAspectRelationship]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ShapeAspectDerivingRelationship, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ShapeAspectDerivingRelationship(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ShapeAspectDerivingRelationship_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ShapeAspectDerivingRelationship
    __del__ = lambda self: None
StepRepr_ShapeAspectDerivingRelationship_swigregister = _StepRepr.StepRepr_ShapeAspectDerivingRelationship_swigregister
StepRepr_ShapeAspectDerivingRelationship_swigregister(StepRepr_ShapeAspectDerivingRelationship)

class StepRepr_ShapeAspectTransition(StepRepr_ShapeAspectRelationship):
    __swig_setmethods__ = {}
    for _s in [StepRepr_ShapeAspectRelationship]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ShapeAspectTransition, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_ShapeAspectRelationship]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ShapeAspectTransition, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ShapeAspectTransition(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ShapeAspectTransition_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ShapeAspectTransition
    __del__ = lambda self: None
StepRepr_ShapeAspectTransition_swigregister = _StepRepr.StepRepr_ShapeAspectTransition_swigregister
StepRepr_ShapeAspectTransition_swigregister(StepRepr_ShapeAspectTransition)

class StepRepr_ShapeRepresentationRelationship(StepRepr_RepresentationRelationship):
    __swig_setmethods__ = {}
    for _s in [StepRepr_RepresentationRelationship]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ShapeRepresentationRelationship, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_RepresentationRelationship]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ShapeRepresentationRelationship, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ShapeRepresentationRelationship(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ShapeRepresentationRelationship_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ShapeRepresentationRelationship
    __del__ = lambda self: None
StepRepr_ShapeRepresentationRelationship_swigregister = _StepRepr.StepRepr_ShapeRepresentationRelationship_swigregister
StepRepr_ShapeRepresentationRelationship_swigregister(StepRepr_ShapeRepresentationRelationship)

class StepRepr_StructuralResponseProperty(StepRepr_PropertyDefinition):
    __swig_setmethods__ = {}
    for _s in [StepRepr_PropertyDefinition]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_StructuralResponseProperty, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_PropertyDefinition]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_StructuralResponseProperty, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_StructuralResponseProperty(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_StructuralResponseProperty_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_StructuralResponseProperty
    __del__ = lambda self: None
StepRepr_StructuralResponseProperty_swigregister = _StepRepr.StepRepr_StructuralResponseProperty_swigregister
StepRepr_StructuralResponseProperty_swigregister(StepRepr_StructuralResponseProperty)

class StepRepr_StructuralResponsePropertyDefinitionRepresentation(StepRepr_PropertyDefinitionRepresentation):
    __swig_setmethods__ = {}
    for _s in [StepRepr_PropertyDefinitionRepresentation]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_StructuralResponsePropertyDefinitionRepresentation, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_PropertyDefinitionRepresentation]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_StructuralResponsePropertyDefinitionRepresentation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_StructuralResponsePropertyDefinitionRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_StructuralResponsePropertyDefinitionRepresentation
    __del__ = lambda self: None
StepRepr_StructuralResponsePropertyDefinitionRepresentation_swigregister = _StepRepr.StepRepr_StructuralResponsePropertyDefinitionRepresentation_swigregister
StepRepr_StructuralResponsePropertyDefinitionRepresentation_swigregister(StepRepr_StructuralResponsePropertyDefinitionRepresentation)

class StepRepr_ValueRepresentationItem(StepRepr_RepresentationItem):
    __swig_setmethods__ = {}
    for _s in [StepRepr_RepresentationItem]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ValueRepresentationItem, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_RepresentationItem]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ValueRepresentationItem, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Returns a valuerepresentationitem.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ValueRepresentationItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        theName: TCollection_HAsciiString
        theValueComponentMember: StepBasic_MeasureValueMember

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ValueRepresentationItem_Init(self, *args)


    def SetValueComponentMember(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        theValueComponentMember: StepBasic_MeasureValueMember

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ValueRepresentationItem_SetValueComponentMember(self, *args)


    def ValueComponentMember(self, *args) -> "opencascade::handle< StepBasic_MeasureValueMember >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepBasic_MeasureValueMember>

        """
        return _StepRepr.StepRepr_ValueRepresentationItem_ValueComponentMember(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ValueRepresentationItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ValueRepresentationItem
    __del__ = lambda self: None
StepRepr_ValueRepresentationItem_swigregister = _StepRepr.StepRepr_ValueRepresentationItem_swigregister
StepRepr_ValueRepresentationItem_swigregister(StepRepr_ValueRepresentationItem)

class StepRepr_Apex(StepRepr_DerivedShapeAspect):
    __swig_setmethods__ = {}
    for _s in [StepRepr_DerivedShapeAspect]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_Apex, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_DerivedShapeAspect]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_Apex, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_Apex(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_Apex_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_Apex
    __del__ = lambda self: None
StepRepr_Apex_swigregister = _StepRepr.StepRepr_Apex_swigregister
StepRepr_Apex_swigregister(StepRepr_Apex)

class StepRepr_CentreOfSymmetry(StepRepr_DerivedShapeAspect):
    __swig_setmethods__ = {}
    for _s in [StepRepr_DerivedShapeAspect]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_CentreOfSymmetry, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_DerivedShapeAspect]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_CentreOfSymmetry, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_CentreOfSymmetry(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_CentreOfSymmetry_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_CentreOfSymmetry
    __del__ = lambda self: None
StepRepr_CentreOfSymmetry_swigregister = _StepRepr.StepRepr_CentreOfSymmetry_swigregister
StepRepr_CentreOfSymmetry_swigregister(StepRepr_CentreOfSymmetry)

class StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp(StepRepr_CompShAspAndDatumFeatAndShAsp):
    __swig_setmethods__ = {}
    for _s in [StepRepr_CompShAspAndDatumFeatAndShAsp]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_CompShAspAndDatumFeatAndShAsp]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp
    __del__ = lambda self: None
StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp_swigregister = _StepRepr.StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp_swigregister
StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp_swigregister(StepRepr_CompGroupShAspAndCompShAspAndDatumFeatAndShAsp)

class StepRepr_CompositeGroupShapeAspect(StepRepr_CompositeShapeAspect):
    __swig_setmethods__ = {}
    for _s in [StepRepr_CompositeShapeAspect]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_CompositeGroupShapeAspect, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_CompositeShapeAspect]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_CompositeGroupShapeAspect, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_CompositeGroupShapeAspect(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_CompositeGroupShapeAspect_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_CompositeGroupShapeAspect
    __del__ = lambda self: None
StepRepr_CompositeGroupShapeAspect_swigregister = _StepRepr.StepRepr_CompositeGroupShapeAspect_swigregister
StepRepr_CompositeGroupShapeAspect_swigregister(StepRepr_CompositeGroupShapeAspect)

class StepRepr_ContinuosShapeAspect(StepRepr_CompositeShapeAspect):
    __swig_setmethods__ = {}
    for _s in [StepRepr_CompositeShapeAspect]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ContinuosShapeAspect, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_CompositeShapeAspect]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ContinuosShapeAspect, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ContinuosShapeAspect(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ContinuosShapeAspect_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ContinuosShapeAspect
    __del__ = lambda self: None
StepRepr_ContinuosShapeAspect_swigregister = _StepRepr.StepRepr_ContinuosShapeAspect_swigregister
StepRepr_ContinuosShapeAspect_swigregister(StepRepr_ContinuosShapeAspect)

class StepRepr_Extension(StepRepr_DerivedShapeAspect):
    __swig_setmethods__ = {}
    for _s in [StepRepr_DerivedShapeAspect]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_Extension, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_DerivedShapeAspect]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_Extension, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_Extension(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_Extension_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_Extension
    __del__ = lambda self: None
StepRepr_Extension_swigregister = _StepRepr.StepRepr_Extension_swigregister
StepRepr_Extension_swigregister(StepRepr_Extension)

class StepRepr_GeometricAlignment(StepRepr_DerivedShapeAspect):
    __swig_setmethods__ = {}
    for _s in [StepRepr_DerivedShapeAspect]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_GeometricAlignment, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_DerivedShapeAspect]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_GeometricAlignment, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_GeometricAlignment(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_GeometricAlignment_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_GeometricAlignment
    __del__ = lambda self: None
StepRepr_GeometricAlignment_swigregister = _StepRepr.StepRepr_GeometricAlignment_swigregister
StepRepr_GeometricAlignment_swigregister(StepRepr_GeometricAlignment)

class StepRepr_NextAssemblyUsageOccurrence(StepRepr_AssemblyComponentUsage):
    __swig_setmethods__ = {}
    for _s in [StepRepr_AssemblyComponentUsage]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_NextAssemblyUsageOccurrence, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_AssemblyComponentUsage]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_NextAssemblyUsageOccurrence, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_NextAssemblyUsageOccurrence(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_NextAssemblyUsageOccurrence_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_NextAssemblyUsageOccurrence
    __del__ = lambda self: None
StepRepr_NextAssemblyUsageOccurrence_swigregister = _StepRepr.StepRepr_NextAssemblyUsageOccurrence_swigregister
StepRepr_NextAssemblyUsageOccurrence_swigregister(StepRepr_NextAssemblyUsageOccurrence)

class StepRepr_ParallelOffset(StepRepr_DerivedShapeAspect):
    __swig_setmethods__ = {}
    for _s in [StepRepr_DerivedShapeAspect]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ParallelOffset, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_DerivedShapeAspect]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ParallelOffset, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ParallelOffset(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Init(self, *args) -> "void":
        """
        Initialize all fields (own and inherited).

        Parameters
        ----------
        theName: TCollection_HAsciiString
        theDescription: TCollection_HAsciiString
        theOfShape: StepRepr_ProductDefinitionShape
        theProductDefinitional: StepData_Logical
        theOffset: StepBasic_MeasureWithUnit

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ParallelOffset_Init(self, *args)


    def Offset(self, *args) -> "opencascade::handle< StepBasic_MeasureWithUnit >":
        """
        Returns field offset .

        Returns
        -------
        opencascade::handle<StepBasic_MeasureWithUnit>

        """
        return _StepRepr.StepRepr_ParallelOffset_Offset(self, *args)


    def SetOffset(self, *args) -> "void":
        """
        Set field offset .

        Parameters
        ----------
        theOffset: StepBasic_MeasureWithUnit

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ParallelOffset_SetOffset(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ParallelOffset_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ParallelOffset
    __del__ = lambda self: None
StepRepr_ParallelOffset_swigregister = _StepRepr.StepRepr_ParallelOffset_swigregister
StepRepr_ParallelOffset_swigregister(StepRepr_ParallelOffset)

class StepRepr_PerpendicularTo(StepRepr_DerivedShapeAspect):
    __swig_setmethods__ = {}
    for _s in [StepRepr_DerivedShapeAspect]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_PerpendicularTo, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_DerivedShapeAspect]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_PerpendicularTo, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_PerpendicularTo(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_PerpendicularTo_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_PerpendicularTo
    __del__ = lambda self: None
StepRepr_PerpendicularTo_swigregister = _StepRepr.StepRepr_PerpendicularTo_swigregister
StepRepr_PerpendicularTo_swigregister(StepRepr_PerpendicularTo)

class StepRepr_PromissoryUsageOccurrence(StepRepr_AssemblyComponentUsage):
    __swig_setmethods__ = {}
    for _s in [StepRepr_AssemblyComponentUsage]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_PromissoryUsageOccurrence, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_AssemblyComponentUsage]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_PromissoryUsageOccurrence, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_PromissoryUsageOccurrence(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_PromissoryUsageOccurrence_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_PromissoryUsageOccurrence
    __del__ = lambda self: None
StepRepr_PromissoryUsageOccurrence_swigregister = _StepRepr.StepRepr_PromissoryUsageOccurrence_swigregister
StepRepr_PromissoryUsageOccurrence_swigregister(StepRepr_PromissoryUsageOccurrence)

class StepRepr_QuantifiedAssemblyComponentUsage(StepRepr_AssemblyComponentUsage):
    __swig_setmethods__ = {}
    for _s in [StepRepr_AssemblyComponentUsage]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_QuantifiedAssemblyComponentUsage, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_AssemblyComponentUsage]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_QuantifiedAssemblyComponentUsage, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_QuantifiedAssemblyComponentUsage(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Init(self, *args) -> "void":
        """
        Initialize all fields (own and inherited).

        Parameters
        ----------
        aProductDefinitionRelationship_Id: TCollection_HAsciiString
        aProductDefinitionRelationship_Name: TCollection_HAsciiString
        hasProductDefinitionRelationship_Description: bool
        aProductDefinitionRelationship_Description: TCollection_HAsciiString
        aProductDefinitionRelationship_RelatingProductDefinition: StepBasic_ProductDefinition
        aProductDefinitionRelationship_RelatedProductDefinition: StepBasic_ProductDefinition
        hasAssemblyComponentUsage_ReferenceDesignator: bool
        aAssemblyComponentUsage_ReferenceDesignator: TCollection_HAsciiString
        aQuantity: StepBasic_MeasureWithUnit

        Returns
        -------
        None

        Initialize all fields (own and inherited).

        Parameters
        ----------
        aProductDefinitionRelationship_Id: TCollection_HAsciiString
        aProductDefinitionRelationship_Name: TCollection_HAsciiString
        hasProductDefinitionRelationship_Description: bool
        aProductDefinitionRelationship_Description: TCollection_HAsciiString
        aProductDefinitionRelationship_RelatingProductDefinition: StepBasic_ProductDefinitionOrReference
        aProductDefinitionRelationship_RelatedProductDefinition: StepBasic_ProductDefinitionOrReference
        hasAssemblyComponentUsage_ReferenceDesignator: bool
        aAssemblyComponentUsage_ReferenceDesignator: TCollection_HAsciiString
        aQuantity: StepBasic_MeasureWithUnit

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_QuantifiedAssemblyComponentUsage_Init(self, *args)


    def Quantity(self, *args) -> "opencascade::handle< StepBasic_MeasureWithUnit >":
        """
        Returns field quantity.

        Returns
        -------
        opencascade::handle<StepBasic_MeasureWithUnit>

        """
        return _StepRepr.StepRepr_QuantifiedAssemblyComponentUsage_Quantity(self, *args)


    def SetQuantity(self, *args) -> "void":
        """
        Set field quantity.

        Parameters
        ----------
        Quantity: StepBasic_MeasureWithUnit

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_QuantifiedAssemblyComponentUsage_SetQuantity(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_QuantifiedAssemblyComponentUsage_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_QuantifiedAssemblyComponentUsage
    __del__ = lambda self: None
StepRepr_QuantifiedAssemblyComponentUsage_swigregister = _StepRepr.StepRepr_QuantifiedAssemblyComponentUsage_swigregister
StepRepr_QuantifiedAssemblyComponentUsage_swigregister(StepRepr_QuantifiedAssemblyComponentUsage)

class StepRepr_ReprItemAndLengthMeasureWithUnit(StepRepr_ReprItemAndMeasureWithUnit):
    __swig_setmethods__ = {}
    for _s in [StepRepr_ReprItemAndMeasureWithUnit]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ReprItemAndLengthMeasureWithUnit, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_ReprItemAndMeasureWithUnit]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ReprItemAndLengthMeasureWithUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ReprItemAndLengthMeasureWithUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def GetLengthMeasureWithUnit(self, *args) -> "opencascade::handle< StepBasic_LengthMeasureWithUnit >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepBasic_LengthMeasureWithUnit>

        """
        return _StepRepr.StepRepr_ReprItemAndLengthMeasureWithUnit_GetLengthMeasureWithUnit(self, *args)


    def SetLengthMeasureWithUnit(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aLMWU: StepBasic_LengthMeasureWithUnit

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ReprItemAndLengthMeasureWithUnit_SetLengthMeasureWithUnit(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ReprItemAndLengthMeasureWithUnit
    __del__ = lambda self: None
StepRepr_ReprItemAndLengthMeasureWithUnit_swigregister = _StepRepr.StepRepr_ReprItemAndLengthMeasureWithUnit_swigregister
StepRepr_ReprItemAndLengthMeasureWithUnit_swigregister(StepRepr_ReprItemAndLengthMeasureWithUnit)

class StepRepr_ReprItemAndPlaneAngleMeasureWithUnit(StepRepr_ReprItemAndMeasureWithUnit):
    __swig_setmethods__ = {}
    for _s in [StepRepr_ReprItemAndMeasureWithUnit]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ReprItemAndPlaneAngleMeasureWithUnit, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_ReprItemAndMeasureWithUnit]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ReprItemAndPlaneAngleMeasureWithUnit, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ReprItemAndPlaneAngleMeasureWithUnit(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def GetPlaneAngleMeasureWithUnit(self, *args) -> "opencascade::handle< StepBasic_PlaneAngleMeasureWithUnit >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepBasic_PlaneAngleMeasureWithUnit>

        """
        return _StepRepr.StepRepr_ReprItemAndPlaneAngleMeasureWithUnit_GetPlaneAngleMeasureWithUnit(self, *args)


    def SetPlaneAngleMeasureWithUnit(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aLMWU: StepBasic_PlaneAngleMeasureWithUnit

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ReprItemAndPlaneAngleMeasureWithUnit_SetPlaneAngleMeasureWithUnit(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnit_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ReprItemAndPlaneAngleMeasureWithUnit
    __del__ = lambda self: None
StepRepr_ReprItemAndPlaneAngleMeasureWithUnit_swigregister = _StepRepr.StepRepr_ReprItemAndPlaneAngleMeasureWithUnit_swigregister
StepRepr_ReprItemAndPlaneAngleMeasureWithUnit_swigregister(StepRepr_ReprItemAndPlaneAngleMeasureWithUnit)

class StepRepr_RepresentationRelationshipWithTransformation(StepRepr_ShapeRepresentationRelationship):
    __swig_setmethods__ = {}
    for _s in [StepRepr_ShapeRepresentationRelationship]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_RepresentationRelationshipWithTransformation, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_ShapeRepresentationRelationship]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_RepresentationRelationshipWithTransformation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_RepresentationRelationshipWithTransformation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Init(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aName: TCollection_HAsciiString
        aDescription: TCollection_HAsciiString
        aRep1: StepRepr_Representation
        aRep2: StepRepr_Representation
        aTransf: StepRepr_Transformation

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_RepresentationRelationshipWithTransformation_Init(self, *args)


    def SetTransformationOperator(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aTrans: StepRepr_Transformation

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_RepresentationRelationshipWithTransformation_SetTransformationOperator(self, *args)


    def TransformationOperator(self, *args) -> "StepRepr_Transformation":
        """
        No available documentation.

        Returns
        -------
        StepRepr_Transformation

        """
        return _StepRepr.StepRepr_RepresentationRelationshipWithTransformation_TransformationOperator(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_RepresentationRelationshipWithTransformation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_RepresentationRelationshipWithTransformation
    __del__ = lambda self: None
StepRepr_RepresentationRelationshipWithTransformation_swigregister = _StepRepr.StepRepr_RepresentationRelationshipWithTransformation_swigregister
StepRepr_RepresentationRelationshipWithTransformation_swigregister(StepRepr_RepresentationRelationshipWithTransformation)

class StepRepr_SpecifiedHigherUsageOccurrence(StepRepr_AssemblyComponentUsage):
    __swig_setmethods__ = {}
    for _s in [StepRepr_AssemblyComponentUsage]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_SpecifiedHigherUsageOccurrence, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_AssemblyComponentUsage]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_SpecifiedHigherUsageOccurrence, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        Empty constructor.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_SpecifiedHigherUsageOccurrence(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Init(self, *args) -> "void":
        """
        Initialize all fields (own and inherited).

        Parameters
        ----------
        aProductDefinitionRelationship_Id: TCollection_HAsciiString
        aProductDefinitionRelationship_Name: TCollection_HAsciiString
        hasProductDefinitionRelationship_Description: bool
        aProductDefinitionRelationship_Description: TCollection_HAsciiString
        aProductDefinitionRelationship_RelatingProductDefinition: StepBasic_ProductDefinition
        aProductDefinitionRelationship_RelatedProductDefinition: StepBasic_ProductDefinition
        hasAssemblyComponentUsage_ReferenceDesignator: bool
        aAssemblyComponentUsage_ReferenceDesignator: TCollection_HAsciiString
        aUpperUsage: StepRepr_AssemblyComponentUsage
        aNextUsage: StepRepr_NextAssemblyUsageOccurrence

        Returns
        -------
        None

        Initialize all fields (own and inherited).

        Parameters
        ----------
        aProductDefinitionRelationship_Id: TCollection_HAsciiString
        aProductDefinitionRelationship_Name: TCollection_HAsciiString
        hasProductDefinitionRelationship_Description: bool
        aProductDefinitionRelationship_Description: TCollection_HAsciiString
        aProductDefinitionRelationship_RelatingProductDefinition: StepBasic_ProductDefinitionOrReference
        aProductDefinitionRelationship_RelatedProductDefinition: StepBasic_ProductDefinitionOrReference
        hasAssemblyComponentUsage_ReferenceDesignator: bool
        aAssemblyComponentUsage_ReferenceDesignator: TCollection_HAsciiString
        aUpperUsage: StepRepr_AssemblyComponentUsage
        aNextUsage: StepRepr_NextAssemblyUsageOccurrence

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_SpecifiedHigherUsageOccurrence_Init(self, *args)


    def NextUsage(self, *args) -> "opencascade::handle< StepRepr_NextAssemblyUsageOccurrence >":
        """
        Returns field nextusage.

        Returns
        -------
        opencascade::handle<StepRepr_NextAssemblyUsageOccurrence>

        """
        return _StepRepr.StepRepr_SpecifiedHigherUsageOccurrence_NextUsage(self, *args)


    def SetNextUsage(self, *args) -> "void":
        """
        Set field nextusage.

        Parameters
        ----------
        NextUsage: StepRepr_NextAssemblyUsageOccurrence

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_SpecifiedHigherUsageOccurrence_SetNextUsage(self, *args)


    def SetUpperUsage(self, *args) -> "void":
        """
        Set field upperusage.

        Parameters
        ----------
        UpperUsage: StepRepr_AssemblyComponentUsage

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_SpecifiedHigherUsageOccurrence_SetUpperUsage(self, *args)


    def UpperUsage(self, *args) -> "opencascade::handle< StepRepr_AssemblyComponentUsage >":
        """
        Returns field upperusage.

        Returns
        -------
        opencascade::handle<StepRepr_AssemblyComponentUsage>

        """
        return _StepRepr.StepRepr_SpecifiedHigherUsageOccurrence_UpperUsage(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_SpecifiedHigherUsageOccurrence_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_SpecifiedHigherUsageOccurrence
    __del__ = lambda self: None
StepRepr_SpecifiedHigherUsageOccurrence_swigregister = _StepRepr.StepRepr_SpecifiedHigherUsageOccurrence_swigregister
StepRepr_SpecifiedHigherUsageOccurrence_swigregister(StepRepr_SpecifiedHigherUsageOccurrence)

class StepRepr_Tangent(StepRepr_DerivedShapeAspect):
    __swig_setmethods__ = {}
    for _s in [StepRepr_DerivedShapeAspect]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_Tangent, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_DerivedShapeAspect]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_Tangent, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_Tangent(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_Tangent_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_Tangent
    __del__ = lambda self: None
StepRepr_Tangent_swigregister = _StepRepr.StepRepr_Tangent_swigregister
StepRepr_Tangent_swigregister(StepRepr_Tangent)

class StepRepr_ValueRange(StepRepr_CompoundRepresentationItem):
    __swig_setmethods__ = {}
    for _s in [StepRepr_CompoundRepresentationItem]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ValueRange, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_CompoundRepresentationItem]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ValueRange, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ValueRange(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ValueRange_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ValueRange
    __del__ = lambda self: None
StepRepr_ValueRange_swigregister = _StepRepr.StepRepr_ValueRange_swigregister
StepRepr_ValueRange_swigregister(StepRepr_ValueRange)

class StepRepr_AllAroundShapeAspect(StepRepr_ContinuosShapeAspect):
    __swig_setmethods__ = {}
    for _s in [StepRepr_ContinuosShapeAspect]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_AllAroundShapeAspect, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_ContinuosShapeAspect]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_AllAroundShapeAspect, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_AllAroundShapeAspect(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_AllAroundShapeAspect_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_AllAroundShapeAspect
    __del__ = lambda self: None
StepRepr_AllAroundShapeAspect_swigregister = _StepRepr.StepRepr_AllAroundShapeAspect_swigregister
StepRepr_AllAroundShapeAspect_swigregister(StepRepr_AllAroundShapeAspect)

class StepRepr_BetweenShapeAspect(StepRepr_ContinuosShapeAspect):
    __swig_setmethods__ = {}
    for _s in [StepRepr_ContinuosShapeAspect]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_BetweenShapeAspect, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_ContinuosShapeAspect]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_BetweenShapeAspect, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_BetweenShapeAspect(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_BetweenShapeAspect_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_BetweenShapeAspect
    __del__ = lambda self: None
StepRepr_BetweenShapeAspect_swigregister = _StepRepr.StepRepr_BetweenShapeAspect_swigregister
StepRepr_BetweenShapeAspect_swigregister(StepRepr_BetweenShapeAspect)

class StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def GetLengthMeasureWithUnit(self, *args) -> "opencascade::handle< StepBasic_LengthMeasureWithUnit >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepBasic_LengthMeasureWithUnit>

        """
        return _StepRepr.StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI_GetLengthMeasureWithUnit(self, *args)


    def SetLengthMeasureWithUnit(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aLMWU: StepBasic_LengthMeasureWithUnit

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI_SetLengthMeasureWithUnit(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI
    __del__ = lambda self: None
StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI_swigregister = _StepRepr.StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI_swigregister
StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI_swigregister(StepRepr_ReprItemAndLengthMeasureWithUnitAndQRI)

class StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def GetPlaneAngleMeasureWithUnit(self, *args) -> "opencascade::handle< StepBasic_PlaneAngleMeasureWithUnit >":
        """
        No available documentation.

        Returns
        -------
        opencascade::handle<StepBasic_PlaneAngleMeasureWithUnit>

        """
        return _StepRepr.StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI_GetPlaneAngleMeasureWithUnit(self, *args)


    def SetPlaneAngleMeasureWithUnit(self, *args) -> "void":
        """
        No available documentation.

        Parameters
        ----------
        aLMWU: StepBasic_PlaneAngleMeasureWithUnit

        Returns
        -------
        None

        """
        return _StepRepr.StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI_SetPlaneAngleMeasureWithUnit(self, *args)



    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI
    __del__ = lambda self: None
StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI_swigregister = _StepRepr.StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI_swigregister
StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI_swigregister(StepRepr_ReprItemAndPlaneAngleMeasureWithUnitAndQRI)

class StepRepr_ShapeRepresentationRelationshipWithTransformation(StepRepr_RepresentationRelationshipWithTransformation):
    __swig_setmethods__ = {}
    for _s in [StepRepr_RepresentationRelationshipWithTransformation]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_ShapeRepresentationRelationshipWithTransformation, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_RepresentationRelationshipWithTransformation]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_ShapeRepresentationRelationshipWithTransformation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        No available documentation.

        Returns
        -------
        None

        """
        this = _StepRepr.new_StepRepr_ShapeRepresentationRelationshipWithTransformation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepRepr.delete_StepRepr_ShapeRepresentationRelationshipWithTransformation
    __del__ = lambda self: None
StepRepr_ShapeRepresentationRelationshipWithTransformation_swigregister = _StepRepr.StepRepr_ShapeRepresentationRelationshipWithTransformation_swigregister
StepRepr_ShapeRepresentationRelationshipWithTransformation_swigregister(StepRepr_ShapeRepresentationRelationshipWithTransformation)


@classnotwrapped
class StepRepr_ReprItemAndMeasureWithUnitAndQRI:
	pass


class StepRepr_HArray1OfMaterialPropertyRepresentation(StepRepr_Array1OfMaterialPropertyRepresentation, OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [StepRepr_Array1OfMaterialPropertyRepresentation, OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_HArray1OfMaterialPropertyRepresentation, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_Array1OfMaterialPropertyRepresentation, OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_HArray1OfMaterialPropertyRepresentation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _StepRepr.new_StepRepr_HArray1OfMaterialPropertyRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Array1(self) -> "StepRepr_Array1OfMaterialPropertyRepresentation const &":
        return _StepRepr.StepRepr_HArray1OfMaterialPropertyRepresentation_Array1(self)

    def ChangeArray1(self) -> "StepRepr_Array1OfMaterialPropertyRepresentation &":
        return _StepRepr.StepRepr_HArray1OfMaterialPropertyRepresentation_ChangeArray1(self)


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_DownCast(t)

    __swig_destroy__ = _StepRepr.delete_StepRepr_HArray1OfMaterialPropertyRepresentation
    __del__ = lambda self: None
StepRepr_HArray1OfMaterialPropertyRepresentation_swigregister = _StepRepr.StepRepr_HArray1OfMaterialPropertyRepresentation_swigregister
StepRepr_HArray1OfMaterialPropertyRepresentation_swigregister(StepRepr_HArray1OfMaterialPropertyRepresentation)

class StepRepr_HArray1OfRepresentationItem(StepRepr_Array1OfRepresentationItem, OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [StepRepr_Array1OfRepresentationItem, OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_HArray1OfRepresentationItem, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_Array1OfRepresentationItem, OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_HArray1OfRepresentationItem, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _StepRepr.new_StepRepr_HArray1OfRepresentationItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Array1(self) -> "StepRepr_Array1OfRepresentationItem const &":
        return _StepRepr.StepRepr_HArray1OfRepresentationItem_Array1(self)

    def ChangeArray1(self) -> "StepRepr_Array1OfRepresentationItem &":
        return _StepRepr.StepRepr_HArray1OfRepresentationItem_ChangeArray1(self)


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_HArray1OfRepresentationItem_DownCast(t)

    __swig_destroy__ = _StepRepr.delete_StepRepr_HArray1OfRepresentationItem
    __del__ = lambda self: None
StepRepr_HArray1OfRepresentationItem_swigregister = _StepRepr.StepRepr_HArray1OfRepresentationItem_swigregister
StepRepr_HArray1OfRepresentationItem_swigregister(StepRepr_HArray1OfRepresentationItem)

class StepRepr_HArray1OfPropertyDefinitionRepresentation(StepRepr_Array1OfPropertyDefinitionRepresentation, OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [StepRepr_Array1OfPropertyDefinitionRepresentation, OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_HArray1OfPropertyDefinitionRepresentation, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_Array1OfPropertyDefinitionRepresentation, OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_HArray1OfPropertyDefinitionRepresentation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _StepRepr.new_StepRepr_HArray1OfPropertyDefinitionRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Array1(self) -> "StepRepr_Array1OfPropertyDefinitionRepresentation const &":
        return _StepRepr.StepRepr_HArray1OfPropertyDefinitionRepresentation_Array1(self)

    def ChangeArray1(self) -> "StepRepr_Array1OfPropertyDefinitionRepresentation &":
        return _StepRepr.StepRepr_HArray1OfPropertyDefinitionRepresentation_ChangeArray1(self)


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_DownCast(t)

    __swig_destroy__ = _StepRepr.delete_StepRepr_HArray1OfPropertyDefinitionRepresentation
    __del__ = lambda self: None
StepRepr_HArray1OfPropertyDefinitionRepresentation_swigregister = _StepRepr.StepRepr_HArray1OfPropertyDefinitionRepresentation_swigregister
StepRepr_HArray1OfPropertyDefinitionRepresentation_swigregister(StepRepr_HArray1OfPropertyDefinitionRepresentation)

class StepRepr_HArray1OfShapeAspect(StepRepr_Array1OfShapeAspect, OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [StepRepr_Array1OfShapeAspect, OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_HArray1OfShapeAspect, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_Array1OfShapeAspect, OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_HArray1OfShapeAspect, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _StepRepr.new_StepRepr_HArray1OfShapeAspect(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Array1(self) -> "StepRepr_Array1OfShapeAspect const &":
        return _StepRepr.StepRepr_HArray1OfShapeAspect_Array1(self)

    def ChangeArray1(self) -> "StepRepr_Array1OfShapeAspect &":
        return _StepRepr.StepRepr_HArray1OfShapeAspect_ChangeArray1(self)


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_HArray1OfShapeAspect_DownCast(t)

    __swig_destroy__ = _StepRepr.delete_StepRepr_HArray1OfShapeAspect
    __del__ = lambda self: None
StepRepr_HArray1OfShapeAspect_swigregister = _StepRepr.StepRepr_HArray1OfShapeAspect_swigregister
StepRepr_HArray1OfShapeAspect_swigregister(StepRepr_HArray1OfShapeAspect)

class StepRepr_HSequenceOfRepresentationItem(StepRepr_SequenceOfRepresentationItem, OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [StepRepr_SequenceOfRepresentationItem, OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_HSequenceOfRepresentationItem, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_SequenceOfRepresentationItem, OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_HSequenceOfRepresentationItem, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _StepRepr.new_StepRepr_HSequenceOfRepresentationItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Sequence(self) -> "StepRepr_SequenceOfRepresentationItem const &":
        return _StepRepr.StepRepr_HSequenceOfRepresentationItem_Sequence(self)

    def Append(self, *args) -> "void":
        return _StepRepr.StepRepr_HSequenceOfRepresentationItem_Append(self, *args)

    def ChangeSequence(self) -> "StepRepr_SequenceOfRepresentationItem &":
        return _StepRepr.StepRepr_HSequenceOfRepresentationItem_ChangeSequence(self)


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_HSequenceOfRepresentationItem_DownCast(t)

    __swig_destroy__ = _StepRepr.delete_StepRepr_HSequenceOfRepresentationItem
    __del__ = lambda self: None
StepRepr_HSequenceOfRepresentationItem_swigregister = _StepRepr.StepRepr_HSequenceOfRepresentationItem_swigregister
StepRepr_HSequenceOfRepresentationItem_swigregister(StepRepr_HSequenceOfRepresentationItem)

class StepRepr_HSequenceOfMaterialPropertyRepresentation(StepRepr_SequenceOfMaterialPropertyRepresentation, OCC.Core.Standard.Standard_Transient):
    __swig_setmethods__ = {}
    for _s in [StepRepr_SequenceOfMaterialPropertyRepresentation, OCC.Core.Standard.Standard_Transient]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StepRepr_HSequenceOfMaterialPropertyRepresentation, name, value)
    __swig_getmethods__ = {}
    for _s in [StepRepr_SequenceOfMaterialPropertyRepresentation, OCC.Core.Standard.Standard_Transient]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StepRepr_HSequenceOfMaterialPropertyRepresentation, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _StepRepr.new_StepRepr_HSequenceOfMaterialPropertyRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def Sequence(self) -> "StepRepr_SequenceOfMaterialPropertyRepresentation const &":
        return _StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_Sequence(self)

    def Append(self, *args) -> "void":
        return _StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_Append(self, *args)

    def ChangeSequence(self) -> "StepRepr_SequenceOfMaterialPropertyRepresentation &":
        return _StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_ChangeSequence(self)


    @staticmethod
    def DownCast(t):
      return Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_DownCast(t)

    __swig_destroy__ = _StepRepr.delete_StepRepr_HSequenceOfMaterialPropertyRepresentation
    __del__ = lambda self: None
StepRepr_HSequenceOfMaterialPropertyRepresentation_swigregister = _StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_swigregister
StepRepr_HSequenceOfMaterialPropertyRepresentation_swigregister(StepRepr_HSequenceOfMaterialPropertyRepresentation)



# This file is compatible with both classic and new-style classes.


