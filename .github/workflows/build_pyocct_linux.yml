name: Build Python OCC Linux
on:
  workflow_dispatch:
  
jobs:
  build-occt:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Restore cached occt
      id: cache-restore
      uses: actions/cache/restore@v4
      with:
        path: /home/runner/work/SurfacePsycho/OCCT_mon_install
        key: occinstall-${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
        lookup-only: true

    - name: dependencies
      if: steps.cache-restore.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update
        sudo apt-get install -y wget libglu1-mesa-dev libgl1-mesa-dev libxmu-dev libxi-dev build-essential cmake libfreetype6-dev tk-dev python3-dev rapidjson-dev python3 git python3-pip libpcre2-dev

    - name: download occt source
      if: steps.cache-restore.outputs.cache-hit != 'true'
      run: |
        cd ../
        echo 'pwd:'
        pwd
        wget -O occt-7.7.2.zip "https://git.dev.opencascade.org/gitweb/?p=occt.git;a=snapshot;h=cec1ecd0c9f3b3d2572c47035d11949e8dfa85e2;sf=zip"
        7z x occt-7.7.2.zip
        echo 'list:'
        ls
      
    - name: 3rd party
      if: steps.cache-restore.outputs.cache-hit != 'true'
      run: |
        cd ../
        mkdir OCCT_mon_install
        ls
        cd occt-cec1ecd
        ls
        mkdir 3rdparty
        cd 3rdparty
        wget -O qt-src-4.8.6.zip "https://download.qt.io/archive/qt/4.8/4.8.6/qt-everywhere-opensource-src-4.8.6.zip"
        wget -O oneTBB.tgz "https://github.com/oneapi-src/oneTBB/releases/download/v2021.5.0/oneapi-tbb-2021.5.0-lin.tgz"
        wget -O ffmpeg-3.3.4-64.zip "https://dev.opencascade.org/system/files/occt/3rdparty/ffmpeg-3.3.4-64.zip"
        
        7z x qt-src-4.8.6.zip
        tar -zxvf oneTBB.tgz
        7z x ffmpeg-3.3.4-64.zip
        
        echo 'pwd:'
        pwd
        echo 'list:'
        ls
        
    - name: cmake configure
      if: steps.cache-restore.outputs.cache-hit != 'true'
      run : |
        cd ../../
        ls
        cmake -DINSTALL_DIR="/home/runner/work/SurfacePsycho/OCCT_mon_install" -DBUILD_RELEASE_DISABLE_EXCEPTIONS=OFF -D3RDPARTY_DIR="/home/runner/work/SurfacePsycho/occt-cec1ecd/3rdparty" -DCMAKE_BUILD_TYPE=Release -B="/home/runner/work/SurfacePsycho/occt-cec1ecd/ma_build"  -S="/home/runner/work/SurfacePsycho/occt-cec1ecd"
        
    - name: cmake build OCCT
      if: steps.cache-restore.outputs.cache-hit != 'true'
      run : |
        cmake --build /home/runner/work/SurfacePsycho/occt-cec1ecd/ma_build
        
    - name: cmake install OCCT
      if: steps.cache-restore.outputs.cache-hit != 'true'
      run : |
        cmake --install /home/runner/work/SurfacePsycho/occt-cec1ecd/ma_build

    #- name: add system path
      #run : echo "/home/runner/work/SurfacePsycho/pythonocc-core/ma_build" >> /etc/ld.so.conf.d/occt.conf

    - name: Save cache occt build
      id: cache-save
      if: steps.cache-restore.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: /home/runner/work/SurfacePsycho/OCCT_mon_install
        key: occinstall-${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

    #- name: build swig
     # run: |
     #   cd ../../
      #  wget http://prdownloads.sourceforge.net/swig/swig-4.1.1.tar.gz
       # tar -zxvf swig-4.1.1.tar.gz
        #cd swig-4.1.1
        #sudo ./configure && make -j4 && make install






  build-pyocct:
    needs: build-occt
    runs-on: ubuntu-latest #${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Restore cached occt
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
           path: /home/runner/work/SurfacePsycho/OCCT_mon_install
           key: occinstall-${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      # echo "::set-env name=PYTHONPATH::C:\hostedtoolcache\windows\Python\3.11.8\x64"
      #echo "::set-env name=PYTHONPATH::home/runner/work/SurfacePsycho"

      - name: download pyocc source 7.7.2
        run: |
          cd ../
          ls
          wget "https://github.com/tpaviot/pythonocc-core/archive/refs/tags/7.7.2.zip"
          7z x 7.7.2.zip

      - uses: mmomtchev/setup-swig@v1
        with:
          version: v4.1.1
      - name: Verify
        run: |
          swig -version
          echo "/opt/hostedtoolcache/swig" >> $GITHUB_PATH

          
      - name: 3rd party pyocct
        run: |
          sudo apt-get update
          sudo apt-get install -y wget libglu1-mesa-dev libgl1-mesa-dev libxmu-dev libxi-dev build-essential cmake libfreetype6-dev tk-dev python3-dev rapidjson-dev python3 git python3-pip libpcre2-dev
          sudo apt-get install python3.11
          echo ..
          echo ..
          dpkg -L python3.11
          echo ..
          echo "PYTHONPATH=/usr/lib/python3.11" >> $GITHUB_ENV
          echo ..
          cd /usr/lib
          ls
          echo ..
          cd /usr/bin
          ls
          
      - name: cmake configure
        run: |
          cd ../
          mkdir pyocc_mon_install
          cd pythonocc-core-7.7.2
          mkdir ma_build
          cmake -DOCCT_INCLUDE_DIR="/home/runner/work/SurfacePsycho/OCCT_mon_install/include/opencascade" -DOCCT_LIBRARY_DIR="/home/runner/work/SurfacePsycho/OCCT_mon_install/lib" -DPYTHONOCC_BUILD_TYPE=Release -DPYTHONOCC_INSTALL_DIRECTORY="/home/runner/work/SurfacePsycho/pyocc_mon_install" -DGP_PNT_HEADER_LOCATION="/home/runner/work/SurfacePsycho/OCCT_mon_install/include/opencascade/gp_Pnt.hxx" -B="/home/runner/work/SurfacePsycho/pythonocc-core-7.7.2/ma_build" -S="/home/runner/work/SurfacePsycho/pythonocc-core-7.7.2"
          
          cd ../
          7z a hhhh /home/runner/work/SurfacePsycho/pythonocc-core-7.7.2/
          ls
          
      - uses: actions/upload-artifact@v4
        with:
          name: hhhh
          path: /home/runner/work/SurfacePsycho/hhhh.7z
          
      - name: cmake build
        run: |
          cmake --build /home/runner/work/SurfacePsycho/pythonocc-core-7.7.2/ma_build
          echo "/home/runner/work/SurfacePsycho/OCCT_mon_install/lib" >> $LD_LIBRARY_PATH
      - name: cmake install pythonocc
        run: |
          cmake --install /home/runner/work/SurfacePsycho/pythonocc-core-7.7.2/ma_build
          
      - name: prepare
        run : |
          cd ../
          ls
          7z a OCC /home/runner/work/SurfacePsycho/pyocc_mon_install
          ls
      - uses: actions/upload-artifact@v4
        with:
          name: pythonOCC
          path: /home/runner/work/SurfacePsycho/OCC.7z
